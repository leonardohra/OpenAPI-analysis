openapi: 3.0.0
info:
  version: '2017-05-18'
  x-release: v4
  title: Amazon Athena
  description: '<p>Amazon Athena is an interactive query service that lets you use standard SQL to analyze data directly in Amazon S3. You can point Athena at your data in Amazon S3 and run ad-hoc queries and get results in seconds. Athena is serverless, so there is no infrastructure to set up or manage. You pay only for the queries you run. Athena scales automatically—executing queries in parallel—so results are fast, even with large datasets and complex queries. For more information, see <a href="http://docs.aws.amazon.com/athena/latest/ug/what-is.html">What is Amazon Athena</a> in the <i>Amazon Athena User Guide</i>.</p> <p>If you connect to Athena using the JDBC driver, use version 1.1.0 of the driver or later with the Amazon Athena API. Earlier version drivers do not support the API. For more information and to download the driver, see <a href="https://docs.aws.amazon.com/athena/latest/ug/connect-with-jdbc.html">Accessing Amazon Athena with JDBC</a>.</p> <p>For code samples using the AWS SDK for Java, see <a href="https://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: athena
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/athena-2017-05-18.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/athena/'
servers:
  - url: 'http://athena.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Athena multi-region endpoint
  - url: 'https://athena.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Athena multi-region endpoint
  - url: 'http://athena.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Athena endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://athena.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Athena endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=AmazonAthena.BatchGetNamedQuery':
    post:
      operationId: BatchGetNamedQuery
      description: 'Returns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings. Requires you to have access to the workgroup in which the queries were saved. Use <a>ListNamedQueriesInput</a> to get the list of named query IDs in the specified workgroup. If information could not be retrieved for a submitted query ID, information about the query ID submitted is listed under <a>UnprocessedNamedQueryId</a>. Named queries differ from executed queries. Use <a>BatchGetQueryExecutionInput</a> to get details about each unique query execution, and <a>ListQueryExecutionsInput</a> to get a list of query execution IDs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetNamedQueryOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetNamedQueryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.BatchGetNamedQuery
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.BatchGetQueryExecution':
    post:
      operationId: BatchGetQueryExecution
      description: 'Returns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings. Requires you to have access to the workgroup in which the queries ran. To get a list of query execution IDs, use <a>ListQueryExecutionsInput$WorkGroup</a>. Query executions differ from named (saved) queries. Use <a>BatchGetNamedQueryInput</a> to get details about named queries.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetQueryExecutionOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetQueryExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.BatchGetQueryExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.CreateNamedQuery':
    post:
      operationId: CreateNamedQuery
      description: '<p>Creates a named query in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNamedQueryOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNamedQueryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.CreateNamedQuery
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.CreateWorkGroup':
    post:
      operationId: CreateWorkGroup
      description: Creates a workgroup with the specified name.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkGroupOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkGroupInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.CreateWorkGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.DeleteNamedQuery':
    post:
      operationId: DeleteNamedQuery
      description: '<p>Deletes the named query if you have access to the workgroup in which the query was saved.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNamedQueryOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNamedQueryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.DeleteNamedQuery
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.DeleteWorkGroup':
    post:
      operationId: DeleteWorkGroup
      description: Deletes the workgroup with the specified name. The primary workgroup cannot be deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkGroupOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkGroupInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.DeleteWorkGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.GetNamedQuery':
    post:
      operationId: GetNamedQuery
      description: Returns information about a single query. Requires that you have access to the workgroup in which the query was saved.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNamedQueryOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNamedQueryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.GetNamedQuery
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.GetQueryExecution':
    post:
      operationId: GetQueryExecution
      description: 'Returns information about a single execution of a query if you have access to the workgroup in which the query ran. Each time a query executes, information about the query execution is saved with a unique ID.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryExecutionOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQueryExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.GetQueryExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.GetQueryResults':
    post:
      operationId: GetQueryResults
      description: '<p>Streams the results of a single query execution specified by <code>QueryExecutionId</code> from the Athena query results location in Amazon S3. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a> in the <i>Amazon Athena User Guide</i>. This request does not execute the query but returns results. Use <a>StartQueryExecution</a> to run a query.</p> <p>To stream query results successfully, the IAM principal with permission to call <code>GetQueryResults</code> also must have permissions to the Amazon S3 <code>GetObject</code> action for the Athena query results location.</p> <important> <p>IAM principals with permission to the Amazon S3 <code>GetObject</code> action for the query results location are able to retrieve query results from Amazon S3 even if permission to the <code>GetQueryResults</code> action is denied. To restrict user or role access, ensure that Amazon S3 permissions to the Athena query location are denied.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryResultsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQueryResultsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.GetQueryResults
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.GetWorkGroup':
    post:
      operationId: GetWorkGroup
      description: Returns information about the workgroup with the specified name.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkGroupOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkGroupInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.GetWorkGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.ListNamedQueries':
    post:
      operationId: ListNamedQueries
      description: '<p>Provides a list of available query IDs only for queries saved in the specified workgroup. Requires that you have access to the workgroup.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNamedQueriesOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNamedQueriesInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.ListNamedQueries
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.ListQueryExecutions':
    post:
      operationId: ListQueryExecutions
      description: '<p>Provides a list of available query execution IDs for the queries in the specified workgroup. Requires you to have access to the workgroup in which the queries ran.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueryExecutionsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListQueryExecutionsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.ListQueryExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Lists the tags associated with this workgroup.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.ListWorkGroups':
    post:
      operationId: ListWorkGroups
      description: Lists available workgroups for the account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkGroupsOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkGroupsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.ListWorkGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.StartQueryExecution':
    post:
      operationId: StartQueryExecution
      description: '<p>Runs the SQL query statements contained in the <code>Query</code>. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartQueryExecutionOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartQueryExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.StartQueryExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.StopQueryExecution':
    post:
      operationId: StopQueryExecution
      description: '<p>Stops a query execution. Requires you to have access to the workgroup in which the query ran.</p> <p>For code samples using the AWS SDK for Java, see <a href="http://docs.aws.amazon.com/athena/latest/ug/code-samples.html">Examples and Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopQueryExecutionOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopQueryExecutionInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.StopQueryExecution
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.TagResource':
    post:
      operationId: TagResource
      description: 'Adds one or more tags to the resource, such as a workgroup. A tag is a label that you assign to an AWS Athena resource (a workgroup). Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize resources (workgroups) in Athena, for example, by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups in your account. For best practices, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS Tagging Strategies</a>. The key length is from 1 (minimum) to 128 (maximum) Unicode characters in UTF-8. The tag value length is from 0 (minimum) to 256 (maximum) Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you specify more than one, separate them by commas.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.UntagResource':
    post:
      operationId: UntagResource
      description: 'Removes one or more tags from the workgroup resource. Takes as an input a list of TagKey Strings separated by commas, and removes their tags at the same time.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonAthena.UpdateWorkGroup':
    post:
      operationId: UpdateWorkGroup
      description: Updates the workgroup with the specified name. The workgroup's name cannot be changed.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkGroupOutput'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkGroupInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonAthena.UpdateWorkGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchGetNamedQueryOutput:
      type: object
      properties:
        NamedQueries:
          $ref: '#/components/schemas/NamedQueryList'
          description: Information about the named query IDs submitted.
        UnprocessedNamedQueryIds:
          $ref: '#/components/schemas/UnprocessedNamedQueryIdList'
          description: Information about provided query IDs.
    BatchGetNamedQueryInput:
      type: object
      required:
        - NamedQueryIds
      title: BatchGetNamedQueryInput
      properties:
        NamedQueryIds:
          $ref: '#/components/schemas/NamedQueryIdList'
          description: An array of query IDs.
    InternalServerException: {}
    InvalidRequestException: {}
    BatchGetQueryExecutionOutput:
      type: object
      properties:
        QueryExecutions:
          $ref: '#/components/schemas/QueryExecutionList'
          description: Information about a query execution.
        UnprocessedQueryExecutionIds:
          $ref: '#/components/schemas/UnprocessedQueryExecutionIdList'
          description: Information about the query executions that failed to run.
    BatchGetQueryExecutionInput:
      type: object
      required:
        - QueryExecutionIds
      title: BatchGetQueryExecutionInput
      properties:
        QueryExecutionIds:
          $ref: '#/components/schemas/QueryExecutionIdList'
          description: An array of query execution IDs.
    CreateNamedQueryOutput:
      type: object
      properties:
        NamedQueryId:
          $ref: '#/components/schemas/NamedQueryId'
          description: The unique ID of the query.
    CreateNamedQueryInput:
      type: object
      required:
        - Name
        - Database
        - QueryString
      title: CreateNamedQueryInput
      properties:
        Name:
          $ref: '#/components/schemas/NameString'
          description: The query name.
        Description:
          $ref: '#/components/schemas/DescriptionString'
          description: The query description.
        Database:
          $ref: '#/components/schemas/DatabaseString'
          description: The database to which the query belongs.
        QueryString:
          $ref: '#/components/schemas/QueryString'
          description: The contents of the query with all query statements.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: '<p>A unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another <code>CreateNamedQuery</code> request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the <code>QueryString</code>, an error is returned.</p> <important> <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the action will fail.</p> </important>'
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup in which the named query is being created.
    CreateWorkGroupOutput:
      type: object
      properties: {}
    CreateWorkGroupInput:
      type: object
      required:
        - Name
      title: CreateWorkGroupInput
      properties:
        Name:
          $ref: '#/components/schemas/WorkGroupName'
          description: The workgroup name.
        Configuration:
          $ref: '#/components/schemas/WorkGroupConfiguration'
          description: 'The configuration for the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for encrypting query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, the limit for the amount of bytes scanned (cutoff) per query, if it is specified, and whether workgroup''s settings (specified with EnforceWorkGroupConfiguration) in the WorkGroupConfiguration override client-side settings. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
        Description:
          $ref: '#/components/schemas/WorkGroupDescriptionString'
          description: The workgroup description.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'One or more tags, separated by commas, that you want to attach to the workgroup as you create it.'
    DeleteNamedQueryOutput:
      type: object
      properties: {}
    DeleteNamedQueryInput:
      type: object
      required:
        - NamedQueryId
      title: DeleteNamedQueryInput
      properties:
        NamedQueryId:
          $ref: '#/components/schemas/NamedQueryId'
          description: The unique ID of the query to delete.
    DeleteWorkGroupOutput:
      type: object
      properties: {}
    DeleteWorkGroupInput:
      type: object
      required:
        - WorkGroup
      title: DeleteWorkGroupInput
      properties:
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The unique name of the workgroup to delete.
        RecursiveDeleteOption:
          $ref: '#/components/schemas/BoxedBoolean'
          description: The option to delete the workgroup and its contents even if the workgroup contains any named queries.
    GetNamedQueryOutput:
      type: object
      properties:
        NamedQuery:
          $ref: '#/components/schemas/NamedQuery'
          description: Information about the query.
    GetNamedQueryInput:
      type: object
      required:
        - NamedQueryId
      title: GetNamedQueryInput
      properties:
        NamedQueryId:
          $ref: '#/components/schemas/NamedQueryId'
          description: The unique ID of the query. Use <a>ListNamedQueries</a> to get query IDs.
    GetQueryExecutionOutput:
      type: object
      properties:
        QueryExecution:
          $ref: '#/components/schemas/QueryExecution'
          description: Information about the query execution.
    GetQueryExecutionInput:
      type: object
      required:
        - QueryExecutionId
      title: GetQueryExecutionInput
      properties:
        QueryExecutionId:
          $ref: '#/components/schemas/QueryExecutionId'
          description: The unique ID of the query execution.
    GetQueryResultsOutput:
      type: object
      properties:
        UpdateCount:
          $ref: '#/components/schemas/Long'
          description: 'The number of rows inserted with a CREATE TABLE AS SELECT statement. '
        ResultSet:
          $ref: '#/components/schemas/ResultSet'
          description: The results of the query execution.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: A token to be used by the next request if this request is truncated.
    GetQueryResultsInput:
      type: object
      required:
        - QueryExecutionId
      title: GetQueryResultsInput
      properties:
        QueryExecutionId:
          $ref: '#/components/schemas/QueryExecutionId'
          description: The unique ID of the query execution.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The token that specifies where to start pagination if a previous request was truncated.
        MaxResults:
          $ref: '#/components/schemas/MaxQueryResults'
          description: The maximum number of results (rows) to return in this request.
    GetWorkGroupOutput:
      type: object
      properties:
        WorkGroup:
          $ref: '#/components/schemas/WorkGroup'
          description: Information about the workgroup.
    GetWorkGroupInput:
      type: object
      required:
        - WorkGroup
      title: GetWorkGroupInput
      properties:
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup.
    ListNamedQueriesOutput:
      type: object
      properties:
        NamedQueryIds:
          $ref: '#/components/schemas/NamedQueryIdList'
          description: The list of unique query IDs.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: A token to be used by the next request if this request is truncated.
    ListNamedQueriesInput:
      type: object
      title: ListNamedQueriesInput
      properties:
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The token that specifies where to start pagination if a previous request was truncated.
        MaxResults:
          $ref: '#/components/schemas/MaxNamedQueriesCount'
          description: The maximum number of queries to return in this request.
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup from which the named queries are being returned.
    ListQueryExecutionsOutput:
      type: object
      properties:
        QueryExecutionIds:
          $ref: '#/components/schemas/QueryExecutionIdList'
          description: The unique IDs of each query execution as an array of strings.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: A token to be used by the next request if this request is truncated.
    ListQueryExecutionsInput:
      type: object
      title: ListQueryExecutionsInput
      properties:
        NextToken:
          $ref: '#/components/schemas/Token'
          description: The token that specifies where to start pagination if a previous request was truncated.
        MaxResults:
          $ref: '#/components/schemas/MaxQueryExecutionsCount'
          description: The maximum number of query executions to return in this request.
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup from which queries are being returned.
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags associated with this workgroup.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: A token to be used by the next request if this request is truncated.
    ListTagsForResourceInput:
      type: object
      required:
        - ResourceARN
      title: ListTagsForResourceInput
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Lists the tags for the workgroup resource with the specified ARN.
        NextToken:
          $ref: '#/components/schemas/Token'
          description: 'The token for the next set of results, or null if there are no additional results for this request, where the request lists the tags for the workgroup resource with the specified ARN.'
        MaxResults:
          $ref: '#/components/schemas/MaxTagsCount'
          description: The maximum number of results to be returned per request that lists the tags for the workgroup resource.
    ResourceNotFoundException: {}
    ListWorkGroupsOutput:
      type: object
      properties:
        WorkGroups:
          $ref: '#/components/schemas/WorkGroupsList'
          description: 'The list of workgroups, including their names, descriptions, creation times, and states.'
        NextToken:
          $ref: '#/components/schemas/Token'
          description: A token to be used by the next request if this request is truncated.
    ListWorkGroupsInput:
      type: object
      title: ListWorkGroupsInput
      properties:
        NextToken:
          $ref: '#/components/schemas/Token'
          description: A token to be used by the next request if this request is truncated.
        MaxResults:
          $ref: '#/components/schemas/MaxWorkGroupsCount'
          description: The maximum number of workgroups to return in this request.
    StartQueryExecutionOutput:
      type: object
      properties:
        QueryExecutionId:
          $ref: '#/components/schemas/QueryExecutionId'
          description: The unique ID of the query that ran as a result of this request.
    StartQueryExecutionInput:
      type: object
      required:
        - QueryString
      title: StartQueryExecutionInput
      properties:
        QueryString:
          $ref: '#/components/schemas/QueryString'
          description: The SQL query statements to be executed.
        ClientRequestToken:
          $ref: '#/components/schemas/IdempotencyToken'
          description: '<p>A unique case-sensitive string used to ensure the request to create the query is idempotent (executes only once). If another <code>StartQueryExecution</code> request is received, the same response is returned and another query is not created. If a parameter has changed, for example, the <code>QueryString</code>, an error is returned.</p> <important> <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS CLI, you must provide this token or the action will fail.</p> </important>'
        QueryExecutionContext:
          $ref: '#/components/schemas/QueryExecutionContext'
          description: The database within which the query executes.
        ResultConfiguration:
          $ref: '#/components/schemas/ResultConfiguration'
          description: 'Specifies information about where and how to save the results of the query execution. If the query runs in a workgroup, then workgroup''s settings may override query settings. This affects the query results location. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup in which the query is being started.
    TooManyRequestsException: {}
    StopQueryExecutionOutput:
      type: object
      properties: {}
    StopQueryExecutionInput:
      type: object
      required:
        - QueryExecutionId
      title: StopQueryExecutionInput
      properties:
        QueryExecutionId:
          $ref: '#/components/schemas/QueryExecutionId'
          description: The unique ID of the query execution to stop.
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceInput
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Requests that one or more tags are added to the resource (such as a workgroup) for the specified ARN.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'One or more tags, separated by commas, to be added to the resource, such as a workgroup.'
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceInput
      properties:
        ResourceARN:
          $ref: '#/components/schemas/AmazonResourceName'
          description: Removes one or more tags from the workgroup resource for the specified ARN.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: Removes the tags associated with one or more tag keys from the workgroup resource.
    UpdateWorkGroupOutput:
      type: object
      properties: {}
    UpdateWorkGroupInput:
      type: object
      required:
        - WorkGroup
      title: UpdateWorkGroupInput
      properties:
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The specified workgroup that will be updated.
        Description:
          $ref: '#/components/schemas/WorkGroupDescriptionString'
          description: The workgroup description.
        ConfigurationUpdates:
          $ref: '#/components/schemas/WorkGroupConfigurationUpdates'
          description: The workgroup configuration that will be updated for the given workgroup.
        State:
          $ref: '#/components/schemas/WorkGroupState'
          description: The workgroup state that will be updated for the given workgroup.
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    NamedQueryIdList:
      type: array
      items:
        $ref: '#/components/schemas/NamedQueryId'
      minItems: 1
      maxItems: 50
    NamedQueryList:
      type: array
      items:
        $ref: '#/components/schemas/NamedQuery'
    UnprocessedNamedQueryIdList:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedNamedQueryId'
    QueryExecutionIdList:
      type: array
      items:
        $ref: '#/components/schemas/QueryExecutionId'
      minItems: 1
      maxItems: 50
    QueryExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/QueryExecution'
    UnprocessedQueryExecutionIdList:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedQueryExecutionId'
    Boolean:
      type: boolean
    BoxedBoolean:
      type: boolean
    BytesScannedCutoffValue:
      type: integer
      minimum: 10000000
    String:
      type: string
    Integer:
      type: integer
    ColumnNullable:
      type: string
      enum:
        - NOT_NULL
        - NULLABLE
        - UNKNOWN
    ColumnInfo:
      type: object
      required:
        - Name
        - Type
      properties:
        CatalogName:
          $ref: '#/components/schemas/String'
          description: The catalog to which the query results belong.
        SchemaName:
          $ref: '#/components/schemas/String'
          description: The schema name (database name) to which the query results belong.
        TableName:
          $ref: '#/components/schemas/String'
          description: The table name for the query results.
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the column.
        Label:
          $ref: '#/components/schemas/String'
          description: A column label.
        Type:
          $ref: '#/components/schemas/String'
          description: The data type of the column.
        Precision:
          $ref: '#/components/schemas/Integer'
          description: 'For <code>DECIMAL</code> data types, specifies the total number of digits, up to 38. For performance reasons, we recommend up to 18 digits.'
        Scale:
          $ref: '#/components/schemas/Integer'
          description: 'For <code>DECIMAL</code> data types, specifies the total number of digits in the fractional part of the value. Defaults to 0.'
        Nullable:
          $ref: '#/components/schemas/ColumnNullable'
          description: Indicates the column's nullable status.
        CaseSensitive:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether values in the column are case-sensitive.
      description: Information about the columns in a query execution result.
    ColumnInfoList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnInfo'
    NameString:
      type: string
      minLength: 1
      maxLength: 128
    DescriptionString:
      type: string
      minLength: 1
      maxLength: 1024
    DatabaseString:
      type: string
      minLength: 1
      maxLength: 255
    QueryString:
      type: string
      minLength: 1
      maxLength: 262144
    IdempotencyToken:
      type: string
      minLength: 32
      maxLength: 128
    WorkGroupName:
      type: string
      pattern: '[a-zA-z0-9._-]{1,128}'
    NamedQueryId:
      type: string
    WorkGroupConfiguration:
      type: object
      properties:
        ResultConfiguration:
          $ref: '#/components/schemas/ResultConfiguration'
          description: 'The configuration for the workgroup, which includes the location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. To run the query, you must specify the query results location using one of the ways: either in the workgroup using this setting, or for individual queries (client-side), using <a>ResultConfiguration$OutputLocation</a>. If none of them is set, Athena issues an error that no output location is provided. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a>.'
        EnforceWorkGroupConfiguration:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'If set to "true", the settings for the workgroup override client-side settings. If set to "false", client-side settings are used. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
        PublishCloudWatchMetricsEnabled:
          $ref: '#/components/schemas/BoxedBoolean'
          description: Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.
        BytesScannedCutoffPerQuery:
          $ref: '#/components/schemas/BytesScannedCutoffValue'
          description: The upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.
        RequesterPaysEnabled:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'If set to <code>true</code>, allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is <code>false</code>. For more information about Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      description: 'The configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup and whether workgroup settings override query settings, and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>. '
    WorkGroupDescriptionString:
      type: string
      minLength: 0
      maxLength: 1024
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    Date:
      type: string
      format: date-time
    datumString:
      type: string
    Datum:
      type: object
      properties:
        VarCharValue:
          $ref: '#/components/schemas/datumString'
          description: The value of the datum.
      description: A piece of data (a field in the table).
    EncryptionOption:
      type: string
      enum:
        - SSE_S3
        - SSE_KMS
        - CSE_KMS
    EncryptionConfiguration:
      type: object
      required:
        - EncryptionOption
      properties:
        EncryptionOption:
          $ref: '#/components/schemas/EncryptionOption'
          description: '<p>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (<code>SSE-S3</code>), server-side encryption with KMS-managed keys (<code>SSE-KMS</code>), or client-side encryption with KMS-managed keys (CSE-KMS) is used.</p> <p>If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup''s setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup. </p>'
        KmsKey:
          $ref: '#/components/schemas/String'
          description: 'For <code>SSE-KMS</code> and <code>CSE-KMS</code>, this is the KMS key ARN or ID.'
      description: 'If query results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information.'
    ErrorCode:
      type: string
      description: 'The error code returned when the query execution failed to process, or when the processing request for the named query failed.'
      minLength: 1
      maxLength: 256
    ErrorMessage:
      type: string
    NamedQuery:
      type: object
      required:
        - Name
        - Database
        - QueryString
      properties:
        Name:
          $ref: '#/components/schemas/NameString'
          description: The query name.
        Description:
          $ref: '#/components/schemas/DescriptionString'
          description: The query description.
        Database:
          $ref: '#/components/schemas/DatabaseString'
          description: The database to which the query belongs.
        QueryString:
          $ref: '#/components/schemas/QueryString'
          description: The SQL query statements that comprise the query.
        NamedQueryId:
          $ref: '#/components/schemas/NamedQueryId'
          description: The unique identifier of the query.
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup that contains the named query.
      description: 'A query, where <code>QueryString</code> is the list of SQL query statements that comprise the query.'
    QueryExecutionId:
      type: string
    QueryExecution:
      type: object
      properties:
        QueryExecutionId:
          $ref: '#/components/schemas/QueryExecutionId'
          description: The unique identifier for each query execution.
        Query:
          $ref: '#/components/schemas/QueryString'
          description: The SQL query statements which the query execution ran.
        StatementType:
          $ref: '#/components/schemas/StatementType'
          description: 'The type of query statement that was run. <code>DDL</code> indicates DDL query statements. <code>DML</code> indicates DML (Data Manipulation Language) query statements, such as <code>CREATE TABLE AS SELECT</code>. <code>UTILITY</code> indicates query statements other than DDL and DML, such as <code>SHOW CREATE TABLE</code>, or <code>DESCRIBE &lt;table&gt;</code>.'
        ResultConfiguration:
          $ref: '#/components/schemas/ResultConfiguration'
          description: 'The location in Amazon S3 where query results were stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup.'
        QueryExecutionContext:
          $ref: '#/components/schemas/QueryExecutionContext'
          description: The database in which the query execution occurred.
        Status:
          $ref: '#/components/schemas/QueryExecutionStatus'
          description: 'The completion date, current state, submission time, and state change reason (if applicable) for the query execution.'
        Statistics:
          $ref: '#/components/schemas/QueryExecutionStatistics'
          description: 'The amount of data scanned during the query execution and the amount of time that it took to execute, and the type of statement that was run.'
        WorkGroup:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup in which the query ran.
      description: Information about a single instance of a query execution.
    Token:
      type: string
      minLength: 1
      maxLength: 1024
    MaxQueryResults:
      type: integer
      minimum: 1
      maximum: 1000
    Long:
      type: integer
    ResultSet:
      type: object
      properties:
        Rows:
          $ref: '#/components/schemas/RowList'
          description: The rows in the table.
        ResultSetMetadata:
          $ref: '#/components/schemas/ResultSetMetadata'
          description: The metadata that describes the column structure and data types of a table of query results.
      description: The metadata and rows that comprise a query result set. The metadata describes the column structure and data types.
    WorkGroup:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/WorkGroupName'
          description: The workgroup name.
        State:
          $ref: '#/components/schemas/WorkGroupState'
          description: 'The state of the workgroup: ENABLED or DISABLED.'
        Configuration:
          $ref: '#/components/schemas/WorkGroupConfiguration'
          description: 'The configuration of the workgroup, which includes the location in Amazon S3 where query results are stored, the encryption configuration, if any, used for query results; whether the Amazon CloudWatch Metrics are enabled for the workgroup; whether workgroup settings override client-side settings; and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
        Description:
          $ref: '#/components/schemas/WorkGroupDescriptionString'
          description: The workgroup description.
        CreationTime:
          $ref: '#/components/schemas/Date'
          description: The date and time the workgroup was created.
      description: 'A workgroup, which contains a name, description, creation time, state, and other configuration, listed under <a>WorkGroup$Configuration</a>. Each workgroup enables you to isolate queries for you or your group of users from other queries in the same account, to configure the query results location and the encryption configuration (known as workgroup settings), to enable sending query metrics to Amazon CloudWatch, and to establish per-query data usage control limits for all queries in a workgroup. The workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
    MaxNamedQueriesCount:
      type: integer
      minimum: 0
      maximum: 50
    MaxQueryExecutionsCount:
      type: integer
      minimum: 0
      maximum: 50
    MaxTagsCount:
      type: integer
      minimum: 75
    MaxWorkGroupsCount:
      type: integer
      minimum: 1
      maximum: 50
    WorkGroupsList:
      type: array
      items:
        $ref: '#/components/schemas/WorkGroupSummary'
      minItems: 0
      maxItems: 50
    StatementType:
      type: string
      enum:
        - DDL
        - DML
        - UTILITY
    ResultConfiguration:
      type: object
      properties:
        OutputLocation:
          $ref: '#/components/schemas/String'
          description: 'The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>. To run the query, you must specify the query results location using one of the ways: either for individual queries using either this setting (client-side), or in the workgroup, using <a>WorkGroupConfiguration</a>. If none of them is set, Athena issues an error that no output location is provided. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a>. If workgroup settings override client-side settings, then the query uses the settings specified for the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
          description: 'If query results are encrypted in Amazon S3, indicates the encryption option used (for example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information. This is a client-side setting. If workgroup settings override client-side settings, then the query uses the encryption configuration that is specified for the workgroup, and also uses the location for storing query results specified in the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
      description: 'The location in Amazon S3 where query results are stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the workgroup settings.'
    QueryExecutionContext:
      type: object
      properties:
        Database:
          $ref: '#/components/schemas/DatabaseString'
          description: The name of the database.
      description: The database in which the query execution occurs.
    QueryExecutionStatus:
      type: object
      properties:
        State:
          $ref: '#/components/schemas/QueryExecutionState'
          description: 'The state of query execution. <code>QUEUED</code> state is listed but is not used by Athena and is reserved for future use. <code>RUNNING</code> indicates that the query has been submitted to the service, and Athena will execute the query as soon as resources are available. <code>SUCCEEDED</code> indicates that the query completed without errors. <code>FAILED</code> indicates that the query experienced an error and did not complete processing. <code>CANCELLED</code> indicates that a user input interrupted query execution. '
        StateChangeReason:
          $ref: '#/components/schemas/String'
          description: Further detail about the status of the query.
        SubmissionDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time that the query was submitted.
        CompletionDateTime:
          $ref: '#/components/schemas/Date'
          description: The date and time that the query completed.
      description: 'The completion date, current state, submission time, and state change reason (if applicable) for the query execution.'
    QueryExecutionStatistics:
      type: object
      properties:
        EngineExecutionTimeInMillis:
          $ref: '#/components/schemas/Long'
          description: The number of milliseconds that the query took to execute.
        DataScannedInBytes:
          $ref: '#/components/schemas/Long'
          description: The number of bytes in the data that was queried.
        DataManifestLocation:
          $ref: '#/components/schemas/String'
          description: 'The location and file name of a data manifest file. The manifest file is saved to the Athena query results location in Amazon S3. The manifest file tracks files that the query wrote to Amazon S3. If the query fails, the manifest file also tracks files that the query intended to write. The manifest is useful for identifying orphaned files resulting from a failed query. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Working with Query Results, Output Files, and Query History</a> in the <i>Amazon Athena User Guide</i>.'
        TotalExecutionTimeInMillis:
          $ref: '#/components/schemas/Long'
          description: The number of milliseconds that Athena took to run the query.
        QueryQueueTimeInMillis:
          $ref: '#/components/schemas/Long'
          description: 'The number of milliseconds that the query was in your query queue waiting for resources. Note that if transient errors occur, Athena might automatically add the query back to the queue.'
        QueryPlanningTimeInMillis:
          $ref: '#/components/schemas/Long'
          description: 'The number of milliseconds that Athena took to plan the query processing flow. This includes the time spent retrieving table partitions from the data source. Note that because the query engine performs the query planning, query planning time is a subset of engine processing time.'
        ServiceProcessingTimeInMillis:
          $ref: '#/components/schemas/Long'
          description: The number of milliseconds that Athena took to finalize and publish the query results after the query engine finished running the query.
      description: 'The amount of data scanned during the query execution and the amount of time that it took to execute, and the type of statement that was run.'
    QueryExecutionState:
      type: string
      enum:
        - QUEUED
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLED
    ResultConfigurationUpdates:
      type: object
      properties:
        OutputLocation:
          $ref: '#/components/schemas/String'
          description: 'The location in Amazon S3 where your query results are stored, such as <code>s3://path/to/query/bucket/</code>. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/querying.html">Query Results</a> If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup. The "workgroup settings override" is specified in EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.'
        RemoveOutputLocation:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'If set to "true", indicates that the previously-specified query results location (also known as a client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the OutputLocation in ResultConfigurationUpdates (the client-side setting), the OutputLocation in the workgroup''s ResultConfiguration will be updated with the new value. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
          description: The encryption configuration for the query results.
        RemoveEncryptionConfiguration:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'If set to "true", indicates that the previously-specified encryption configuration (also known as the client-side setting) for queries in this workgroup should be ignored and set to null. If set to "false" or not set, and a value is present in the EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the EncryptionConfiguration in the workgroup''s ResultConfiguration will be updated with the new value. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
      description: 'The information about the updates in the query results, such as output location and encryption configuration for the query results.'
    RowList:
      type: array
      items:
        $ref: '#/components/schemas/Row'
    ResultSetMetadata:
      type: object
      properties:
        ColumnInfo:
          $ref: '#/components/schemas/ColumnInfoList'
          description: Information about the columns returned in a query result metadata.
      description: 'The metadata that describes the column structure and data types of a table of query results. '
    datumList:
      type: array
      items:
        $ref: '#/components/schemas/Datum'
    Row:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/datumList'
          description: The data that populates a row in a query result table.
      description: The rows that comprise a query result table.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: 'A tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys are case-sensitive and must be unique per resource. '
        Value:
          $ref: '#/components/schemas/TagValue'
          description: 'A tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag values are case-sensitive. '
      description: 'A tag that you can add to a resource. A tag is a label that you assign to an AWS Athena resource (a workgroup). Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize workgroups in Athena, for example, by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to search and filter workgroups in your account. The maximum tag key length is 128 Unicode characters in UTF-8. The maximum tag value length is 256 Unicode characters in UTF-8. You can use letters and numbers representable in UTF-8, and the following characters: + - = . _ : / @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. '
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    UnprocessedNamedQueryId:
      type: object
      properties:
        NamedQueryId:
          $ref: '#/components/schemas/NamedQueryId'
          description: The unique identifier of the named query.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: 'The error code returned when the processing request for the named query failed, if applicable.'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'The error message returned when the processing request for the named query failed, if applicable.'
      description: Information about a named query ID that could not be processed.
    UnprocessedQueryExecutionId:
      type: object
      properties:
        QueryExecutionId:
          $ref: '#/components/schemas/QueryExecutionId'
          description: The unique identifier of the query execution.
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
          description: 'The error code returned when the query execution failed to process, if applicable.'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'The error message returned when the query execution failed to process, if applicable.'
      description: Describes a query execution that failed to process.
    WorkGroupConfigurationUpdates:
      type: object
      properties:
        EnforceWorkGroupConfiguration:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'If set to "true", the settings for the workgroup override client-side settings. If set to "false" client-side settings are used. For more information, see <a href="https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html">Workgroup Settings Override Client-Side Settings</a>.'
        ResultConfigurationUpdates:
          $ref: '#/components/schemas/ResultConfigurationUpdates'
          description: The result configuration information about the queries in this workgroup that will be updated. Includes the updated results location and an updated option for encrypting query results.
        PublishCloudWatchMetricsEnabled:
          $ref: '#/components/schemas/BoxedBoolean'
          description: Indicates whether this workgroup enables publishing metrics to Amazon CloudWatch.
        BytesScannedCutoffPerQuery:
          $ref: '#/components/schemas/BytesScannedCutoffValue'
          description: The upper limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan.
        RemoveBytesScannedCutoffPerQuery:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'Indicates that the data usage control limit per query is removed. <a>WorkGroupConfiguration$BytesScannedCutoffPerQuery</a> '
        RequesterPaysEnabled:
          $ref: '#/components/schemas/BoxedBoolean'
          description: 'If set to <code>true</code>, allows members assigned to a workgroup to specify Amazon S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is <code>false</code>. For more information about Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html">Requester Pays Buckets</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.'
      description: 'The configuration information that will be updated for this workgroup, which includes the location in Amazon S3 where query results are stored, the encryption option, if any, used for query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, whether the workgroup settings override the client-side settings, and the data usage limit for the amount of bytes scanned per query, if it is specified.'
    WorkGroupState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    WorkGroupSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/WorkGroupName'
          description: The name of the workgroup.
        State:
          $ref: '#/components/schemas/WorkGroupState'
          description: The state of the workgroup.
        Description:
          $ref: '#/components/schemas/WorkGroupDescriptionString'
          description: The workgroup description.
        CreationTime:
          $ref: '#/components/schemas/Date'
          description: The workgroup creation date and time.
      description: 'The summary information for the workgroup, which includes its name, state, description, and the date and time it was created.'
security:
  - hmac: []
