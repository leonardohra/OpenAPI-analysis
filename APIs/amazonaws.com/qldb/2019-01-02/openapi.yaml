openapi: 3.0.0
info:
  version: '2019-01-02'
  x-release: v4
  title: Amazon QLDB
  description: The control plane for Amazon QLDB
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: qldb
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/qldb-2019-01-02.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/qldb/'
servers:
  - url: 'http://qldb.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The QLDB multi-region endpoint
  - url: 'https://qldb.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The QLDB multi-region endpoint
  - url: 'http://qldb.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The QLDB endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://qldb.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The QLDB endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /ledgers:
    post:
      operationId: CreateLedger
      description: Creates a new ledger in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLedgerResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - PermissionsMode
              properties:
                Name:
                  description: The name of the ledger that you want to create. The name must be unique among all of your ledgers in the current AWS Region.
                  type: string
                  pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
                  minLength: 1
                  maxLength: 32
                Tags:
                  description: The key-value pairs to add as tags to the ledger that you want to create. Tag keys are case sensitive. Tag values are case sensitive and can be null.
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                PermissionsMode:
                  description: The permissions mode to assign to the ledger that you want to create.
                  type: string
                  enum:
                    - ALLOW_ALL
                DeletionProtection:
                  description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
                  type: boolean
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListLedgers
      description: <p>Returns an array of ledger summaries that are associated with the current AWS account and Region.</p> <p>This action returns a maximum of 100 items and is paginated so that you can retrieve all the items by calling <code>ListLedgers</code> multiple times.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLedgersResponse'
      parameters:
        - name: max_results
          in: query
          required: false
          description: The maximum number of results to return in a single <code>ListLedgers</code> request. (The actual number of results returned might be fewer.)
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: next_token
          in: query
          required: false
          description: 'A pagination token, indicating that you want to retrieve the next page of results. If you received a value for <code>NextToken</code> in the response from a previous <code>ListLedgers</code> call, then you should use that value as input here.'
          schema:
            type: string
            pattern: '^[A-Za-z-0-9+/=]+$'
            minLength: 4
            maxLength: 1024
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/ledgers/{name}':
    delete:
      operationId: DeleteLedger
      description: '<p>Deletes a ledger and all of its contents. This action is irreversible.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '483':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger that you want to delete.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeLedger
      description: 'Returns information about a ledger, including its state and when it was created.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLedgerResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger that you want to describe.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
    patch:
      operationId: UpdateLedger
      description: Updates properties on a ledger.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLedgerResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeletionProtection:
                  description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
                  type: boolean
  '/ledgers/{name}/journal-s3-exports/{exportId}':
    get:
      operationId: DescribeJournalS3Export
      description: '<p>Returns information about a journal export job, including the ledger name, export ID, when it was created, current status, and its start and end time export parameters.</p> <p>If the export job with the given <code>ExportId</code> doesn''t exist, then throws <code>ResourceNotFoundException</code>.</p> <p>If the ledger with the given <code>Name</code> doesn''t exist, then throws <code>ResourceNotFoundException</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeJournalS3ExportResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
        - name: exportId
          in: path
          required: true
          description: The unique ID of the journal export job that you want to describe.
          schema:
            type: string
            pattern: '^[A-Za-z-0-9]+$'
            minLength: 22
            maxLength: 22
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/journal-s3-exports':
    post:
      operationId: ExportJournalToS3
      description: '<p>Exports journal contents within a date and time range from a ledger into a specified Amazon Simple Storage Service (Amazon S3) bucket. The data is written as files in Amazon Ion format.</p> <p>If the ledger with the given <code>Name</code> doesn''t exist, then throws <code>ResourceNotFoundException</code>.</p> <p>If the ledger with the given <code>Name</code> is in <code>CREATING</code> status, then throws <code>ResourcePreconditionNotMetException</code>.</p> <p>You can initiate up to two concurrent journal export requests for each ledger. Beyond this limit, journal export requests throw <code>LimitExceededException</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJournalToS3Response'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - InclusiveStartTime
                - ExclusiveEndTime
                - S3ExportConfiguration
                - RoleArn
              properties:
                InclusiveStartTime:
                  description: '<p>The inclusive start date and time for the range of journal contents that you want to export.</p> <p>The <code>InclusiveStartTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code> </p> <p>The <code>InclusiveStartTime</code> must be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an <code>InclusiveStartTime</code> that is before the ledger''s <code>CreationDateTime</code>, Amazon QLDB defaults it to the ledger''s <code>CreationDateTime</code>.</p>'
                  type: string
                  format: date-time
                ExclusiveEndTime:
                  description: '<p>The exclusive end date and time for the range of journal contents that you want to export.</p> <p>The <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code> </p> <p>The <code>ExclusiveEndTime</code> must be less than or equal to the current UTC date and time.</p>'
                  type: string
                  format: date-time
                S3ExportConfiguration:
                  description: The Amazon Simple Storage Service (Amazon S3) bucket location in which a journal export job writes the journal contents.
                  type: object
                  properties:
                    Bucket:
                      $ref: '#/components/schemas/S3Bucket'
                      description: '<p>The Amazon S3 bucket name in which a journal export job writes the journal contents.</p> <p>The bucket name must comply with the Amazon S3 bucket naming conventions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">Bucket Restrictions and Limitations</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
                    Prefix:
                      $ref: '#/components/schemas/S3Prefix'
                      description: '<p>The prefix for the Amazon S3 bucket in which a journal export job writes the journal contents.</p> <p>The prefix must comply with Amazon S3 key naming rules and restrictions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a> in the <i>Amazon S3 Developer Guide</i>.</p> <p>The following are examples of valid <code>Prefix</code> values:</p> <ul> <li> <p> <code>JournalExports-ForMyLedger/Testing/</code> </p> </li> <li> <p> <code>JournalExports</code> </p> </li> <li> <p> <code>My:Tests/</code> </p> </li> </ul>'
                    EncryptionConfiguration:
                      $ref: '#/components/schemas/S3EncryptionConfiguration'
                      description: The encryption settings that are used by a journal export job to write data in an Amazon S3 bucket.
                RoleArn:
                  description: '<p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal export job to do the following:</p> <ul> <li> <p>Write objects into your Amazon Simple Storage Service (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer master key (CMK) in AWS Key Management Service (AWS KMS) for server-side encryption of your exported data.</p> </li> </ul>'
                  type: string
                  minLength: 20
                  maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListJournalS3ExportsForLedger
      description: '<p>Returns an array of journal export job descriptions for a specified ledger.</p> <p>This action returns a maximum of <code>MaxResults</code> items, and is paginated so that you can retrieve all the items by calling <code>ListJournalS3ExportsForLedger</code> multiple times.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalS3ExportsForLedgerResponse'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
        - name: max_results
          in: query
          required: false
          description: The maximum number of results to return in a single <code>ListJournalS3ExportsForLedger</code> request. (The actual number of results returned might be fewer.)
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: next_token
          in: query
          required: false
          description: 'A pagination token, indicating that you want to retrieve the next page of results. If you received a value for <code>NextToken</code> in the response from a previous <code>ListJournalS3ExportsForLedger</code> call, then you should use that value as input here.'
          schema:
            type: string
            pattern: '^[A-Za-z-0-9+/=]+$'
            minLength: 4
            maxLength: 1024
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  '/ledgers/{name}/block':
    post:
      operationId: GetBlock
      description: '<p>Returns a journal block object at a specified address in a ledger. Also returns a proof of the specified block for verification if <code>DigestTipAddress</code> is provided.</p> <p>If the specified ledger doesn''t exist or is in <code>DELETING</code> status, then throws <code>ResourceNotFoundException</code>.</p> <p>If the specified ledger is in <code>CREATING</code> status, then throws <code>ResourcePreconditionNotMetException</code>.</p> <p>If no block exists with the specified address, then throws <code>InvalidParameterException</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BlockAddress
              properties:
                BlockAddress:
                  description: A structure that can contain an Amazon Ion value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
                DigestTipAddress:
                  description: A structure that can contain an Amazon Ion value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/digest':
    post:
      operationId: GetDigest
      description: Returns the digest of a ledger at the latest committed block in the journal. The response includes a 256-bit hash value and a block address.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDigestResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/ledgers/{name}/revision':
    post:
      operationId: GetRevision
      description: Returns a revision data object for a specified document ID and block address. Also returns a proof of the specified revision for verification if <code>DigestTipAddress</code> is provided.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRevisionResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourcePreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreconditionNotMetException'
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the ledger.
          schema:
            type: string
            pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
            minLength: 1
            maxLength: 32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BlockAddress
                - DocumentId
              properties:
                BlockAddress:
                  description: A structure that can contain an Amazon Ion value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
                DocumentId:
                  description: The unique ID of the document to be verified.
                  type: string
                  pattern: '^[A-Za-z-0-9]+$'
                  minLength: 22
                  maxLength: 22
                DigestTipAddress:
                  description: A structure that can contain an Amazon Ion value in multiple encoding formats.
                  type: object
                  properties:
                    IonText:
                      $ref: '#/components/schemas/IonText'
                      description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /journal-s3-exports:
    get:
      operationId: ListJournalS3Exports
      description: '<p>Returns an array of journal export job descriptions for all ledgers that are associated with the current AWS account and Region.</p> <p>This action returns a maximum of <code>MaxResults</code> items, and is paginated so that you can retrieve all the items by calling <code>ListJournalS3Exports</code> multiple times.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJournalS3ExportsResponse'
      parameters:
        - name: max_results
          in: query
          required: false
          description: The maximum number of results to return in a single <code>ListJournalS3Exports</code> request. (The actual number of results returned might be fewer.)
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: next_token
          in: query
          required: false
          description: 'A pagination token, indicating that you want to retrieve the next page of results. If you received a value for <code>NextToken</code> in the response from a previous <code>ListJournalS3Exports</code> call, then you should use that value as input here.'
          schema:
            type: string
            pattern: '^[A-Za-z-0-9+/=]+$'
            minLength: 4
            maxLength: 1024
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Returns all tags for a specified Amazon QLDB resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) for which you want to list the tags. For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code> </p>'
          schema:
            type: string
            minLength: 20
            maxLength: 1600
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Adds one or more tags to a specified Amazon QLDB resource.</p> <p>A resource can have up to 50 tags. If you try to create more than 50 tags for a resource, your request fails and returns an error.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) to which you want to add the tags. For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code> </p>'
          schema:
            type: string
            minLength: 20
            maxLength: 1600
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: 'The key-value pairs to add as tags to the specified QLDB resource. Tag keys are case sensitive. If you specify a key that already exists for the resource, your request fails and returns an error. Tag values are case sensitive and can be null.'
                  type: object
                  minProperties: 0
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes one or more tags from a specified Amazon QLDB resource. You can specify up to 50 tag keys to remove.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: '<p>The Amazon Resource Name (ARN) from which you want to remove the tags. For example:</p> <p> <code>arn:aws:qldb:us-east-1:123456789012:ledger/exampleLedger</code> </p>'
          schema:
            type: string
            minLength: 20
            maxLength: 1600
        - name: tagKeys
          in: query
          required: true
          description: The list of tag keys that you want to remove.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateLedgerResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    InvalidParameterException: {}
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    ResourceInUseException: {}
    ResourceNotFoundException: {}
    ResourcePreconditionNotMetException: {}
    DescribeJournalS3ExportResponse:
      type: object
      required:
        - ExportDescription
      properties:
        ExportDescription:
          $ref: '#/components/schemas/JournalS3ExportDescription'
          description: Information about the journal export job returned by a <code>DescribeJournalS3Export</code> request.
    DescribeLedgerResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
    ExportJournalToS3Response:
      type: object
      required:
        - ExportId
      properties:
        ExportId:
          $ref: '#/components/schemas/UniqueId'
          description: '<p>The unique ID that QLDB assigns to each journal export job.</p> <p>To describe your export request and check the status of the job, you can use <code>ExportId</code> to call <code>DescribeJournalS3Export</code>.</p>'
    S3Bucket:
      type: string
      pattern: '^[A-Za-z-0-9-_.]+$'
      minLength: 3
      maxLength: 255
    S3Prefix:
      type: string
      minLength: 0
      maxLength: 128
    S3EncryptionConfiguration:
      type: object
      required:
        - ObjectEncryptionType
      properties:
        ObjectEncryptionType:
          $ref: '#/components/schemas/S3ObjectEncryptionType'
          description: '<p>The Amazon S3 object encryption type.</p> <p>To learn more about server-side encryption options in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html">Protecting Data Using Server-Side Encryption</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
        KmsKeyArn:
          $ref: '#/components/schemas/Arn'
          description: <p>The Amazon Resource Name (ARN) for a customer master key (CMK) in AWS Key Management Service (AWS KMS).</p> <p>You must provide a <code>KmsKeyArn</code> if you specify <code>SSE_KMS</code> as the <code>ObjectEncryptionType</code>.</p> <p> <code>KmsKeyArn</code> is not required if you specify <code>SSE_S3</code> as the <code>ObjectEncryptionType</code>.</p>
      description: The encryption settings that are used by a journal export job to write data in an Amazon Simple Storage Service (Amazon S3) bucket.
    GetBlockResponse:
      type: object
      required:
        - Block
      properties:
        Block:
          $ref: '#/components/schemas/ValueHolder'
          description: The block data object in Amazon Ion format.
        Proof:
          $ref: '#/components/schemas/ValueHolder'
          description: 'The proof object in Amazon Ion format returned by a <code>GetBlock</code> request. A proof contains the list of hash values required to recalculate the specified digest using a Merkle tree, starting with the specified block.'
    IonText:
      type: string
      minLength: 1
      maxLength: 1048576
      format: password
    GetDigestResponse:
      type: object
      required:
        - Digest
        - DigestTipAddress
      properties:
        Digest:
          $ref: '#/components/schemas/Digest'
          description: The 256-bit hash value representing the digest returned by a <code>GetDigest</code> request.
        DigestTipAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: 'The latest block location covered by the digest that you requested. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.'
    GetRevisionResponse:
      type: object
      required:
        - Revision
      properties:
        Proof:
          $ref: '#/components/schemas/ValueHolder'
          description: 'The proof object in Amazon Ion format returned by a <code>GetRevision</code> request. A proof contains the list of hash values that are required to recalculate the specified digest using a Merkle tree, starting with the specified document revision.'
        Revision:
          $ref: '#/components/schemas/ValueHolder'
          description: The document revision data object in Amazon Ion format.
    ListJournalS3ExportsResponse:
      type: object
      properties:
        JournalS3Exports:
          $ref: '#/components/schemas/JournalS3ExportList'
          description: The array of journal export job descriptions for all ledgers that are associated with the current AWS account and Region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<ul> <li> <p>If <code>NextToken</code> is empty, then the last page of results has been processed and there are no more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i> empty, then there are more results available. To retrieve the next page of results, use the value of <code>NextToken</code> in a subsequent <code>ListJournalS3Exports</code> call.</p> </li> </ul>'
    ListJournalS3ExportsForLedgerResponse:
      type: object
      properties:
        JournalS3Exports:
          $ref: '#/components/schemas/JournalS3ExportList'
          description: The array of journal export job descriptions that are associated with the specified ledger.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<ul> <li> <p>If <code>NextToken</code> is empty, then the last page of results has been processed and there are no more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i> empty, then there are more results available. To retrieve the next page of results, use the value of <code>NextToken</code> in a subsequent <code>ListJournalS3ExportsForLedger</code> call.</p> </li> </ul>'
    ListLedgersResponse:
      type: object
      properties:
        Ledgers:
          $ref: '#/components/schemas/LedgerList'
          description: The array of ledger summaries that are associated with the current AWS account and Region.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<p>A pagination token, indicating whether there are more results available:</p> <ul> <li> <p>If <code>NextToken</code> is empty, then the last page of results has been processed and there are no more results to be retrieved.</p> </li> <li> <p>If <code>NextToken</code> is <i>not</i> empty, then there are more results available. To retrieve the next page of results, use the value of <code>NextToken</code> in a subsequent <code>ListLedgers</code> call.</p> </li> </ul>'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The tags that are currently associated with the specified Amazon QLDB resource.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateLedgerResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
    Arn:
      type: string
      minLength: 20
      maxLength: 1600
    LedgerName:
      type: string
      pattern: '(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$'
      minLength: 1
      maxLength: 32
    Tags:
      type: object
      minProperties: 0
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    PermissionsMode:
      type: string
      enum:
        - ALLOW_ALL
    DeletionProtection:
      type: boolean
    CreateLedgerRequest:
      type: object
      required:
        - Name
        - PermissionsMode
      title: CreateLedgerRequest
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger that you want to create. The name must be unique among all of your ledgers in the current AWS Region.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: The key-value pairs to add as tags to the ledger that you want to create. Tag keys are case sensitive. Tag values are case sensitive and can be null.
        PermissionsMode:
          $ref: '#/components/schemas/PermissionsMode'
          description: The permissions mode to assign to the ledger that you want to create.
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
    LedgerState:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - DELETED
    Timestamp:
      type: string
      format: date-time
    DeleteLedgerRequest:
      type: object
      title: DeleteLedgerRequest
      properties: {}
    UniqueId:
      type: string
      pattern: '^[A-Za-z-0-9]+$'
      minLength: 22
      maxLength: 22
    DescribeJournalS3ExportRequest:
      type: object
      title: DescribeJournalS3ExportRequest
      properties: {}
    JournalS3ExportDescription:
      type: object
      required:
        - LedgerName
        - ExportId
        - ExportCreationTime
        - Status
        - InclusiveStartTime
        - ExclusiveEndTime
        - S3ExportConfiguration
        - RoleArn
      properties:
        LedgerName:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        ExportId:
          $ref: '#/components/schemas/UniqueId'
          description: The unique ID of the journal export job.
        ExportCreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the export job was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
        Status:
          $ref: '#/components/schemas/ExportStatus'
          description: The current state of the journal export job.
        InclusiveStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The inclusive start date and time for the range of journal contents that are specified in the original export request.
        ExclusiveEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The exclusive end date and time for the range of journal contents that are specified in the original export request.
        S3ExportConfiguration:
          $ref: '#/components/schemas/S3ExportConfiguration'
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal export job to do the following:</p> <ul> <li> <p>Write objects into your Amazon Simple Storage Service (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer master key (CMK) in AWS Key Management Service (AWS KMS) for server-side encryption of your exported data.</p> </li> </ul>'
      description: 'The information about a journal export job, including the ledger name, export ID, when it was created, current status, and its start and end time export parameters.'
    DescribeLedgerRequest:
      type: object
      title: DescribeLedgerRequest
      properties: {}
    Digest:
      type: string
      minLength: 32
      maxLength: 32
    S3ExportConfiguration:
      type: object
      required:
        - Bucket
        - Prefix
        - EncryptionConfiguration
      properties:
        Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: '<p>The Amazon S3 bucket name in which a journal export job writes the journal contents.</p> <p>The bucket name must comply with the Amazon S3 bucket naming conventions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">Bucket Restrictions and Limitations</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
        Prefix:
          $ref: '#/components/schemas/S3Prefix'
          description: '<p>The prefix for the Amazon S3 bucket in which a journal export job writes the journal contents.</p> <p>The prefix must comply with Amazon S3 key naming rules and restrictions. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a> in the <i>Amazon S3 Developer Guide</i>.</p> <p>The following are examples of valid <code>Prefix</code> values:</p> <ul> <li> <p> <code>JournalExports-ForMyLedger/Testing/</code> </p> </li> <li> <p> <code>JournalExports</code> </p> </li> <li> <p> <code>My:Tests/</code> </p> </li> </ul>'
        EncryptionConfiguration:
          $ref: '#/components/schemas/S3EncryptionConfiguration'
          description: The encryption settings that are used by a journal export job to write data in an Amazon S3 bucket.
      description: The Amazon Simple Storage Service (Amazon S3) bucket location in which a journal export job writes the journal contents.
    ExportJournalToS3Request:
      type: object
      required:
        - InclusiveStartTime
        - ExclusiveEndTime
        - S3ExportConfiguration
        - RoleArn
      title: ExportJournalToS3Request
      properties:
        InclusiveStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The inclusive start date and time for the range of journal contents that you want to export.</p> <p>The <code>InclusiveStartTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code> </p> <p>The <code>InclusiveStartTime</code> must be before <code>ExclusiveEndTime</code>.</p> <p>If you provide an <code>InclusiveStartTime</code> that is before the ledger''s <code>CreationDateTime</code>, Amazon QLDB defaults it to the ledger''s <code>CreationDateTime</code>.</p>'
        ExclusiveEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The exclusive end date and time for the range of journal contents that you want to export.</p> <p>The <code>ExclusiveEndTime</code> must be in <code>ISO 8601</code> date and time format and in Universal Coordinated Time (UTC). For example: <code>2019-06-13T21:36:34Z</code> </p> <p>The <code>ExclusiveEndTime</code> must be less than or equal to the current UTC date and time.</p>'
        S3ExportConfiguration:
          $ref: '#/components/schemas/S3ExportConfiguration'
          description: The configuration settings of the Amazon S3 bucket destination for your export request.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal export job to do the following:</p> <ul> <li> <p>Write objects into your Amazon Simple Storage Service (Amazon S3) bucket.</p> </li> <li> <p>(Optional) Use your customer master key (CMK) in AWS Key Management Service (AWS KMS) for server-side encryption of your exported data.</p> </li> </ul>'
    ExportStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETED
        - CANCELLED
    ValueHolder:
      type: object
      properties:
        IonText:
          $ref: '#/components/schemas/IonText'
          description: An Amazon Ion plaintext value contained in a <code>ValueHolder</code> structure.
      description: A structure that can contain an Amazon Ion value in multiple encoding formats.
    GetBlockRequest:
      type: object
      required:
        - BlockAddress
      title: GetBlockRequest
      properties:
        BlockAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The location of the block that you want to request. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:14}</code> </p>'
        DigestTipAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The latest block location covered by the digest for which to request a proof. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:49}</code> </p>'
    GetDigestRequest:
      type: object
      title: GetDigestRequest
      properties: {}
    GetRevisionRequest:
      type: object
      required:
        - BlockAddress
        - DocumentId
      title: GetRevisionRequest
      properties:
        BlockAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The block location of the document revision to be verified. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:14}</code> </p>'
        DocumentId:
          $ref: '#/components/schemas/UniqueId'
          description: The unique ID of the document to be verified.
        DigestTipAddress:
          $ref: '#/components/schemas/ValueHolder'
          description: '<p>The latest block location covered by the digest for which to request a proof. An address is an Amazon Ion structure that has two fields: <code>strandId</code> and <code>sequenceNo</code>.</p> <p>For example: <code>{strandId:"BlFTjlSXze9BIh1KOszcE3",sequenceNo:49}</code> </p>'
    JournalS3ExportList:
      type: array
      items:
        $ref: '#/components/schemas/JournalS3ExportDescription'
    LedgerSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LedgerName'
          description: The name of the ledger.
        State:
          $ref: '#/components/schemas/LedgerState'
          description: The current status of the ledger.
        CreationDateTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time, in epoch time format, when the ledger was created. (Epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC.)'
      description: 'Information about a ledger, including its name, state, and when it was created.'
    LedgerList:
      type: array
      items:
        $ref: '#/components/schemas/LedgerSummary'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: '^[A-Za-z-0-9+/=]+$'
      minLength: 4
      maxLength: 1024
    ListJournalS3ExportsForLedgerRequest:
      type: object
      title: ListJournalS3ExportsForLedgerRequest
      properties: {}
    ListJournalS3ExportsRequest:
      type: object
      title: ListJournalS3ExportsRequest
      properties: {}
    ListLedgersRequest:
      type: object
      title: ListLedgersRequest
      properties: {}
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    S3ObjectEncryptionType:
      type: string
      enum:
        - SSE_KMS
        - SSE_S3
        - NO_ENCRYPTION
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
          description: 'The key-value pairs to add as tags to the specified QLDB resource. Tag keys are case sensitive. If you specify a key that already exists for the resource, your request fails and returns an error. Tag values are case sensitive and can be null.'
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLedgerRequest:
      type: object
      title: UpdateLedgerRequest
      properties:
        DeletionProtection:
          $ref: '#/components/schemas/DeletionProtection'
          description: '<p>The flag that prevents a ledger from being deleted by any user. If not provided on ledger creation, this feature is enabled (<code>true</code>) by default.</p> <p>If deletion protection is enabled, you must first disable it before you can delete the ledger using the QLDB API or the AWS Command Line Interface (AWS CLI). You can disable it by calling the <code>UpdateLedger</code> operation to set the flag to <code>false</code>. The QLDB console disables deletion protection for you when you use it to delete a ledger.</p>'
security:
  - hmac: []
