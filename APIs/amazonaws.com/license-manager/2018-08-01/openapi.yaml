openapi: 3.0.0
info:
  version: '2018-08-01'
  x-release: v4
  title: AWS License Manager
  description: <fullname> AWS License Manager </fullname> <p>AWS License Manager makes it easier to manage licenses from software vendors across multiple AWS accounts and on-premises servers.</p>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: license-manager
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-2018-08-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/license-manager/'
servers:
  - url: 'http://license-manager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: 'https://license-manager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: 'http://license-manager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://license-manager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=AWSLicenseManager.CreateLicenseConfiguration':
    post:
      operationId: CreateLicenseConfiguration
      description: '<p>Creates a license configuration.</p> <p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.CreateLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.DeleteLicenseConfiguration':
    post:
      operationId: DeleteLicenseConfiguration
      description: <p>Deletes the specified license configuration.</p> <p>You cannot delete a license configuration that is in use.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.DeleteLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.GetLicenseConfiguration':
    post:
      operationId: GetLicenseConfiguration
      description: Gets detailed information about the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.GetServiceSettings':
    post:
      operationId: GetServiceSettings
      description: Gets the License Manager settings for the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSettingsResponse'
        '480':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '481':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceSettingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.GetServiceSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListAssociationsForLicenseConfiguration':
    post:
      operationId: ListAssociationsForLicenseConfiguration
      description: '<p>Lists the resource associations for the specified license configuration.</p> <p>Resource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance might not consume a license (depending on the license rules).</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '482':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListAssociationsForLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListFailuresForLicenseConfigurationOperations':
    post:
      operationId: ListFailuresForLicenseConfigurationOperations
      description: Lists the license configuration operations that failed.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListFailuresForLicenseConfigurationOperations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListLicenseConfigurations':
    post:
      operationId: ListLicenseConfigurations
      description: Lists the license configurations for your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseConfigurationsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseConfigurationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseConfigurations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListLicenseSpecificationsForResource':
    post:
      operationId: ListLicenseSpecificationsForResource
      description: Describes the license configurations for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLicenseSpecificationsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLicenseSpecificationsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListLicenseSpecificationsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListResourceInventory':
    post:
      operationId: ListResourceInventory
      description: Lists resources managed using Systems Manager inventory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceInventoryResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '483':
          description: FailedDependencyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceInventoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListResourceInventory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Lists the tags for the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListUsageForLicenseConfiguration':
    post:
      operationId: ListUsageForLicenseConfiguration
      description: 'Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsageForLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: FilterLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterLimitExceededException'
        '482':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '483':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsageForLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.ListUsageForLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.TagResource':
    post:
      operationId: TagResource
      description: Adds the specified tags to the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UntagResource':
    post:
      operationId: UntagResource
      description: Removes the specified tags from the specified license configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration':
    post:
      operationId: UpdateLicenseConfiguration
      description: '<p>Modifies the attributes of an existing license configuration.</p> <p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseConfigurationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateLicenseConfiguration
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UpdateLicenseSpecificationsForResource':
    post:
      operationId: UpdateLicenseSpecificationsForResource
      description: '<p>Adds or removes the specified license configurations for the specified AWS resource.</p> <p>You can update the license specifications of AMIs, instances, and hosts. You cannot update the license specifications for launch templates and AWS CloudFormation templates, as they send license configurations to the operation that creates the resource.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '482':
          description: LicenseUsageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseUsageException'
        '483':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '484':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateLicenseSpecificationsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UpdateServiceSettings':
    post:
      operationId: UpdateServiceSettings
      description: Updates License Manager settings for the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceSettingsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '482':
          description: AuthorizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceSettingsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSLicenseManager.UpdateServiceSettings
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
    CreateLicenseConfigurationRequest:
      type: object
      required:
        - Name
        - LicenseCountingType
      title: CreateLicenseConfigurationRequest
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the license configuration.
        LicenseCountingType:
          $ref: '#/components/schemas/LicenseCountingType'
          description: Dimension used to track the license inventory.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses managed by the license configuration.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: Indicates whether hard or soft license enforcement is used. Exceeding a hard limit blocks the launch of new instances.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: '<p>License rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost). Available rules vary by dimension.</p> <ul> <li> <p> <code>Cores</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code> | <code>minimumCores</code> </p> </li> <li> <p> <code>Instances</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code> | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> <li> <p> <code>Sockets</code> dimension: <code>allowedTenancy</code> | <code>maximumSockets</code> | <code>minimumSockets</code> </p> </li> <li> <p> <code>vCPUs</code> dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> </ul>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags to add to the license configuration.
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: Product information.
    InvalidParameterValueException: {}
    ServerInternalException: {}
    ResourceLimitExceededException: {}
    AuthorizationException: {}
    AccessDeniedException: {}
    RateLimitExceededException: {}
    DeleteLicenseConfigurationResponse:
      type: object
      properties: {}
    DeleteLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: DeleteLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: ID of the license configuration.
    GetLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationId:
          $ref: '#/components/schemas/String'
          description: Unique ID for the license configuration.
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the license configuration.
        LicenseCountingType:
          $ref: '#/components/schemas/LicenseCountingType'
          description: Dimension on which the licenses are counted.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: License rules.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of available licenses.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: Sets the number of available licenses as a hard limit.
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses assigned to resources.
        Status:
          $ref: '#/components/schemas/String'
          description: License configuration status.
        OwnerAccountId:
          $ref: '#/components/schemas/String'
          description: Account ID of the owner of the license configuration.
        ConsumedLicenseSummaryList:
          $ref: '#/components/schemas/ConsumedLicenseSummaryList'
          description: Summaries of the licenses consumed by resources.
        ManagedResourceSummaryList:
          $ref: '#/components/schemas/ManagedResourceSummaryList'
          description: Summaries of the managed resources.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Tags for the license configuration.
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: Product information.
        AutomatedDiscoveryInformation:
          $ref: '#/components/schemas/AutomatedDiscoveryInformation'
          description: Automated discovery information.
    GetLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: GetLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
    GetServiceSettingsResponse:
      type: object
      properties:
        S3BucketArn:
          $ref: '#/components/schemas/String'
          description: 'Regional S3 bucket path for storing reports, license trail event data, discovery data, and so on.'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
          description: SNS topic configured to receive notifications from License Manager.
        OrganizationConfiguration:
          $ref: '#/components/schemas/OrganizationConfiguration'
          description: Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.
        EnableCrossAccountsDiscovery:
          $ref: '#/components/schemas/BoxBoolean'
          description: Indicates whether cross-account discovery has been enabled.
        LicenseManagerResourceShareArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the AWS resource share. The License Manager master account will provide member accounts with access to this share.
    GetServiceSettingsRequest:
      type: object
      title: GetServiceSettingsRequest
      properties: {}
    ListAssociationsForLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationAssociations:
          $ref: '#/components/schemas/LicenseConfigurationAssociations'
          description: Information about the associations for the license configuration.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListAssociationsForLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: ListAssociationsForLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of a license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    FilterLimitExceededException: {}
    ListFailuresForLicenseConfigurationOperationsResponse:
      type: object
      properties:
        LicenseOperationFailureList:
          $ref: '#/components/schemas/LicenseOperationFailureList'
          description: License configuration operations that failed.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListFailuresForLicenseConfigurationOperationsRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: ListFailuresForLicenseConfigurationOperationsRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name of the license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseConfigurationsResponse:
      type: object
      properties:
        LicenseConfigurations:
          $ref: '#/components/schemas/LicenseConfigurations'
          description: Information about the license configurations.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseConfigurationsRequest:
      type: object
      title: ListLicenseConfigurationsRequest
      properties:
        LicenseConfigurationArns:
          $ref: '#/components/schemas/StringList'
          description: Amazon Resource Names (ARN) of the license configurations.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>licenseCountingType</code> - The dimension on which licenses are counted (vCPU). Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>enforceLicenseCount</code> - A Boolean value that indicates whether hard license enforcement is used. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>usagelimitExceeded</code> - A Boolean value that indicates whether the available licenses have been exceeded. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
    ListLicenseSpecificationsForResourceResponse:
      type: object
      properties:
        LicenseSpecifications:
          $ref: '#/components/schemas/LicenseSpecifications'
          description: License configurations associated with a resource.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListLicenseSpecificationsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListLicenseSpecificationsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of a resource that has an associated license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListResourceInventoryResponse:
      type: object
      properties:
        ResourceInventoryList:
          $ref: '#/components/schemas/ResourceInventoryList'
          description: Information about the resources.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListResourceInventoryRequest:
      type: object
      title: ListResourceInventoryRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        Filters:
          $ref: '#/components/schemas/InventoryFilterList'
          description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>account_id</code> - The ID of the AWS account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>application_name</code> - The name of the application. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>license_included</code> - The type of license included. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> <li> <p> <code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
    FailedDependencyException: {}
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Information about the tags.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
    ListUsageForLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationUsageList:
          $ref: '#/components/schemas/LicenseConfigurationUsageList'
          description: Information about the license configurations.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
    ListUsageForLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: ListUsageForLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        MaxResults:
          $ref: '#/components/schemas/BoxInteger'
          description: Maximum number of results to return in a single call.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Token for the next set of results.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>resourceArn</code> - The ARN of the license configuration resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceType</code> - The resource type (EC2_INSTANCE | EC2_HOST | EC2_AMI | SYSTEMS_MANAGER_MANAGED_INSTANCE). Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceAccount</code> - The ID of the account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      title: TagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: One or more tags.
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: Keys identifying the tags to remove.
    UpdateLicenseConfigurationResponse:
      type: object
      properties: {}
    UpdateLicenseConfigurationRequest:
      type: object
      required:
        - LicenseConfigurationArn
      title: UpdateLicenseConfigurationRequest
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        LicenseConfigurationStatus:
          $ref: '#/components/schemas/LicenseConfigurationStatus'
          description: New status of the license configuration.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: New license rules.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: New number of licenses managed by the license configuration.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: New hard limit of the number of available licenses.
        Name:
          $ref: '#/components/schemas/String'
          description: New name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: New description of the license configuration.
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: New product information.
    UpdateLicenseSpecificationsForResourceResponse:
      type: object
      properties: {}
    UpdateLicenseSpecificationsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: UpdateLicenseSpecificationsForResourceRequest
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the AWS resource.
        AddLicenseSpecifications:
          $ref: '#/components/schemas/LicenseSpecifications'
          description: ARNs of the license configurations to add.
        RemoveLicenseSpecifications:
          $ref: '#/components/schemas/LicenseSpecifications'
          description: ARNs of the license configurations to remove.
    InvalidResourceStateException: {}
    LicenseUsageException: {}
    UpdateServiceSettingsResponse:
      type: object
      properties: {}
    UpdateServiceSettingsRequest:
      type: object
      title: UpdateServiceSettingsRequest
      properties:
        S3BucketArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information is stored.
        SnsTopicArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.
        OrganizationConfiguration:
          $ref: '#/components/schemas/OrganizationConfiguration'
          description: Enables integration with AWS Organizations for cross-account discovery.
        EnableCrossAccountsDiscovery:
          $ref: '#/components/schemas/BoxBoolean'
          description: Activates cross-account discovery.
    DateTime:
      type: string
      format: date-time
    AutomatedDiscoveryInformation:
      type: object
      properties:
        LastRunTime:
          $ref: '#/components/schemas/DateTime'
          description: Time that automated discovery last ran.
      description: Describes automated discovery.
    Boolean:
      type: boolean
    BoxBoolean:
      type: boolean
    BoxInteger:
      type: integer
    BoxLong:
      type: integer
    ResourceType:
      type: string
      enum:
        - EC2_INSTANCE
        - EC2_HOST
        - EC2_AMI
        - RDS
        - SYSTEMS_MANAGER_MANAGED_INSTANCE
    ConsumedLicenseSummary:
      type: object
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Resource type of the resource consuming a license.
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses consumed by the resource.
      description: Details about license consumption.
    ConsumedLicenseSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConsumedLicenseSummary'
    String:
      type: string
    LicenseCountingType:
      type: string
      enum:
        - vCPU
        - Instance
        - Core
        - Socket
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ProductInformationList:
      type: array
      items:
        $ref: '#/components/schemas/ProductInformation'
    FilterName:
      type: string
    FilterValues:
      type: array
      items:
        $ref: '#/components/schemas/FilterValue'
    Filter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/FilterName'
          description: Name of the filter. Filter names are case-sensitive.
        Values:
          $ref: '#/components/schemas/FilterValues'
          description: Filter values. Filter values are case-sensitive.
      description: 'A filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.'
    FilterValue:
      type: string
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    ManagedResourceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ManagedResourceSummary'
    OrganizationConfiguration:
      type: object
      required:
        - EnableIntegration
      properties:
        EnableIntegration:
          $ref: '#/components/schemas/Boolean'
          description: Enables AWS Organization integration.
      description: Configuration information for AWS Organizations.
    InventoryFilterCondition:
      type: string
      enum:
        - EQUALS
        - NOT_EQUALS
        - BEGINS_WITH
        - CONTAINS
    InventoryFilter:
      type: object
      required:
        - Name
        - Condition
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the filter.
        Condition:
          $ref: '#/components/schemas/InventoryFilterCondition'
          description: Condition of the filter.
        Value:
          $ref: '#/components/schemas/String'
          description: Value of the filter.
      description: An inventory filter.
    InventoryFilterList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryFilter'
    LicenseConfiguration:
      type: object
      properties:
        LicenseConfigurationId:
          $ref: '#/components/schemas/String'
          description: Unique ID of the license configuration.
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
        Name:
          $ref: '#/components/schemas/String'
          description: Name of the license configuration.
        Description:
          $ref: '#/components/schemas/String'
          description: Description of the license configuration.
        LicenseCountingType:
          $ref: '#/components/schemas/LicenseCountingType'
          description: Dimension to use to track the license inventory.
        LicenseRules:
          $ref: '#/components/schemas/StringList'
          description: License rules.
        LicenseCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses managed by the license configuration.
        LicenseCountHardLimit:
          $ref: '#/components/schemas/BoxBoolean'
          description: Number of available licenses as a hard limit.
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: 'Number of licenses consumed. '
        Status:
          $ref: '#/components/schemas/String'
          description: Status of the license configuration.
        OwnerAccountId:
          $ref: '#/components/schemas/String'
          description: Account ID of the license configuration's owner.
        ConsumedLicenseSummaryList:
          $ref: '#/components/schemas/ConsumedLicenseSummaryList'
          description: Summaries for licenses consumed by various resources.
        ManagedResourceSummaryList:
          $ref: '#/components/schemas/ManagedResourceSummaryList'
          description: Summaries for managed resources.
        ProductInformationList:
          $ref: '#/components/schemas/ProductInformationList'
          description: Product information.
        AutomatedDiscoveryInformation:
          $ref: '#/components/schemas/AutomatedDiscoveryInformation'
          description: Automated discovery information.
      description: 'A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.'
    LicenseConfigurationAssociation:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of server resource.
        ResourceOwnerId:
          $ref: '#/components/schemas/String'
          description: ID of the AWS account that owns the resource consuming licenses.
        AssociationTime:
          $ref: '#/components/schemas/DateTime'
          description: Time when the license configuration was associated with the resource.
      description: Describes an association with a license configuration.
    LicenseConfigurationAssociations:
      type: array
      items:
        $ref: '#/components/schemas/LicenseConfigurationAssociation'
    LicenseConfigurationStatus:
      type: string
      enum:
        - AVAILABLE
        - DISABLED
    LicenseConfigurationUsage:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of resource.
        ResourceStatus:
          $ref: '#/components/schemas/String'
          description: Status of the resource.
        ResourceOwnerId:
          $ref: '#/components/schemas/String'
          description: ID of the account that owns the resource.
        AssociationTime:
          $ref: '#/components/schemas/DateTime'
          description: Time when the license configuration was initially associated with the resource.
        ConsumedLicenses:
          $ref: '#/components/schemas/BoxLong'
          description: Number of licenses consumed by the resource.
      description: Details about the usage of a resource associated with a license configuration.
    LicenseConfigurationUsageList:
      type: array
      items:
        $ref: '#/components/schemas/LicenseConfigurationUsage'
    LicenseConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/LicenseConfiguration'
    MetadataList:
      type: array
      items:
        $ref: '#/components/schemas/Metadata'
    LicenseOperationFailure:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Resource type.
        ErrorMessage:
          $ref: '#/components/schemas/String'
          description: Error message.
        FailureTime:
          $ref: '#/components/schemas/DateTime'
          description: Failure time.
        OperationName:
          $ref: '#/components/schemas/String'
          description: Name of the operation.
        ResourceOwnerId:
          $ref: '#/components/schemas/String'
          description: ID of the AWS account that owns the resource.
        OperationRequestedBy:
          $ref: '#/components/schemas/String'
          description: The requester is "License Manager Automated Discovery".
        MetadataList:
          $ref: '#/components/schemas/MetadataList'
          description: Reserved.
      description: Describes the failure of a license operation.
    LicenseOperationFailureList:
      type: array
      items:
        $ref: '#/components/schemas/LicenseOperationFailure'
    LicenseSpecification:
      type: object
      required:
        - LicenseConfigurationArn
      properties:
        LicenseConfigurationArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the license configuration.
      description: Details for associating a license configuration with a resource.
    LicenseSpecifications:
      type: array
      items:
        $ref: '#/components/schemas/LicenseSpecification'
    ResourceInventoryList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceInventory'
    ManagedResourceSummary:
      type: object
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of resource associated with a license.
        AssociationCount:
          $ref: '#/components/schemas/BoxLong'
          description: Number of resources associated with licenses.
      description: Summary information about a managed resource.
    Metadata:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: Reserved.
        Value:
          $ref: '#/components/schemas/String'
          description: Reserved.
      description: Reserved.
    ProductInformationFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ProductInformationFilter'
    ProductInformation:
      type: object
      required:
        - ResourceType
        - ProductInformationFilterList
      properties:
        ResourceType:
          $ref: '#/components/schemas/String'
          description: Resource type. The value is <code>SSM_MANAGED</code>.
        ProductInformationFilterList:
          $ref: '#/components/schemas/ProductInformationFilterList'
          description: '<p>Product information filters. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>Application Name</code> - The name of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Publisher</code> - The publisher of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Version</code> - The version of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Type</code> - The platform type. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>License Included</code> - The type of license included. Logical operators are <code>EQUALS</code> and <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> </ul>'
      description: Describes product information for a license configuration.
    ProductInformationFilter:
      type: object
      required:
        - ProductInformationFilterName
        - ProductInformationFilterValue
        - ProductInformationFilterComparator
      properties:
        ProductInformationFilterName:
          $ref: '#/components/schemas/String'
          description: Filter name.
        ProductInformationFilterValue:
          $ref: '#/components/schemas/StringList'
          description: Filter value.
        ProductInformationFilterComparator:
          $ref: '#/components/schemas/String'
          description: Logical operator.
      description: Describes product information filters.
    ResourceInventory:
      type: object
      properties:
        ResourceId:
          $ref: '#/components/schemas/String'
          description: ID of the resource.
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
          description: Type of resource.
        ResourceArn:
          $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the resource.
        Platform:
          $ref: '#/components/schemas/String'
          description: Platform of the resource.
        PlatformVersion:
          $ref: '#/components/schemas/String'
          description: Platform version of the resource in the inventory.
        ResourceOwningAccountId:
          $ref: '#/components/schemas/String'
          description: ID of the account that owns the resource.
      description: Details about a resource.
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: Tag key.
        Value:
          $ref: '#/components/schemas/String'
          description: Tag value.
      description: Details about a tag for a license configuration.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
security:
  - hmac: []
