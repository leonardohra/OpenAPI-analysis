openapi: 3.0.0
info:
  version: '2016-08-04'
  x-release: v4
  title: AWS Health APIs and Notifications
  description: '<fullname>AWS Health</fullname> <p>The AWS Health API provides programmatic access to the AWS Health information that is presented in the <a href="https://phd.aws.amazon.com/phd/home#/">AWS Personal Health Dashboard</a>. You can get information about events that affect your AWS resources:</p> <ul> <li> <p> <a>DescribeEvents</a>: Summary information about events.</p> </li> <li> <p> <a>DescribeEventDetails</a>: Detailed information about one or more events.</p> </li> <li> <p> <a>DescribeAffectedEntities</a>: Information about AWS resources that are affected by one or more events.</p> </li> </ul> <p>In addition, these operations provide information about event types and summary counts of events or affected entities:</p> <ul> <li> <p> <a>DescribeEventTypes</a>: Information about the kinds of events that AWS Health tracks.</p> </li> <li> <p> <a>DescribeEventAggregates</a>: A count of the number of events that meet specified criteria.</p> </li> <li> <p> <a>DescribeEntityAggregates</a>: A count of the number of affected entities that meet specified criteria.</p> </li> </ul> <p>AWS Health integrates with AWS Organizations to provide a centralized view of AWS Health events across all accounts in your organization.</p> <ul> <li> <p> <a>DescribeEventsForOrganization</a>: Summary information about events across the organization.</p> </li> <li> <p> <a>DescribeAffectedAccountsForOrganization</a>: List of accounts in your organization impacted by an event.</p> </li> <li> <p> <a>DescribeEventDetailsForOrganization</a>: Detailed information about events in your organization.</p> </li> <li> <p> <a>DescribeAffectedEntitiesForOrganization</a>: Information about AWS resources in your organization that are affected by events.</p> </li> </ul> <p>You can use the following operations to enable or disable AWS Health from working with AWS Organizations.</p> <ul> <li> <p> <a>EnableHealthServiceAccessForOrganization</a>: Enables AWS Health to work with AWS Organizations.</p> </li> <li> <p> <a>DisableHealthServiceAccessForOrganization</a>: Disables AWS Health from working with AWS Organizations.</p> </li> <li> <p> <a>DescribeHealthServiceStatusForOrganization</a>: Status information about enabling or disabling AWS Health from working with AWS Organizations.</p> </li> </ul> <p>The Health API requires a Business or Enterprise support plan from <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>. Calling the Health API from an account that does not have a Business or Enterprise support plan causes a <code>SubscriptionRequiredException</code>.</p> <p>For authentication of requests, AWS Health uses the <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.</p> <p>See the <a href="https://docs.aws.amazon.com/health/latest/ug/what-is-aws-health.html">AWS Health User Guide</a> for information about how to use the API.</p> <p> <b>Service Endpoint</b> </p> <p>The HTTP endpoint for the AWS Health API is:</p> <ul> <li> <p>https://health.us-east-1.amazonaws.com </p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: health
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/health-2016-08-04.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/health/'
servers:
  - url: 'https://health.us-east-1.amazonaws.com'
    variables: {}
    description: The general AWSHealth multi-region endpoint
  - url: 'http://health.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSHealth endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://health.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSHealth endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=AWSHealth_20160804.DescribeAffectedAccountsForOrganization':
    post:
      operationId: DescribeAffectedAccountsForOrganization
      description: '<p>Returns a list of accounts in the organization from AWS Organizations that are affected by the provided event.</p> <p>Before you can call this operation, you must first enable AWS Health to work with AWS Organizations. To do this, call the <a>EnableHealthServiceAccessForOrganization</a> operation from your organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAffectedAccountsForOrganizationResponse'
        '480':
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAffectedAccountsForOrganizationRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeAffectedAccountsForOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeAffectedEntities':
    post:
      operationId: DescribeAffectedEntities
      description: '<p>Returns a list of entities that have been affected by the specified events, based on the specified filter criteria. Entities can refer to individual customer resources, groups of customer resources, or any other construct, depending on the AWS service. Events that have impact beyond that of the affected entities, or where the extent of impact is unknown, include at least one entity indicating this.</p> <p>At least one event ARN is required. Results are sorted by the <code>lastUpdatedTime</code> of the entity, starting with the most recent.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAffectedEntitiesResponse'
        '480':
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLocale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAffectedEntitiesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeAffectedEntities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeAffectedEntitiesForOrganization':
    post:
      operationId: DescribeAffectedEntitiesForOrganization
      description: '<p>Returns a list of entities that have been affected by one or more events for one or more accounts in your organization in AWS Organizations, based on the filter criteria. Entities can refer to individual customer resources, groups of customer resources, or any other construct, depending on the AWS service.</p> <p>At least one event ARN and account ID are required. Results are sorted by the <code>lastUpdatedTime</code> of the entity, starting with the most recent.</p> <p>Before you can call this operation, you must first enable AWS Health to work with AWS Organizations. To do this, call the <a>EnableHealthServiceAccessForOrganization</a> operation from your organization''s master account. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAffectedEntitiesForOrganizationResponse'
        '480':
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLocale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAffectedEntitiesForOrganizationRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeAffectedEntitiesForOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeEntityAggregates':
    post:
      operationId: DescribeEntityAggregates
      description: 'Returns the number of entities that are affected by each of the specified events. If no events are specified, the counts of all affected entities are returned.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEntityAggregatesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEntityAggregatesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEntityAggregates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeEventAggregates':
    post:
      operationId: DescribeEventAggregates
      description: 'Returns the number of events of each event type (issue, scheduled change, and account notification). If no filter is specified, the counts of all events in each category are returned.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventAggregatesResponse'
        '480':
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventAggregatesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventAggregates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeEventDetails':
    post:
      operationId: DescribeEventDetails
      description: '<p>Returns detailed information about one or more specified events. Information includes standard event data (region, service, and so on, as returned by <a>DescribeEvents</a>), a detailed event description, and possible additional metadata that depends upon the nature of the event. Affected entities are not included; to retrieve those, use the <a>DescribeAffectedEntities</a> operation.</p> <p>If a specified event cannot be retrieved, an error message is returned for that event.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventDetailsResponse'
        '480':
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLocale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventDetailsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeEventDetailsForOrganization':
    post:
      operationId: DescribeEventDetailsForOrganization
      description: '<p>Returns detailed information about one or more specified events for one or more accounts in your organization. Information includes standard event data (Region, service, and so on, as returned by <a>DescribeEventsForOrganization</a>, a detailed event description, and possible additional metadata that depends upon the nature of the event. Affected entities are not included; to retrieve those, use the <a>DescribeAffectedEntitiesForOrganization</a> operation.</p> <p>Before you can call this operation, you must first enable AWS Health to work with AWS Organizations. To do this, call the <a>EnableHealthServiceAccessForOrganization</a> operation from your organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventDetailsForOrganizationResponse'
        '480':
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLocale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventDetailsForOrganizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventDetailsForOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeEventTypes':
    post:
      operationId: DescribeEventTypes
      description: 'Returns the event types that meet the specified filter criteria. If no filter criteria are specified, all event types are returned, in no particular order.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventTypesResponse'
        '480':
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLocale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventTypesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventTypes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeEvents':
    post:
      operationId: DescribeEvents
      description: '<p>Returns information about events that meet the specified filter criteria. Events are returned in a summary form and do not include the detailed description, any additional metadata that depends on the event type, or any affected resources. To retrieve that information, use the <a>DescribeEventDetails</a> and <a>DescribeAffectedEntities</a> operations.</p> <p>If no filter criteria are specified, all events are returned. Results are sorted by <code>lastModifiedTime</code>, starting with the most recent.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventsResponse'
        '480':
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLocale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEvents
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeEventsForOrganization':
    post:
      operationId: DescribeEventsForOrganization
      description: '<p>Returns information about events across your organization in AWS Organizations, meeting the specified filter criteria. Events are returned in a summary form and do not include the accounts impacted, detailed description, any additional metadata that depends on the event type, or any affected resources. To retrieve that information, use the <a>DescribeAffectedAccountsForOrganization</a>, <a>DescribeEventDetailsForOrganization</a>, and <a>DescribeAffectedEntitiesForOrganization</a> operations.</p> <p>If no filter criteria are specified, all events across your organization are returned. Results are sorted by <code>lastModifiedTime</code>, starting with the most recent.</p> <p>Before you can call this operation, you must first enable Health to work with AWS Organizations. To do this, call the <a>EnableHealthServiceAccessForOrganization</a> operation from your organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventsForOrganizationResponse'
        '480':
          description: InvalidPaginationToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedLocale'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventsForOrganizationRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeEventsForOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DescribeHealthServiceStatusForOrganization':
    post:
      operationId: DescribeHealthServiceStatusForOrganization
      description: 'This operation provides status information on enabling or disabling AWS Health to work with your organization. To call this operation, you must sign in as an IAM user, assume an IAM role, or sign in as the root user (not recommended) in the organization''s master account.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHealthServiceStatusForOrganizationResponse'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DescribeHealthServiceStatusForOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.DisableHealthServiceAccessForOrganization':
    post:
      operationId: DisableHealthServiceAccessForOrganization
      description: 'Calling this operation disables Health from working with AWS Organizations. This does not remove the Service Linked Role (SLR) from the the master account in your organization. Use the IAM console, API, or AWS CLI to remove the SLR if desired. To call this operation, you must sign in as an IAM user, assume an IAM role, or sign in as the root user (not recommended) in the organization''s master account.'
      responses:
        '200':
          description: Success
        '480':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.DisableHealthServiceAccessForOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHealth_20160804.EnableHealthServiceAccessForOrganization':
    post:
      operationId: EnableHealthServiceAccessForOrganization
      description: 'Calling this operation enables AWS Health to work with AWS Organizations. This applies a Service Linked Role (SLR) to the master account in the organization. To learn more about the steps in this process, visit enabling service access for AWS Health in AWS Organizations. To call this operation, you must sign in as an IAM user, assume an IAM role, or sign in as the root user (not recommended) in the organization''s master account.'
      responses:
        '200':
          description: Success
        '480':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHealth_20160804.EnableHealthServiceAccessForOrganization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DescribeAffectedAccountsForOrganizationResponse:
      type: object
      properties:
        affectedAccounts:
          $ref: '#/components/schemas/affectedAccountsList'
          description: A JSON set of elements of the affected accounts.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeAffectedAccountsForOrganizationRequest:
      type: object
      required:
        - eventArn
      title: DescribeAffectedAccountsForOrganizationRequest
      properties:
        eventArn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
        maxResults:
          $ref: '#/components/schemas/maxResults'
          description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
    InvalidPaginationToken: {}
    DescribeAffectedEntitiesResponse:
      type: object
      properties:
        entities:
          $ref: '#/components/schemas/EntityList'
          description: The entities that match the filter criteria.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeAffectedEntitiesRequest:
      type: object
      required:
        - filter
      title: DescribeAffectedEntitiesRequest
      properties:
        filter:
          $ref: '#/components/schemas/EntityFilter'
          description: Values to narrow the results returned. At least one event ARN is required.
        locale:
          $ref: '#/components/schemas/locale'
          description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
        maxResults:
          $ref: '#/components/schemas/maxResults'
          description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
    UnsupportedLocale: {}
    DescribeAffectedEntitiesForOrganizationResponse:
      type: object
      properties:
        entities:
          $ref: '#/components/schemas/EntityList'
          description: 'A JSON set of elements including the <code>awsAccountId</code> and its <code>entityArn</code>, <code>entityValue</code> and its <code>entityArn</code>, <code>lastUpdatedTime</code>, <code>statusCode</code>, and <code>tags</code>.'
        failedSet:
          $ref: '#/components/schemas/DescribeAffectedEntitiesForOrganizationFailedSet'
          description: 'A JSON set of elements of the failed response, including the <code>awsAccountId</code>, <code>errorMessage</code>, <code>errorName</code>, and <code>eventArn</code>.'
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeAffectedEntitiesForOrganizationRequest:
      type: object
      required:
        - organizationEntityFilters
      title: DescribeAffectedEntitiesForOrganizationRequest
      properties:
        organizationEntityFilters:
          $ref: '#/components/schemas/OrganizationEntityFiltersList'
          description: A JSON set of elements including the <code>awsAccountId</code> and the <code>eventArn</code>.
        locale:
          $ref: '#/components/schemas/locale'
          description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
        maxResults:
          $ref: '#/components/schemas/maxResults'
          description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
    DescribeEntityAggregatesResponse:
      type: object
      properties:
        entityAggregates:
          $ref: '#/components/schemas/EntityAggregateList'
          description: The number of entities that are affected by each of the specified events.
    DescribeEntityAggregatesRequest:
      type: object
      title: DescribeEntityAggregatesRequest
      properties:
        eventArns:
          $ref: '#/components/schemas/EventArnsList'
          description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
    DescribeEventAggregatesResponse:
      type: object
      properties:
        eventAggregates:
          $ref: '#/components/schemas/EventAggregateList'
          description: The number of events in each category that meet the optional filter criteria.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeEventAggregatesRequest:
      type: object
      required:
        - aggregateField
      title: DescribeEventAggregatesRequest
      properties:
        filter:
          $ref: '#/components/schemas/EventFilter'
          description: Values to narrow the results returned.
        aggregateField:
          $ref: '#/components/schemas/eventAggregateField'
          description: The only currently supported value is <code>eventTypeCategory</code>.
        maxResults:
          $ref: '#/components/schemas/maxResults'
          description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeEventDetailsResponse:
      type: object
      properties:
        successfulSet:
          $ref: '#/components/schemas/DescribeEventDetailsSuccessfulSet'
          description: Information about the events that could be retrieved.
        failedSet:
          $ref: '#/components/schemas/DescribeEventDetailsFailedSet'
          description: Error messages for any events that could not be retrieved.
    DescribeEventDetailsRequest:
      type: object
      required:
        - eventArns
      title: DescribeEventDetailsRequest
      properties:
        eventArns:
          $ref: '#/components/schemas/eventArnList'
          description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
        locale:
          $ref: '#/components/schemas/locale'
          description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
    DescribeEventDetailsForOrganizationResponse:
      type: object
      properties:
        successfulSet:
          $ref: '#/components/schemas/DescribeEventDetailsForOrganizationSuccessfulSet'
          description: Information about the events that could be retrieved.
        failedSet:
          $ref: '#/components/schemas/DescribeEventDetailsForOrganizationFailedSet'
          description: Error messages for any events that could not be retrieved.
    DescribeEventDetailsForOrganizationRequest:
      type: object
      required:
        - organizationEventDetailFilters
      title: DescribeEventDetailsForOrganizationRequest
      properties:
        organizationEventDetailFilters:
          $ref: '#/components/schemas/OrganizationEventDetailFiltersList'
          description: A set of JSON elements that includes the <code>awsAccountId</code> and the <code>eventArn</code>.
        locale:
          $ref: '#/components/schemas/locale'
          description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
    DescribeEventTypesResponse:
      type: object
      properties:
        eventTypes:
          $ref: '#/components/schemas/EventTypeList'
          description: 'A list of event types that match the filter criteria. Event types have a category (<code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>), a service (for example, <code>EC2</code>, <code>RDS</code>, <code>DATAPIPELINE</code>, <code>BILLING</code>), and a code (in the format <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i> </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>).'
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeEventTypesRequest:
      type: object
      title: DescribeEventTypesRequest
      properties:
        filter:
          $ref: '#/components/schemas/EventTypeFilter'
          description: Values to narrow the results returned.
        locale:
          $ref: '#/components/schemas/locale'
          description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
        maxResults:
          $ref: '#/components/schemas/maxResults'
          description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
    DescribeEventsResponse:
      type: object
      properties:
        events:
          $ref: '#/components/schemas/EventList'
          description: The events that match the specified filter criteria.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeEventsRequest:
      type: object
      title: DescribeEventsRequest
      properties:
        filter:
          $ref: '#/components/schemas/EventFilter'
          description: Values to narrow the results returned.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
        maxResults:
          $ref: '#/components/schemas/maxResults'
          description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
        locale:
          $ref: '#/components/schemas/locale'
          description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
    DescribeEventsForOrganizationResponse:
      type: object
      properties:
        events:
          $ref: '#/components/schemas/OrganizationEventList'
          description: The events that match the specified filter criteria.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
    DescribeEventsForOrganizationRequest:
      type: object
      title: DescribeEventsForOrganizationRequest
      properties:
        filter:
          $ref: '#/components/schemas/OrganizationEventFilter'
          description: Values to narrow the results returned.
        nextToken:
          $ref: '#/components/schemas/nextToken'
          description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
        maxResults:
          $ref: '#/components/schemas/maxResults'
          description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
        locale:
          $ref: '#/components/schemas/locale'
          description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
    DescribeHealthServiceStatusForOrganizationResponse:
      type: object
      properties:
        healthServiceAccessStatusForOrganization:
          $ref: '#/components/schemas/healthServiceAccessStatusForOrganization'
          description: <p>Information about the status of enabling or disabling AWS Health Organizational View in your organization.</p> <p>Valid values are <code>ENABLED | DISABLED | PENDING</code>. </p>
    ConcurrentModificationException: {}
    entityArn:
      type: string
      pattern: '.{0,1600}'
      maxLength: 1600
    eventArn:
      type: string
      pattern: 'arn:aws(-[a-z]+(-[a-z]+)?)?:health:[^:]*:[^:]*:event(?:/[\w-]+){3}'
      maxLength: 1600
    entityValue:
      type: string
      pattern: '.{0,256}'
      maxLength: 256
    entityUrl:
      type: string
    accountId:
      type: string
      pattern: ^\S+$
      maxLength: 12
    timestamp:
      type: string
      format: date-time
    entityStatusCode:
      type: string
      enum:
        - IMPAIRED
        - UNIMPAIRED
        - UNKNOWN
    tagSet:
      type: object
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/tagValue'
    AffectedEntity:
      type: object
      properties:
        entityArn:
          $ref: '#/components/schemas/entityArn'
          description: 'The unique identifier for the entity. Format: <code>arn:aws:health:<i>entity-region</i>:<i>aws-account</i>:entity/<i>entity-id</i> </code>. Example: <code>arn:aws:health:us-east-1:111222333444:entity/AVh5GGT7ul1arKr1sE1K</code> '
        eventArn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        entityValue:
          $ref: '#/components/schemas/entityValue'
          description: The ID of the affected entity.
        entityUrl:
          $ref: '#/components/schemas/entityUrl'
          description: The URL of the affected entity.
        awsAccountId:
          $ref: '#/components/schemas/accountId'
          description: The 12-digit AWS account number that contains the affected entity.
        lastUpdatedTime:
          $ref: '#/components/schemas/timestamp'
          description: The most recent time that the entity was updated.
        statusCode:
          $ref: '#/components/schemas/entityStatusCode'
          description: 'The most recent status of the entity affected by the event. The possible values are <code>IMPAIRED</code>, <code>UNIMPAIRED</code>, and <code>UNKNOWN</code>.'
        tags:
          $ref: '#/components/schemas/tagSet'
          description: A map of entity tags attached to the affected entity.
      description: Information about an entity that is affected by a Health event.
    DateTimeRange:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/timestamp'
          description: The starting date and time of a time range.
        to:
          $ref: '#/components/schemas/timestamp'
          description: The ending date and time of a time range.
      description: 'A range of dates and times that is used by the <a>EventFilter</a> and <a>EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set: match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code> inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set and <code>to</code> is set: match items where the timestamp value is equal to or before <code>to</code>.'
    nextToken:
      type: string
      pattern: '[a-zA-Z0-9=/+_.-]{4,10000}'
      minLength: 4
      maxLength: 10000
    maxResults:
      type: integer
      minimum: 10
      maximum: 100
    affectedAccountsList:
      type: array
      items:
        $ref: '#/components/schemas/accountId'
    OrganizationAffectedEntitiesErrorItem:
      type: object
      properties:
        awsAccountId:
          $ref: '#/components/schemas/accountId'
          description: The 12-digit AWS account numbers that contains the affected entities.
        eventArn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        errorName:
          $ref: '#/components/schemas/string'
          description: The name of the error.
        errorMessage:
          $ref: '#/components/schemas/string'
          description: 'The unique identifier for the event type. The format is <code>AWS_SERVICE_DESCRIPTION</code>. For example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.'
      description: Error information returned when a <a>DescribeAffectedEntitiesForOrganization</a> operation cannot find or process a specific entity.
    DescribeAffectedEntitiesForOrganizationFailedSet:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationAffectedEntitiesErrorItem'
    OrganizationEntityFiltersList:
      type: array
      items:
        $ref: '#/components/schemas/EventAccountFilter'
      minItems: 1
      maxItems: 10
    locale:
      type: string
      pattern: '.{2,256}'
      minLength: 2
      maxLength: 256
    EntityList:
      type: array
      items:
        $ref: '#/components/schemas/AffectedEntity'
    EntityFilter:
      type: object
      required:
        - eventArns
      properties:
        eventArns:
          $ref: '#/components/schemas/eventArnList'
          description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
        entityArns:
          $ref: '#/components/schemas/entityArnList'
          description: A list of entity ARNs (unique identifiers).
        entityValues:
          $ref: '#/components/schemas/entityValueList'
          description: A list of IDs for affected entities.
        lastUpdatedTimes:
          $ref: '#/components/schemas/dateTimeRangeList'
          description: A list of the most recent dates and times that the entity was updated.
        tags:
          $ref: '#/components/schemas/tagFilter'
          description: A map of entity tags attached to the affected entity.
        statusCodes:
          $ref: '#/components/schemas/entityStatusCodeList'
          description: 'A list of entity status codes (<code>IMPAIRED</code>, <code>UNIMPAIRED</code>, or <code>UNKNOWN</code>).'
      description: The values to use to filter results from the <a>DescribeAffectedEntities</a> operation.
    EventArnsList:
      type: array
      items:
        $ref: '#/components/schemas/eventArn'
      minItems: 1
      maxItems: 50
    EntityAggregateList:
      type: array
      items:
        $ref: '#/components/schemas/EntityAggregate'
    EventFilter:
      type: object
      properties:
        eventArns:
          $ref: '#/components/schemas/eventArnList'
          description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
        eventTypeCodes:
          $ref: '#/components/schemas/eventTypeList'
          description: 'A list of unique identifiers for event types. For example, <code>"AWS_EC2_SYSTEM_MAINTENANCE_EVENT","AWS_RDS_MAINTENANCE_SCHEDULED".</code> '
        services:
          $ref: '#/components/schemas/serviceList'
          description: 'The AWS services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.'
        regions:
          $ref: '#/components/schemas/regionList'
          description: A list of AWS regions.
        availabilityZones:
          $ref: '#/components/schemas/availabilityZones'
          description: A list of AWS availability zones.
        startTimes:
          $ref: '#/components/schemas/dateTimeRangeList'
          description: A list of dates and times that the event began.
        endTimes:
          $ref: '#/components/schemas/dateTimeRangeList'
          description: A list of dates and times that the event ended.
        lastUpdatedTimes:
          $ref: '#/components/schemas/dateTimeRangeList'
          description: A list of dates and times that the event was last updated.
        entityArns:
          $ref: '#/components/schemas/entityArnList'
          description: A list of entity ARNs (unique identifiers).
        entityValues:
          $ref: '#/components/schemas/entityValueList'
          description: 'A list of entity identifiers, such as EC2 instance IDs (<code>i-34ab692e</code>) or EBS volumes (<code>vol-426ab23e</code>).'
        eventTypeCategories:
          $ref: '#/components/schemas/eventTypeCategoryList'
          description: 'A list of event type category codes (<code>issue</code>, <code>scheduledChange</code>, or <code>accountNotification</code>).'
        tags:
          $ref: '#/components/schemas/tagFilter'
          description: A map of entity tags attached to the affected entity.
        eventStatusCodes:
          $ref: '#/components/schemas/eventStatusCodeList'
          description: A list of event status codes.
      description: The values to use to filter results from the <a>DescribeEvents</a> and <a>DescribeEventAggregates</a> operations.
    eventAggregateField:
      type: string
      enum:
        - eventTypeCategory
    EventAggregateList:
      type: array
      items:
        $ref: '#/components/schemas/EventAggregate'
    EventDetailsErrorItem:
      type: object
      properties:
        eventArn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        errorName:
          $ref: '#/components/schemas/string'
          description: The name of the error.
        errorMessage:
          $ref: '#/components/schemas/string'
          description: A message that describes the error.
      description: Error information returned when a <a>DescribeEventDetails</a> operation cannot find a specified event.
    DescribeEventDetailsFailedSet:
      type: array
      items:
        $ref: '#/components/schemas/EventDetailsErrorItem'
    OrganizationEventDetailsErrorItem:
      type: object
      properties:
        awsAccountId:
          $ref: '#/components/schemas/accountId'
          description: Error information returned when a <a>DescribeEventDetailsForOrganization</a> operation cannot find a specified event.
        eventArn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        errorName:
          $ref: '#/components/schemas/string'
          description: The name of the error.
        errorMessage:
          $ref: '#/components/schemas/string'
          description: A message that describes the error.
      description: Error information returned when a <a>DescribeEventDetailsForOrganization</a> operation cannot find a specified event.
    DescribeEventDetailsForOrganizationFailedSet:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationEventDetailsErrorItem'
    OrganizationEventDetailFiltersList:
      type: array
      items:
        $ref: '#/components/schemas/EventAccountFilter'
      minItems: 1
      maxItems: 10
    DescribeEventDetailsForOrganizationSuccessfulSet:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationEventDetails'
    OrganizationEventDetails:
      type: object
      properties:
        awsAccountId:
          $ref: '#/components/schemas/accountId'
          description: The 12-digit AWS account numbers that contains the affected entities.
        event:
          $ref: '#/components/schemas/Event'
        eventDescription:
          $ref: '#/components/schemas/EventDescription'
        eventMetadata:
          $ref: '#/components/schemas/eventMetadata'
          description: Additional metadata about the event.
      description: 'Detailed information about an event. A combination of an <a>Event</a> object, an <a>EventDescription</a> object, and additional metadata about the event. Returned by the <a>DescribeEventDetailsForOrganization</a> operation.'
    eventArnList:
      type: array
      items:
        $ref: '#/components/schemas/eventArn'
      minItems: 1
      maxItems: 10
    DescribeEventDetailsSuccessfulSet:
      type: array
      items:
        $ref: '#/components/schemas/EventDetails'
    EventDetails:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/Event'
          description: Summary information about the event.
        eventDescription:
          $ref: '#/components/schemas/EventDescription'
          description: The most recent description of the event.
        eventMetadata:
          $ref: '#/components/schemas/eventMetadata'
          description: Additional metadata about the event.
      description: 'Detailed information about an event. A combination of an <a>Event</a> object, an <a>EventDescription</a> object, and additional metadata about the event. Returned by the <a>DescribeEventDetails</a> operation.'
    EventTypeFilter:
      type: object
      properties:
        eventTypeCodes:
          $ref: '#/components/schemas/EventTypeCodeList'
          description: A list of event type codes.
        services:
          $ref: '#/components/schemas/serviceList'
          description: 'The AWS services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.'
        eventTypeCategories:
          $ref: '#/components/schemas/EventTypeCategoryList'
          description: 'A list of event type category codes (<code>issue</code>, <code>scheduledChange</code>, or <code>accountNotification</code>).'
      description: The values to use to filter results from the <a>DescribeEventTypes</a> operation.
    EventTypeList:
      type: array
      items:
        $ref: '#/components/schemas/EventType'
    OrganizationEventFilter:
      type: object
      properties:
        eventTypeCodes:
          $ref: '#/components/schemas/eventTypeList'
          description: 'A list of unique identifiers for event types. For example, <code>"AWS_EC2_SYSTEM_MAINTENANCE_EVENT","AWS_RDS_MAINTENANCE_SCHEDULED".</code> '
        awsAccountIds:
          $ref: '#/components/schemas/awsAccountIdsList'
          description: A list of 12-digit AWS account numbers that contains the affected entities.
        services:
          $ref: '#/components/schemas/serviceList'
          description: 'The AWS services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.'
        regions:
          $ref: '#/components/schemas/regionList'
          description: A list of AWS Regions.
        startTime:
          $ref: '#/components/schemas/DateTimeRange'
        endTime:
          $ref: '#/components/schemas/DateTimeRange'
        lastUpdatedTime:
          $ref: '#/components/schemas/DateTimeRange'
        entityArns:
          $ref: '#/components/schemas/entityArnList'
          description: REPLACEME
        entityValues:
          $ref: '#/components/schemas/entityValueList'
          description: 'A list of entity identifiers, such as EC2 instance IDs (i-34ab692e) or EBS volumes (vol-426ab23e).'
        eventTypeCategories:
          $ref: '#/components/schemas/eventTypeCategoryList'
          description: REPLACEME
        eventStatusCodes:
          $ref: '#/components/schemas/eventStatusCodeList'
          description: A list of event status codes.
      description: The values to filter results from the <a>DescribeEventsForOrganization</a> operation.
    OrganizationEventList:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationEvent'
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    healthServiceAccessStatusForOrganization:
      type: string
    count:
      type: integer
    EntityAggregate:
      type: object
      properties:
        eventArn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        count:
          $ref: '#/components/schemas/count'
          description: The number entities that match the criteria for the specified events.
      description: The number of entities that are affected by one or more events. Returned by the <a>DescribeEntityAggregates</a> operation.
    entityArnList:
      type: array
      items:
        $ref: '#/components/schemas/entityArn'
      minItems: 1
      maxItems: 100
    entityValueList:
      type: array
      items:
        $ref: '#/components/schemas/entityValue'
      minItems: 1
      maxItems: 100
    dateTimeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/DateTimeRange'
      minItems: 1
      maxItems: 10
    tagFilter:
      type: array
      items:
        $ref: '#/components/schemas/tagSet'
      maxItems: 50
    entityStatusCodeList:
      type: array
      items:
        $ref: '#/components/schemas/entityStatusCode'
      minItems: 1
      maxItems: 3
    service:
      type: string
      pattern: '[^:/]{2,30}'
      minLength: 2
      maxLength: 30
    eventTypeCode:
      type: string
      pattern: '[a-zA-Z0-9\_\-]{3,100}'
      minLength: 3
      maxLength: 100
    eventTypeCategory:
      type: string
      enum:
        - issue
        - accountNotification
        - scheduledChange
        - investigation
      minLength: 3
      maxLength: 255
    region:
      type: string
      pattern: '[^:/]{2,25}'
      minLength: 2
      maxLength: 25
    availabilityZone:
      type: string
      pattern: '[a-z]{2}\-[0-9a-z\-]{4,16}'
      minLength: 6
      maxLength: 18
    eventStatusCode:
      type: string
      enum:
        - open
        - closed
        - upcoming
    Event:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        service:
          $ref: '#/components/schemas/service'
          description: 'The AWS service that is affected by the event. For example, <code>EC2</code>, <code>RDS</code>.'
        eventTypeCode:
          $ref: '#/components/schemas/eventTypeCode'
          description: 'The unique identifier for the event type. The format is <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i> </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.'
        eventTypeCategory:
          $ref: '#/components/schemas/eventTypeCategory'
          description: 'The category of the event. Possible values are <code>issue</code>, <code>scheduledChange</code>, and <code>accountNotification</code>.'
        region:
          $ref: '#/components/schemas/region'
          description: The AWS region name of the event.
        availabilityZone:
          $ref: '#/components/schemas/availabilityZone'
          description: 'The AWS Availability Zone of the event. For example, us-east-1a.'
        startTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time that the event began.
        endTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time that the event ended.
        lastUpdatedTime:
          $ref: '#/components/schemas/timestamp'
          description: The most recent date and time that the event was updated.
        statusCode:
          $ref: '#/components/schemas/eventStatusCode'
          description: 'The most recent status of the event. Possible values are <code>open</code>, <code>closed</code>, and <code>upcoming</code>.'
      description: Summary information about an AWS Health event.
    EventAccountFilter:
      type: object
      required:
        - eventArn
        - awsAccountId
      properties:
        eventArn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        awsAccountId:
          $ref: '#/components/schemas/accountId'
          description: The 12-digit AWS account numbers that contains the affected entities.
      description: The values used to filter results from the <a>DescribeEventDetailsForOrganization</a> and <a>DescribeAffectedEntitiesForOrganization</a> operations.
    aggregateValue:
      type: string
    EventAggregate:
      type: object
      properties:
        aggregateValue:
          $ref: '#/components/schemas/aggregateValue'
          description: The issue type for the associated count.
        count:
          $ref: '#/components/schemas/count'
          description: The number of events of the associated issue type.
      description: The number of events of each issue type. Returned by the <a>DescribeEventAggregates</a> operation.
    eventDescription:
      type: string
    EventDescription:
      type: object
      properties:
        latestDescription:
          $ref: '#/components/schemas/eventDescription'
          description: The most recent description of the event.
      description: The detailed description of the event. Included in the information returned by the <a>DescribeEventDetails</a> operation.
    eventMetadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/metadataValue'
    string:
      type: string
    eventTypeList:
      type: array
      items:
        $ref: '#/components/schemas/eventType'
      minItems: 1
      maxItems: 10
    serviceList:
      type: array
      items:
        $ref: '#/components/schemas/service'
      minItems: 1
      maxItems: 10
    regionList:
      type: array
      items:
        $ref: '#/components/schemas/region'
      minItems: 1
      maxItems: 10
    availabilityZones:
      type: array
      items:
        $ref: '#/components/schemas/availabilityZone'
    eventTypeCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/eventTypeCategory'
      minItems: 1
      maxItems: 10
    eventStatusCodeList:
      type: array
      items:
        $ref: '#/components/schemas/eventStatusCode'
      minItems: 1
      maxItems: 6
    EventType:
      type: object
      properties:
        service:
          $ref: '#/components/schemas/service'
          description: 'The AWS service that is affected by the event. For example, <code>EC2</code>, <code>RDS</code>.'
        code:
          $ref: '#/components/schemas/eventTypeCode'
          description: 'The unique identifier for the event type. The format is <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i> </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.'
        category:
          $ref: '#/components/schemas/eventTypeCategory'
          description: 'A list of event type category codes (<code>issue</code>, <code>scheduledChange</code>, or <code>accountNotification</code>).'
      description: 'Metadata about a type of event that is reported by AWS Health. Data consists of the category (for example, <code>issue</code>), the service (for example, <code>EC2</code>), and the event type code (for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>).'
    EventTypeCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/eventTypeCategory'
      minItems: 1
      maxItems: 10
    EventTypeCodeList:
      type: array
      items:
        $ref: '#/components/schemas/eventTypeCode'
      minItems: 1
      maxItems: 10
    OrganizationEvent:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/eventArn'
          description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
        service:
          $ref: '#/components/schemas/service'
          description: 'The AWS service that is affected by the event. For example, EC2, RDS.'
        eventTypeCode:
          $ref: '#/components/schemas/eventTypeCode'
          description: 'The unique identifier for the event type. The format is <code>AWS_SERVICE_DESCRIPTION</code>. For example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.'
        eventTypeCategory:
          $ref: '#/components/schemas/eventTypeCategory'
          description: The category of the event type.
        region:
          $ref: '#/components/schemas/region'
          description: The AWS Region name of the event.
        startTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time that the event began.
        endTime:
          $ref: '#/components/schemas/timestamp'
          description: The date and time that the event ended.
        lastUpdatedTime:
          $ref: '#/components/schemas/timestamp'
          description: The most recent date and time that the event was updated.
        statusCode:
          $ref: '#/components/schemas/eventStatusCode'
          description: 'The most recent status of the event. Possible values are <code>open</code>, <code>closed</code>, and <code>upcoming</code>.'
      description: 'Summary information about an event, returned by the <a>DescribeEventsForOrganization</a> operation.'
    awsAccountIdsList:
      type: array
      items:
        $ref: '#/components/schemas/accountId'
      minItems: 1
      maxItems: 50
    metadataValue:
      type: string
      maxLength: 10240
    eventType:
      type: string
      pattern: '[^:/]{3,100}'
      minLength: 3
      maxLength: 100
    metadataKey:
      type: string
    tagKey:
      type: string
      pattern: '.{0,127}'
      maxLength: 127
    tagValue:
      type: string
      pattern: '.{0,255}'
      maxLength: 255
security:
  - hmac: []
