openapi: 3.0.0
info:
  version: '2018-06-29'
  x-release: v4
  title: AWS RoboMaker
  description: This section provides documentation for the AWS RoboMaker API operations.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: robomaker
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/robomaker-2018-06-29.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/robomaker/'
servers:
  - url: 'http://robomaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The RoboMaker multi-region endpoint
  - url: 'https://robomaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The RoboMaker multi-region endpoint
  - url: 'http://robomaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://robomaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The RoboMaker endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /batchDescribeSimulationJob:
    post:
      operationId: BatchDescribeSimulationJob
      description: Describes one or more simulation jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDescribeSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jobs
              properties:
                jobs:
                  description: A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
                  type: array
                  items:
                    $ref: '#/components/schemas/Arn'
                  minItems: 1
                  maxItems: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /cancelDeploymentJob:
    post:
      operationId: CancelDeploymentJob
      description: Cancels the specified deployment job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The deployment job ARN to cancel.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /cancelSimulationJob:
    post:
      operationId: CancelSimulationJob
      description: Cancels the specified simulation job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The simulation job ARN to cancel.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /cancelSimulationJobBatch:
    post:
      operationId: CancelSimulationJobBatch
      description: 'Cancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSimulationJobBatchResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - batch
              properties:
                batch:
                  description: The id of the batch to cancel.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createDeploymentJob:
    post:
      operationId: CreateDeploymentJob
      description: '<p>Deploys a specific version of a robot application to robots in a fleet.</p> <p>The robot application must have a numbered <code>applicationVersion</code> for consistency reasons. To create a new version, use <code>CreateRobotApplicationVersion</code> or see <a href="https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html">Creating a Robot Application Version</a>. </p> <note> <p>After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ConcurrentDeploymentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentDeploymentException'
        '486':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clientRequestToken
                - fleet
                - deploymentApplicationConfigs
              properties:
                deploymentConfig:
                  description: Information about a deployment configuration.
                  type: object
                  properties:
                    concurrentDeploymentPercentage:
                      $ref: '#/components/schemas/Percentage'
                      description: The percentage of robots receiving the deployment at the same time.
                    failureThresholdPercentage:
                      $ref: '#/components/schemas/Percentage'
                      description: The percentage of deployments that need to fail before stopping deployment.
                    robotDeploymentTimeoutInSeconds:
                      $ref: '#/components/schemas/DeploymentTimeout'
                      description: 'The amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.'
                    downloadConditionFile:
                      $ref: '#/components/schemas/S3Object'
                      description: The download condition file.
                clientRequestToken:
                  description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                  type: string
                  pattern: '[a-zA-Z0-9_\-=]*'
                  minLength: 1
                  maxLength: 64
                fleet:
                  description: The Amazon Resource Name (ARN) of the fleet to deploy.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                deploymentApplicationConfigs:
                  description: The deployment application configuration.
                  type: array
                  items:
                    $ref: '#/components/schemas/DeploymentApplicationConfig'
                  minItems: 1
                  maxItems: 1
                tags:
                  description: A map that contains tag keys and tag values that are attached to the deployment job.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createFleet:
    post:
      operationId: CreateFleet
      description: 'Creates a fleet, a logical group of robots running the same robot application.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFleetResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  description: The name of the fleet.
                  type: string
                  pattern: '[a-zA-Z0-9_\-]*'
                  minLength: 1
                  maxLength: 255
                tags:
                  description: A map that contains tag keys and tag values that are attached to the fleet.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createRobot:
    post:
      operationId: CreateRobot
      description: Creates a robot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRobotResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - architecture
                - greengrassGroupId
              properties:
                name:
                  description: The name for the robot.
                  type: string
                  pattern: '[a-zA-Z0-9_\-]*'
                  minLength: 1
                  maxLength: 255
                architecture:
                  description: The target architecture of the robot.
                  type: string
                  enum:
                    - X86_64
                    - ARM64
                    - ARMHF
                greengrassGroupId:
                  description: The Greengrass group id.
                  type: string
                  pattern: .*
                  minLength: 1
                  maxLength: 1224
                tags:
                  description: A map that contains tag keys and tag values that are attached to the robot.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createRobotApplication:
    post:
      operationId: CreateRobotApplication
      description: 'Creates a robot application. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - sources
                - robotSoftwareSuite
              properties:
                name:
                  description: The name of the robot application.
                  type: string
                  pattern: '[a-zA-Z0-9_\-]*'
                  minLength: 1
                  maxLength: 255
                sources:
                  description: The sources of the robot application.
                  type: array
                  items:
                    $ref: '#/components/schemas/SourceConfig'
                robotSoftwareSuite:
                  description: Information about a robot software suite (ROS distribution).
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/RobotSoftwareSuiteType'
                      description: The name of the robot software suite (ROS distribution).
                    version:
                      $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
                      description: The version of the robot software suite (ROS distribution).
                tags:
                  description: A map that contains tag keys and tag values that are attached to the robot application.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createRobotApplicationVersion:
    post:
      operationId: CreateRobotApplicationVersion
      description: Creates a version of a robot application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRobotApplicationVersionResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the robot application.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                currentRevisionId:
                  description: 'The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.'
                  type: string
                  pattern: '[a-zA-Z0-9_.\-]*'
                  minLength: 1
                  maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createSimulationApplication:
    post:
      operationId: CreateSimulationApplication
      description: Creates a simulation application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '485':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - sources
                - simulationSoftwareSuite
                - robotSoftwareSuite
              properties:
                name:
                  description: The name of the simulation application.
                  type: string
                  pattern: '[a-zA-Z0-9_\-]*'
                  minLength: 1
                  maxLength: 255
                sources:
                  description: The sources of the simulation application.
                  type: array
                  items:
                    $ref: '#/components/schemas/SourceConfig'
                simulationSoftwareSuite:
                  description: Information about a simulation software suite.
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/SimulationSoftwareSuiteType'
                      description: The name of the simulation software suite.
                    version:
                      $ref: '#/components/schemas/SimulationSoftwareSuiteVersionType'
                      description: The version of the simulation software suite.
                robotSoftwareSuite:
                  description: Information about a robot software suite (ROS distribution).
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/RobotSoftwareSuiteType'
                      description: The name of the robot software suite (ROS distribution).
                    version:
                      $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
                      description: The version of the robot software suite (ROS distribution).
                renderingEngine:
                  description: Information about a rendering engine.
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/RenderingEngineType'
                      description: The name of the rendering engine.
                    version:
                      $ref: '#/components/schemas/RenderingEngineVersionType'
                      description: The version of the rendering engine.
                tags:
                  description: A map that contains tag keys and tag values that are attached to the simulation application.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createSimulationApplicationVersion:
    post:
      operationId: CreateSimulationApplicationVersion
      description: Creates a simulation application with a specific revision id.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSimulationApplicationVersionResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the simulation application.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                currentRevisionId:
                  description: 'The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.'
                  type: string
                  pattern: '[a-zA-Z0-9_.\-]*'
                  minLength: 1
                  maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /createSimulationJob:
    post:
      operationId: CreateSimulationJob
      description: '<p>Creates a simulation job.</p> <note> <p>After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
        '486':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - maxJobDurationInSeconds
                - iamRole
              properties:
                clientRequestToken:
                  description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                  type: string
                  pattern: '[a-zA-Z0-9_\-=]*'
                  minLength: 1
                  maxLength: 64
                outputLocation:
                  description: The output location.
                  type: object
                  properties:
                    s3Bucket:
                      $ref: '#/components/schemas/S3Bucket'
                      description: The S3 bucket for output.
                    s3Prefix:
                      $ref: '#/components/schemas/S3Key'
                      description: The S3 folder in the <code>s3Bucket</code> where output files will be placed.
                loggingConfig:
                  description: The logging configuration.
                  type: object
                  properties:
                    recordAllRosTopics:
                      $ref: '#/components/schemas/BoxedBoolean'
                      description: A boolean indicating whether to record all ROS topics.
                maxJobDurationInSeconds:
                  description: 'The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached, the simulation job will status will transition to <code>Completed</code>.'
                  type: integer
                iamRole:
                  description: 'The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. '
                  type: string
                  pattern: 'arn:aws:iam::\w+:role/.*'
                  minLength: 1
                  maxLength: 255
                failureBehavior:
                  description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
                  type: string
                  enum:
                    - Fail
                    - Continue
                robotApplications:
                  description: The robot application to use in the simulation job.
                  type: array
                  items:
                    $ref: '#/components/schemas/RobotApplicationConfig'
                  minItems: 1
                  maxItems: 1
                simulationApplications:
                  description: The simulation application to use in the simulation job.
                  type: array
                  items:
                    $ref: '#/components/schemas/SimulationApplicationConfig'
                  minItems: 1
                  maxItems: 1
                dataSources:
                  description: <p>Specify data sources to mount read-only files from S3 into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>. </p> <note> <p>There is a limit of 100 files and a combined size of 25GB for all <code>DataSourceConfig</code> objects. </p> </note>
                  type: array
                  items:
                    $ref: '#/components/schemas/DataSourceConfig'
                  minItems: 1
                  maxItems: 5
                tags:
                  description: A map that contains tag keys and tag values that are attached to the simulation job.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
                vpcConfig:
                  description: 'If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.'
                  type: object
                  properties:
                    subnets:
                      $ref: '#/components/schemas/Subnets'
                      description: A list of one or more subnet IDs in your VPC.
                    securityGroups:
                      $ref: '#/components/schemas/SecurityGroups'
                      description: A list of one or more security groups IDs in your VPC.
                    assignPublicIp:
                      $ref: '#/components/schemas/Boolean'
                      description: A boolean indicating whether to assign a public IP address.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteFleet:
    post:
      operationId: DeleteFleet
      description: Deletes a fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFleetResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fleet
              properties:
                fleet:
                  description: The Amazon Resource Name (ARN) of the fleet.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteRobot:
    post:
      operationId: DeleteRobot
      description: Deletes a robot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRobotResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - robot
              properties:
                robot:
                  description: The Amazon Resource Name (ARN) of the robot.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteRobotApplication:
    post:
      operationId: DeleteRobotApplication
      description: Deletes a robot application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The Amazon Resource Name (ARN) of the the robot application.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the robot application to delete.
                  type: string
                  pattern: '(\$LATEST)|[0-9]*'
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deleteSimulationApplication:
    post:
      operationId: DeleteSimulationApplication
      description: Deletes a simulation application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the simulation application to delete.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the simulation application to delete.
                  type: string
                  pattern: '(\$LATEST)|[0-9]*'
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /deregisterRobot:
    post:
      operationId: DeregisterRobot
      description: Deregisters a robot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterRobotResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fleet
                - robot
              properties:
                fleet:
                  description: The Amazon Resource Name (ARN) of the fleet.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                robot:
                  description: The Amazon Resource Name (ARN) of the robot.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeDeploymentJob:
    post:
      operationId: DescribeDeploymentJob
      description: Describes a deployment job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The Amazon Resource Name (ARN) of the deployment job.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeFleet:
    post:
      operationId: DescribeFleet
      description: Describes a fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFleetResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fleet
              properties:
                fleet:
                  description: The Amazon Resource Name (ARN) of the fleet.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeRobot:
    post:
      operationId: DescribeRobot
      description: Describes a robot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRobotResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - robot
              properties:
                robot:
                  description: The Amazon Resource Name (ARN) of the robot to be described.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeRobotApplication:
    post:
      operationId: DescribeRobotApplication
      description: Describes a robot application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The Amazon Resource Name (ARN) of the robot application.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the robot application to describe.
                  type: string
                  pattern: '(\$LATEST)|[0-9]*'
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeSimulationApplication:
    post:
      operationId: DescribeSimulationApplication
      description: Describes a simulation application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
              properties:
                application:
                  description: The application information for the simulation application.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                applicationVersion:
                  description: The version of the simulation application to describe.
                  type: string
                  pattern: '(\$LATEST)|[0-9]*'
                  minLength: 1
                  maxLength: 255
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeSimulationJob:
    post:
      operationId: DescribeSimulationJob
      description: Describes a simulation job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The Amazon Resource Name (ARN) of the simulation job to be described.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /describeSimulationJobBatch:
    post:
      operationId: DescribeSimulationJobBatch
      description: Describes a simulation job batch.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSimulationJobBatchResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - batch
              properties:
                batch:
                  description: The id of the batch to describe.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listDeploymentJobs:
    post:
      operationId: ListDeploymentJobs
      description: 'Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentJobsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>InProgress</code> or the status <code>Pending</code>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 1
                nextToken:
                  description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListDeploymentJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
                  type: string
                  pattern: '[a-zA-Z0-9_.\-\/+=]*'
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: 'When this parameter is used, <code>ListDeploymentJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListDeploymentJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListDeploymentJobs</code> returns up to 200 results and a <code>nextToken</code> value if applicable. '
                  type: integer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listFleets:
    post:
      operationId: ListFleets
      description: 'Returns a list of fleets. You can optionally provide filters to retrieve specific fleets. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListFleets</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                  type: string
                  pattern: '[a-zA-Z0-9_.\-\/+=]*'
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: 'When this parameter is used, <code>ListFleets</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFleets</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListFleets</code> returns up to 200 results and a <code>nextToken</code> value if applicable. '
                  type: integer
                filters:
                  description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listRobotApplications:
    post:
      operationId: ListRobotApplications
      description: Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRobotApplicationsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versionQualifier:
                  description: The version qualifier of the robot application.
                  type: string
                  pattern: ALL
                  minLength: 1
                  maxLength: 255
                nextToken:
                  description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListRobotApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
                  type: string
                  pattern: '[a-zA-Z0-9_.\-\/+=]*'
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: 'When this parameter is used, <code>ListRobotApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobotApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                  type: integer
                filters:
                  description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listRobots:
    post:
      operationId: ListRobots
      description: Returns a list of robots. You can optionally provide filters to retrieve specific robots.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRobotsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListRobots</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
                  type: string
                  pattern: '[a-zA-Z0-9_.\-\/+=]*'
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: 'When this parameter is used, <code>ListRobots</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobots</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListRobots</code> returns up to 200 results and a <code>nextToken</code> value if applicable. '
                  type: integer
                filters:
                  description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Registered</code> or the status <code>Available</code>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listSimulationApplications:
    post:
      operationId: ListSimulationApplications
      description: 'Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSimulationApplicationsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versionQualifier:
                  description: The version qualifier of the simulation application.
                  type: string
                  pattern: ALL
                  minLength: 1
                  maxLength: 255
                nextToken:
                  description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
                  type: string
                  pattern: '[a-zA-Z0-9_.\-\/+=]*'
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: 'When this parameter is used, <code>ListSimulationApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
                  type: integer
                filters:
                  description: '<p>Optional list of filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listSimulationJobBatches:
    post:
      operationId: ListSimulationJobBatches
      description: 'Returns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSimulationJobBatchesResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobBatches</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
                  type: string
                  pattern: '[a-zA-Z0-9_.\-\/+=]*'
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: 'When this parameter is used, <code>ListSimulationJobBatches</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobBatches</code> request with the returned <code>nextToken</code> value. '
                  type: integer
                filters:
                  description: Optional filters to limit results.
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /listSimulationJobs:
    post:
      operationId: ListSimulationJobs
      description: 'Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSimulationJobsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
                  type: string
                  pattern: '[a-zA-Z0-9_.\-\/+=]*'
                  minLength: 1
                  maxLength: 2048
                maxResults:
                  description: 'When this parameter is used, <code>ListSimulationJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListSimulationJobs</code> returns up to 1000 results and a <code>nextToken</code> value if applicable. '
                  type: integer
                filters:
                  description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>'
                  type: array
                  items:
                    $ref: '#/components/schemas/Filter'
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists all tags on a AWS RoboMaker resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.
          schema:
            type: string
            pattern: 'arn:.*'
            minLength: 1
            maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Adds or edits tags for a AWS RoboMaker resource.</p> <p>Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings. </p> <p>For information about the rules that apply to tag keys and tag values, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are tagging.
          schema:
            type: string
            pattern: 'arn:.*'
            minLength: 1
            maxLength: 1224
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: A map that contains tag keys and tag values that are attached to the resource.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  /registerRobot:
    post:
      operationId: RegisterRobot
      description: Registers a robot with a fleet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterRobotResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fleet
                - robot
              properties:
                fleet:
                  description: The Amazon Resource Name (ARN) of the fleet.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                robot:
                  description: The Amazon Resource Name (ARN) of the robot.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /restartSimulationJob:
    post:
      operationId: RestartSimulationJob
      description: Restarts a running simulation job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestartSimulationJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - job
              properties:
                job:
                  description: The Amazon Resource Name (ARN) of the simulation job.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /startSimulationJobBatch:
    post:
      operationId: StartSimulationJobBatch
      description: 'Starts a new simulation job batch. The batch is defined using one or more <code>SimulationJobRequest</code> objects. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartSimulationJobBatchResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - createSimulationJobRequests
              properties:
                clientRequestToken:
                  description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                  type: string
                  pattern: '[a-zA-Z0-9_\-=]*'
                  minLength: 1
                  maxLength: 64
                batchPolicy:
                  description: Information about the batch policy.
                  type: object
                  properties:
                    timeoutInSeconds:
                      $ref: '#/components/schemas/BatchTimeoutInSeconds'
                      description: '<p>The amount of time, in seconds, to wait for the batch to complete. </p> <p>If a batch times out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), they will be moved to the failed list and the batch status will be <code>Failed</code>. If the pending requests were failing for any other reason, the failed pending requests will be moved to the failed list and the batch status will be <code>TimedOut</code>. </p>'
                    maxConcurrency:
                      $ref: '#/components/schemas/MaxConcurrency'
                      description: '<p>The number of active simulation jobs create as part of the batch that can be in an active state at the same time. </p> <p>Active states include: <code>Pending</code>,<code>Preparing</code>, <code>Running</code>, <code>Restarting</code>, <code>RunningFailed</code> and <code>Terminating</code>. All other states are terminal states. </p>'
                createSimulationJobRequests:
                  description: A list of simulation job requests to create in the batch.
                  type: array
                  items:
                    $ref: '#/components/schemas/SimulationJobRequest'
                  minItems: 1
                tags:
                  description: A map that contains tag keys and tag values that are attached to the deployment job batch.
                  type: object
                  minProperties: 0
                  maxProperties: 50
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /syncDeploymentJob:
    post:
      operationId: SyncDeploymentJob
      description: Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncDeploymentJobResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: ConcurrentDeploymentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentDeploymentException'
        '486':
          description: IdempotentParameterMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatchException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clientRequestToken
                - fleet
              properties:
                clientRequestToken:
                  description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
                  type: string
                  pattern: '[a-zA-Z0-9_\-=]*'
                  minLength: 1
                  maxLength: 64
                fleet:
                  description: The target fleet for the synchronization.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: '<p>Removes the specified tags from the specified AWS RoboMaker resource.</p> <p>To remove a tag, specify the tag key. To change the tag value of an existing tag key, use <a href="https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html"> <code>TagResource</code> </a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are removing tags.
          schema:
            type: string
            pattern: 'arn:.*'
            minLength: 1
            maxLength: 1224
        - name: tagKeys
          in: query
          required: true
          description: A map that contains tag keys and tag values that will be unattached from the resource.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateRobotApplication:
    post:
      operationId: UpdateRobotApplication
      description: Updates a robot application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRobotApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
                - sources
                - robotSoftwareSuite
              properties:
                application:
                  description: The application information for the robot application.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                sources:
                  description: The sources of the robot application.
                  type: array
                  items:
                    $ref: '#/components/schemas/SourceConfig'
                robotSoftwareSuite:
                  description: Information about a robot software suite (ROS distribution).
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/RobotSoftwareSuiteType'
                      description: The name of the robot software suite (ROS distribution).
                    version:
                      $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
                      description: The version of the robot software suite (ROS distribution).
                currentRevisionId:
                  description: The revision id for the robot application.
                  type: string
                  pattern: '[a-zA-Z0-9_.\-]*'
                  minLength: 1
                  maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /updateSimulationApplication:
    post:
      operationId: UpdateSimulationApplication
      description: Updates a simulation application.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSimulationApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - application
                - sources
                - simulationSoftwareSuite
                - robotSoftwareSuite
              properties:
                application:
                  description: The application information for the simulation application.
                  type: string
                  pattern: 'arn:.*'
                  minLength: 1
                  maxLength: 1224
                sources:
                  description: The sources of the simulation application.
                  type: array
                  items:
                    $ref: '#/components/schemas/SourceConfig'
                simulationSoftwareSuite:
                  description: Information about a simulation software suite.
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/SimulationSoftwareSuiteType'
                      description: The name of the simulation software suite.
                    version:
                      $ref: '#/components/schemas/SimulationSoftwareSuiteVersionType'
                      description: The version of the simulation software suite.
                robotSoftwareSuite:
                  description: Information about a robot software suite (ROS distribution).
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/RobotSoftwareSuiteType'
                      description: The name of the robot software suite (ROS distribution).
                    version:
                      $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
                      description: The version of the robot software suite (ROS distribution).
                renderingEngine:
                  description: Information about a rendering engine.
                  type: object
                  properties:
                    name:
                      $ref: '#/components/schemas/RenderingEngineType'
                      description: The name of the rendering engine.
                    version:
                      $ref: '#/components/schemas/RenderingEngineVersionType'
                      description: The version of the rendering engine.
                currentRevisionId:
                  description: The revision id for the robot application.
                  type: string
                  pattern: '[a-zA-Z0-9_.\-]*'
                  minLength: 1
                  maxLength: 40
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDescribeSimulationJobResponse:
      type: object
      properties:
        jobs:
          $ref: '#/components/schemas/SimulationJobs'
          description: A list of simulation jobs.
        unprocessedJobs:
          $ref: '#/components/schemas/Arns'
          description: A list of unprocessed simulation job Amazon Resource Names (ARNs).
    Arn:
      type: string
      pattern: 'arn:.*'
      minLength: 1
      maxLength: 1224
    ResourceNotFoundException: {}
    InvalidParameterException: {}
    InternalServerException: {}
    ThrottlingException: {}
    CancelDeploymentJobResponse:
      type: object
      properties: {}
    CancelSimulationJobResponse:
      type: object
      properties: {}
    CancelSimulationJobBatchResponse:
      type: object
      properties: {}
    CreateDeploymentJobResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The target fleet for the deployment job.
        status:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the deployment job.
        deploymentApplicationConfigs:
          $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: The failure reason of the deployment job if it failed.
        failureCode:
          $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: '<p>The failure code of the simulation job if it failed:</p> <dl> <dt>BadPermissionError</dt> <dd> <p>AWS Greengrass requires a service-level role permission to access other services. The role must include the <a href="https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor"> <code>AWSGreengrassResourceAccessRolePolicy</code> managed policy</a>. </p> </dd> <dt>ExtractingBundleFailure</dt> <dd> <p>The robot application could not be extracted from the bundle.</p> </dd> <dt>FailureThresholdBreached</dt> <dd> <p>The percentage of robots that could not be updated exceeded the percentage set for the deployment.</p> </dd> <dt>GreengrassDeploymentFailed</dt> <dd> <p>The robot application could not be deployed to the robot.</p> </dd> <dt>GreengrassGroupVersionDoesNotExist</dt> <dd> <p>The AWS Greengrass group or version associated with a robot is missing.</p> </dd> <dt>InternalServerError</dt> <dd> <p>An internal error has occurred. Retry your request, but if the problem persists, contact us with details.</p> </dd> <dt>MissingRobotApplicationArchitecture</dt> <dd> <p>The robot application does not have a source that matches the architecture of the robot.</p> </dd> <dt>MissingRobotDeploymentResource</dt> <dd> <p>One or more of the resources specified for the robot application are missing. For example, does the robot application have the correct launch package and launch file?</p> </dd> <dt>PostLaunchFileFailure</dt> <dd> <p>The post-launch script failed.</p> </dd> <dt>PreLaunchFileFailure</dt> <dd> <p>The pre-launch script failed.</p> </dd> <dt>ResourceNotFound</dt> <dd> <p>One or more deployment resources are missing. For example, do robot application source bundles still exist? </p> </dd> <dt>RobotDeploymentNoResponse</dt> <dd> <p>There is no response from the robot. It might not be powered on or connected to the internet.</p> </dd> </dl>'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the fleet was created.'
        deploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: The deployment configuration.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the deployment job.
    Percentage:
      type: integer
      minimum: 1
      maximum: 100
    DeploymentTimeout:
      type: integer
    S3Object:
      type: object
      required:
        - bucket
        - key
      properties:
        bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The bucket containing the object.
        key:
          $ref: '#/components/schemas/S3Key'
          description: The key of the object.
        etag:
          $ref: '#/components/schemas/S3Etag'
          description: The etag of the object.
      description: Information about an S3 object.
    DeploymentApplicationConfig:
      type: object
      required:
        - application
        - applicationVersion
        - launchConfig
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        applicationVersion:
          $ref: '#/components/schemas/DeploymentVersion'
          description: The version of the application.
        launchConfig:
          $ref: '#/components/schemas/DeploymentLaunchConfig'
          description: The launch configuration.
      description: Information about a deployment application configuration.
    TagValue:
      type: string
      pattern: '[a-zA-Z0-9 _.\-\/+=:]*'
      minLength: 0
      maxLength: 256
    LimitExceededException: {}
    ConcurrentDeploymentException: {}
    IdempotentParameterMismatchException: {}
    CreateFleetResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the fleet was created.'
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the fleet.
    CreateRobotResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot was created.'
        greengrassGroupId:
          $ref: '#/components/schemas/Id'
          description: The Amazon Resource Name (ARN) of the Greengrass group associated with the robot.
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The target architecture of the robot.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the robot.
    ResourceAlreadyExistsException: {}
    CreateRobotApplicationResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite (ROS distribution) used by the robot application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the robot application.
    SourceConfig:
      type: object
      properties:
        s3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The Amazon S3 bucket name.
        s3Key:
          $ref: '#/components/schemas/S3Key'
          description: The s3 object key.
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The target processor architecture for the application.
      description: Information about a source configuration.
    RobotSoftwareSuiteType:
      type: string
      enum:
        - ROS
        - ROS2
    RobotSoftwareSuiteVersionType:
      type: string
      enum:
        - Kinetic
        - Melodic
        - Dashing
    CreateRobotApplicationVersionResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite (ROS distribution) used by the robot application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
    CreateSimulationApplicationResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite (ROS distribution).
        renderingEngine:
          $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id of the simulation application.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the simulation application.
    SimulationSoftwareSuiteType:
      type: string
      enum:
        - Gazebo
        - RosbagPlay
    SimulationSoftwareSuiteVersionType:
      type: string
      pattern: 7|9|Kinetic|Melodic|Dashing
      minLength: 0
      maxLength: 1024
    RenderingEngineType:
      type: string
      enum:
        - OGRE
    RenderingEngineVersionType:
      type: string
      pattern: 1.x
      minLength: 1
      maxLength: 4
    CreateSimulationApplicationVersionResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite (ROS distribution).
        renderingEngine:
          $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision ID of the simulation application.
    CreateSimulationJobResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        status:
          $ref: '#/components/schemas/SimulationJobStatus'
          description: The status of the simulation job.
        lastStartedAt:
          $ref: '#/components/schemas/LastStartedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job was last started.'
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
        failureBehavior:
          $ref: '#/components/schemas/FailureBehavior'
          description: the failure behavior for the simulation job.
        failureCode:
          $ref: '#/components/schemas/SimulationJobErrorCode'
          description: '<p>The failure code of the simulation job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>'
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
          description: Simulation job output files location.
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          $ref: '#/components/schemas/JobDuration'
          description: 'The maximum simulation job duration in seconds. '
        simulationTimeMillis:
          $ref: '#/components/schemas/SimulationTimeMillis'
          description: The simulation job execution duration in milliseconds.
        iamRole:
          $ref: '#/components/schemas/IamRole'
          description: The IAM role that allows the simulation job to call the AWS APIs that are specified in its associated policies on your behalf.
        robotApplications:
          $ref: '#/components/schemas/RobotApplicationConfigs'
          description: The robot application used by the simulation job.
        simulationApplications:
          $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: The simulation application used by the simulation job.
        dataSources:
          $ref: '#/components/schemas/DataSources'
          description: The data sources for the simulation job.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the simulation job.
        vpcConfig:
          $ref: '#/components/schemas/VPCConfigResponse'
          description: Information about the vpc configuration.
    S3Bucket:
      type: string
      pattern: '[a-z0-9][a-z0-9.\-]*[a-z0-9]'
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    BoxedBoolean:
      type: boolean
    RobotApplicationConfig:
      type: object
      required:
        - application
        - launchConfig
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the robot application.
        applicationVersion:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        launchConfig:
          $ref: '#/components/schemas/LaunchConfig'
          description: The launch configuration for the robot application.
      description: Application configuration information for a robot.
    SimulationApplicationConfig:
      type: object
      required:
        - application
        - launchConfig
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        applicationVersion:
          $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        launchConfig:
          $ref: '#/components/schemas/LaunchConfig'
          description: The launch configuration for the simulation application.
      description: Information about a simulation application configuration.
    DataSourceConfig:
      type: object
      required:
        - name
        - s3Bucket
        - s3Keys
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the data source.
        s3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket where the data files are located.
        s3Keys:
          $ref: '#/components/schemas/S3Keys'
          description: The list of S3 keys identifying the data source files.
      description: Information about a data source.
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
      maxItems: 16
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
      maxItems: 5
    Boolean:
      type: boolean
    ServiceUnavailableException: {}
    DeleteFleetResponse:
      type: object
      properties: {}
    DeleteRobotResponse:
      type: object
      properties: {}
    DeleteRobotApplicationResponse:
      type: object
      properties: {}
    DeleteSimulationApplicationResponse:
      type: object
      properties: {}
    DeregisterRobotResponse:
      type: object
      properties:
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
    DescribeDeploymentJobResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the deployment job.
        deploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: The deployment configuration.
        deploymentApplicationConfigs:
          $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: A short description of the reason why the deployment job failed.
        failureCode:
          $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: The deployment job failure code.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the deployment job was created.'
        robotDeploymentSummary:
          $ref: '#/components/schemas/RobotDeploymentSummary'
          description: A list of robot deployment summaries.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified deployment job.
    DescribeFleetResponse:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robots:
          $ref: '#/components/schemas/Robots'
          description: A list of robots.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the fleet was created.'
        lastDeploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the last deployment.
        lastDeploymentJob:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified fleet.
    DescribeRobotResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot.
        fleetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          $ref: '#/components/schemas/RobotStatus'
          description: The status of the fleet.
        greengrassGroupId:
          $ref: '#/components/schemas/Id'
          description: The Greengrass group id.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot was created.'
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The target architecture of the robot application.
        lastDeploymentJob:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment job.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified robot.
    DescribeRobotApplicationResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite (ROS distribution) used by the robot application.
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified robot application.
    DescribeSimulationApplicationResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot simulation application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite (ROS distribution).
        renderingEngine:
          $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id of the simulation application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified simulation application.
    DescribeSimulationJobResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation job.
        status:
          $ref: '#/components/schemas/SimulationJobStatus'
          description: The status of the simulation job.
        lastStartedAt:
          $ref: '#/components/schemas/LastStartedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job was last started.'
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
        failureBehavior:
          $ref: '#/components/schemas/FailureBehavior'
          description: The failure behavior for the simulation job.
        failureCode:
          $ref: '#/components/schemas/SimulationJobErrorCode'
          description: '<p>The failure code of the simulation job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>'
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: 'Details about why the simulation job failed. For more information about troubleshooting, see <a href="https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting.html">Troubleshooting</a>.'
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
          description: Location for output files generated by the simulation job.
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          $ref: '#/components/schemas/JobDuration'
          description: 'The maximum job duration in seconds. The value must be 8 days (691,200 seconds) or less.'
        simulationTimeMillis:
          $ref: '#/components/schemas/SimulationTimeMillis'
          description: The simulation job execution duration in milliseconds.
        iamRole:
          $ref: '#/components/schemas/IamRole'
          description: The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf.
        robotApplications:
          $ref: '#/components/schemas/RobotApplicationConfigs'
          description: A list of robot applications.
        simulationApplications:
          $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: A list of simulation applications.
        dataSources:
          $ref: '#/components/schemas/DataSources'
          description: The data sources for the simulation job.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified simulation job.
        vpcConfig:
          $ref: '#/components/schemas/VPCConfigResponse'
          description: The VPC configuration.
        networkInterface:
          $ref: '#/components/schemas/NetworkInterface'
          description: The network interface information for the simulation job.
    DescribeSimulationJobBatchResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the batch.
        status:
          $ref: '#/components/schemas/SimulationJobBatchStatus'
          description: '<p>The status of the batch.</p> <dl> <dt>Pending</dt> <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt> <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt> <dd> <p>The simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like <code>InternalServiceError</code>). See <code>failureCode</code> and <code>failureReason</code> for more information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to <code>InternalServiceError</code> and (2) when all created simulation jobs have reached a terminal state (for example, <code>Completed</code> or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt> <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt> <dd> <p>The simulation job batch is timing out.</p> <p>If a batch timing out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), the batch status will be <code>Failed</code>. If there are no such failing request, the batch status will be <code>TimedOut</code>. </p> </dd> <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p> </dd> </dl>'
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job batch was last updated.'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job batch was created.'
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        batchPolicy:
          $ref: '#/components/schemas/BatchPolicy'
          description: The batch policy.
        failureCode:
          $ref: '#/components/schemas/SimulationJobBatchErrorCode'
          description: The failure code of the simulation job batch.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: The reason the simulation job batch failed.
        failedRequests:
          $ref: '#/components/schemas/FailedCreateSimulationJobRequests'
          description: 'A list of failed create simulation job requests. The request failed to be created into a simulation job. Failed requests do not have a simulation job ID. '
        pendingRequests:
          $ref: '#/components/schemas/CreateSimulationJobRequests'
          description: A list of pending simulation job requests. These requests have not yet been created into simulation jobs.
        createdRequests:
          $ref: '#/components/schemas/SimulationJobSummaries'
          description: A list of created simulation job summaries.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the simulation job batch.
    ListDeploymentJobsResponse:
      type: object
      properties:
        deploymentJobs:
          $ref: '#/components/schemas/DeploymentJobs'
          description: A list of deployment jobs that meet the criteria of the request.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListDeploymentJobs</code> request. When the results of a <code>ListDeploymentJobs</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    Filter:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the filter.
        values:
          $ref: '#/components/schemas/FilterValues'
          description: A list of values.
      description: Information about a filter.
    ListFleetsResponse:
      type: object
      properties:
        fleetDetails:
          $ref: '#/components/schemas/Fleets'
          description: A list of fleet details meeting the request criteria.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListDeploymentJobs</code> request. When the results of a <code>ListFleets</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    ListRobotApplicationsResponse:
      type: object
      properties:
        robotApplicationSummaries:
          $ref: '#/components/schemas/RobotApplicationSummaries'
          description: A list of robot application summaries that meet the criteria of the request.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListRobotApplications</code> request. When the results of a <code>ListRobotApplications</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    ListRobotsResponse:
      type: object
      properties:
        robots:
          $ref: '#/components/schemas/Robots'
          description: A list of robots that meet the criteria of the request.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListRobots</code> request. When the results of a <code>ListRobot</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    ListSimulationApplicationsResponse:
      type: object
      properties:
        simulationApplicationSummaries:
          $ref: '#/components/schemas/SimulationApplicationSummaries'
          description: A list of simulation application summaries that meet the criteria of the request.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListSimulationApplications</code> request. When the results of a <code>ListRobot</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    ListSimulationJobBatchesResponse:
      type: object
      properties:
        simulationJobBatchSummaries:
          $ref: '#/components/schemas/SimulationJobBatchSummaries'
          description: A list of simulation job batch summaries.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListSimulationJobBatches</code> request. When the results of a <code>ListSimulationJobBatches</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    ListSimulationJobsResponse:
      type: object
      required:
        - simulationJobSummaries
      properties:
        simulationJobSummaries:
          $ref: '#/components/schemas/SimulationJobSummaries'
          description: A list of simulation job summaries that meet the criteria of the request.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value to include in a future <code>ListSimulationJobs</code> request. When the results of a <code>ListRobot</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. '
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified resource.
    RegisterRobotResponse:
      type: object
      properties:
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet that the robot will join.
        robot:
          $ref: '#/components/schemas/Arn'
          description: Information about the robot registration.
    RestartSimulationJobResponse:
      type: object
      properties: {}
    StartSimulationJobBatchResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the batch.
        status:
          $ref: '#/components/schemas/SimulationJobBatchStatus'
          description: '<p>The status of the simulation job batch.</p> <dl> <dt>Pending</dt> <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt> <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt> <dd> <p>The simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like <code>InternalServiceError</code>). See <code>failureCode</code> and <code>failureReason</code> for more information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to <code>InternalServiceError</code> and (2) when all created simulation jobs have reached a terminal state (for example, <code>Completed</code> or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt> <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt> <dd> <p>The simulation job batch is timing out.</p> <p>If a batch timing out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), the batch status will be <code>Failed</code>. If there are no such failing request, the batch status will be <code>TimedOut</code>. </p> </dd> <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p> </dd> </dl>'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job batch was created.'
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        batchPolicy:
          $ref: '#/components/schemas/BatchPolicy'
          description: The batch policy.
        failureCode:
          $ref: '#/components/schemas/SimulationJobBatchErrorCode'
          description: The failure code if the simulation job batch failed.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: The reason the simulation job batch failed.
        failedRequests:
          $ref: '#/components/schemas/FailedCreateSimulationJobRequests'
          description: 'A list of failed simulation job requests. The request failed to be created into a simulation job. Failed requests do not have a simulation job ID. '
        pendingRequests:
          $ref: '#/components/schemas/CreateSimulationJobRequests'
          description: A list of pending simulation job requests. These requests have not yet been created into simulation jobs.
        createdRequests:
          $ref: '#/components/schemas/SimulationJobSummaries'
          description: A list of created simulation job request summaries.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the deployment job batch.
    BatchTimeoutInSeconds:
      type: integer
    MaxConcurrency:
      type: integer
    SimulationJobRequest:
      type: object
      required:
        - maxJobDurationInSeconds
      properties:
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
        maxJobDurationInSeconds:
          $ref: '#/components/schemas/JobDuration'
          description: 'The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.'
        iamRole:
          $ref: '#/components/schemas/IamRole'
          description: 'The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. '
        failureBehavior:
          $ref: '#/components/schemas/FailureBehavior'
          description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
        useDefaultApplications:
          $ref: '#/components/schemas/BoxedBoolean'
          description: Boolean indicating whether to use default simulation tool applications.
        robotApplications:
          $ref: '#/components/schemas/RobotApplicationConfigs'
          description: The robot applications to use in the simulation job.
        simulationApplications:
          $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: The simulation applications to use in the simulation job.
        dataSources:
          $ref: '#/components/schemas/DataSourceConfigs'
          description: <p>Specify data sources to mount read-only files from S3 into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>. </p> <note> <p>There is a limit of 100 files and a combined size of 25GB for all <code>DataSourceConfig</code> objects. </p> </note>
        vpcConfig:
          $ref: '#/components/schemas/VPCConfig'
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the simulation job request.
      description: Information about a simulation job request.
    SyncDeploymentJobResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the synchronization request.
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the synchronization job.
        deploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: Information about the deployment configuration.
        deploymentApplicationConfigs:
          $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: Information about the deployment application configurations.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: The failure reason if the job fails.
        failureCode:
          $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: '<p>The failure code if the job fails:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the fleet was created.'
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '[a-zA-Z0-9 _.\-\/+=:]*'
      minLength: 1
      maxLength: 128
    UpdateRobotApplicationResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the updated robot application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite (ROS distribution) used by the robot application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
    UpdateSimulationApplicationResponse:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the updated simulation application.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite (ROS distribution).
        renderingEngine:
          $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
        revisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id of the simulation application.
    Architecture:
      type: string
      enum:
        - X86_64
        - ARM64
        - ARMHF
    Arns:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
      minItems: 1
      maxItems: 100
    BatchDescribeSimulationJobRequest:
      type: object
      required:
        - jobs
      title: BatchDescribeSimulationJobRequest
      properties:
        jobs:
          $ref: '#/components/schemas/Arns'
          description: A list of Amazon Resource Names (ARNs) of simulation jobs to describe.
    SimulationJobs:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJob'
    BatchPolicy:
      type: object
      properties:
        timeoutInSeconds:
          $ref: '#/components/schemas/BatchTimeoutInSeconds'
          description: '<p>The amount of time, in seconds, to wait for the batch to complete. </p> <p>If a batch times out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), they will be moved to the failed list and the batch status will be <code>Failed</code>. If the pending requests were failing for any other reason, the failed pending requests will be moved to the failed list and the batch status will be <code>TimedOut</code>. </p>'
        maxConcurrency:
          $ref: '#/components/schemas/MaxConcurrency'
          description: '<p>The number of active simulation jobs create as part of the batch that can be in an active state at the same time. </p> <p>Active states include: <code>Pending</code>,<code>Preparing</code>, <code>Running</code>, <code>Restarting</code>, <code>RunningFailed</code> and <code>Terminating</code>. All other states are terminal states. </p>'
      description: Information about the batch policy.
    CancelDeploymentJobRequest:
      type: object
      required:
        - job
      title: CancelDeploymentJobRequest
      properties:
        job:
          $ref: '#/components/schemas/Arn'
          description: The deployment job ARN to cancel.
    CancelSimulationJobBatchRequest:
      type: object
      required:
        - batch
      title: CancelSimulationJobBatchRequest
      properties:
        batch:
          $ref: '#/components/schemas/Arn'
          description: The id of the batch to cancel.
    CancelSimulationJobRequest:
      type: object
      required:
        - job
      title: CancelSimulationJobRequest
      properties:
        job:
          $ref: '#/components/schemas/Arn'
          description: The simulation job ARN to cancel.
    ClientRequestToken:
      type: string
      pattern: '[a-zA-Z0-9_\-=]*'
      minLength: 1
      maxLength: 64
    Command:
      type: string
      pattern: '[a-zA-Z0-9_.\-]*'
      minLength: 1
      maxLength: 1024
    DeploymentConfig:
      type: object
      properties:
        concurrentDeploymentPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of robots receiving the deployment at the same time.
        failureThresholdPercentage:
          $ref: '#/components/schemas/Percentage'
          description: The percentage of deployments that need to fail before stopping deployment.
        robotDeploymentTimeoutInSeconds:
          $ref: '#/components/schemas/DeploymentTimeout'
          description: 'The amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.'
        downloadConditionFile:
          $ref: '#/components/schemas/S3Object'
          description: The download condition file.
      description: Information about a deployment configuration.
    DeploymentApplicationConfigs:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentApplicationConfig'
      minItems: 1
      maxItems: 1
    TagMap:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateDeploymentJobRequest:
      type: object
      required:
        - clientRequestToken
        - fleet
        - deploymentApplicationConfigs
      title: CreateDeploymentJobRequest
      properties:
        deploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: The requested deployment configuration.
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet to deploy.
        deploymentApplicationConfigs:
          $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the deployment job.
    DeploymentStatus:
      type: string
      enum:
        - Pending
        - Preparing
        - InProgress
        - Failed
        - Succeeded
        - Canceled
    GenericString:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    DeploymentJobErrorCode:
      type: string
      enum:
        - ResourceNotFound
        - EnvironmentSetupError
        - EtagMismatch
        - FailureThresholdBreached
        - RobotDeploymentAborted
        - RobotDeploymentNoResponse
        - RobotAgentConnectionTimeout
        - GreengrassDeploymentFailed
        - InvalidGreengrassGroup
        - MissingRobotArchitecture
        - MissingRobotApplicationArchitecture
        - MissingRobotDeploymentResource
        - GreengrassGroupVersionDoesNotExist
        - LambdaDeleted
        - ExtractingBundleFailure
        - PreLaunchFileFailure
        - PostLaunchFileFailure
        - BadPermissionError
        - DownloadConditionFailed
        - InternalServerError
    CreatedAt:
      type: string
      format: date-time
    Name:
      type: string
      pattern: '[a-zA-Z0-9_\-]*'
      minLength: 1
      maxLength: 255
    CreateFleetRequest:
      type: object
      required:
        - name
      title: CreateFleetRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the fleet.
    SourceConfigs:
      type: array
      items:
        $ref: '#/components/schemas/SourceConfig'
    RobotSoftwareSuite:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RobotSoftwareSuiteType'
          description: The name of the robot software suite (ROS distribution).
        version:
          $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
          description: The version of the robot software suite (ROS distribution).
      description: Information about a robot software suite (ROS distribution).
    CreateRobotApplicationRequest:
      type: object
      required:
        - name
        - sources
        - robotSoftwareSuite
      title: CreateRobotApplicationRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        sources:
          $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite (ROS distribuition) used by the robot application.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the robot application.
    Version:
      type: string
      pattern: '(\$LATEST)|[0-9]*'
      minLength: 1
      maxLength: 255
    Sources:
      type: array
      items:
        $ref: '#/components/schemas/Source'
    LastUpdatedAt:
      type: string
      format: date-time
    RevisionId:
      type: string
      pattern: '[a-zA-Z0-9_.\-]*'
      minLength: 1
      maxLength: 40
    CreateRobotApplicationVersionRequest:
      type: object
      required:
        - application
      title: CreateRobotApplicationVersionRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the robot application.
        currentRevisionId:
          $ref: '#/components/schemas/RevisionId'
          description: 'The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.'
    Id:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1224
    CreateRobotRequest:
      type: object
      required:
        - name
        - architecture
        - greengrassGroupId
      title: CreateRobotRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name for the robot.
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The target architecture of the robot.
        greengrassGroupId:
          $ref: '#/components/schemas/Id'
          description: The Greengrass group id.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the robot.
    SimulationSoftwareSuite:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/SimulationSoftwareSuiteType'
          description: The name of the simulation software suite.
        version:
          $ref: '#/components/schemas/SimulationSoftwareSuiteVersionType'
          description: The version of the simulation software suite.
      description: Information about a simulation software suite.
    RenderingEngine:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RenderingEngineType'
          description: The name of the rendering engine.
        version:
          $ref: '#/components/schemas/RenderingEngineVersionType'
          description: The version of the rendering engine.
      description: Information about a rendering engine.
    CreateSimulationApplicationRequest:
      type: object
      required:
        - name
        - sources
        - simulationSoftwareSuite
        - robotSoftwareSuite
      title: CreateSimulationApplicationRequest
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        sources:
          $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite (ROS distribution) used by the simulation application.
        renderingEngine:
          $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the simulation application.
    CreateSimulationApplicationVersionRequest:
      type: object
      required:
        - application
      title: CreateSimulationApplicationVersionRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        currentRevisionId:
          $ref: '#/components/schemas/RevisionId'
          description: 'The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.'
    OutputLocation:
      type: object
      properties:
        s3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket for output.
        s3Prefix:
          $ref: '#/components/schemas/S3Key'
          description: The S3 folder in the <code>s3Bucket</code> where output files will be placed.
      description: The output location.
    LoggingConfig:
      type: object
      required:
        - recordAllRosTopics
      properties:
        recordAllRosTopics:
          $ref: '#/components/schemas/BoxedBoolean'
          description: A boolean indicating whether to record all ROS topics.
      description: The logging configuration.
    JobDuration:
      type: integer
    IamRole:
      type: string
      pattern: 'arn:aws:iam::\w+:role/.*'
      minLength: 1
      maxLength: 255
    FailureBehavior:
      type: string
      enum:
        - Fail
        - Continue
    RobotApplicationConfigs:
      type: array
      items:
        $ref: '#/components/schemas/RobotApplicationConfig'
      minItems: 1
      maxItems: 1
    SimulationApplicationConfigs:
      type: array
      items:
        $ref: '#/components/schemas/SimulationApplicationConfig'
      minItems: 1
      maxItems: 1
    DataSourceConfigs:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceConfig'
      minItems: 1
      maxItems: 5
    VPCConfig:
      type: object
      required:
        - subnets
      properties:
        subnets:
          $ref: '#/components/schemas/Subnets'
          description: A list of one or more subnet IDs in your VPC.
        securityGroups:
          $ref: '#/components/schemas/SecurityGroups'
          description: A list of one or more security groups IDs in your VPC.
        assignPublicIp:
          $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether to assign a public IP address.
      description: 'If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.'
    CreateSimulationJobRequest:
      type: object
      required:
        - maxJobDurationInSeconds
        - iamRole
      title: CreateSimulationJobRequest
      properties:
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
          description: Location for output files generated by the simulation job.
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          $ref: '#/components/schemas/JobDuration'
          description: 'The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached, the simulation job will status will transition to <code>Completed</code>.'
        iamRole:
          $ref: '#/components/schemas/IamRole'
          description: 'The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. '
        failureBehavior:
          $ref: '#/components/schemas/FailureBehavior'
          description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
        robotApplications:
          $ref: '#/components/schemas/RobotApplicationConfigs'
          description: The robot application to use in the simulation job.
        simulationApplications:
          $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: The simulation application to use in the simulation job.
        dataSources:
          $ref: '#/components/schemas/DataSourceConfigs'
          description: <p>Specify data sources to mount read-only files from S3 into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>. </p> <note> <p>There is a limit of 100 files and a combined size of 25GB for all <code>DataSourceConfig</code> objects. </p> </note>
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the simulation job.
        vpcConfig:
          $ref: '#/components/schemas/VPCConfig'
          description: 'If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID. '
    CreateSimulationJobRequests:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJobRequest'
      minItems: 1
    SimulationJobStatus:
      type: string
      enum:
        - Pending
        - Preparing
        - Running
        - Restarting
        - Completed
        - Failed
        - RunningFailed
        - Terminating
        - Terminated
        - Canceled
    LastStartedAt:
      type: string
      format: date-time
    SimulationJobErrorCode:
      type: string
      enum:
        - InternalServiceError
        - RobotApplicationCrash
        - SimulationApplicationCrash
        - BadPermissionsRobotApplication
        - BadPermissionsSimulationApplication
        - BadPermissionsS3Object
        - BadPermissionsS3Output
        - BadPermissionsCloudwatchLogs
        - SubnetIpLimitExceeded
        - ENILimitExceeded
        - BadPermissionsUserCredentials
        - InvalidBundleRobotApplication
        - InvalidBundleSimulationApplication
        - InvalidS3Resource
        - LimitExceeded
        - MismatchedEtag
        - RobotApplicationVersionMismatchedEtag
        - SimulationApplicationVersionMismatchedEtag
        - ResourceNotFound
        - RequestThrottled
        - BatchTimedOut
        - BatchCanceled
        - InvalidInput
        - WrongRegionS3Bucket
        - WrongRegionS3Output
        - WrongRegionRobotApplication
        - WrongRegionSimulationApplication
    SimulationTimeMillis:
      type: integer
    DataSources:
      type: array
      items:
        $ref: '#/components/schemas/DataSource'
    VPCConfigResponse:
      type: object
      properties:
        subnets:
          $ref: '#/components/schemas/Subnets'
          description: A list of subnet IDs associated with the simulation job.
        securityGroups:
          $ref: '#/components/schemas/SecurityGroups'
          description: A list of security group IDs associated with the simulation job.
        vpcId:
          $ref: '#/components/schemas/GenericString'
          description: The VPC ID associated with your simulation job.
        assignPublicIp:
          $ref: '#/components/schemas/Boolean'
          description: A boolean indicating if a public IP was assigned.
      description: VPC configuration associated with your simulation job.
    S3KeyOutputs:
      type: array
      items:
        $ref: '#/components/schemas/S3KeyOutput'
    DataSource:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the data source.
        s3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket where the data files are located.
        s3Keys:
          $ref: '#/components/schemas/S3KeyOutputs'
          description: The list of S3 keys identifying the data source files.
      description: Information about a data source.
    S3Keys:
      type: array
      items:
        $ref: '#/components/schemas/S3Key'
      minItems: 1
      maxItems: 100
    DataSourceNames:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    DeleteFleetRequest:
      type: object
      required:
        - fleet
      title: DeleteFleetRequest
      properties:
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
    DeleteRobotApplicationRequest:
      type: object
      required:
        - application
      title: DeleteRobotApplicationRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the the robot application.
        applicationVersion:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application to delete.
    DeleteRobotRequest:
      type: object
      required:
        - robot
      title: DeleteRobotRequest
      properties:
        robot:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
    DeleteSimulationApplicationRequest:
      type: object
      required:
        - application
      title: DeleteSimulationApplicationRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application to delete.
        applicationVersion:
          $ref: '#/components/schemas/Version'
          description: The version of the simulation application to delete.
    DeploymentVersion:
      type: string
      pattern: '[0-9]*'
      minLength: 1
      maxLength: 255
    DeploymentLaunchConfig:
      type: object
      required:
        - packageName
        - launchFile
      properties:
        packageName:
          $ref: '#/components/schemas/Command'
          description: The package name.
        preLaunchFile:
          $ref: '#/components/schemas/Path'
          description: The deployment pre-launch file. This file will be executed prior to the launch file.
        launchFile:
          $ref: '#/components/schemas/Command'
          description: The launch file name.
        postLaunchFile:
          $ref: '#/components/schemas/Path'
          description: The deployment post-launch file. This file will be executed after the launch file.
        environmentVariables:
          $ref: '#/components/schemas/EnvironmentVariableMap'
          description: An array of key/value pairs specifying environment variables for the robot application
      description: Configuration information for a deployment launch.
    DeploymentJob:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the deployment job.
        deploymentApplicationConfigs:
          $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        deploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: The deployment configuration.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: A short description of the reason why the deployment job failed.
        failureCode:
          $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: The deployment job failure code.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the deployment job was created.'
      description: Information about a deployment job.
    DeploymentJobs:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentJob'
      minItems: 0
      maxItems: 200
    Path:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    EnvironmentVariableMap:
      type: object
      minProperties: 0
      maxProperties: 16
      additionalProperties:
        $ref: '#/components/schemas/EnvironmentVariableValue'
    DeregisterRobotRequest:
      type: object
      required:
        - fleet
        - robot
      title: DeregisterRobotRequest
      properties:
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
    DescribeDeploymentJobRequest:
      type: object
      required:
        - job
      title: DescribeDeploymentJobRequest
      properties:
        job:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
    RobotDeploymentSummary:
      type: array
      items:
        $ref: '#/components/schemas/RobotDeployment'
    DescribeFleetRequest:
      type: object
      required:
        - fleet
      title: DescribeFleetRequest
      properties:
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
    Robots:
      type: array
      items:
        $ref: '#/components/schemas/Robot'
      minItems: 0
      maxItems: 1000
    DescribeRobotApplicationRequest:
      type: object
      required:
        - application
      title: DescribeRobotApplicationRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        applicationVersion:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application to describe.
    DescribeRobotRequest:
      type: object
      required:
        - robot
      title: DescribeRobotRequest
      properties:
        robot:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot to be described.
    RobotStatus:
      type: string
      enum:
        - Available
        - Registered
        - PendingNewDeployment
        - Deploying
        - Failed
        - InSync
        - NoResponse
    DescribeSimulationApplicationRequest:
      type: object
      required:
        - application
      title: DescribeSimulationApplicationRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        applicationVersion:
          $ref: '#/components/schemas/Version'
          description: The version of the simulation application to describe.
    DescribeSimulationJobBatchRequest:
      type: object
      required:
        - batch
      title: DescribeSimulationJobBatchRequest
      properties:
        batch:
          $ref: '#/components/schemas/Arn'
          description: The id of the batch to describe.
    SimulationJobBatchStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Failed
        - Completed
        - Canceled
        - Canceling
        - Completing
        - TimingOut
        - TimedOut
    SimulationJobBatchErrorCode:
      type: string
      enum:
        - InternalServiceError
    FailedCreateSimulationJobRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedCreateSimulationJobRequest'
    SimulationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJobSummary'
      minItems: 0
      maxItems: 100
    DescribeSimulationJobRequest:
      type: object
      required:
        - job
      title: DescribeSimulationJobRequest
      properties:
        job:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job to be described.
    NetworkInterface:
      type: object
      properties:
        networkInterfaceId:
          $ref: '#/components/schemas/GenericString'
          description: The ID of the network interface.
        privateIpAddress:
          $ref: '#/components/schemas/GenericString'
          description: The IPv4 address of the network interface within the subnet.
        publicIpAddress:
          $ref: '#/components/schemas/GenericString'
          description: The IPv4 public address of the network interface.
      description: Describes a network interface.
    EnvironmentVariableKey:
      type: string
      pattern: '[A-Z_][A-Z0-9_]*'
      minLength: 1
      maxLength: 1024
    EnvironmentVariableValue:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    FailedAt:
      type: string
      format: date-time
    FailedCreateSimulationJobRequest:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/SimulationJobRequest'
          description: The simulation job request.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: The failure reason of the simulation job request.
        failureCode:
          $ref: '#/components/schemas/SimulationJobErrorCode'
          description: The failure code.
        failedAt:
          $ref: '#/components/schemas/FailedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job batch failed.'
      description: Information about a failed create simulation job request.
    FilterValues:
      type: array
      items:
        $ref: '#/components/schemas/Name'
      minItems: 1
      maxItems: 1
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
      minItems: 1
      maxItems: 1
    Fleet:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the fleet was created.'
        lastDeploymentStatus:
          $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the last fleet deployment.
        lastDeploymentJob:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment.
      description: Information about a fleet.
    Fleets:
      type: array
      items:
        $ref: '#/components/schemas/Fleet'
      minItems: 0
      maxItems: 200
    GenericInteger:
      type: integer
    Integer:
      type: integer
    PortForwardingConfig:
      type: object
      properties:
        portMappings:
          $ref: '#/components/schemas/PortMappingList'
          description: The port mappings for the configuration.
      description: Configuration information for port forwarding.
    LaunchConfig:
      type: object
      required:
        - packageName
        - launchFile
      properties:
        packageName:
          $ref: '#/components/schemas/Command'
          description: The package name.
        launchFile:
          $ref: '#/components/schemas/Command'
          description: The launch file name.
        environmentVariables:
          $ref: '#/components/schemas/EnvironmentVariableMap'
          description: The environment variables for the application launch.
        portForwardingConfig:
          $ref: '#/components/schemas/PortForwardingConfig'
          description: The port forwarding configuration.
        streamUI:
          $ref: '#/components/schemas/Boolean'
          description: 'Boolean indicating whether a streaming session will be configured for the application. If <code>True</code>, AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and luanch the component. It must have a graphical user interface. '
      description: Information about a launch configuration.
    PaginationToken:
      type: string
      pattern: '[a-zA-Z0-9_.\-\/+=]*'
      minLength: 1
      maxLength: 2048
    MaxResults:
      type: integer
    ListDeploymentJobsRequest:
      type: object
      title: ListDeploymentJobsRequest
      properties:
        filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>InProgress</code> or the status <code>Pending</code>.</p>'
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListDeploymentJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'When this parameter is used, <code>ListDeploymentJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListDeploymentJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListDeploymentJobs</code> returns up to 200 results and a <code>nextToken</code> value if applicable. '
    ListFleetsRequest:
      type: object
      title: ListFleetsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListFleets</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'When this parameter is used, <code>ListFleets</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFleets</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListFleets</code> returns up to 200 results and a <code>nextToken</code> value if applicable. '
        filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
    VersionQualifier:
      type: string
      pattern: ALL
      minLength: 1
      maxLength: 255
    ListRobotApplicationsRequest:
      type: object
      title: ListRobotApplicationsRequest
      properties:
        versionQualifier:
          $ref: '#/components/schemas/VersionQualifier'
          description: The version qualifier of the robot application.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListRobotApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'When this parameter is used, <code>ListRobotApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobotApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
        filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
    RobotApplicationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/RobotApplicationSummary'
      minItems: 0
      maxItems: 100
    ListRobotsRequest:
      type: object
      title: ListRobotsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListRobots</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'When this parameter is used, <code>ListRobots</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobots</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListRobots</code> returns up to 200 results and a <code>nextToken</code> value if applicable. '
        filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Registered</code> or the status <code>Available</code>.</p>'
    ListSimulationApplicationsRequest:
      type: object
      title: ListSimulationApplicationsRequest
      properties:
        versionQualifier:
          $ref: '#/components/schemas/VersionQualifier'
          description: The version qualifier of the simulation application.
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationApplications</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'When this parameter is used, <code>ListSimulationApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. '
        filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Optional list of filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>'
    SimulationApplicationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SimulationApplicationSummary'
      minItems: 0
      maxItems: 100
    ListSimulationJobBatchesRequest:
      type: object
      title: ListSimulationJobBatchesRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobBatches</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. '
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'When this parameter is used, <code>ListSimulationJobBatches</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobBatches</code> request with the returned <code>nextToken</code> value. '
        filters:
          $ref: '#/components/schemas/Filters'
          description: Optional filters to limit results.
    SimulationJobBatchSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJobBatchSummary'
    ListSimulationJobsRequest:
      type: object
      title: ListSimulationJobsRequest
      properties:
        nextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListSimulationJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'When this parameter is used, <code>ListSimulationJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListSimulationJobs</code> returns up to 1000 results and a <code>nextToken</code> value if applicable. '
        filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>'
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    NonEmptyString:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    NonSystemPort:
      type: integer
      minimum: 1024
      maximum: 65535
    PercentDone:
      type: number
      format: float
      minimum: 0
      maximum: 100
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    PortMappingList:
      type: array
      items:
        $ref: '#/components/schemas/PortMapping'
      minItems: 0
      maxItems: 10
    PortMapping:
      type: object
      required:
        - jobPort
        - applicationPort
      properties:
        jobPort:
          $ref: '#/components/schemas/Port'
          description: 'The port number on the simulation job instance to use as a remote connection point. '
        applicationPort:
          $ref: '#/components/schemas/NonSystemPort'
          description: The port number on the application.
        enableOnPublicIp:
          $ref: '#/components/schemas/Boolean'
          description: A Boolean indicating whether to enable this port mapping on public IP.
      description: An object representing a port mapping.
    RobotDeploymentStep:
      type: string
      enum:
        - Validating
        - DownloadingExtracting
        - ExecutingDownloadCondition
        - ExecutingPreLaunch
        - Launching
        - ExecutingPostLaunch
        - Finished
    ProgressDetail:
      type: object
      properties:
        currentProgress:
          $ref: '#/components/schemas/RobotDeploymentStep'
          description: <p>The current progress status.</p> <dl> <dt>Validating</dt> <dd> <p>Validating the deployment.</p> </dd> <dt>DownloadingExtracting</dt> <dd> <p>Downloading and extracting the bundle on the robot.</p> </dd> <dt>ExecutingPreLaunch</dt> <dd> <p>Executing pre-launch script(s) if provided.</p> </dd> <dt>Launching</dt> <dd> <p>Launching the robot application.</p> </dd> <dt>ExecutingPostLaunch</dt> <dd> <p>Executing post-launch script(s) if provided.</p> </dd> <dt>Finished</dt> <dd> <p>Deployment is complete.</p> </dd> </dl>
        percentDone:
          $ref: '#/components/schemas/PercentDone'
          description: Precentage of the step that is done. This currently only applies to the <code>Downloading/Extracting</code> step of the deployment. It is empty for other steps.
        estimatedTimeRemainingSeconds:
          $ref: '#/components/schemas/GenericInteger'
          description: Estimated amount of time in seconds remaining in the step. This currently only applies to the <code>Downloading/Extracting</code> step of the deployment. It is empty for other steps.
        targetResource:
          $ref: '#/components/schemas/GenericString'
          description: The Amazon Resource Name (ARN) of the deployment job.
      description: Information about the progress of a deployment job.
    RegisterRobotRequest:
      type: object
      required:
        - fleet
        - robot
      title: RegisterRobotRequest
      properties:
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
    RestartSimulationJobRequest:
      type: object
      required:
        - job
      title: RestartSimulationJobRequest
      properties:
        job:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
    Robot:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot.
        fleetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          $ref: '#/components/schemas/RobotStatus'
          description: The status of the robot.
        greenGrassGroupId:
          $ref: '#/components/schemas/Id'
          description: The Greengrass group associated with the robot.
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot was created.'
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The architecture of the robot.
        lastDeploymentJob:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment.
      description: Information about a robot.
    RobotApplicationNames:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    RobotApplicationSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the robot application was last updated.'
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about a robot software suite (ROS distribution).
      description: Summary information for a robot application.
    RobotDeployment:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The robot deployment Amazon Resource Name (ARN).
        deploymentStartTime:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the deployment was started.'
        deploymentFinishTime:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the deployment finished.'
        status:
          $ref: '#/components/schemas/RobotStatus'
          description: The status of the robot deployment.
        progressDetail:
          $ref: '#/components/schemas/ProgressDetail'
          description: Information about how the deployment is progressing.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: A short description of the reason why the robot deployment failed.
        failureCode:
          $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: The robot deployment failure code.
      description: Information about a robot deployment.
    S3Etag:
      type: string
    S3KeyOutput:
      type: object
      properties:
        s3Key:
          $ref: '#/components/schemas/S3Key'
          description: The S3 key.
        etag:
          $ref: '#/components/schemas/S3Etag'
          description: The etag for the object.
      description: Information about S3 keys.
    SimulationApplicationNames:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    SimulationApplicationSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation application.
        version:
          $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation application was last updated.'
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about a robot software suite (ROS distribution).
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: Information about a simulation software suite.
      description: Summary information for a simulation application.
    SimulationJob:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation job.
        status:
          $ref: '#/components/schemas/SimulationJobStatus'
          description: Status of the simulation job.
        lastStartedAt:
          $ref: '#/components/schemas/LastStartedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job was last started.'
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
        failureBehavior:
          $ref: '#/components/schemas/FailureBehavior'
          description: <p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Restart the simulation job in the same host instance.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>
        failureCode:
          $ref: '#/components/schemas/SimulationJobErrorCode'
          description: The failure code of the simulation job if it failed.
        failureReason:
          $ref: '#/components/schemas/GenericString'
          description: The reason why the simulation job failed.
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: A unique identifier for this <code>SimulationJob</code> request.
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
          description: Location for output files generated by the simulation job.
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          $ref: '#/components/schemas/JobDuration'
          description: 'The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.'
        simulationTimeMillis:
          $ref: '#/components/schemas/SimulationTimeMillis'
          description: The simulation job execution duration in milliseconds.
        iamRole:
          $ref: '#/components/schemas/IamRole'
          description: 'The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. '
        robotApplications:
          $ref: '#/components/schemas/RobotApplicationConfigs'
          description: A list of robot applications.
        simulationApplications:
          $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: A list of simulation applications.
        dataSources:
          $ref: '#/components/schemas/DataSources'
          description: The data sources for the simulation job.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the simulation job.
        vpcConfig:
          $ref: '#/components/schemas/VPCConfigResponse'
          description: VPC configuration information.
        networkInterface:
          $ref: '#/components/schemas/NetworkInterface'
          description: Information about a network interface.
      description: Information about a simulation job.
    SimulationJobBatchSummary:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the batch.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job batch was last updated.'
        createdAt:
          $ref: '#/components/schemas/CreatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job batch was created.'
        status:
          $ref: '#/components/schemas/SimulationJobBatchStatus'
          description: '<p>The status of the simulation job batch.</p> <dl> <dt>Pending</dt> <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt> <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt> <dd> <p>The simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like <code>InternalServiceError</code>). See <code>failureCode</code> and <code>failureReason</code> for more information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to <code>InternalServiceError</code> and (2) when all created simulation jobs have reached a terminal state (for example, <code>Completed</code> or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt> <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt> <dd> <p>The simulation job batch is timing out.</p> <p>If a batch timing out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), the batch status will be <code>Failed</code>. If there are no such failing request, the batch status will be <code>TimedOut</code>. </p> </dd> <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p> </dd> </dl>'
        failedRequestCount:
          $ref: '#/components/schemas/Integer'
          description: The number of failed simulation job requests.
        pendingRequestCount:
          $ref: '#/components/schemas/Integer'
          description: The number of pending simulation job requests.
        createdRequestCount:
          $ref: '#/components/schemas/Integer'
          description: The number of created simulation job requests.
      description: Information about a simulation job batch.
    SimulationJobSummary:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        lastUpdatedAt:
          $ref: '#/components/schemas/LastUpdatedAt'
          description: 'The time, in milliseconds since the epoch, when the simulation job was last updated.'
        name:
          $ref: '#/components/schemas/Name'
          description: The name of the simulation job.
        status:
          $ref: '#/components/schemas/SimulationJobStatus'
          description: The status of the simulation job.
        simulationApplicationNames:
          $ref: '#/components/schemas/SimulationApplicationNames'
          description: A list of simulation job simulation application names.
        robotApplicationNames:
          $ref: '#/components/schemas/RobotApplicationNames'
          description: A list of simulation job robot application names.
        dataSourceNames:
          $ref: '#/components/schemas/DataSourceNames'
          description: The names of the data sources.
      description: Summary information for a simulation job.
    Source:
      type: object
      properties:
        s3Bucket:
          $ref: '#/components/schemas/S3Bucket'
          description: The s3 bucket name.
        s3Key:
          $ref: '#/components/schemas/S3Key'
          description: The s3 object key.
        etag:
          $ref: '#/components/schemas/S3Etag'
          description: A hash of the object specified by <code>s3Bucket</code> and <code>s3Key</code>.
        architecture:
          $ref: '#/components/schemas/Architecture'
          description: The taget processor architecture for the application.
      description: Information about a source.
    StartSimulationJobBatchRequest:
      type: object
      required:
        - createSimulationJobRequests
      title: StartSimulationJobBatchRequest
      properties:
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        batchPolicy:
          $ref: '#/components/schemas/BatchPolicy'
          description: The batch policy.
        createSimulationJobRequests:
          $ref: '#/components/schemas/CreateSimulationJobRequests'
          description: A list of simulation job requests to create in the batch.
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the deployment job batch.
    SyncDeploymentJobRequest:
      type: object
      required:
        - clientRequestToken
        - fleet
      title: SyncDeploymentJobRequest
      properties:
        clientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
          description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'
        fleet:
          $ref: '#/components/schemas/Arn'
          description: The target fleet for the synchronization.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      required:
        - tags
      title: TagResourceRequest
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached to the resource.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateRobotApplicationRequest:
      type: object
      required:
        - application
        - sources
        - robotSoftwareSuite
      title: UpdateRobotApplicationRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the robot application.
        sources:
          $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the robot application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite (ROS distribution) used by the robot application.
        currentRevisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id for the robot application.
    UpdateSimulationApplicationRequest:
      type: object
      required:
        - application
        - sources
        - simulationSoftwareSuite
        - robotSoftwareSuite
      title: UpdateSimulationApplicationRequest
      properties:
        application:
          $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        sources:
          $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite (ROS distribution).
        renderingEngine:
          $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        currentRevisionId:
          $ref: '#/components/schemas/RevisionId'
          description: The revision id for the robot application.
security:
  - hmac: []
