openapi: 3.0.0
info:
  version: '2016-01-14'
  x-release: v4
  title: AWSMarketplace Metering
  description: '<fullname>AWS Marketplace Metering Service</fullname> <p>This reference provides descriptions of the low-level AWS Marketplace Metering Service API.</p> <p>AWS Marketplace sellers can use this API to submit usage data for custom usage dimensions.</p> <p> <b>Submitting Metering Records</b> </p> <ul> <li> <p> <i>MeterUsage</i>- Submits the metering record for a Marketplace product. MeterUsage is called from an EC2 instance or a container running on EKS or ECS.</p> </li> <li> <p> <i>BatchMeterUsage</i>- Submits the metering record for a set of customers. BatchMeterUsage is called from a software-as-a-service (SaaS) application.</p> </li> </ul> <p> <b>Accepting New Customers</b> </p> <ul> <li> <p> <i>ResolveCustomer</i>- Called by a SaaS application during the registration process. When a buyer visits your website during the registration process, the buyer submits a Registration Token through the browser. The Registration Token is resolved through this API to obtain a CustomerIdentifier and Product Code.</p> </li> </ul> <p> <b>Entitlement and Metering for Paid Container Products</b> </p> <ul> <li> <p> Paid container software products sold through AWS Marketplace must integrate with the AWS Marketplace Metering Service and call the RegisterUsage operation for software entitlement and metering. Free and BYOL products for Amazon ECS or Amazon EKS aren''t required to call RegisterUsage, but you can do so if you want to receive usage data in your seller reports. For more information on using the RegisterUsage operation, see <a href="https://docs.aws.amazon.com/marketplace/latest/userguide/container-based-products.html">Container-Based Products</a>. </p> </li> </ul> <p>BatchMeterUsage API calls are captured by AWS CloudTrail. You can use Cloudtrail to verify that the SaaS metering records that you sent are accurate by searching for records with the eventName of BatchMeterUsage. You can also use CloudTrail to audit records over time. For more information, see the <i> <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html">AWS CloudTrail User Guide</a> </i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: meteringmarketplace
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/meteringmarketplace-2016-01-14.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/marketplace/'
servers:
  - url: 'http://metering.marketplace.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWSMarketplace Metering multi-region endpoint
  - url: 'https://metering.marketplace.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWSMarketplace Metering multi-region endpoint
  - url: 'http://metering.marketplace.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSMarketplace Metering endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://metering.marketplace.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSMarketplace Metering endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=AWSMPMeteringService.BatchMeterUsage':
    post:
      operationId: BatchMeterUsage
      description: '<p>BatchMeterUsage is called from a SaaS application listed on the AWS Marketplace to post metering records for a set of customers.</p> <p>For identical requests, the API is idempotent; requests can be retried with the same records or a subset of the input records.</p> <p>Every request to BatchMeterUsage is for one product. If you need to meter usage for multiple products, you must make multiple calls to BatchMeterUsage.</p> <p>BatchMeterUsage can process up to 25 UsageRecords at a time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchMeterUsageResult'
        '480':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '481':
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidProductCodeException'
        '482':
          description: InvalidUsageDimensionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUsageDimensionException'
        '483':
          description: InvalidCustomerIdentifierException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCustomerIdentifierException'
        '484':
          description: TimestampOutOfBoundsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimestampOutOfBoundsException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: DisabledApiException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledApiException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchMeterUsageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.BatchMeterUsage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSMPMeteringService.MeterUsage':
    post:
      operationId: MeterUsage
      description: '<p>API to emit metering records. For identical requests, the API is idempotent. It simply returns the metering record ID.</p> <p>MeterUsage is authenticated on the buyer''s AWS account using credentials from the EC2 instance, ECS task, or EKS pod.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterUsageResult'
        '480':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '481':
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidProductCodeException'
        '482':
          description: InvalidUsageDimensionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUsageDimensionException'
        '483':
          description: InvalidEndpointRegionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEndpointRegionException'
        '484':
          description: TimestampOutOfBoundsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimestampOutOfBoundsException'
        '485':
          description: DuplicateRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequestException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '487':
          description: CustomerNotEntitledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNotEntitledException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterUsageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.MeterUsage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSMPMeteringService.RegisterUsage':
    post:
      operationId: RegisterUsage
      description: '<p>Paid container software products sold through AWS Marketplace must integrate with the AWS Marketplace Metering Service and call the RegisterUsage operation for software entitlement and metering. Free and BYOL products for Amazon ECS or Amazon EKS aren''t required to call RegisterUsage, but you may choose to do so if you would like to receive usage data in your seller reports. The sections below explain the behavior of RegisterUsage. RegisterUsage performs two primary functions: metering and entitlement.</p> <ul> <li> <p> <i>Entitlement</i>: RegisterUsage allows you to verify that the customer running your paid software is subscribed to your product on AWS Marketplace, enabling you to guard against unauthorized use. Your container image that integrates with RegisterUsage is only required to guard against unauthorized use at container startup, as such a CustomerNotSubscribedException/PlatformNotSupportedException will only be thrown on the initial call to RegisterUsage. Subsequent calls from the same Amazon ECS task instance (e.g. task-id) or Amazon EKS pod will not throw a CustomerNotSubscribedException, even if the customer unsubscribes while the Amazon ECS task or Amazon EKS pod is still running.</p> </li> <li> <p> <i>Metering</i>: RegisterUsage meters software use per ECS task, per hour, or per pod for Amazon EKS with usage prorated to the second. A minimum of 1 minute of usage applies to tasks that are short lived. For example, if a customer has a 10 node Amazon ECS or Amazon EKS cluster and a service configured as a Daemon Set, then Amazon ECS or Amazon EKS will launch a task on all 10 cluster nodes and the customer will be charged: (10 * hourly_rate). Metering for software use is automatically handled by the AWS Marketplace Metering Control Plane -- your software is not required to perform any metering specific actions, other than call RegisterUsage once for metering of software use to commence. The AWS Marketplace Metering Control Plane will also continue to bill customers for running ECS tasks and Amazon EKS pods, regardless of the customers subscription state, removing the need for your software to perform entitlement checks at runtime.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUsageResult'
        '480':
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidProductCodeException'
        '481':
          description: InvalidRegionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRegionException'
        '482':
          description: InvalidPublicKeyVersionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPublicKeyVersionException'
        '483':
          description: PlatformNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformNotSupportedException'
        '484':
          description: CustomerNotEntitledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNotEntitledException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '486':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '487':
          description: DisabledApiException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledApiException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUsageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.RegisterUsage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSMPMeteringService.ResolveCustomer':
    post:
      operationId: ResolveCustomer
      description: 'ResolveCustomer is called by a SaaS application during the registration process. When a buyer visits your website during the registration process, the buyer submits a registration token through their browser. The registration token is resolved through this API to obtain a CustomerIdentifier and product code.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveCustomerResult'
        '480':
          description: InvalidTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTokenException'
        '481':
          description: ExpiredTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '484':
          description: DisabledApiException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledApiException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveCustomerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.ResolveCustomer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchMeterUsageResult:
      type: object
      properties:
        Results:
          $ref: '#/components/schemas/UsageRecordResultList'
          description: Contains all UsageRecords processed by BatchMeterUsage. These records were either honored by AWS Marketplace Metering Service or were invalid.
        UnprocessedRecords:
          $ref: '#/components/schemas/UsageRecordList'
          description: Contains all UsageRecords that were not processed by BatchMeterUsage. This is a list of UsageRecords. You can retry the failed request by making another BatchMeterUsage call with this list as input in the BatchMeterUsageRequest.
      description: Contains the UsageRecords processed by BatchMeterUsage and any records that have failed due to transient error.
    BatchMeterUsageRequest:
      type: object
      required:
        - UsageRecords
        - ProductCode
      title: BatchMeterUsageRequest
      properties:
        UsageRecords:
          $ref: '#/components/schemas/UsageRecordList'
          description: The set of UsageRecords to submit. BatchMeterUsage accepts up to 25 UsageRecords at a time.
        ProductCode:
          $ref: '#/components/schemas/ProductCode'
          description: Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.
      description: 'A BatchMeterUsageRequest contains UsageRecords, which indicate quantities of usage within your application.'
    InternalServiceErrorException: {}
    InvalidProductCodeException: {}
    InvalidUsageDimensionException: {}
    InvalidCustomerIdentifierException: {}
    TimestampOutOfBoundsException: {}
    ThrottlingException: {}
    DisabledApiException: {}
    MeterUsageResult:
      type: object
      properties:
        MeteringRecordId:
          $ref: '#/components/schemas/String'
          description: Metering record id.
    MeterUsageRequest:
      type: object
      required:
        - ProductCode
        - Timestamp
        - UsageDimension
      title: MeterUsageRequest
      properties:
        ProductCode:
          $ref: '#/components/schemas/ProductCode'
          description: Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: 'Timestamp, in UTC, for which the usage is being reported. Your application can meter usage for up to one hour in the past. Make sure the timestamp value is not before the start of the software usage.'
        UsageDimension:
          $ref: '#/components/schemas/UsageDimension'
          description: It will be one of the fcp dimension name provided during the publishing of the product.
        UsageQuantity:
          $ref: '#/components/schemas/UsageQuantity'
          description: Consumption value for the hour. Defaults to <code>0</code> if not specified.
        DryRun:
          $ref: '#/components/schemas/Boolean'
          description: 'Checks whether you have the permissions required for the action, but does not make the request. If you have the permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedException. Defaults to <code>false</code> if not specified.'
    InvalidEndpointRegionException: {}
    DuplicateRequestException: {}
    CustomerNotEntitledException: {}
    RegisterUsageResult:
      type: object
      properties:
        PublicKeyRotationTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: (Optional) Only included when public key version has expired
        Signature:
          $ref: '#/components/schemas/NonEmptyString'
          description: JWT Token
    RegisterUsageRequest:
      type: object
      required:
        - ProductCode
        - PublicKeyVersion
      title: RegisterUsageRequest
      properties:
        ProductCode:
          $ref: '#/components/schemas/ProductCode'
          description: Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.
        PublicKeyVersion:
          $ref: '#/components/schemas/VersionInteger'
          description: Public Key Version provided by AWS Marketplace
        Nonce:
          $ref: '#/components/schemas/Nonce'
          description: (Optional) To scope down the registration to a specific running software instance and guard against replay attacks.
    InvalidRegionException: {}
    InvalidPublicKeyVersionException: {}
    PlatformNotSupportedException: {}
    ResolveCustomerResult:
      type: object
      properties:
        CustomerIdentifier:
          $ref: '#/components/schemas/CustomerIdentifier'
          description: The CustomerIdentifier is used to identify an individual customer in your application. Calls to BatchMeterUsage require CustomerIdentifiers for each UsageRecord.
        ProductCode:
          $ref: '#/components/schemas/ProductCode'
          description: The product code is returned to confirm that the buyer is registering for your product. Subsequent BatchMeterUsage calls should be made using this product code.
      description: The result of the ResolveCustomer operation. Contains the CustomerIdentifier and product code.
    ResolveCustomerRequest:
      type: object
      required:
        - RegistrationToken
      title: ResolveCustomerRequest
      properties:
        RegistrationToken:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'When a buyer visits your website during the registration process, the buyer submits a registration token through the browser. The registration token is resolved to obtain a CustomerIdentifier and product code.'
      description: Contains input to the ResolveCustomer operation.
    InvalidTokenException: {}
    ExpiredTokenException: {}
    UsageRecordList:
      type: array
      items:
        $ref: '#/components/schemas/UsageRecord'
      minItems: 0
      maxItems: 25
    ProductCode:
      type: string
      minLength: 1
      maxLength: 255
    UsageRecordResultList:
      type: array
      items:
        $ref: '#/components/schemas/UsageRecordResult'
    Boolean:
      type: boolean
    CustomerIdentifier:
      type: string
      minLength: 1
      maxLength: 255
    Timestamp:
      type: string
      format: date-time
    UsageDimension:
      type: string
      minLength: 1
      maxLength: 255
    UsageQuantity:
      type: integer
      minimum: 0
      maximum: 2147483647
    String:
      type: string
    NonEmptyString:
      type: string
      pattern: \S+
    Nonce:
      type: string
      maxLength: 255
    VersionInteger:
      type: integer
      minimum: 1
    UsageRecord:
      type: object
      required:
        - Timestamp
        - CustomerIdentifier
        - Dimension
      properties:
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>Timestamp, in UTC, for which the usage is being reported.</p> <p>Your application can meter usage for up to one hour in the past. Make sure the timestamp value is not before the start of the software usage.</p>'
        CustomerIdentifier:
          $ref: '#/components/schemas/CustomerIdentifier'
          description: The CustomerIdentifier is obtained through the ResolveCustomer operation and represents an individual buyer in your application.
        Dimension:
          $ref: '#/components/schemas/UsageDimension'
          description: 'During the process of registering a product on AWS Marketplace, up to eight dimensions are specified. These represent different units of value in your application.'
        Quantity:
          $ref: '#/components/schemas/UsageQuantity'
          description: The quantity of usage consumed by the customer for the given dimension and time. Defaults to <code>0</code> if not specified.
      description: '<p>A UsageRecord indicates a quantity of usage for a given product, customer, dimension and time.</p> <p>Multiple requests with the same UsageRecords as input will be deduplicated to prevent double charges.</p>'
    UsageRecordResultStatus:
      type: string
      enum:
        - Success
        - CustomerNotSubscribed
        - DuplicateRecord
    UsageRecordResult:
      type: object
      properties:
        UsageRecord:
          $ref: '#/components/schemas/UsageRecord'
          description: The UsageRecord that was part of the BatchMeterUsage request.
        MeteringRecordId:
          $ref: '#/components/schemas/String'
          description: The MeteringRecordId is a unique identifier for this metering event.
        Status:
          $ref: '#/components/schemas/UsageRecordResultStatus'
          description: '<p>The UsageRecordResult Status indicates the status of an individual UsageRecord processed by BatchMeterUsage.</p> <ul> <li> <p> <i>Success</i>- The UsageRecord was accepted and honored by BatchMeterUsage.</p> </li> <li> <p> <i>CustomerNotSubscribed</i>- The CustomerIdentifier specified is not subscribed to your product. The UsageRecord was not honored. Future UsageRecords for this customer will fail until the customer subscribes to your product.</p> </li> <li> <p> <i>DuplicateRecord</i>- Indicates that the UsageRecord was invalid and not honored. A previously metered UsageRecord had the same customer, dimension, and time, but a different quantity.</p> </li> </ul>'
      description: A UsageRecordResult indicates the status of a given UsageRecord processed by BatchMeterUsage.
security:
  - hmac: []
