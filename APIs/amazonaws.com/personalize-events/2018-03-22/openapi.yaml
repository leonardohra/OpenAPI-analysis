openapi: 3.0.0
info:
  version: '2018-03-22'
  x-release: v4
  title: Amazon Personalize Events
  description: <p/>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: personalize-events
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/personalize-events-2018-03-22.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/personalize-events/'
servers:
  - url: 'http://personalize-events.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Personalize Events multi-region endpoint
  - url: 'https://personalize-events.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Personalize Events multi-region endpoint
  - url: 'http://personalize-events.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Personalize Events endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://personalize-events.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Personalize Events endpoint for China (Beijing) and China (Ningxia)
paths:
  /events:
    post:
      operationId: PutEvents
      description: Records user interaction event data.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - trackingId
                - sessionId
                - eventList
              properties:
                trackingId:
                  description: 'The tracking ID for the event. The ID is generated by a call to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html">CreateEventTracker</a> API.'
                  type: string
                  minLength: 1
                  maxLength: 256
                userId:
                  description: The user associated with the event.
                  type: string
                  minLength: 1
                  maxLength: 256
                sessionId:
                  description: The session ID associated with the user's visit.
                  type: string
                  minLength: 1
                  maxLength: 256
                eventList:
                  description: A list of event data from the session.
                  type: array
                  items:
                    $ref: '#/components/schemas/Event'
                  minItems: 1
                  maxItems: 10
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    Event:
      type: object
      required:
        - eventType
        - properties
        - sentAt
      properties:
        eventId:
          $ref: '#/components/schemas/StringType'
          description: 'An ID associated with the event. If an event ID is not provided, Amazon Personalize generates a unique ID for the event. An event ID is not used as an input to the model. Amazon Personalize uses the event ID to distinquish unique events. Any subsequent events after the first with the same event ID are not used in model training.'
        eventType:
          $ref: '#/components/schemas/StringType'
          description: The type of event. This property corresponds to the <code>EVENT_TYPE</code> field of the Interactions schema.
        properties:
          $ref: '#/components/schemas/EventPropertiesJSON'
          description: '<p>A string map of event-specific data that you might choose to record. For example, if a user rates a movie on your site, you might send the movie ID and rating, and the number of movie ratings made by the user.</p> <p>Each item in the map consists of a key-value pair. For example,</p> <p> <code>{"itemId": "movie1"}</code> </p> <p> <code>{"itemId": "movie2", "eventValue": "4.5"}</code> </p> <p> <code>{"itemId": "movie3", "eventValue": "3", "numberOfRatings": "12"}</code> </p> <p>The keys use camel case names that match the fields in the Interactions schema. The <code>itemId</code> and <code>eventValue</code> keys correspond to the <code>ITEM_ID</code> and <code>EVENT_VALUE</code> fields. In the above example, the <code>eventType</code> might be ''MovieRating'' with <code>eventValue</code> being the rating. The <code>numberOfRatings</code> would match the ''NUMBER_OF_RATINGS'' field defined in the Interactions schema.</p>'
        sentAt:
          $ref: '#/components/schemas/Date'
          description: The timestamp on the client side when the event occurred.
      description: Represents user interaction event information sent using the <code>PutEvents</code> API.
    InvalidInputException: {}
    Date:
      type: string
      format: date-time
    StringType:
      type: string
      minLength: 1
      maxLength: 256
    EventPropertiesJSON:
      type: string
      minLength: 1
      maxLength: 1024
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
      minItems: 1
      maxItems: 10
    UserId:
      type: string
      minLength: 1
      maxLength: 256
    PutEventsRequest:
      type: object
      required:
        - trackingId
        - sessionId
        - eventList
      title: PutEventsRequest
      properties:
        trackingId:
          $ref: '#/components/schemas/StringType'
          description: 'The tracking ID for the event. The ID is generated by a call to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html">CreateEventTracker</a> API.'
        userId:
          $ref: '#/components/schemas/UserId'
          description: The user associated with the event.
        sessionId:
          $ref: '#/components/schemas/StringType'
          description: The session ID associated with the user's visit.
        eventList:
          $ref: '#/components/schemas/EventList'
          description: A list of event data from the session.
security:
  - hmac: []
