openapi: 3.0.0
info:
  version: '2018-06-26'
  x-release: v4
  title: Amazon Forecast Service
  description: Provides APIs for creating and managing Amazon Forecast resources.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: forecast
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/forecast-2018-06-26.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/forecast/'
servers:
  - url: 'http://forecast.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Forecast Service multi-region endpoint
  - url: 'https://forecast.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Forecast Service multi-region endpoint
  - url: 'http://forecast.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Forecast Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://forecast.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Forecast Service endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=AmazonForecast.CreateDataset':
    post:
      operationId: CreateDataset
      description: '<p>Creates an Amazon Forecast dataset. The information about the dataset that you provide helps Forecast understand how to consume the data for model training. This includes the following:</p> <ul> <li> <p> <i> <code>DataFrequency</code> </i> - How frequently your historical time-series data is collected.</p> </li> <li> <p> <i> <code>Domain</code> </i> and <i> <code>DatasetType</code> </i> - Each dataset has an associated dataset domain and a type within the domain. Amazon Forecast provides a list of predefined domains and types within each domain. For each unique dataset domain and type within the domain, Amazon Forecast requires your data to include a minimum set of predefined fields.</p> </li> <li> <p> <i> <code>Schema</code> </i> - A schema specifies the fields in the dataset, including the field name and data type.</p> </li> </ul> <p>After creating a dataset, you import your training data into it and add the dataset to a dataset group. You use the dataset group to create a predictor. For more information, see <a>howitworks-datasets-groups</a>.</p> <p>To get a list of all your datasets, use the <a>ListDatasets</a> operation.</p> <p>For example Forecast datasets, see the <a href="https://github.com/aws-samples/amazon-forecast-samples/tree/master/data">Amazon Forecast Sample GitHub repository</a>.</p> <note> <p>The <code>Status</code> of a dataset must be <code>ACTIVE</code> before you can import training data. Use the <a>DescribeDataset</a> operation to get the status.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateDataset
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.CreateDatasetGroup':
    post:
      operationId: CreateDatasetGroup
      description: '<p>Creates a dataset group, which holds a collection of related datasets. You can add datasets to the dataset group when you create the dataset group, or later by using the <a>UpdateDatasetGroup</a> operation.</p> <p>After creating a dataset group and adding datasets, you use the dataset group when you create a predictor. For more information, see <a>howitworks-datasets-groups</a>.</p> <p>To get a list of all your datasets groups, use the <a>ListDatasetGroups</a> operation.</p> <note> <p>The <code>Status</code> of a dataset group must be <code>ACTIVE</code> before you can create use the dataset group to create a predictor. To get the status, use the <a>DescribeDatasetGroup</a> operation.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetGroupResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateDatasetGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.CreateDatasetImportJob':
    post:
      operationId: CreateDatasetImportJob
      description: '<p>Imports your training data to an Amazon Forecast dataset. You provide the location of your training data in an Amazon Simple Storage Service (Amazon S3) bucket and the Amazon Resource Name (ARN) of the dataset that you want to import the data to.</p> <p>You must specify a <a>DataSource</a> object that includes an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data. For more information, see <a>aws-forecast-iam-roles</a>.</p> <p>The training data must be in CSV format. The delimiter must be a comma (,).</p> <p>You can specify the path to a specific CSV file, the S3 bucket, or to a folder in the S3 bucket. For the latter two cases, Amazon Forecast imports all files up to the limit of 10,000 files.</p> <p>To get a list of all your dataset import jobs, filtered by specified criteria, use the <a>ListDatasetImportJobs</a> operation.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetImportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateDatasetImportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.CreateForecast':
    post:
      operationId: CreateForecast
      description: '<p>Creates a forecast for each item in the <code>TARGET_TIME_SERIES</code> dataset that was used to train the predictor. This is known as inference. To retrieve the forecast for a single item at low latency, use the operation. To export the complete forecast into your Amazon Simple Storage Service (Amazon S3) bucket, use the <a>CreateForecastExportJob</a> operation.</p> <p>The range of the forecast is determined by the <code>ForecastHorizon</code> value, which you specify in the <a>CreatePredictor</a> request, multiplied by the <code>DataFrequency</code> value, which you specify in the <a>CreateDataset</a> request. When you query a forecast, you can request a specific date range within the forecast.</p> <p>To get a list of all your forecasts, use the <a>ListForecasts</a> operation.</p> <note> <p>The forecasts generated by Amazon Forecast are in the same time zone as the dataset that was used to create the predictor.</p> </note> <p>For more information, see <a>howitworks-forecast</a>.</p> <note> <p>The <code>Status</code> of the forecast must be <code>ACTIVE</code> before you can query or export the forecast. Use the <a>DescribeForecast</a> operation to get the status.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateForecastResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateForecastRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateForecast
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.CreateForecastExportJob':
    post:
      operationId: CreateForecastExportJob
      description: '<p>Exports a forecast created by the <a>CreateForecast</a> operation to your Amazon Simple Storage Service (Amazon S3) bucket. The forecast file name will match the following conventions:</p> <p>&lt;ForecastExportJobName&gt;_&lt;ExportTimestamp&gt;_&lt;PageNumber&gt;</p> <p>where the &lt;ExportTimestamp&gt; component is in Java SimpleDateFormat (yyyy-MM-ddTHH-mm-ssZ).</p> <p>You must specify a <a>DataDestination</a> object that includes an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket. For more information, see <a>aws-forecast-iam-roles</a>.</p> <p>For more information, see <a>howitworks-forecast</a>.</p> <p>To get a list of all your forecast export jobs, use the <a>ListForecastExportJobs</a> operation.</p> <note> <p>The <code>Status</code> of the forecast export job must be <code>ACTIVE</code> before you can access the forecast in your Amazon S3 bucket. To get the status, use the <a>DescribeForecastExportJob</a> operation.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateForecastExportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateForecastExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateForecastExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.CreatePredictor':
    post:
      operationId: CreatePredictor
      description: '<p>Creates an Amazon Forecast predictor.</p> <p>In the request, you provide a dataset group and either specify an algorithm or let Amazon Forecast choose the algorithm for you using AutoML. If you specify an algorithm, you also can override algorithm-specific hyperparameters.</p> <p>Amazon Forecast uses the chosen algorithm to train a model using the latest version of the datasets in the specified dataset group. The result is called a predictor. You then generate a forecast using the <a>CreateForecast</a> operation.</p> <p>After training a model, the <code>CreatePredictor</code> operation also evaluates it. To see the evaluation metrics, use the <a>GetAccuracyMetrics</a> operation. Always review the evaluation metrics before deciding to use the predictor to generate a forecast.</p> <p>Optionally, you can specify a featurization configuration to fill and aggregate the data fields in the <code>TARGET_TIME_SERIES</code> dataset to improve model training. For more information, see <a>FeaturizationConfig</a>.</p> <p>For RELATED_TIME_SERIES datasets, <code>CreatePredictor</code> verifies that the <code>DataFrequency</code> specified when the dataset was created matches the <code>ForecastFrequency</code>. TARGET_TIME_SERIES datasets don''t have this restriction. Amazon Forecast also verifies the delimiter and timestamp format. For more information, see <a>howitworks-datasets-groups</a>.</p> <p> <b>AutoML</b> </p> <p>If you want Amazon Forecast to evaluate each algorithm and choose the one that minimizes the <code>objective function</code>, set <code>PerformAutoML</code> to <code>true</code>. The <code>objective function</code> is defined as the mean of the weighted p10, p50, and p90 quantile losses. For more information, see <a>EvaluationResult</a>.</p> <p>When AutoML is enabled, the following properties are disallowed:</p> <ul> <li> <p> <code>AlgorithmArn</code> </p> </li> <li> <p> <code>HPOConfig</code> </p> </li> <li> <p> <code>PerformHPO</code> </p> </li> <li> <p> <code>TrainingParameters</code> </p> </li> </ul> <p>To get a list of all of your predictors, use the <a>ListPredictors</a> operation.</p> <note> <p>Before you can use the predictor to create a forecast, the <code>Status</code> of the predictor must be <code>ACTIVE</code>, signifying that training has completed. To get the status, use the <a>DescribePredictor</a> operation.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePredictorResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePredictorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreatePredictor
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DeleteDataset':
    post:
      operationId: DeleteDataset
      description: Deletes an Amazon Forecast dataset that was created using the <a>CreateDataset</a> operation. You can only delete datasets that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get the status use the <a>DescribeDataset</a> operation.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteDataset
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DeleteDatasetGroup':
    post:
      operationId: DeleteDatasetGroup
      description: '<p>Deletes a dataset group created using the <a>CreateDatasetGroup</a> operation. You can only delete dataset groups that have a status of <code>ACTIVE</code>, <code>CREATE_FAILED</code>, or <code>UPDATE_FAILED</code>. To get the status, use the <a>DescribeDatasetGroup</a> operation.</p> <p>This operation deletes only the dataset group, not the datasets in the group.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteDatasetGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DeleteDatasetImportJob':
    post:
      operationId: DeleteDatasetImportJob
      description: 'Deletes a dataset import job created using the <a>CreateDatasetImportJob</a> operation. You can delete only dataset import jobs that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeDatasetImportJob</a> operation.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetImportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteDatasetImportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DeleteForecast':
    post:
      operationId: DeleteForecast
      description: '<p>Deletes a forecast created using the <a>CreateForecast</a> operation. You can delete only forecasts that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeForecast</a> operation.</p> <p>You can''t delete a forecast while it is being exported. After a forecast is deleted, you can no longer query the forecast.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteForecastRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteForecast
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DeleteForecastExportJob':
    post:
      operationId: DeleteForecastExportJob
      description: 'Deletes a forecast export job created using the <a>CreateForecastExportJob</a> operation. You can delete only export jobs that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeForecastExportJob</a> operation.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteForecastExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteForecastExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DeletePredictor':
    post:
      operationId: DeletePredictor
      description: 'Deletes a predictor created using the <a>CreatePredictor</a> operation. You can delete only predictor that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribePredictor</a> operation.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePredictorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeletePredictor
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DescribeDataset':
    post:
      operationId: DescribeDataset
      description: '<p>Describes an Amazon Forecast dataset created using the <a>CreateDataset</a> operation.</p> <p>In addition to listing the parameters specified in the <code>CreateDataset</code> request, this operation includes the following dataset properties:</p> <ul> <li> <p> <code>CreationTime</code> </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Status</code> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeDataset
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DescribeDatasetGroup':
    post:
      operationId: DescribeDatasetGroup
      description: '<p>Describes a dataset group created using the <a>CreateDatasetGroup</a> operation.</p> <p>In addition to listing the parameters provided in the <code>CreateDatasetGroup</code> request, this operation includes the following properties:</p> <ul> <li> <p> <code>DatasetArns</code> - The datasets belonging to the group.</p> </li> <li> <p> <code>CreationTime</code> </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Status</code> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetGroupResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeDatasetGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DescribeDatasetImportJob':
    post:
      operationId: DescribeDatasetImportJob
      description: '<p>Describes a dataset import job created using the <a>CreateDatasetImportJob</a> operation.</p> <p>In addition to listing the parameters provided in the <code>CreateDatasetImportJob</code> request, this operation includes the following properties:</p> <ul> <li> <p> <code>CreationTime</code> </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>DataSize</code> </p> </li> <li> <p> <code>FieldStatistics</code> </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an error occurred, information about the error.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDatasetImportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeDatasetImportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DescribeForecast':
    post:
      operationId: DescribeForecast
      description: '<p>Describes a forecast created using the <a>CreateForecast</a> operation.</p> <p>In addition to listing the properties provided in the <code>CreateForecast</code> request, this operation lists the following properties:</p> <ul> <li> <p> <code>DatasetGroupArn</code> - The dataset group that provided the training data.</p> </li> <li> <p> <code>CreationTime</code> </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an error occurred, information about the error.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeForecastResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeForecastRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeForecast
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DescribeForecastExportJob':
    post:
      operationId: DescribeForecastExportJob
      description: '<p>Describes a forecast export job created using the <a>CreateForecastExportJob</a> operation.</p> <p>In addition to listing the properties provided by the user in the <code>CreateForecastExportJob</code> request, this operation lists the following properties:</p> <ul> <li> <p> <code>CreationTime</code> </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an error occurred, information about the error.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeForecastExportJobResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeForecastExportJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeForecastExportJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.DescribePredictor':
    post:
      operationId: DescribePredictor
      description: '<p>Describes a predictor created using the <a>CreatePredictor</a> operation.</p> <p>In addition to listing the properties provided in the <code>CreatePredictor</code> request, this operation lists the following properties:</p> <ul> <li> <p> <code>DatasetImportJobArns</code> - The dataset import jobs used to import training data.</p> </li> <li> <p> <code>AutoMLAlgorithmArns</code> - If AutoML is performed, the algorithms that were evaluated.</p> </li> <li> <p> <code>CreationTime</code> </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an error occurred, information about the error.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePredictorResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePredictorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribePredictor
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.GetAccuracyMetrics':
    post:
      operationId: GetAccuracyMetrics
      description: '<p>Provides metrics on the accuracy of the models that were trained by the <a>CreatePredictor</a> operation. Use metrics to see how well the model performed and to decide whether to use the predictor to generate a forecast. For more information, see <a>metrics</a>.</p> <p>This operation generates metrics for each backtest window that was evaluated. The number of backtest windows (<code>NumberOfBacktestWindows</code>) is specified using the <a>EvaluationParameters</a> object, which is optionally included in the <code>CreatePredictor</code> request. If <code>NumberOfBacktestWindows</code> isn''t specified, the number defaults to one.</p> <p>The parameters of the <code>filling</code> method determine which items contribute to the metrics. If you want all items to contribute, specify <code>zero</code>. If you want only those items that have complete data in the range being evaluated to contribute, specify <code>nan</code>. For more information, see <a>FeaturizationMethod</a>.</p> <note> <p>Before you can get accuracy metrics, the <code>Status</code> of the predictor must be <code>ACTIVE</code>, signifying that training has completed. To get the status, use the <a>DescribePredictor</a> operation.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccuracyMetricsResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccuracyMetricsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.GetAccuracyMetrics
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.ListDatasetGroups':
    post:
      operationId: ListDatasetGroups
      description: 'Returns a list of dataset groups created using the <a>CreateDatasetGroup</a> operation. For each dataset group, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). You can retrieve the complete set of properties by using the dataset group ARN with the <a>DescribeDatasetGroup</a> operation.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetGroupsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetGroupsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListDatasetGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.ListDatasetImportJobs':
    post:
      operationId: ListDatasetImportJobs
      description: 'Returns a list of dataset import jobs created using the <a>CreateDatasetImportJob</a> operation. For each import job, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). You can retrieve the complete set of properties by using the ARN with the <a>DescribeDatasetImportJob</a> operation. You can filter the list by providing an array of <a>Filter</a> objects.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetImportJobsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetImportJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListDatasetImportJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.ListDatasets':
    post:
      operationId: ListDatasets
      description: 'Returns a list of datasets created using the <a>CreateDataset</a> operation. For each dataset, a summary of its properties, including its Amazon Resource Name (ARN), is returned. To retrieve the complete set of properties, use the ARN with the <a>DescribeDataset</a> operation.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDatasetsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListDatasets
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.ListForecastExportJobs':
    post:
      operationId: ListForecastExportJobs
      description: 'Returns a list of forecast export jobs created using the <a>CreateForecastExportJob</a> operation. For each forecast export job, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). To retrieve the complete set of properties, use the ARN with the <a>DescribeForecastExportJob</a> operation. You can filter the list using an array of <a>Filter</a> objects.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListForecastExportJobsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListForecastExportJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListForecastExportJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.ListForecasts':
    post:
      operationId: ListForecasts
      description: 'Returns a list of forecasts created using the <a>CreateForecast</a> operation. For each forecast, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). To retrieve the complete set of properties, specify the ARN with the <a>DescribeForecast</a> operation. You can filter the list using an array of <a>Filter</a> objects.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListForecastsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListForecastsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListForecasts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.ListPredictors':
    post:
      operationId: ListPredictors
      description: 'Returns a list of predictors created using the <a>CreatePredictor</a> operation. For each predictor, this operation returns a summary of its properties, including its Amazon Resource Name (ARN). You can retrieve the complete set of properties by using the ARN with the <a>DescribePredictor</a> operation. You can filter the list using an array of <a>Filter</a> objects.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPredictorsResponse'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPredictorsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListPredictors
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonForecast.UpdateDatasetGroup':
    post:
      operationId: UpdateDatasetGroup
      description: <p>Replaces the datasets in a dataset group with the specified datasets.</p> <note> <p>The <code>Status</code> of the dataset group must be <code>ACTIVE</code> before you can use the dataset group to create a predictor. Use the <a>DescribeDatasetGroup</a> operation to get the status.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDatasetGroupResponse'
        '480':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.UpdateDatasetGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateDatasetResponse:
      type: object
      properties:
        DatasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
    CreateDatasetRequest:
      type: object
      required:
        - DatasetName
        - Domain
        - DatasetType
        - Schema
      title: CreateDatasetRequest
      properties:
        DatasetName:
          $ref: '#/components/schemas/Name'
          description: A name for the dataset.
        Domain:
          $ref: '#/components/schemas/Domain'
          description: '<p>The domain associated with the dataset. When you add a dataset to a dataset group, this value and the value specified for the <code>Domain</code> parameter of the <a>CreateDatasetGroup</a> operation must match.</p> <p>The <code>Domain</code> and <code>DatasetType</code> that you choose determine the fields that must be present in the training data that you import to the dataset. For example, if you choose the <code>RETAIL</code> domain and <code>TARGET_TIME_SERIES</code> as the <code>DatasetType</code>, Amazon Forecast requires <code>item_id</code>, <code>timestamp</code>, and <code>demand</code> fields to be present in your data. For more information, see <a>howitworks-datasets-groups</a>.</p>'
        DatasetType:
          $ref: '#/components/schemas/DatasetType'
          description: The dataset type. Valid values depend on the chosen <code>Domain</code>.
        DataFrequency:
          $ref: '#/components/schemas/Frequency'
          description: '<p>The frequency of data collection. This parameter is required for RELATED_TIME_SERIES datasets.</p> <p>Valid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, "D" indicates every day and "15min" indicates every 15 minutes.</p>'
        Schema:
          $ref: '#/components/schemas/Schema'
          description: 'The schema for the dataset. The schema attributes and their order must match the fields in your data. The dataset <code>Domain</code> and <code>DatasetType</code> that you choose determine the minimum required fields in your training data. For information about the required fields for a specific dataset domain and type, see <a>howitworks-domains-ds-types</a>.'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: An AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.
    InvalidInputException: {}
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    CreateDatasetGroupResponse:
      type: object
      properties:
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
    CreateDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupName
        - Domain
      title: CreateDatasetGroupRequest
      properties:
        DatasetGroupName:
          $ref: '#/components/schemas/Name'
          description: A name for the dataset group.
        Domain:
          $ref: '#/components/schemas/Domain'
          description: '<p>The domain associated with the dataset group. When you add a dataset to a dataset group, this value and the value specified for the <code>Domain</code> parameter of the <a>CreateDataset</a> operation must match.</p> <p>The <code>Domain</code> and <code>DatasetType</code> that you choose determine the fields that must be present in training data that you import to a dataset. For example, if you choose the <code>RETAIL</code> domain and <code>TARGET_TIME_SERIES</code> as the <code>DatasetType</code>, Amazon Forecast requires that <code>item_id</code>, <code>timestamp</code>, and <code>demand</code> fields are present in your data. For more information, see <a>howitworks-datasets-groups</a>.</p>'
        DatasetArns:
          $ref: '#/components/schemas/ArnList'
          description: An array of Amazon Resource Names (ARNs) of the datasets that you want to include in the dataset group.
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    CreateDatasetImportJobResponse:
      type: object
      properties:
        DatasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset import job.
    CreateDatasetImportJobRequest:
      type: object
      required:
        - DatasetImportJobName
        - DatasetArn
        - DataSource
      title: CreateDatasetImportJobRequest
      properties:
        DatasetImportJobName:
          $ref: '#/components/schemas/Name'
          description: 'The name for the dataset import job. We recommend including the current timestamp in the name, for example, <code>20190721DatasetImport</code>. This can help you avoid getting a <code>ResourceAlreadyExistsException</code> exception.'
        DatasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Forecast dataset that you want to import data to.
        DataSource:
          $ref: '#/components/schemas/DataSource'
          description: '<p>The location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data. The training data must be stored in an Amazon S3 bucket.</p> <p>If encryption is used, <code>DataSource</code> must include an AWS Key Management Service (KMS) key and the IAM role must allow Amazon Forecast permission to access the key. The KMS key and IAM role must match those specified in the <code>EncryptionConfig</code> parameter of the <a>CreateDataset</a> operation.</p>'
        TimestampFormat:
          $ref: '#/components/schemas/TimestampFormat'
          description: '<p>The format of timestamps in the dataset. The format that you specify depends on the <code>DataFrequency</code> specified when the dataset was created. The following formats are supported</p> <ul> <li> <p>"yyyy-MM-dd"</p> <p>For the following data frequencies: Y, M, W, and D</p> </li> <li> <p>"yyyy-MM-dd HH:mm:ss"</p> <p>For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for: Y, M, W, and D</p> </li> </ul> <p>If the format isn''t specified, Amazon Forecast expects the format to be "yyyy-MM-dd HH:mm:ss".</p>'
    CreateForecastResponse:
      type: object
      properties:
        ForecastArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the forecast.
    CreateForecastRequest:
      type: object
      required:
        - ForecastName
        - PredictorArn
      title: CreateForecastRequest
      properties:
        ForecastName:
          $ref: '#/components/schemas/Name'
          description: A name for the forecast.
        PredictorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the predictor to use to generate the forecast.
        ForecastTypes:
          $ref: '#/components/schemas/ForecastTypes'
          description: 'The quantiles at which probabilistic forecasts are generated. You can specify up to 5 quantiles per forecast. Accepted values include <code>0.01 to 0.99</code> (increments of .01 only) and <code>mean</code>. The mean forecast is different from the median (0.50) when the distribution is not symmetric (e.g. Beta, Negative Binomial). The default value is <code>["0.1", "0.5", "0.9"]</code>.'
    CreateForecastExportJobResponse:
      type: object
      properties:
        ForecastExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the export job.
    CreateForecastExportJobRequest:
      type: object
      required:
        - ForecastExportJobName
        - ForecastArn
        - Destination
      title: CreateForecastExportJobRequest
      properties:
        ForecastExportJobName:
          $ref: '#/components/schemas/Name'
          description: The name for the forecast export job.
        ForecastArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the forecast that you want to export.
        Destination:
          $ref: '#/components/schemas/DataDestination'
          description: '<p>The location where you want to save the forecast and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the location. The forecast must be exported to an Amazon S3 bucket.</p> <p>If encryption is used, <code>Destination</code> must include an AWS Key Management Service (KMS) key. The IAM role must allow Amazon Forecast permission to access the key.</p>'
    CreatePredictorResponse:
      type: object
      properties:
        PredictorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the predictor.
    CreatePredictorRequest:
      type: object
      required:
        - PredictorName
        - ForecastHorizon
        - InputDataConfig
        - FeaturizationConfig
      title: CreatePredictorRequest
      properties:
        PredictorName:
          $ref: '#/components/schemas/Name'
          description: A name for the predictor.
        AlgorithmArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The Amazon Resource Name (ARN) of the algorithm to use for model training. Required if <code>PerformAutoML</code> is not set to <code>true</code>.</p> <p class="title"> <b>Supported algorithms:</b> </p> <ul> <li> <p> <code>arn:aws:forecast:::algorithm/ARIMA</code> </p> </li> <li> <p> <code>arn:aws:forecast:::algorithm/Deep_AR_Plus</code> </p> <p>Supports hyperparameter optimization (HPO)</p> </li> <li> <p> <code>arn:aws:forecast:::algorithm/ETS</code> </p> </li> <li> <p> <code>arn:aws:forecast:::algorithm/NPTS</code> </p> </li> <li> <p> <code>arn:aws:forecast:::algorithm/Prophet</code> </p> </li> </ul>'
        ForecastHorizon:
          $ref: '#/components/schemas/Integer'
          description: '<p>Specifies the number of time-steps that the model is trained to predict. The forecast horizon is also called the prediction length.</p> <p>For example, if you configure a dataset for daily data collection (using the <code>DataFrequency</code> parameter of the <a>CreateDataset</a> operation) and set the forecast horizon to 10, the model returns predictions for 10 days.</p> <p>The maximum forecast horizon is the lesser of 500 time-steps or 1/3 of the TARGET_TIME_SERIES dataset length.</p>'
        PerformAutoML:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Whether to perform AutoML. When Amazon Forecast performs AutoML, it evaluates the algorithms it provides and chooses the best algorithm and configuration for your training dataset.</p> <p>The default value is <code>false</code>. In this case, you are required to specify an algorithm.</p> <p>Set <code>PerformAutoML</code> to <code>true</code> to have Amazon Forecast perform AutoML. This is a good option if you aren''t sure which algorithm is suitable for your training data. In this case, <code>PerformHPO</code> must be false.</p>'
        PerformHPO:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Whether to perform hyperparameter optimization (HPO). HPO finds optimal hyperparameter values for your training data. The process of performing HPO is known as running a hyperparameter tuning job.</p> <p>The default value is <code>false</code>. In this case, Amazon Forecast uses default hyperparameter values from the chosen algorithm.</p> <p>To override the default values, set <code>PerformHPO</code> to <code>true</code> and, optionally, supply the <a>HyperParameterTuningJobConfig</a> object. The tuning job specifies a metric to optimize, which hyperparameters participate in tuning, and the valid range for each tunable hyperparameter. In this case, you are required to specify an algorithm and <code>PerformAutoML</code> must be false.</p> <p>The following algorithm supports HPO:</p> <ul> <li> <p>DeepAR+</p> </li> </ul>'
        TrainingParameters:
          $ref: '#/components/schemas/TrainingParameters'
          description: 'The hyperparameters to override for model training. The hyperparameters that you can override are listed in the individual algorithms. For the list of supported algorithms, see <a>aws-forecast-choosing-recipes</a>.'
        EvaluationParameters:
          $ref: '#/components/schemas/EvaluationParameters'
          description: Used to override the default evaluation parameters of the specified algorithm. Amazon Forecast evaluates a predictor by splitting a dataset into training data and testing data. The evaluation parameters define how to perform the split and the number of iterations.
        HPOConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobConfig'
          description: '<p>Provides hyperparameter override values for the algorithm. If you don''t provide this parameter, Amazon Forecast uses default values. The individual algorithms specify which hyperparameters support hyperparameter optimization (HPO). For more information, see <a>aws-forecast-choosing-recipes</a>.</p> <p>If you included the <code>HPOConfig</code> object, you must set <code>PerformHPO</code> to true.</p>'
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Describes the dataset group that contains the data to use to train the predictor.
        FeaturizationConfig:
          $ref: '#/components/schemas/FeaturizationConfig'
          description: The featurization configuration.
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: An AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.
    DeleteDatasetRequest:
      type: object
      required:
        - DatasetArn
      title: DeleteDatasetRequest
      properties:
        DatasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset to delete.
    DeleteDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupArn
      title: DeleteDatasetGroupRequest
      properties:
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group to delete.
    DeleteDatasetImportJobRequest:
      type: object
      required:
        - DatasetImportJobArn
      title: DeleteDatasetImportJobRequest
      properties:
        DatasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset import job to delete.
    DeleteForecastRequest:
      type: object
      required:
        - ForecastArn
      title: DeleteForecastRequest
      properties:
        ForecastArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the forecast to delete.
    DeleteForecastExportJobRequest:
      type: object
      required:
        - ForecastExportJobArn
      title: DeleteForecastExportJobRequest
      properties:
        ForecastExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the forecast export job to delete.
    DeletePredictorRequest:
      type: object
      required:
        - PredictorArn
      title: DeletePredictorRequest
      properties:
        PredictorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the predictor to delete.
    DescribeDatasetResponse:
      type: object
      properties:
        DatasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DatasetName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset.
        Domain:
          $ref: '#/components/schemas/Domain'
          description: The domain associated with the dataset.
        DatasetType:
          $ref: '#/components/schemas/DatasetType'
          description: The dataset type.
        DataFrequency:
          $ref: '#/components/schemas/Frequency'
          description: '<p>The frequency of data collection.</p> <p>Valid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, "M" indicates every month and "30min" indicates every 30 minutes.</p>'
        Schema:
          $ref: '#/components/schemas/Schema'
          description: An array of <code>SchemaAttribute</code> objects that specify the dataset fields. Each <code>SchemaAttribute</code> specifies the name and data type of a field.
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li> </ul> <p>The <code>UPDATE</code> states apply while data is imported to the dataset from a call to the <a>CreateDatasetImportJob</a> operation and reflect the status of the dataset import job. For example, when the import job status is <code>CREATE_IN_PROGRESS</code>, the status of the dataset is <code>UPDATE_IN_PROGRESS</code>.</p> <note> <p>The <code>Status</code> of the dataset must be <code>ACTIVE</code> before you can import training data.</p> </note>'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the dataset was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'When you create a dataset, <code>LastModificationTime</code> is the same as <code>CreationTime</code>. While data is being imported to the dataset, <code>LastModificationTime</code> is the current time of the <code>DescribeDataset</code> call. After a <a>CreateDatasetImportJob</a> operation has finished, <code>LastModificationTime</code> is when the import job completed or failed.'
    DescribeDatasetRequest:
      type: object
      required:
        - DatasetArn
      title: DescribeDatasetRequest
      properties:
        DatasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
    DescribeDatasetGroupResponse:
      type: object
      properties:
        DatasetGroupName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset group.
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group.
        DatasetArns:
          $ref: '#/components/schemas/ArnList'
          description: An array of Amazon Resource Names (ARNs) of the datasets contained in the dataset group.
        Domain:
          $ref: '#/components/schemas/Domain'
          description: The domain associated with the dataset group.
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset group. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li> </ul> <p>The <code>UPDATE</code> states apply when you call the <a>UpdateDatasetGroup</a> operation.</p> <note> <p>The <code>Status</code> of the dataset group must be <code>ACTIVE</code> before you can use the dataset group to create a predictor.</p> </note>'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the dataset group was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'When the dataset group was created or last updated from a call to the <a>UpdateDatasetGroup</a> operation. While the dataset group is being updated, <code>LastModificationTime</code> is the current time of the <code>DescribeDatasetGroup</code> call.'
    DescribeDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupArn
      title: DescribeDatasetGroupRequest
      properties:
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
    DescribeDatasetImportJobResponse:
      type: object
      properties:
        DatasetImportJobName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset import job.
        DatasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset import job.
        DatasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset that the training data was imported to.
        TimestampFormat:
          $ref: '#/components/schemas/TimestampFormat'
          description: '<p>The format of timestamps in the dataset. The format that you specify depends on the <code>DataFrequency</code> specified when the dataset was created. The following formats are supported</p> <ul> <li> <p>"yyyy-MM-dd"</p> <p>For the following data frequencies: Y, M, W, and D</p> </li> <li> <p>"yyyy-MM-dd HH:mm:ss"</p> <p>For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for: Y, M, W, and D</p> </li> </ul>'
        DataSource:
          $ref: '#/components/schemas/DataSource'
          description: '<p>The location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data.</p> <p>If encryption is used, <code>DataSource</code> includes an AWS Key Management Service (KMS) key.</p>'
        FieldStatistics:
          $ref: '#/components/schemas/FieldStatistics'
          description: Statistical information about each field in the input data.
        DataSize:
          $ref: '#/components/schemas/Double'
          description: The size of the dataset in gigabytes (GB) after the import job has finished.
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset import job. The status is reflected in the status of the dataset. For example, when the import job status is <code>CREATE_IN_PROGRESS</code>, the status of the dataset is <code>UPDATE_IN_PROGRESS</code>. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> </ul>'
        Message:
          $ref: '#/components/schemas/Message'
          description: 'If an error occurred, an informational message about the error.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the dataset import job was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The last time that the dataset was modified. The time depends on the status of the job, as follows:</p> <ul> <li> <p> <code>CREATE_PENDING</code> - The same time as <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> - The current timestamp.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code> - When the job finished or failed.</p> </li> </ul>'
    DescribeDatasetImportJobRequest:
      type: object
      required:
        - DatasetImportJobArn
      title: DescribeDatasetImportJobRequest
      properties:
        DatasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset import job.
    DescribeForecastResponse:
      type: object
      properties:
        ForecastArn:
          $ref: '#/components/schemas/Arn'
          description: The forecast ARN as specified in the request.
        ForecastName:
          $ref: '#/components/schemas/Name'
          description: The name of the forecast.
        ForecastTypes:
          $ref: '#/components/schemas/ForecastTypes'
          description: The quantiles at which proababilistic forecasts were generated.
        PredictorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the predictor used to generate the forecast.
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group that provided the data used to train the predictor.
        Status:
          $ref: '#/components/schemas/String'
          description: '<p>The status of the forecast. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code> of the forecast must be <code>ACTIVE</code> before you can query or export the forecast.</p> </note>'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If an error occurred, an informational message about the error.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the forecast creation task was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Initially, the same as <code>CreationTime</code> (status is <code>CREATE_PENDING</code>). Updated when inference (creating the forecast) starts (status changed to <code>CREATE_IN_PROGRESS</code>), and when inference is complete (status changed to <code>ACTIVE</code>) or fails (status changed to <code>CREATE_FAILED</code>).'
    DescribeForecastRequest:
      type: object
      required:
        - ForecastArn
      title: DescribeForecastRequest
      properties:
        ForecastArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the forecast.
    DescribeForecastExportJobResponse:
      type: object
      properties:
        ForecastExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the forecast export job.
        ForecastExportJobName:
          $ref: '#/components/schemas/Name'
          description: The name of the forecast export job.
        ForecastArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the exported forecast.
        Destination:
          $ref: '#/components/schemas/DataDestination'
          description: The path to the Amazon Simple Storage Service (Amazon S3) bucket where the forecast is exported.
        Message:
          $ref: '#/components/schemas/Message'
          description: 'If an error occurred, an informational message about the error.'
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the forecast export job. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code> of the forecast export job must be <code>ACTIVE</code> before you can access the forecast in your S3 bucket.</p> </note>'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the forecast export job was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the last successful export job finished.
    DescribeForecastExportJobRequest:
      type: object
      required:
        - ForecastExportJobArn
      title: DescribeForecastExportJobRequest
      properties:
        ForecastExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the forecast export job.
    DescribePredictorResponse:
      type: object
      properties:
        PredictorArn:
          $ref: '#/components/schemas/Name'
          description: The ARN of the predictor.
        PredictorName:
          $ref: '#/components/schemas/Name'
          description: The name of the predictor.
        AlgorithmArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the algorithm used for model training.
        ForecastHorizon:
          $ref: '#/components/schemas/Integer'
          description: The number of time-steps of the forecast. The forecast horizon is also called the prediction length.
        PerformAutoML:
          $ref: '#/components/schemas/Boolean'
          description: Whether the predictor is set to perform AutoML.
        PerformHPO:
          $ref: '#/components/schemas/Boolean'
          description: Whether the predictor is set to perform hyperparameter optimization (HPO).
        TrainingParameters:
          $ref: '#/components/schemas/TrainingParameters'
          description: 'The default training parameters or overrides selected during model training. If using the AutoML algorithm or if HPO is turned on while using the DeepAR+ algorithms, the optimized values for the chosen hyperparameters are returned. For more information, see <a>aws-forecast-choosing-recipes</a>.'
        EvaluationParameters:
          $ref: '#/components/schemas/EvaluationParameters'
          description: Used to override the default evaluation parameters of the specified algorithm. Amazon Forecast evaluates a predictor by splitting a dataset into training data and testing data. The evaluation parameters define how to perform the split and the number of iterations.
        HPOConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobConfig'
          description: The hyperparameter override values for the algorithm.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: Describes the dataset group that contains the data to use to train the predictor.
        FeaturizationConfig:
          $ref: '#/components/schemas/FeaturizationConfig'
          description: The featurization configuration.
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: An AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key.
        PredictorExecutionDetails:
          $ref: '#/components/schemas/PredictorExecutionDetails'
          description: Details on the the status and results of the backtests performed to evaluate the accuracy of the predictor. You specify the number of backtests to perform when you call the operation.
        DatasetImportJobArns:
          $ref: '#/components/schemas/ArnList'
          description: An array of the ARNs of the dataset import jobs used to import training data for the predictor.
        AutoMLAlgorithmArns:
          $ref: '#/components/schemas/ArnList'
          description: 'When <code>PerformAutoML</code> is specified, the ARN of the chosen algorithm.'
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the predictor. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code> of the predictor must be <code>ACTIVE</code> before you can use the predictor to create a forecast.</p> </note>'
        Message:
          $ref: '#/components/schemas/Message'
          description: 'If an error occurred, an informational message about the error.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the model training task was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Initially, the same as <code>CreationTime</code> (when the status is <code>CREATE_PENDING</code>). This value is updated when training starts (when the status changes to <code>CREATE_IN_PROGRESS</code>), and when training has completed (when the status changes to <code>ACTIVE</code>) or fails (when the status changes to <code>CREATE_FAILED</code>).'
    DescribePredictorRequest:
      type: object
      required:
        - PredictorArn
      title: DescribePredictorRequest
      properties:
        PredictorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the predictor that you want information about.
    GetAccuracyMetricsResponse:
      type: object
      properties:
        PredictorEvaluationResults:
          $ref: '#/components/schemas/PredictorEvaluationResults'
          description: An array of results from evaluating the predictor.
    GetAccuracyMetricsRequest:
      type: object
      required:
        - PredictorArn
      title: GetAccuracyMetricsRequest
      properties:
        PredictorArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the predictor to get metrics for.
    ListDatasetGroupsResponse:
      type: object
      properties:
        DatasetGroups:
          $ref: '#/components/schemas/DatasetGroups'
          description: An array of objects that summarize each dataset group's properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request.'
    ListDatasetGroupsRequest:
      type: object
      title: ListDatasetGroupsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
    InvalidNextTokenException: {}
    ListDatasetImportJobsResponse:
      type: object
      properties:
        DatasetImportJobs:
          $ref: '#/components/schemas/DatasetImportJobs'
          description: An array of objects that summarize each dataset import job's properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request.'
    ListDatasetImportJobsRequest:
      type: object
      title: ListDatasetImportJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>An array of filters. For each filter, you provide a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the datasets that match the statement from the list, respectively. The match statement consists of a key and a value.</p> <p> <b>Filter properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>. To include the datasets that match the statement, specify <code>IS</code>. To exclude matching datasets, specify <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name of the parameter to filter on. Valid values are <code>DatasetArn</code> and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The value to match.</p> </li> </ul> <p>For example, to list all dataset import jobs whose status is ACTIVE, you specify the following filter:</p> <p> <code>"Filters": [ { "Condition": "IS", "Key": "Status", "Value": "ACTIVE" } ]</code> </p>'
    ListDatasetsResponse:
      type: object
      properties:
        Datasets:
          $ref: '#/components/schemas/Datasets'
          description: An array of objects that summarize each dataset's properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request.'
    ListDatasetsRequest:
      type: object
      title: ListDatasetsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
    ListForecastExportJobsResponse:
      type: object
      properties:
        ForecastExportJobs:
          $ref: '#/components/schemas/ForecastExportJobs'
          description: An array of objects that summarize each export job's properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request.'
    ListForecastExportJobsRequest:
      type: object
      title: ListForecastExportJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>An array of filters. For each filter, you provide a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the forecast export jobs that match the statement from the list, respectively. The match statement consists of a key and a value.</p> <p> <b>Filter properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>. To include the forecast export jobs that match the statement, specify <code>IS</code>. To exclude matching forecast export jobs, specify <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name of the parameter to filter on. Valid values are <code>ForecastArn</code> and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The value to match.</p> </li> </ul> <p>For example, to list all jobs that export a forecast named <i>electricityforecast</i>, specify the following filter:</p> <p> <code>"Filters": [ { "Condition": "IS", "Key": "ForecastArn", "Value": "arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityforecast" } ]</code> </p>'
    ListForecastsResponse:
      type: object
      properties:
        Forecasts:
          $ref: '#/components/schemas/Forecasts'
          description: An array of objects that summarize each forecast's properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request.'
    ListForecastsRequest:
      type: object
      title: ListForecastsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>An array of filters. For each filter, you provide a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the forecasts that match the statement from the list, respectively. The match statement consists of a key and a value.</p> <p> <b>Filter properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>. To include the forecasts that match the statement, specify <code>IS</code>. To exclude matching forecasts, specify <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name of the parameter to filter on. Valid values are <code>DatasetGroupArn</code>, <code>PredictorArn</code>, and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The value to match.</p> </li> </ul> <p>For example, to list all forecasts whose status is not ACTIVE, you would specify:</p> <p> <code>"Filters": [ { "Condition": "IS_NOT", "Key": "Status", "Value": "ACTIVE" } ]</code> </p>'
    ListPredictorsResponse:
      type: object
      properties:
        Predictors:
          $ref: '#/components/schemas/Predictors'
          description: An array of objects that summarize each predictor's properties.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon Forecast returns this token. To retrieve the next set of results, use the token in the next request.'
    ListPredictorsRequest:
      type: object
      title: ListPredictorsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
        Filters:
          $ref: '#/components/schemas/Filters'
          description: '<p>An array of filters. For each filter, you provide a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the predictors that match the statement from the list, respectively. The match statement consists of a key and a value.</p> <p> <b>Filter properties</b> </p> <ul> <li> <p> <code>Condition</code> - The condition to apply. Valid values are <code>IS</code> and <code>IS_NOT</code>. To include the predictors that match the statement, specify <code>IS</code>. To exclude matching predictors, specify <code>IS_NOT</code>.</p> </li> <li> <p> <code>Key</code> - The name of the parameter to filter on. Valid values are <code>DatasetGroupArn</code> and <code>Status</code>.</p> </li> <li> <p> <code>Value</code> - The value to match.</p> </li> </ul> <p>For example, to list all predictors whose status is ACTIVE, you would specify:</p> <p> <code>"Filters": [ { "Condition": "IS", "Key": "Status", "Value": "ACTIVE" } ]</code> </p>'
    UpdateDatasetGroupResponse:
      type: object
      properties: {}
    UpdateDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupArn
        - DatasetArns
      title: UpdateDatasetGroupRequest
      properties:
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset group.
        DatasetArns:
          $ref: '#/components/schemas/ArnList'
          description: An array of the Amazon Resource Names (ARNs) of the datasets to add to the dataset group.
    Arn:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.\/\:]+$'
      maxLength: 256
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    AttributeType:
      type: string
      enum:
        - string
        - integer
        - float
        - timestamp
    Boolean:
      type: boolean
    Name:
      type: string
      pattern: '^[a-zA-Z][a-zA-Z0-9_]*'
      minLength: 1
      maxLength: 63
    Values:
      type: array
      items:
        $ref: '#/components/schemas/Value'
      minItems: 1
      maxItems: 20
    CategoricalParameterRange:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the categorical hyperparameter to tune.
        Values:
          $ref: '#/components/schemas/Values'
          description: A list of the tunable categories for the hyperparameter.
      description: Specifies a categorical hyperparameter and it's range of tunable values. This object is part of the <a>ParameterRanges</a> object.
    CategoricalParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/CategoricalParameterRange'
      minItems: 1
      maxItems: 20
    Double:
      type: number
      format: double
    ScalingType:
      type: string
      enum:
        - Auto
        - Linear
        - Logarithmic
        - ReverseLogarithmic
    ContinuousParameterRange:
      type: object
      required:
        - Name
        - MaxValue
        - MinValue
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the hyperparameter to tune.
        MaxValue:
          $ref: '#/components/schemas/Double'
          description: The maximum tunable value of the hyperparameter.
        MinValue:
          $ref: '#/components/schemas/Double'
          description: The minimum tunable value of the hyperparameter.
        ScalingType:
          $ref: '#/components/schemas/ScalingType'
          description: '<p>The scale that hyperparameter tuning uses to search the hyperparameter range. Valid values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon Forecast hyperparameter tuning chooses the best scale for the hyperparameter.</p> </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.</p> <p>Logarithmic scaling works only for ranges that have values greater than 0.</p> </dd> <dt>ReverseLogarithmic</dt> <dd> <p>hyperparameter tuning searches the values in the hyperparameter range by using a reverse logarithmic scale.</p> <p>Reverse logarithmic scaling works only for ranges that are entirely within the range 0 &lt;= x &lt; 1.0.</p> </dd> </dl> <p>For information about choosing a hyperparameter scale, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type">Hyperparameter Scaling</a>. One of the following values:</p>'
      description: Specifies a continuous hyperparameter and it's range of tunable values. This object is part of the <a>ParameterRanges</a> object.
    ContinuousParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/ContinuousParameterRange'
      minItems: 1
      maxItems: 20
    Domain:
      type: string
      enum:
        - RETAIL
        - CUSTOM
        - INVENTORY_PLANNING
        - EC2_CAPACITY
        - WORK_FORCE
        - WEB_TRAFFIC
        - METRICS
    DataSource:
      type: object
      required:
        - S3Config
      properties:
        S3Config:
          $ref: '#/components/schemas/S3Config'
          description: The path to the training data stored in an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the data.
      description: 'The source of your training data, an AWS Identity and Access Management (IAM) role that allows Amazon Forecast to access the data and, optionally, an AWS Key Management Service (KMS) key. This object is submitted in the <a>CreateDatasetImportJob</a> request.'
    TimestampFormat:
      type: string
      pattern: '^[a-zA-Z0-9\-\:\.\,\''\s]+$'
      maxLength: 256
    DatasetType:
      type: string
      enum:
        - TARGET_TIME_SERIES
        - RELATED_TIME_SERIES
        - ITEM_METADATA
    Frequency:
      type: string
      pattern: ^Y|M|W|D|H|30min|15min|10min|5min|1min$
    Schema:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/SchemaAttributes'
          description: An array of attributes specifying the name and type of each field in a dataset.
      description: Defines the fields of a dataset. You specify this object in the <a>CreateDataset</a> request.
    EncryptionConfig:
      type: object
      required:
        - RoleArn
        - KMSKeyArn
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.</p> <p>Passing a role across AWS accounts is not allowed. If you pass a role that isn''t in your account, you get an <code>InvalidInputException</code> error.</p>'
        KMSKeyArn:
          $ref: '#/components/schemas/KMSKeyArn'
          description: The Amazon Resource Name (ARN) of the KMS key.
      description: An AWS Key Management Service (KMS) key and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key. You can specify this optional object in the <a>CreateDataset</a> and <a>CreatePredictor</a> requests.
    DataDestination:
      type: object
      required:
        - S3Config
      properties:
        S3Config:
          $ref: '#/components/schemas/S3Config'
          description: The path to an Amazon Simple Storage Service (Amazon S3) bucket along with the credentials to access the bucket.
      description: 'The destination for an exported forecast, an AWS Identity and Access Management (IAM) role that allows Amazon Forecast to access the location and, optionally, an AWS Key Management Service (KMS) key. This object is submitted in the <a>CreateForecastExportJob</a> request.'
    ForecastTypes:
      type: array
      items:
        $ref: '#/components/schemas/ForecastType'
      minItems: 1
      maxItems: 20
    Integer:
      type: integer
    TrainingParameters:
      type: object
      minProperties: 0
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    EvaluationParameters:
      type: object
      properties:
        NumberOfBacktestWindows:
          $ref: '#/components/schemas/Integer'
          description: The number of times to split the input data. The default is 1. Valid values are 1 through 5.
        BackTestWindowOffset:
          $ref: '#/components/schemas/Integer'
          description: <p>The point from the end of the dataset where you want to split the data for model training and testing (evaluation). Specify the value as the number of data points. The default is the value of the forecast horizon. <code>BackTestWindowOffset</code> can be used to mimic a past virtual forecast start date. This value must be greater than or equal to the forecast horizon and less than half of the TARGET_TIME_SERIES dataset length.</p> <p> <code>ForecastHorizon</code> &lt;= <code>BackTestWindowOffset</code> &lt; 1/2 * TARGET_TIME_SERIES dataset length</p>
      description: 'Parameters that define how to split a dataset into training data and testing data, and the number of iterations to perform. These parameters are specified in the predefined algorithms but you can override them in the <a>CreatePredictor</a> request.'
    HyperParameterTuningJobConfig:
      type: object
      properties:
        ParameterRanges:
          $ref: '#/components/schemas/ParameterRanges'
          description: Specifies the ranges of valid values for the hyperparameters.
      description: '<p>Configuration information for a hyperparameter tuning job. You specify this object in the <a>CreatePredictor</a> request.</p> <p>A <i>hyperparameter</i> is a parameter that governs the model training process. You set hyperparameters before training starts, unlike model parameters, which are determined during training. The values of the hyperparameters effect which values are chosen for the model parameters.</p> <p>In a <i>hyperparameter tuning job</i>, Amazon Forecast chooses the set of hyperparameter values that optimize a specified metric. Forecast accomplishes this by running many training jobs over a range of hyperparameter values. The optimum set of values depends on the algorithm, the training data, and the specified metric objective.</p>'
    InputDataConfig:
      type: object
      required:
        - DatasetGroupArn
      properties:
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
        SupplementaryFeatures:
          $ref: '#/components/schemas/SupplementaryFeatures'
          description: An array of supplementary features. The only supported feature is a holiday calendar.
      description: The data used to train a predictor. The data includes a dataset group and any supplementary features. You specify this object in the <a>CreatePredictor</a> request.
    FeaturizationConfig:
      type: object
      required:
        - ForecastFrequency
      properties:
        ForecastFrequency:
          $ref: '#/components/schemas/Frequency'
          description: '<p>The frequency of predictions in a forecast.</p> <p>Valid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes), 15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For example, "Y" indicates every year and "5min" indicates every five minutes.</p> <p>The frequency must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.</p> <p>When a RELATED_TIME_SERIES dataset is provided, the frequency must be equal to the RELATED_TIME_SERIES dataset frequency.</p>'
        ForecastDimensions:
          $ref: '#/components/schemas/ForecastDimensions'
          description: '<p>An array of dimension (field) names that specify how to group the generated forecast.</p> <p>For example, suppose that you are generating a forecast for item sales across all of your stores, and your dataset contains a <code>store_id</code> field. If you want the sales forecast for each item by store, you would specify <code>store_id</code> as the dimension.</p> <p>All forecast dimensions specified in the <code>TARGET_TIME_SERIES</code> dataset don''t need to be specified in the <code>CreatePredictor</code> request. All forecast dimensions specified in the <code>RELATED_TIME_SERIES</code> dataset must be specified in the <code>CreatePredictor</code> request.</p>'
        Featurizations:
          $ref: '#/components/schemas/Featurizations'
          description: An array of featurization (transformation) information for the fields of a dataset. Only a single featurization is supported.
      description: '<p>In a <a>CreatePredictor</a> operation, the specified algorithm trains a model using the specified dataset group. You can optionally tell the operation to modify data fields prior to training a model. These modifications are referred to as <i>featurization</i>.</p> <p>You define featurization using the <code>FeaturizationConfig</code> object. You specify an array of transformations, one for each field that you want to featurize. You then include the <code>FeaturizationConfig</code> object in your <code>CreatePredictor</code> request. Amazon Forecast applies the featurization to the <code>TARGET_TIME_SERIES</code> dataset before model training.</p> <p>You can create multiple featurization configurations. For example, you might call the <code>CreatePredictor</code> operation twice by specifying different featurization configurations.</p>'
    S3Config:
      type: object
      required:
        - Path
        - RoleArn
      properties:
        Path:
          $ref: '#/components/schemas/S3Path'
          description: The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon S3 bucket.
        RoleArn:
          $ref: '#/components/schemas/Arn'
          description: '<p>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the Amazon S3 bucket or files. If you provide a value for the <code>KMSKeyArn</code> key, the role must allow access to the key.</p> <p>Passing a role across AWS accounts is not allowed. If you pass a role that isn''t in your account, you get an <code>InvalidInputException</code> error.</p>'
        KMSKeyArn:
          $ref: '#/components/schemas/KMSKeyArn'
          description: The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.
      description: 'The path to the file(s) in an Amazon Simple Storage Service (Amazon S3) bucket, and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the file(s). Optionally, includes an AWS Key Management Service (KMS) key. This object is part of the <a>DataSource</a> object that is submitted in the <a>CreateDatasetImportJob</a> request, and part of the <a>DataDestination</a> object that is submitted in the <a>CreateForecastExportJob</a> request.'
    Timestamp:
      type: string
      format: date-time
    DatasetGroupSummary:
      type: object
      properties:
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group.
        DatasetGroupName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset group.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the dataset group was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'When the dataset group was created or last updated from a call to the <a>UpdateDatasetGroup</a> operation. While the dataset group is being updated, <code>LastModificationTime</code> is the current time of the <code>ListDatasetGroups</code> call.'
      description: 'Provides a summary of the dataset group properties used in the <a>ListDatasetGroups</a> operation. To get the complete set of properties, call the <a>DescribeDatasetGroup</a> operation, and provide the <code>DatasetGroupArn</code>.'
    DatasetGroups:
      type: array
      items:
        $ref: '#/components/schemas/DatasetGroupSummary'
    Status:
      type: string
      maxLength: 256
    ErrorMessage:
      type: string
    DatasetImportJobSummary:
      type: object
      properties:
        DatasetImportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset import job.
        DatasetImportJobName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset import job.
        DataSource:
          $ref: '#/components/schemas/DataSource'
          description: '<p>The location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data. The training data must be stored in an Amazon S3 bucket.</p> <p>If encryption is used, <code>DataSource</code> includes an AWS Key Management Service (KMS) key.</p>'
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the dataset import job. The status is reflected in the status of the dataset. For example, when the import job status is <code>CREATE_IN_PROGRESS</code>, the status of the dataset is <code>UPDATE_IN_PROGRESS</code>. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> </ul>'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If an error occurred, an informational message about the error.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the dataset import job was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The last time that the dataset was modified. The time depends on the status of the job, as follows:</p> <ul> <li> <p> <code>CREATE_PENDING</code> - The same time as <code>CreationTime</code>.</p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> - The current timestamp.</p> </li> <li> <p> <code>ACTIVE</code> or <code>CREATE_FAILED</code> - When the job finished or failed.</p> </li> </ul>'
      description: 'Provides a summary of the dataset import job properties used in the <a>ListDatasetImportJobs</a> operation. To get the complete set of properties, call the <a>DescribeDatasetImportJob</a> operation, and provide the <code>DatasetImportJobArn</code>.'
    DatasetImportJobs:
      type: array
      items:
        $ref: '#/components/schemas/DatasetImportJobSummary'
    DatasetSummary:
      type: object
      properties:
        DatasetArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
        DatasetName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset.
        DatasetType:
          $ref: '#/components/schemas/DatasetType'
          description: The dataset type.
        Domain:
          $ref: '#/components/schemas/Domain'
          description: The domain associated with the dataset.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the dataset was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'When you create a dataset, <code>LastModificationTime</code> is the same as <code>CreationTime</code>. While data is being imported to the dataset, <code>LastModificationTime</code> is the current time of the <code>ListDatasets</code> call. After a <a>CreateDatasetImportJob</a> operation has finished, <code>LastModificationTime</code> is when the import job completed or failed.'
      description: 'Provides a summary of the dataset properties used in the <a>ListDatasets</a> operation. To get the complete set of properties, call the <a>DescribeDataset</a> operation, and provide the <code>DatasetArn</code>.'
    Datasets:
      type: array
      items:
        $ref: '#/components/schemas/DatasetSummary'
    FieldStatistics:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Statistics'
    Message:
      type: string
    String:
      type: string
      pattern: '^[a-zA-Z0-9\_]+$'
      maxLength: 256
    PredictorExecutionDetails:
      type: object
      properties:
        PredictorExecutions:
          $ref: '#/components/schemas/PredictorExecutions'
          description: An array of the backtests performed to evaluate the accuracy of the predictor against a particular algorithm. The <code>NumberOfBacktestWindows</code> from the object determines the number of windows in the array.
      description: 'Contains details on the backtests performed to evaluate the accuracy of the predictor. The tests are returned in descending order of accuracy, with the most accurate backtest appearing first. You specify the number of backtests to perform when you call the operation.'
    KMSKeyArn:
      type: string
      pattern: 'arn:aws:kms:.*:key/.*'
      maxLength: 256
    TestWindows:
      type: array
      items:
        $ref: '#/components/schemas/WindowSummary'
    EvaluationResult:
      type: object
      properties:
        AlgorithmArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the algorithm that was evaluated.
        TestWindows:
          $ref: '#/components/schemas/TestWindows'
          description: The array of test windows used for evaluating the algorithm. The <code>NumberOfBacktestWindows</code> from the <a>EvaluationParameters</a> object determines the number of windows in the array.
      description: The results of evaluating an algorithm. Returned as part of the <a>GetAccuracyMetrics</a> response.
    EvaluationType:
      type: string
      enum:
        - SUMMARY
        - COMPUTED
    FeaturizationPipeline:
      type: array
      items:
        $ref: '#/components/schemas/FeaturizationMethod'
      minItems: 1
      maxItems: 1
    Featurization:
      type: object
      required:
        - AttributeName
      properties:
        AttributeName:
          $ref: '#/components/schemas/Name'
          description: 'The name of the schema attribute that specifies the data field to be featurized. Only the <code>target</code> field of the <code>TARGET_TIME_SERIES</code> dataset type is supported. For example, for the <code>RETAIL</code> domain, the target is <code>demand</code>, and for the <code>CUSTOM</code> domain, the target is <code>target_value</code>.'
        FeaturizationPipeline:
          $ref: '#/components/schemas/FeaturizationPipeline'
          description: An array of one <code>FeaturizationMethod</code> object that specifies the feature transformation method.
      description: '<p>Provides featurization (transformation) information for a dataset field. This object is part of the <a>FeaturizationConfig</a> object.</p> <p>For example:</p> <p> <code>{</code> </p> <p> <code>"AttributeName": "demand",</code> </p> <p> <code>FeaturizationPipeline [ {</code> </p> <p> <code>"FeaturizationMethodName": "filling",</code> </p> <p> <code>"FeaturizationMethodParameters": {"aggregation": "avg", "backfill": "nan"}</code> </p> <p> <code>} ]</code> </p> <p> <code>}</code> </p>'
    ForecastDimensions:
      type: array
      items:
        $ref: '#/components/schemas/Name'
      minItems: 1
      maxItems: 5
    Featurizations:
      type: array
      items:
        $ref: '#/components/schemas/Featurization'
      minItems: 1
      maxItems: 1
    FeaturizationMethodName:
      type: string
      enum:
        - filling
    FeaturizationMethodParameters:
      type: object
      minProperties: 1
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    FeaturizationMethod:
      type: object
      required:
        - FeaturizationMethodName
      properties:
        FeaturizationMethodName:
          $ref: '#/components/schemas/FeaturizationMethodName'
          description: The name of the method. The "filling" method is the only supported method.
        FeaturizationMethodParameters:
          $ref: '#/components/schemas/FeaturizationMethodParameters'
          description: '<p>The method parameters (key-value pairs). Specify these parameters to override the default values. The following list shows the parameters and their valid values. Bold signifies the default value.</p> <ul> <li> <p> <code>aggregation</code>: <b>sum</b>, <code>avg</code>, <code>first</code>, <code>min</code>, <code>max</code> </p> </li> <li> <p> <code>frontfill</code>: <b>none</b> </p> </li> <li> <p> <code>middlefill</code>: <b>zero</b>, <code>nan</code> (not a number)</p> </li> <li> <p> <code>backfill</code>: <b>zero</b>, <code>nan</code> </p> </li> </ul>'
      description: '<p>Provides information about the method that featurizes (transforms) a dataset field. The method is part of the <code>FeaturizationPipeline</code> of the <a>Featurization</a> object. If you don''t specify <code>FeaturizationMethodParameters</code>, Amazon Forecast uses default parameters.</p> <p>The following is an example of how you specify a <code>FeaturizationMethod</code> object.</p> <p> <code>{</code> </p> <p> <code>"FeaturizationMethodName": "filling",</code> </p> <p> <code>"FeaturizationMethodParameters": {"aggregation": "avg", "backfill": "nan"}</code> </p> <p> <code>}</code> </p>'
    ParameterValue:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.\/\[\]\,\"\\\s]+$'
      maxLength: 256
    Statistics:
      type: object
      properties:
        Count:
          $ref: '#/components/schemas/Integer'
          description: The number of values in the field.
        CountDistinct:
          $ref: '#/components/schemas/Integer'
          description: The number of distinct values in the field.
        CountNull:
          $ref: '#/components/schemas/Integer'
          description: The number of null values in the field.
        CountNan:
          $ref: '#/components/schemas/Integer'
          description: The number of NAN (not a number) values in the field.
        Min:
          $ref: '#/components/schemas/String'
          description: 'For a numeric field, the minimum value in the field.'
        Max:
          $ref: '#/components/schemas/String'
          description: 'For a numeric field, the maximum value in the field.'
        Avg:
          $ref: '#/components/schemas/Double'
          description: 'For a numeric field, the average value in the field.'
        Stddev:
          $ref: '#/components/schemas/Double'
          description: 'For a numeric field, the standard deviation.'
      description: Provides statistics for each data field imported into to an Amazon Forecast dataset with the <a>CreateDatasetImportJob</a> operation.
    FilterConditionString:
      type: string
      enum:
        - IS
        - IS_NOT
    Filter:
      type: object
      required:
        - Key
        - Value
        - Condition
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: The name of the parameter to filter on.
        Value:
          $ref: '#/components/schemas/Arn'
          description: The value to match.
        Condition:
          $ref: '#/components/schemas/FilterConditionString'
          description: 'The condition to apply. To include the objects that match the statement, specify <code>IS</code>. To exclude matching objects, specify <code>IS_NOT</code>.'
      description: 'Describes a filter for choosing a subset of objects. Each filter consists of a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the objects that match the statement, respectively. The match statement consists of a key and a value.'
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    ForecastExportJobSummary:
      type: object
      properties:
        ForecastExportJobArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the forecast export job.
        ForecastExportJobName:
          $ref: '#/components/schemas/Name'
          description: The name of the forecast export job.
        Destination:
          $ref: '#/components/schemas/DataDestination'
          description: The path to the Amazon Simple Storage Service (Amazon S3) bucket where the forecast is exported.
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the forecast export job. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code> of the forecast export job must be <code>ACTIVE</code> before you can access the forecast in your S3 bucket.</p> </note>'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If an error occurred, an informational message about the error.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the forecast export job was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the last successful export job finished.
      description: 'Provides a summary of the forecast export job properties used in the <a>ListForecastExportJobs</a> operation. To get the complete set of properties, call the <a>DescribeForecastExportJob</a> operation, and provide the listed <code>ForecastExportJobArn</code>.'
    ForecastExportJobs:
      type: array
      items:
        $ref: '#/components/schemas/ForecastExportJobSummary'
    ForecastSummary:
      type: object
      properties:
        ForecastArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the forecast.
        ForecastName:
          $ref: '#/components/schemas/Name'
          description: The name of the forecast.
        PredictorArn:
          $ref: '#/components/schemas/String'
          description: The ARN of the predictor used to generate the forecast.
        DatasetGroupArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the dataset group that provided the data used to train the predictor.
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the forecast. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code> of the forecast must be <code>ACTIVE</code> before you can query or export the forecast.</p> </note>'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If an error occurred, an informational message about the error.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the forecast creation task was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Initially, the same as <code>CreationTime</code> (status is <code>CREATE_PENDING</code>). Updated when inference (creating the forecast) starts (status changed to <code>CREATE_IN_PROGRESS</code>), and when inference is complete (status changed to <code>ACTIVE</code>) or fails (status changed to <code>CREATE_FAILED</code>).'
      description: 'Provides a summary of the forecast properties used in the <a>ListForecasts</a> operation. To get the complete set of properties, call the <a>DescribeForecast</a> operation, and provide the <code>ForecastArn</code> that is listed in the summary.'
    ForecastType:
      type: string
      pattern: (^0?\.\d\d?$|^mean$)
    Forecasts:
      type: array
      items:
        $ref: '#/components/schemas/ForecastSummary'
    PredictorEvaluationResults:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationResult'
    ParameterRanges:
      type: object
      properties:
        CategoricalParameterRanges:
          $ref: '#/components/schemas/CategoricalParameterRanges'
          description: Specifies the tunable range for each categorical hyperparameter.
        ContinuousParameterRanges:
          $ref: '#/components/schemas/ContinuousParameterRanges'
          description: Specifies the tunable range for each continuous hyperparameter.
        IntegerParameterRanges:
          $ref: '#/components/schemas/IntegerParameterRanges'
          description: Specifies the tunable range for each integer hyperparameter.
      description: 'Specifies the categorical, continuous, and integer hyperparameters, and their ranges of tunable values. The range of tunable values determines which values that a hyperparameter tuning job can choose for the specified hyperparameter. This object is part of the <a>HyperParameterTuningJobConfig</a> object.'
    SupplementaryFeatures:
      type: array
      items:
        $ref: '#/components/schemas/SupplementaryFeature'
      minItems: 1
      maxItems: 1
    IntegerParameterRange:
      type: object
      required:
        - Name
        - MaxValue
        - MinValue
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the hyperparameter to tune.
        MaxValue:
          $ref: '#/components/schemas/Integer'
          description: The maximum tunable value of the hyperparameter.
        MinValue:
          $ref: '#/components/schemas/Integer'
          description: The minimum tunable value of the hyperparameter.
        ScalingType:
          $ref: '#/components/schemas/ScalingType'
          description: '<p>The scale that hyperparameter tuning uses to search the hyperparameter range. Valid values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon Forecast hyperparameter tuning chooses the best scale for the hyperparameter.</p> </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.</p> <p>Logarithmic scaling works only for ranges that have values greater than 0.</p> </dd> <dt>ReverseLogarithmic</dt> <dd> <p>Not supported for <code>IntegerParameterRange</code>.</p> <p>Reverse logarithmic scaling works only for ranges that are entirely within the range 0 &lt;= x &lt; 1.0.</p> </dd> </dl> <p>For information about choosing a hyperparameter scale, see <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type">Hyperparameter Scaling</a>. One of the following values:</p>'
      description: Specifies an integer hyperparameter and it's range of tunable values. This object is part of the <a>ParameterRanges</a> object.
    IntegerParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/IntegerParameterRange'
      minItems: 1
      maxItems: 20
    NextToken:
      type: string
      minLength: 1
      maxLength: 3000
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Predictors:
      type: array
      items:
        $ref: '#/components/schemas/PredictorSummary'
    WeightedQuantileLosses:
      type: array
      items:
        $ref: '#/components/schemas/WeightedQuantileLoss'
    Metrics:
      type: object
      properties:
        RMSE:
          $ref: '#/components/schemas/Double'
          description: The root mean square error (RMSE).
        WeightedQuantileLosses:
          $ref: '#/components/schemas/WeightedQuantileLosses'
          description: An array of weighted quantile losses. Quantiles divide a probability distribution into regions of equal probability. The distribution in this case is the loss function.
      description: Provides metrics that are used to evaluate the performance of a predictor. This object is part of the <a>WindowSummary</a> object.
    ParameterKey:
      type: string
      pattern: '^[a-zA-Z0-9\-\_\.\/\[\]\,\\]+$'
      maxLength: 256
    TestWindowDetails:
      type: array
      items:
        $ref: '#/components/schemas/TestWindowSummary'
    PredictorExecution:
      type: object
      properties:
        AlgorithmArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the algorithm used to test the predictor.
        TestWindows:
          $ref: '#/components/schemas/TestWindowDetails'
          description: An array of test windows used to evaluate the algorithm. The <code>NumberOfBacktestWindows</code> from the object determines the number of windows in the array.
      description: The algorithm used to perform a backtest and the status of those tests.
    PredictorExecutions:
      type: array
      items:
        $ref: '#/components/schemas/PredictorExecution'
      minItems: 1
      maxItems: 5
    PredictorSummary:
      type: object
      properties:
        PredictorArn:
          $ref: '#/components/schemas/Arn'
          description: The ARN of the predictor.
        PredictorName:
          $ref: '#/components/schemas/Name'
          description: The name of the predictor.
        DatasetGroupArn:
          $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset group that contains the data used to train the predictor.
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the predictor. States include:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>, <code>CREATE_FAILED</code> </p> </li> <li> <p> <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>, <code>DELETE_FAILED</code> </p> </li> <li> <p> <code>UPDATE_PENDING</code>, <code>UPDATE_IN_PROGRESS</code>, <code>UPDATE_FAILED</code> </p> </li> </ul> <note> <p>The <code>Status</code> of the predictor must be <code>ACTIVE</code> before you can use the predictor to create a forecast.</p> </note>'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If an error occurred, an informational message about the error.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the model training task was created.
        LastModificationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Initially, the same as <code>CreationTime</code> (status is <code>CREATE_PENDING</code>). Updated when training starts (status changed to <code>CREATE_IN_PROGRESS</code>), and when training is complete (status changed to <code>ACTIVE</code>) or fails (status changed to <code>CREATE_FAILED</code>).'
      description: 'Provides a summary of the predictor properties that are used in the <a>ListPredictors</a> operation. To get the complete set of properties, call the <a>DescribePredictor</a> operation, and provide the listed <code>PredictorArn</code>.'
    S3Path:
      type: string
      pattern: '^s3://[a-z0-9].+$'
    SchemaAttributes:
      type: array
      items:
        $ref: '#/components/schemas/SchemaAttribute'
    SchemaAttribute:
      type: object
      properties:
        AttributeName:
          $ref: '#/components/schemas/Name'
          description: The name of the dataset field.
        AttributeType:
          $ref: '#/components/schemas/AttributeType'
          description: The data type of the field.
      description: 'An attribute of a schema, which defines a dataset field. A schema attribute is required for every field in a dataset. The <a>Schema</a> object contains an array of <code>SchemaAttribute</code> objects.'
    Value:
      type: string
      pattern: '^[a-zA-Z0-9\_\-]+$'
      maxLength: 256
    SupplementaryFeature:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: '#/components/schemas/Name'
          description: The name of the feature. This must be "holiday".
        Value:
          $ref: '#/components/schemas/Value'
          description: '<p>One of the following 2 letter country codes:</p> <ul> <li> <p>"AU" - AUSTRALIA</p> </li> <li> <p>"DE" - GERMANY</p> </li> <li> <p>"JP" - JAPAN</p> </li> <li> <p>"US" - UNITED_STATES</p> </li> <li> <p>"UK" - UNITED_KINGDOM</p> </li> </ul>'
      description: '<p>Describes a supplementary feature of a dataset group. This object is part of the <a>InputDataConfig</a> object.</p> <p>The only supported feature is a holiday calendar. If you use the calendar, all data in the datasets should belong to the same country as the calendar. For the holiday calendar data, see the <a href="http://jollyday.sourceforge.net/data.html">Jollyday</a> web site.</p>'
    TestWindowSummary:
      type: object
      properties:
        TestWindowStart:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the test began.
        TestWindowEnd:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the test ended.
        Status:
          $ref: '#/components/schemas/Status'
          description: '<p>The status of the test. Possible status values are:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATE_IN_PROGRESS</code> </p> </li> <li> <p> <code>CREATE_FAILED</code> </p> </li> </ul>'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
          description: 'If the test failed, the reason why it failed.'
      description: 'The status, start time, and end time of a backtest, as well as a failure reason if applicable.'
    WindowSummary:
      type: object
      properties:
        TestWindowStart:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp that defines the start of the window.
        TestWindowEnd:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp that defines the end of the window.
        ItemCount:
          $ref: '#/components/schemas/Integer'
          description: The number of data points within the window.
        EvaluationType:
          $ref: '#/components/schemas/EvaluationType'
          description: <p>The type of evaluation.</p> <ul> <li> <p> <code>SUMMARY</code> - The average metrics across all windows.</p> </li> <li> <p> <code>COMPUTED</code> - The metrics for the specified window.</p> </li> </ul>
        Metrics:
          $ref: '#/components/schemas/Metrics'
          description: Provides metrics used to evaluate the performance of a predictor.
      description: <p>The metrics for a time range within the evaluation portion of a dataset. This object is part of the <a>EvaluationResult</a> object.</p> <p>The <code>TestWindowStart</code> and <code>TestWindowEnd</code> parameters are determined by the <code>BackTestWindowOffset</code> parameter of the <a>EvaluationParameters</a> object.</p>
    WeightedQuantileLoss:
      type: object
      properties:
        Quantile:
          $ref: '#/components/schemas/Double'
          description: 'The quantile. Quantiles divide a probability distribution into regions of equal probability. For example, if the distribution was divided into 5 regions of equal probability, the quantiles would be 0.2, 0.4, 0.6, and 0.8.'
        LossValue:
          $ref: '#/components/schemas/Double'
          description: 'The difference between the predicted value and the actual value over the quantile, weighted (normalized) by dividing by the sum over all quantiles.'
      description: The weighted loss value for a quantile. This object is part of the <a>Metrics</a> object.
security:
  - hmac: []
