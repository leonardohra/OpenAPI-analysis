openapi: 3.0.0
info:
  version: '2018-01-12'
  x-release: v4
  title: Amazon Data Lifecycle Manager
  description: '<fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your AWS resources. You create lifecycle policies, which are used to automate operations on the specified resources.</p> <p>Amazon DLM supports Amazon EBS volumes and snapshots. For information about using Amazon DLM with Amazon EBS, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html">Automating the Amazon EBS Snapshot Lifecycle</a> in the <i>Amazon EC2 User Guide</i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: dlm
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dlm-2018-01-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/dlm/'
servers:
  - url: 'http://dlm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon DLM multi-region endpoint
  - url: 'https://dlm.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon DLM multi-region endpoint
  - url: 'http://dlm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://dlm.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /policies:
    post:
      operationId: CreateLifecyclePolicy
      description: Creates a policy to manage the lifecycle of the specified AWS resources. You can create up to 100 lifecycle policies.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLifecyclePolicyResponse'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ExecutionRoleArn
                - Description
                - State
                - PolicyDetails
              properties:
                ExecutionRoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
                  type: string
                  pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\d+:role/.*'
                  minLength: 0
                  maxLength: 2048
                Description:
                  description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'
                  type: string
                  pattern: '[0-9A-Za-z _-]+'
                  minLength: 0
                  maxLength: 500
                State:
                  description: The desired activation state of the lifecycle policy after creation.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                PolicyDetails:
                  description: Specifies the configuration of a lifecycle policy.
                  type: object
                  properties:
                    PolicyType:
                      $ref: '#/components/schemas/PolicyTypeValues'
                      description: The valid target resource types and actions a policy can manage. The default is EBS_SNAPSHOT_MANAGEMENT.
                    ResourceTypes:
                      $ref: '#/components/schemas/ResourceTypeValuesList'
                      description: The resource type.
                    TargetTags:
                      $ref: '#/components/schemas/TargetTagList'
                      description: The single tag that identifies targeted resources for this policy.
                    Schedules:
                      $ref: '#/components/schemas/ScheduleList'
                      description: The schedule of policy-defined actions.
                    Parameters:
                      $ref: '#/components/schemas/Parameters'
                      description: 'A set of optional parameters for the policy. '
                Tags:
                  description: The tags to apply to the lifecycle policy during creation.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLifecyclePolicies
      description: '<p>Gets summary information about all or the specified data lifecycle policies.</p> <p>To get complete information about a policy, use <a>GetLifecyclePolicy</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLifecyclePoliciesResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyIds
          in: query
          required: false
          description: The identifiers of the data lifecycle policies.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PolicyId'
        - name: state
          in: query
          required: false
          description: The activation state.
          schema:
            type: string
            enum:
              - ENABLED
              - DISABLED
              - ERROR
        - name: resourceTypes
          in: query
          required: false
          description: The resource type.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResourceTypeValues'
            minItems: 1
            maxItems: 1
        - name: targetTags
          in: query
          required: false
          description: <p>The target tag for a policy.</p> <p>Tags are strings in the format <code>key=value</code>.</p>
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagFilter'
            minItems: 1
            maxItems: 50
        - name: tagsToAdd
          in: query
          required: false
          description: <p>The tags to add to objects created by the policy.</p> <p>Tags are strings in the format <code>key=value</code>.</p> <p>These user-defined tags are added in addition to the AWS-added lifecycle tags.</p>
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagFilter'
            minItems: 0
            maxItems: 50
  '/policies/{policyId}/':
    delete:
      operationId: DeleteLifecyclePolicy
      description: Deletes the specified lifecycle policy and halts the automated operations that the policy specified.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
            pattern: 'policy-[A-Za-z0-9]+'
            minLength: 0
            maxLength: 64
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLifecyclePolicy
      description: Gets detailed information about the specified lifecycle policy.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
            pattern: 'policy-[A-Za-z0-9]+'
            minLength: 0
            maxLength: 64
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: Lists the tags for the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: Adds the specified tags to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
            minLength: 0
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: One or more tags.
                  type: object
                  minProperties: 1
                  maxProperties: 200
                  additionalProperties:
                    $ref: '#/components/schemas/TagValue'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: Removes the specified tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
            minLength: 0
            maxLength: 2048
        - name: tagKeys
          in: query
          required: true
          description: The tag keys.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TagKey'
            minItems: 1
            maxItems: 200
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/policies/{policyId}':
    patch:
      operationId: UpdateLifecyclePolicy
      description: Updates the specified lifecycle policy.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLifecyclePolicyResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
            pattern: 'policy-[A-Za-z0-9]+'
            minLength: 0
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExecutionRoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
                  type: string
                  pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\d+:role/.*'
                  minLength: 0
                  maxLength: 2048
                State:
                  description: The desired activation state of the lifecycle policy after creation.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                Description:
                  description: A description of the lifecycle policy.
                  type: string
                  pattern: '[0-9A-Za-z _-]+'
                  minLength: 0
                  maxLength: 500
                PolicyDetails:
                  description: Specifies the configuration of a lifecycle policy.
                  type: object
                  properties:
                    PolicyType:
                      $ref: '#/components/schemas/PolicyTypeValues'
                      description: The valid target resource types and actions a policy can manage. The default is EBS_SNAPSHOT_MANAGEMENT.
                    ResourceTypes:
                      $ref: '#/components/schemas/ResourceTypeValuesList'
                      description: The resource type.
                    TargetTags:
                      $ref: '#/components/schemas/TargetTagList'
                      description: The single tag that identifies targeted resources for this policy.
                    Schedules:
                      $ref: '#/components/schemas/ScheduleList'
                      description: The schedule of policy-defined actions.
                    Parameters:
                      $ref: '#/components/schemas/Parameters'
                      description: 'A set of optional parameters for the policy. '
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateLifecyclePolicyResponse:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
    PolicyTypeValues:
      type: string
      enum:
        - EBS_SNAPSHOT_MANAGEMENT
    ResourceTypeValuesList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTypeValues'
      minItems: 1
      maxItems: 1
    TargetTagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    ScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/Schedule'
      minItems: 1
      maxItems: 1
    Parameters:
      type: object
      properties:
        ExcludeBootVolume:
          $ref: '#/components/schemas/ExcludeBootVolume'
          description: '[EBS Snapshot Management – Instance policies only] Indicates whether to exclude the root volume from snapshots created using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html">CreateSnapshots</a>. The default is false.'
      description: Specifies optional parameters to add to a policy. The set of valid parameters depends on the combination of policy type and resource type.
    TagValue:
      type: string
      pattern: '[\p{all}]*'
      maxLength: 256
    InvalidRequestException: {}
    LimitExceededException: {}
    InternalServerException: {}
    DeleteLifecyclePolicyResponse:
      type: object
      properties: {}
    ResourceNotFoundException: {}
    GetLifecyclePoliciesResponse:
      type: object
      properties:
        Policies:
          $ref: '#/components/schemas/LifecyclePolicySummaryList'
          description: Summary information about the lifecycle policies.
    PolicyId:
      type: string
      pattern: 'policy-[A-Za-z0-9]+'
      minLength: 0
      maxLength: 64
    ResourceTypeValues:
      type: string
      enum:
        - VOLUME
        - INSTANCE
    TagFilter:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 256
    GetLifecyclePolicyResponse:
      type: object
      properties:
        Policy:
          $ref: '#/components/schemas/LifecyclePolicy'
          description: Detailed information about the lifecycle policy.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: Information about the tags.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
      minLength: 1
      maxLength: 128
    UpdateLifecyclePolicyResponse:
      type: object
      properties: {}
    AvailabilityZone:
      type: string
      pattern: '([a-z]+-){2,3}\d[a-z]'
      minLength: 0
      maxLength: 16
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
      minItems: 1
      maxItems: 10
    CmkArn:
      type: string
      pattern: 'arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\d:\d+:key/.*'
      minLength: 0
      maxLength: 2048
    CopyTags:
      type: boolean
    CopyTagsNullable:
      type: boolean
    Count:
      type: integer
      minimum: 1
      maximum: 1000
    ExecutionRoleArn:
      type: string
      pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\d+:role/.*'
      minLength: 0
      maxLength: 2048
    PolicyDescription:
      type: string
      pattern: '[0-9A-Za-z _-]+'
      minLength: 0
      maxLength: 500
    SettablePolicyStateValues:
      type: string
      enum:
        - ENABLED
        - DISABLED
    PolicyDetails:
      type: object
      properties:
        PolicyType:
          $ref: '#/components/schemas/PolicyTypeValues'
          description: The valid target resource types and actions a policy can manage. The default is EBS_SNAPSHOT_MANAGEMENT.
        ResourceTypes:
          $ref: '#/components/schemas/ResourceTypeValuesList'
          description: The resource type.
        TargetTags:
          $ref: '#/components/schemas/TargetTagList'
          description: The single tag that identifies targeted resources for this policy.
        Schedules:
          $ref: '#/components/schemas/ScheduleList'
          description: The schedule of policy-defined actions.
        Parameters:
          $ref: '#/components/schemas/Parameters'
          description: 'A set of optional parameters for the policy. '
      description: Specifies the configuration of a lifecycle policy.
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    CreateLifecyclePolicyRequest:
      type: object
      required:
        - ExecutionRoleArn
        - Description
        - State
        - PolicyDetails
      title: CreateLifecyclePolicyRequest
      properties:
        ExecutionRoleArn:
          $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'
        State:
          $ref: '#/components/schemas/SettablePolicyStateValues'
          description: The desired activation state of the lifecycle policy after creation.
        PolicyDetails:
          $ref: '#/components/schemas/PolicyDetails'
          description: The configuration details of the lifecycle policy.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags to apply to the lifecycle policy during creation.
    Interval:
      type: integer
      minimum: 1
    IntervalUnitValues:
      type: string
      enum:
        - HOURS
    TimesList:
      type: array
      items:
        $ref: '#/components/schemas/Time'
      maxItems: 1
    CreateRule:
      type: object
      required:
        - Interval
        - IntervalUnit
      properties:
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The interval between snapshots. The supported values are 2, 3, 4, 6, 8, 12, and 24.'
        IntervalUnit:
          $ref: '#/components/schemas/IntervalUnitValues'
          description: The interval unit.
        Times:
          $ref: '#/components/schemas/TimesList'
          description: '<p>The time, in UTC, to start the operation. The supported format is hh:mm.</p> <p>The operation occurs within a one-hour window following the specified time.</p>'
      description: Specifies when to create snapshots of EBS volumes.
    RetentionIntervalUnitValues:
      type: string
      enum:
        - DAYS
        - WEEKS
        - MONTHS
        - YEARS
    CrossRegionCopyRetainRule:
      type: object
      properties:
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The amount of time to retain each snapshot. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'
        IntervalUnit:
          $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for time-based retention.
      description: Specifies the retention rule for cross-Region snapshot copies.
    TargetRegion:
      type: string
      pattern: '([a-z]+-){2,3}\d'
      minLength: 0
      maxLength: 16
    Encrypted:
      type: boolean
    CrossRegionCopyRule:
      type: object
      required:
        - TargetRegion
        - Encrypted
      properties:
        TargetRegion:
          $ref: '#/components/schemas/TargetRegion'
          description: The target Region.
        Encrypted:
          $ref: '#/components/schemas/Encrypted'
          description: 'To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or if encryption by default is not enabled.'
        CmkArn:
          $ref: '#/components/schemas/CmkArn'
          description: 'The Amazon Resource Name (ARN) of the AWS KMS customer master key (CMK) to use for EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used.'
        CopyTags:
          $ref: '#/components/schemas/CopyTagsNullable'
          description: Copy all user-defined tags from the source snapshot to the copied snapshot.
        RetainRule:
          $ref: '#/components/schemas/CrossRegionCopyRetainRule'
          description: The retention rule.
      description: Specifies a rule for cross-Region snapshot copies.
    CrossRegionCopyRules:
      type: array
      items:
        $ref: '#/components/schemas/CrossRegionCopyRule'
      minItems: 0
      maxItems: 3
    DeleteLifecyclePolicyRequest:
      type: object
      title: DeleteLifecyclePolicyRequest
      properties: {}
    ExcludeBootVolume:
      type: boolean
    FastRestoreRule:
      type: object
      required:
        - AvailabilityZones
      properties:
        Count:
          $ref: '#/components/schemas/Count'
          description: The number of snapshots to be enabled with fast snapshot restore.
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The amount of time to enable fast snapshot restore. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'
        IntervalUnit:
          $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for enabling fast snapshot restore.
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
          description: The Availability Zones in which to enable fast snapshot restore.
      description: Specifies a rule for enabling fast snapshot restore. You can enable fast snapshot restore based on either a count or a time interval.
    PolicyIdList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyId'
    GettablePolicyStateValues:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ERROR
    TargetTagsFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
      minItems: 1
      maxItems: 50
    TagsToAddFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
      minItems: 0
      maxItems: 50
    GetLifecyclePoliciesRequest:
      type: object
      title: GetLifecyclePoliciesRequest
      properties: {}
    LifecyclePolicySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LifecyclePolicySummary'
    GetLifecyclePolicyRequest:
      type: object
      title: GetLifecyclePolicyRequest
      properties: {}
    LifecyclePolicy:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: The description of the lifecycle policy.
        State:
          $ref: '#/components/schemas/GettablePolicyStateValues'
          description: The activation state of the lifecycle policy.
        StatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: The description of the status.
        ExecutionRoleArn:
          $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
        DateCreated:
          $ref: '#/components/schemas/Timestamp'
          description: The local date and time when the lifecycle policy was created.
        DateModified:
          $ref: '#/components/schemas/Timestamp'
          description: The local date and time when the lifecycle policy was last modified.
        PolicyDetails:
          $ref: '#/components/schemas/PolicyDetails'
          description: The configuration of the lifecycle policy
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags.
        PolicyArn:
          $ref: '#/components/schemas/PolicyArn'
          description: The Amazon Resource Name (ARN) of the policy.
      description: Detailed information about a lifecycle policy.
    StatusMessage:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 500
    Timestamp:
      type: string
      format: date-time
    PolicyArn:
      type: string
      pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$'
      minLength: 0
      maxLength: 2048
    LifecyclePolicySummary:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: The description of the lifecycle policy.
        State:
          $ref: '#/components/schemas/GettablePolicyStateValues'
          description: The activation state of the lifecycle policy.
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: The tags.
      description: Summary information about a lifecycle policy.
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    RetainRule:
      type: object
      properties:
        Count:
          $ref: '#/components/schemas/Count'
          description: 'The number of snapshots to retain for each volume, up to a maximum of 1000.'
        Interval:
          $ref: '#/components/schemas/Interval'
          description: 'The amount of time to retain each snapshot. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'
        IntervalUnit:
          $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for time-based retention.
      description: Specifies the retention rule for a lifecycle policy. You can retain snapshots based on either a count or a time interval.
    ScheduleName:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 500
    TagsToAddList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 45
    VariableTagsList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 45
    Schedule:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule.
        CopyTags:
          $ref: '#/components/schemas/CopyTags'
          description: Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
        TagsToAdd:
          $ref: '#/components/schemas/TagsToAddList'
          description: The tags to apply to policy-created resources. These user-defined tags are in addition to the AWS-added lifecycle tags.
        VariableTags:
          $ref: '#/components/schemas/VariableTagsList'
          description: 'A collection of key/value pairs with values determined dynamically when the policy is executed. Keys may be any valid Amazon EC2 tag key. Values must be in one of the two following formats: <code>$(instance-id)</code> or <code>$(timestamp)</code>. Variable tags are only valid for EBS Snapshot Management – Instance policies.'
        CreateRule:
          $ref: '#/components/schemas/CreateRule'
          description: The creation rule.
        RetainRule:
          $ref: '#/components/schemas/RetainRule'
          description: The retention rule.
        FastRestoreRule:
          $ref: '#/components/schemas/FastRestoreRule'
          description: The rule for enabling fast snapshot restore.
        CrossRegionCopyRules:
          $ref: '#/components/schemas/CrossRegionCopyRules'
          description: The rule for cross-Region snapshot copies.
      description: Specifies a backup schedule.
    String:
      type: string
      pattern: '[\p{all}]*'
      minLength: 0
      maxLength: 500
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/String'
          description: The tag key.
        Value:
          $ref: '#/components/schemas/String'
          description: The tag value.
      description: Specifies a tag for a resource.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          $ref: '#/components/schemas/TagMap'
          description: One or more tags.
    Time:
      type: string
      pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
      minLength: 5
      maxLength: 5
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLifecyclePolicyRequest:
      type: object
      title: UpdateLifecyclePolicyRequest
      properties:
        ExecutionRoleArn:
          $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.
        State:
          $ref: '#/components/schemas/SettablePolicyStateValues'
          description: The desired activation state of the lifecycle policy after creation.
        Description:
          $ref: '#/components/schemas/PolicyDescription'
          description: A description of the lifecycle policy.
        PolicyDetails:
          $ref: '#/components/schemas/PolicyDetails'
          description: The configuration of the lifecycle policy. You cannot update the policy type or the resource type.
security:
  - hmac: []
