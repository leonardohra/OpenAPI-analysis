openapi: 3.0.0
info:
  version: '2017-10-26'
  x-release: v4
  title: Amazon Transcribe Service
  description: Operations and objects for transcribing speech to text.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: transcribe
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/transcribe-2017-10-26.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/transcribe/'
servers:
  - url: 'http://transcribe.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Transcribe Service multi-region endpoint
  - url: 'https://transcribe.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Transcribe Service multi-region endpoint
  - url: 'http://transcribe.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Transcribe Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://transcribe.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Transcribe Service endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=Transcribe.CreateVocabulary':
    post:
      operationId: CreateVocabulary
      description: 'Creates a new custom vocabulary that you can use to change the way Amazon Transcribe handles transcription of an audio file. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVocabularyResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVocabularyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.CreateVocabulary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.CreateVocabularyFilter':
    post:
      operationId: CreateVocabularyFilter
      description: 'Creates a new vocabulary filter that you can use to filter words, such as profane words, from the output of a transcription job.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVocabularyFilterResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVocabularyFilterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.CreateVocabularyFilter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.DeleteTranscriptionJob':
    post:
      operationId: DeleteTranscriptionJob
      description: 'Deletes a previously submitted transcription job along with any other generated results such as the transcription, models, and so on.'
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTranscriptionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.DeleteTranscriptionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.DeleteVocabulary':
    post:
      operationId: DeleteVocabulary
      description: 'Deletes a vocabulary from Amazon Transcribe. '
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVocabularyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.DeleteVocabulary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.DeleteVocabularyFilter':
    post:
      operationId: DeleteVocabularyFilter
      description: Removes a vocabulary filter.
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVocabularyFilterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.DeleteVocabularyFilter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.GetTranscriptionJob':
    post:
      operationId: GetTranscriptionJob
      description: 'Returns information about a transcription job. To see the status of the job, check the <code>TranscriptionJobStatus</code> field. If the status is <code>COMPLETED</code>, the job is finished and you can find the results at the location specified in the <code>TranscriptFileUri</code> field. If you enable content redaction, the redacted transcript appears in <code>RedactedTranscriptFileUri</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTranscriptionJobResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTranscriptionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.GetTranscriptionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.GetVocabulary':
    post:
      operationId: GetVocabulary
      description: 'Gets information about a vocabulary. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVocabularyResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVocabularyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.GetVocabulary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.GetVocabularyFilter':
    post:
      operationId: GetVocabularyFilter
      description: Returns information about a vocabulary filter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVocabularyFilterResponse'
        '480':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVocabularyFilterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.GetVocabularyFilter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.ListTranscriptionJobs':
    post:
      operationId: ListTranscriptionJobs
      description: Lists transcription jobs with the specified status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTranscriptionJobsResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTranscriptionJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.ListTranscriptionJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.ListVocabularies':
    post:
      operationId: ListVocabularies
      description: 'Returns a list of vocabularies that match the specified criteria. If no criteria are specified, returns the entire list of vocabularies.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVocabulariesResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListVocabulariesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.ListVocabularies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.ListVocabularyFilters':
    post:
      operationId: ListVocabularyFilters
      description: Gets information about vocabulary filters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVocabularyFiltersResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListVocabularyFiltersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.ListVocabularyFilters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.StartTranscriptionJob':
    post:
      operationId: StartTranscriptionJob
      description: 'Starts an asynchronous job to transcribe speech to text. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTranscriptionJobResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTranscriptionJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.StartTranscriptionJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.UpdateVocabulary':
    post:
      operationId: UpdateVocabulary
      description: 'Updates an existing vocabulary with new values. The <code>UpdateVocabulary</code> operation overwrites all of the existing information with the values that you provide in the request. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVocabularyResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVocabularyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.UpdateVocabulary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Transcribe.UpdateVocabularyFilter':
    post:
      operationId: UpdateVocabularyFilter
      description: Updates a vocabulary filter with a new list of filtered words.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVocabularyFilterResponse'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVocabularyFilterRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Transcribe.UpdateVocabularyFilter
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateVocabularyResponse:
      type: object
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of the vocabulary.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the vocabulary entries.
        VocabularyState:
          $ref: '#/components/schemas/VocabularyState'
          description: The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the vocabulary was created.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.'
    CreateVocabularyRequest:
      type: object
      required:
        - VocabularyName
        - LanguageCode
      title: CreateVocabularyRequest
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the vocabulary entries.
        Phrases:
          $ref: '#/components/schemas/Phrases'
          description: 'An array of strings that contains the vocabulary entries. '
        VocabularyFileUri:
          $ref: '#/components/schemas/Uri'
          description: '<p>The S3 location of the text file that contains the definition of the custom vocabulary. The URI must be in the same region as the API endpoint that you are calling. The general form is </p> <p> <code> https://s3.&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3.us-east-1.amazonaws.com/examplebucket/vocab.txt</code> </p> <p>For more information about S3 object names, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p> <p>For more information about custom vocabularies, see <a href="http://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary">Custom Vocabularies</a>.</p>'
    BadRequestException: {}
    LimitExceededException: {}
    InternalFailureException: {}
    ConflictException: {}
    CreateVocabularyFilterResponse:
      type: object
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the vocabulary filter.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the words in the collection.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the vocabulary filter was modified.
    CreateVocabularyFilterRequest:
      type: object
      required:
        - VocabularyFilterName
        - LanguageCode
      title: CreateVocabularyFilterRequest
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The vocabulary filter name. The name must be unique within the account that contains it.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the words in the vocabulary filter. All words in the filter must be in the same language. The vocabulary filter can only be used with transcription jobs in the specified language.
        Words:
          $ref: '#/components/schemas/Words'
          description: '<p>The words to use in the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets">Character Sets for Custom Vocabularies</a>.</p> <p>If you provide a list of words in the <code>Words</code> parameter, you can''t use the <code>VocabularyFilterFileUri</code> parameter.</p>'
        VocabularyFilterFileUri:
          $ref: '#/components/schemas/Uri'
          description: '<p>The Amazon S3 location of a text file used as input to create the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets">Character Sets for Custom Vocabularies</a>.</p> <p>The specified file must be less than 50 KB of UTF-8 characters.</p> <p>If you provide the location of a list of words in the <code>VocabularyFilterFileUri</code> parameter, you can''t use the <code>Words</code> parameter.</p>'
    DeleteTranscriptionJobRequest:
      type: object
      required:
        - TranscriptionJobName
      title: DeleteTranscriptionJobRequest
      properties:
        TranscriptionJobName:
          $ref: '#/components/schemas/TranscriptionJobName'
          description: The name of the transcription job to be deleted.
    DeleteVocabularyRequest:
      type: object
      required:
        - VocabularyName
      title: DeleteVocabularyRequest
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: 'The name of the vocabulary to delete. '
    NotFoundException: {}
    DeleteVocabularyFilterRequest:
      type: object
      required:
        - VocabularyFilterName
      title: DeleteVocabularyFilterRequest
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the vocabulary filter to remove.
    GetTranscriptionJobResponse:
      type: object
      properties:
        TranscriptionJob:
          $ref: '#/components/schemas/TranscriptionJob'
          description: An object that contains the results of the transcription job.
    GetTranscriptionJobRequest:
      type: object
      required:
        - TranscriptionJobName
      title: GetTranscriptionJobRequest
      properties:
        TranscriptionJobName:
          $ref: '#/components/schemas/TranscriptionJobName'
          description: The name of the job.
    GetVocabularyResponse:
      type: object
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of the vocabulary to return.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the vocabulary entries.
        VocabularyState:
          $ref: '#/components/schemas/VocabularyState'
          description: The processing state of the vocabulary.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the vocabulary was last modified.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.'
        DownloadUri:
          $ref: '#/components/schemas/Uri'
          description: The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.
    GetVocabularyRequest:
      type: object
      required:
        - VocabularyName
      title: GetVocabularyRequest
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of the vocabulary to return information about. The name is case-sensitive.
    GetVocabularyFilterResponse:
      type: object
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the vocabulary filter.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the words in the vocabulary filter.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the contents of the vocabulary filter were updated.
        DownloadUri:
          $ref: '#/components/schemas/Uri'
          description: The URI of the list of words in the vocabulary filter. You can use this URI to get the list of words.
    GetVocabularyFilterRequest:
      type: object
      required:
        - VocabularyFilterName
      title: GetVocabularyFilterRequest
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the vocabulary filter for which to return information.
    ListTranscriptionJobsResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/TranscriptionJobStatus'
          description: The requested status of the jobs returned.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.'
        TranscriptionJobSummaries:
          $ref: '#/components/schemas/TranscriptionJobSummaries'
          description: A list of objects containing summary information for a transcription job.
    ListTranscriptionJobsRequest:
      type: object
      title: ListTranscriptionJobsRequest
      properties:
        Status:
          $ref: '#/components/schemas/TranscriptionJobStatus'
          description: 'When specified, returns only transcription jobs with the specified status. Jobs are ordered by creation date, with the newest jobs returned first. If you don’t specify a status, Amazon Transcribe returns all transcription jobs ordered by creation date. '
        JobNameContains:
          $ref: '#/components/schemas/TranscriptionJobName'
          description: 'When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.'
    ListVocabulariesResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/TranscriptionJobStatus'
          description: The requested vocabulary state.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.'
        Vocabularies:
          $ref: '#/components/schemas/Vocabularies'
          description: A list of objects that describe the vocabularies that match the search criteria in the request.
    ListVocabulariesRequest:
      type: object
      title: ListVocabulariesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.'
        StateEquals:
          $ref: '#/components/schemas/VocabularyState'
          description: 'When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.'
        NameContains:
          $ref: '#/components/schemas/VocabularyName'
          description: 'When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both "vocabularyname" and "VocabularyName" in the response list.'
    ListVocabularyFiltersResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The <code>ListVocabularyFilters</code> operation returns a page of collections at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularyFilters</code> operation to return in the next page of jobs.'
        VocabularyFilters:
          $ref: '#/components/schemas/VocabularyFilters'
          description: 'The list of vocabulary filters. It will contain at most <code>MaxResults</code> number of filters. If there are more filters, call the <code>ListVocabularyFilters</code> operation again with the <code>NextToken</code> parameter in the request set to the value of the <code>NextToken</code> field in the response.'
    ListVocabularyFiltersRequest:
      type: object
      title: ListVocabularyFiltersRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous request to <code>ListVocabularyFilters</code> was truncated, include the <code>NextToken</code> to fetch the next set of collections.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of filters to return in the response. If there are fewer results in the list, this response contains only the actual results.'
        NameContains:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: Filters the response so that it only contains vocabulary filters whose name contains the specified string.
    StartTranscriptionJobResponse:
      type: object
      properties:
        TranscriptionJob:
          $ref: '#/components/schemas/TranscriptionJob'
          description: An object containing details of the asynchronous transcription job.
    StartTranscriptionJobRequest:
      type: object
      required:
        - TranscriptionJobName
        - LanguageCode
        - Media
      title: StartTranscriptionJobRequest
      properties:
        TranscriptionJobName:
          $ref: '#/components/schemas/TranscriptionJobName'
          description: The name of the job. Note that you can't use the strings "." or ".." by themselves as the job name. The name must also be unique within an AWS account.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code for the language used in the input media file.
        MediaSampleRateHertz:
          $ref: '#/components/schemas/MediaSampleRateHertz'
          description: '<p>The sample rate, in Hertz, of the audio track in the input media file. </p> <p>If you do not specify the media sample rate, Amazon Transcribe determines the sample rate. If you specify the sample rate, it must match the sample rate detected by Amazon Transcribe. In most cases, you should leave the <code>MediaSampleRateHertz</code> field blank and let Amazon Transcribe determine the sample rate.</p>'
        MediaFormat:
          $ref: '#/components/schemas/MediaFormat'
          description: The format of the input media file.
        Media:
          $ref: '#/components/schemas/Media'
          description: An object that describes the input media for a transcription job.
        OutputBucketName:
          $ref: '#/components/schemas/OutputBucketName'
          description: '<p>The location where the transcription is stored.</p> <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcript in the specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation, the operation returns this location in the <code>TranscriptFileUri</code> field. If you enable content redaction, the redacted transcript appears in <code>RedactedTranscriptFileUri</code>. If you enable content redaction and choose to output an unredacted transcript, that transcript''s location still appears in the <code>TranscriptFileUri</code>. The S3 bucket must have permissions that allow Amazon Transcribe to put files in the bucket. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user">Permissions Required for IAM User Roles</a>.</p> <p>You can specify an AWS Key Management Service (KMS) key to encrypt the output of your transcription using the <code>OutputEncryptionKMSKeyId</code> parameter. If you don''t specify a KMS key, Amazon Transcribe uses the default Amazon S3 key for server-side encryption of transcripts that are placed in your S3 bucket.</p> <p>If you don''t set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL, a shareable URL that provides secure access to your transcription, and returns it in the <code>TranscriptFileUri</code> field. Use this URL to download the transcription.</p>'
        OutputEncryptionKMSKeyId:
          $ref: '#/components/schemas/KMSKeyId'
          description: '<p>The Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key used to encrypt the output of the transcription job. The user calling the <code>StartTranscriptionJob</code> operation must have permission to use the specified KMS key.</p> <p>You can use either of the following to identify a KMS key in the current account:</p> <ul> <li> <p>KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"</p> </li> <li> <p>KMS Key Alias: "alias/ExampleAlias"</p> </li> </ul> <p>You can use either of the following to identify a KMS key in the current account or another account:</p> <ul> <li> <p>Amazon Resource Name (ARN) of a KMS Key: "arn:aws:kms:region:account ID:key/1234abcd-12ab-34cd-56ef-1234567890ab"</p> </li> <li> <p>ARN of a KMS Key Alias: "arn:aws:kms:region:account ID:alias/ExampleAlias"</p> </li> </ul> <p>If you don''t specify an encryption key, the output of the transcription job is encrypted with the default Amazon S3 key (SSE-S3). </p> <p>If you specify a KMS key to encrypt your output, you must also specify an output location in the <code>OutputBucketName</code> parameter.</p>'
        Settings:
          $ref: '#/components/schemas/Settings'
          description: A <code>Settings</code> object that provides optional settings for a transcription job.
        JobExecutionSettings:
          $ref: '#/components/schemas/JobExecutionSettings'
          description: Provides information about how a transcription job is executed. Use this field to indicate that the job can be queued for deferred execution if the concurrency limit is reached and there are no slots available to immediately run the job.
        ContentRedaction:
          $ref: '#/components/schemas/ContentRedaction'
          description: An object that contains the request parameters for content redaction.
    UpdateVocabularyResponse:
      type: object
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of the vocabulary that was updated.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the vocabulary entries.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the vocabulary was updated.
        VocabularyState:
          $ref: '#/components/schemas/VocabularyState'
          description: The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.
    UpdateVocabularyRequest:
      type: object
      required:
        - VocabularyName
        - LanguageCode
      title: UpdateVocabularyRequest
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of the vocabulary to update. The name is case-sensitive.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the vocabulary entries.
        Phrases:
          $ref: '#/components/schemas/Phrases'
          description: An array of strings containing the vocabulary entries.
        VocabularyFileUri:
          $ref: '#/components/schemas/Uri'
          description: '<p>The S3 location of the text file that contains the definition of the custom vocabulary. The URI must be in the same region as the API endpoint that you are calling. The general form is </p> <p> <code> https://s3.&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3.us-east-1.amazonaws.com/examplebucket/vocab.txt</code> </p> <p>For more information about S3 object names, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p> <p>For more information about custom vocabularies, see <a href="http://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary">Custom Vocabularies</a>.</p>'
    UpdateVocabularyFilterResponse:
      type: object
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the updated vocabulary filter.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the words in the vocabulary filter.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the vocabulary filter was updated.
    UpdateVocabularyFilterRequest:
      type: object
      required:
        - VocabularyFilterName
      title: UpdateVocabularyFilterRequest
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the vocabulary filter to update.
        Words:
          $ref: '#/components/schemas/Words'
          description: '<p>The words to use in the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets">Character Sets for Custom Vocabularies</a>.</p> <p>If you provide a list of words in the <code>Words</code> parameter, you can''t use the <code>VocabularyFilterFileUri</code> parameter.</p>'
        VocabularyFilterFileUri:
          $ref: '#/components/schemas/Uri'
          description: '<p>The Amazon S3 location of a text file used as input to create the vocabulary filter. Only use characters from the character set defined for custom vocabularies. For a list of character sets, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-vocabulary.html#charsets">Character Sets for Custom Vocabularies</a>.</p> <p>The specified file must be less than 50 KB of UTF-8 characters.</p> <p>If you provide the location of a list of words in the <code>VocabularyFilterFileUri</code> parameter, you can''t use the <code>Words</code> parameter.</p>'
    Boolean:
      type: boolean
    RedactionType:
      type: string
      enum:
        - PII
    RedactionOutput:
      type: string
      enum:
        - redacted
        - redacted_and_unredacted
    ContentRedaction:
      type: object
      required:
        - RedactionType
        - RedactionOutput
      properties:
        RedactionType:
          $ref: '#/components/schemas/RedactionType'
          description: Request parameter that defines the entities to be redacted. The only accepted value is <code>PII</code>.
        RedactionOutput:
          $ref: '#/components/schemas/RedactionOutput'
          description: <p>Request parameter where you choose whether to output only the redacted transcript or generate an additional unredacted transcript.</p> <p>When you choose <code>redacted</code> Amazon Transcribe outputs a JSON file with only the redacted transcript and related information.</p> <p>When you choose <code>redacted_and_unredacted</code> Amazon Transcribe outputs a JSON file with the unredacted transcript and related information in addition to the JSON file with the redacted transcript.</p>
      description: '<p>Settings for content redaction within a transcription job.</p> <p>You can redact transcripts in US English (en-us). For more information see: <a href="https://docs.aws.amazon.com/transcribe/latest/dg/content-redaction.html">Automatic Content Redaction</a> </p>'
    VocabularyFilterName:
      type: string
      pattern: '^[0-9a-zA-Z._-]+'
      minLength: 1
      maxLength: 200
    LanguageCode:
      type: string
      enum:
        - en-US
        - es-US
        - en-AU
        - fr-CA
        - en-GB
        - de-DE
        - pt-BR
        - fr-FR
        - it-IT
        - ko-KR
        - es-ES
        - en-IN
        - hi-IN
        - ar-SA
        - ru-RU
        - zh-CN
        - nl-NL
        - id-ID
        - ta-IN
        - fa-IR
        - en-IE
        - en-AB
        - en-WL
        - pt-PT
        - te-IN
        - tr-TR
        - de-CH
        - he-IL
        - ms-MY
        - ja-JP
        - ar-AE
    Words:
      type: array
      items:
        $ref: '#/components/schemas/Word'
      minItems: 1
    Uri:
      type: string
      pattern: '(s3://|http(s*)://).+'
      minLength: 1
      maxLength: 2000
    DateTime:
      type: string
      format: date-time
    VocabularyName:
      type: string
      pattern: '^[0-9a-zA-Z._-]+'
      minLength: 1
      maxLength: 200
    Phrases:
      type: array
      items:
        $ref: '#/components/schemas/Phrase'
    VocabularyState:
      type: string
      enum:
        - PENDING
        - READY
        - FAILED
    FailureReason:
      type: string
    DataAccessRoleArn:
      type: string
      pattern: '^arn:aws:iam::[0-9]{0,63}:role/[A-Za-z0-9:_/+=,@.-]{0,1023}$'
    TranscriptionJobName:
      type: string
      pattern: '^[0-9a-zA-Z._-]+'
      minLength: 1
      maxLength: 200
    TranscriptionJob:
      type: object
      properties:
        TranscriptionJobName:
          $ref: '#/components/schemas/TranscriptionJobName'
          description: The name of the transcription job.
        TranscriptionJobStatus:
          $ref: '#/components/schemas/TranscriptionJobStatus'
          description: The status of the transcription job.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code for the input speech.
        MediaSampleRateHertz:
          $ref: '#/components/schemas/MediaSampleRateHertz'
          description: 'The sample rate, in Hertz, of the audio track in the input media file. '
        MediaFormat:
          $ref: '#/components/schemas/MediaFormat'
          description: The format of the input media file.
        Media:
          $ref: '#/components/schemas/Media'
          description: An object that describes the input media for the transcription job.
        Transcript:
          $ref: '#/components/schemas/Transcript'
          description: An object that describes the output of the transcription job.
        StartTime:
          $ref: '#/components/schemas/DateTime'
          description: A timestamp that shows with the job was started processing.
        CreationTime:
          $ref: '#/components/schemas/DateTime'
          description: A timestamp that shows when the job was created.
        CompletionTime:
          $ref: '#/components/schemas/DateTime'
          description: A timestamp that shows when the job was completed.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: '<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p> <p>The <code>FailureReason</code> field can contain one of the following values:</p> <ul> <li> <p> <code>Unsupported media format</code> - The media format specified in the <code>MediaFormat</code> field of the request isn''t valid. See the description of the <code>MediaFormat</code> field for a list of valid values.</p> </li> <li> <p> <code>The media format provided does not match the detected media format</code> - The media format of the audio file doesn''t match the format specified in the <code>MediaFormat</code> field in the request. Check the media format of your media file and make sure that the two values match.</p> </li> <li> <p> <code>Invalid sample rate for audio file</code> - The sample rate specified in the <code>MediaSampleRateHertz</code> of the request isn''t valid. The sample rate must be between 8000 and 48000 Hertz.</p> </li> <li> <p> <code>The sample rate provided does not match the detected sample rate</code> - The sample rate in the audio file doesn''t match the sample rate specified in the <code>MediaSampleRateHertz</code> field in the request. Check the sample rate of your media file and make sure that the two values match.</p> </li> <li> <p> <code>Invalid file size: file size too large</code> - The size of your audio file is larger than Amazon Transcribe can process. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/limits-guidelines.html#limits">Limits</a> in the <i>Amazon Transcribe Developer Guide</i>.</p> </li> <li> <p> <code>Invalid number of channels: number of channels too large</code> - Your audio contains more channels than Amazon Transcribe is configured to process. To request additional channels, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits-amazon-transcribe">Amazon Transcribe Limits</a> in the <i>Amazon Web Services General Reference</i>.</p> </li> </ul>'
        Settings:
          $ref: '#/components/schemas/Settings'
          description: 'Optional settings for the transcription job. Use these settings to turn on speaker recognition, to set the maximum number of speakers that should be identified and to specify a custom vocabulary to use when processing the transcription job.'
        JobExecutionSettings:
          $ref: '#/components/schemas/JobExecutionSettings'
          description: Provides information about how a transcription job is executed.
        ContentRedaction:
          $ref: '#/components/schemas/ContentRedaction'
          description: An object that describes content redaction settings for the transcription job.
      description: 'Describes an asynchronous transcription job that was created with the <code>StartTranscriptionJob</code> operation. '
    JobExecutionSettings:
      type: object
      properties:
        AllowDeferredExecution:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Indicates whether a job should be queued by Amazon Transcribe when the concurrent execution limit is exceeded. When the <code>AllowDeferredExecution</code> field is true, jobs are queued and will be executed when the number of executing jobs falls below the concurrent execution limit. If the field is false, Amazon Transcribe returns a <code>LimitExceededException</code> exception.</p> <p>If you specify the <code>AllowDeferredExecution</code> field, you must specify the <code>DataAccessRoleArn</code> field.</p>'
        DataAccessRoleArn:
          $ref: '#/components/schemas/DataAccessRoleArn'
          description: '<p>The Amazon Resource Name (ARN) of a role that has access to the S3 bucket that contains the input files. Amazon Transcribe will assume this role to read queued media files. If you have specified an output S3 bucket for the transcription results, this role should have access to the output bucket as well.</p> <p>If you specify the <code>AllowDeferredExecution</code> field, you must specify the <code>DataAccessRoleArn</code> field.</p>'
      description: Provides information about when a transcription job should be executed.
    KMSKeyId:
      type: string
      pattern: '^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$'
      minLength: 1
      maxLength: 2048
    TranscriptionJobStatus:
      type: string
      enum:
        - QUEUED
        - IN_PROGRESS
        - FAILED
        - COMPLETED
    NextToken:
      type: string
      pattern: .+
      maxLength: 8192
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    TranscriptionJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TranscriptionJobSummary'
    Vocabularies:
      type: array
      items:
        $ref: '#/components/schemas/VocabularyInfo'
    VocabularyFilters:
      type: array
      items:
        $ref: '#/components/schemas/VocabularyFilterInfo'
    MaxAlternatives:
      type: integer
      minimum: 2
      maximum: 10
    MaxSpeakers:
      type: integer
      minimum: 2
      maximum: 10
    Media:
      type: object
      properties:
        MediaFileUri:
          $ref: '#/components/schemas/Uri'
          description: '<p>The S3 object location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> s3://&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>s3://examplebucket/example.mp4</code> </p> <p> <code>s3://examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>'
      description: Describes the input media file in a transcription request.
    MediaFormat:
      type: string
      enum:
        - mp3
        - mp4
        - wav
        - flac
    MediaSampleRateHertz:
      type: integer
      minimum: 8000
      maximum: 48000
    OutputBucketName:
      type: string
      pattern: '[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]'
      maxLength: 64
    OutputLocationType:
      type: string
      enum:
        - CUSTOMER_BUCKET
        - SERVICE_BUCKET
    Phrase:
      type: string
      pattern: .+
      minLength: 0
      maxLength: 256
    VocabularyFilterMethod:
      type: string
      enum:
        - remove
        - mask
    Settings:
      type: object
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of a vocabulary to use when processing the transcription job.
        ShowSpeakerLabels:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Determines whether the transcription job uses speaker recognition to identify different speakers in the input audio. Speaker recognition labels individual speakers in the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p> <p>You can''t set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>'
        MaxSpeakerLabels:
          $ref: '#/components/schemas/MaxSpeakers'
          description: 'The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.'
        ChannelIdentification:
          $ref: '#/components/schemas/Boolean'
          description: '<p>Instructs Amazon Transcribe to process each audio channel separately and then merge the transcription output of each channel into a single transcription. </p> <p>Amazon Transcribe also produces a transcription of each item detected on an audio channel, including the start time and end time of the item and alternative transcriptions of the item including the confidence that Amazon Transcribe has in the transcription.</p> <p>You can''t set both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>'
        ShowAlternatives:
          $ref: '#/components/schemas/Boolean'
          description: 'Determines whether the transcription contains alternative transcriptions. If you set the <code>ShowAlternatives</code> field to true, you must also set the maximum number of alternatives to return in the <code>MaxAlternatives</code> field.'
        MaxAlternatives:
          $ref: '#/components/schemas/MaxAlternatives'
          description: 'The number of alternative transcriptions that the service should return. If you specify the <code>MaxAlternatives</code> field, you must set the <code>ShowAlternatives</code> field to true.'
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the vocabulary filter to use when transcribing the audio. The filter that you specify must have the same language code as the transcription job.
        VocabularyFilterMethod:
          $ref: '#/components/schemas/VocabularyFilterMethod'
          description: Set to <code>mask</code> to remove filtered text from the transcript and replace it with three asterisks ("***") as placeholder text. Set to <code>remove</code> to remove filtered text from the transcript without using placeholder text.
      description: Provides optional settings for the <code>StartTranscriptionJob</code> operation.
    Transcript:
      type: object
      properties:
        TranscriptFileUri:
          $ref: '#/components/schemas/Uri'
          description: '<p>The S3 object location of the the transcript.</p> <p>Use this URI to access the transcript. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcript in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>'
        RedactedTranscriptFileUri:
          $ref: '#/components/schemas/Uri'
          description: '<p>The S3 object location of the redacted transcript.</p> <p>Use this URI to access the redacated transcript. If you specified an S3 bucket in the <code>OutputBucketName</code> field when you created the job, this is the URI of that bucket. If you chose to store the transcript in Amazon Transcribe, this is a shareable URL that provides secure access to that location.</p>'
      description: Identifies the location of a transcription.
    TranscriptionJobSummary:
      type: object
      properties:
        TranscriptionJobName:
          $ref: '#/components/schemas/TranscriptionJobName'
          description: The name of the transcription job.
        CreationTime:
          $ref: '#/components/schemas/DateTime'
          description: A timestamp that shows when the job was created.
        StartTime:
          $ref: '#/components/schemas/DateTime'
          description: A timestamp that shows when the job started processing.
        CompletionTime:
          $ref: '#/components/schemas/DateTime'
          description: A timestamp that shows when the job was completed.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code for the input speech.
        TranscriptionJobStatus:
          $ref: '#/components/schemas/TranscriptionJobStatus'
          description: 'The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, a description of the error.'
        OutputLocationType:
          $ref: '#/components/schemas/OutputLocationType'
          description: <p>Indicates the location of the output of the transcription job.</p> <p>If the value is <code>CUSTOMER_BUCKET</code> then the location is the S3 bucket specified in the <code>outputBucketName</code> field when the transcription job was started with the <code>StartTranscriptionJob</code> operation.</p> <p>If the value is <code>SERVICE_BUCKET</code> then the output is stored by Amazon Transcribe and can be retrieved using the URI in the <code>GetTranscriptionJob</code> response's <code>TranscriptFileUri</code> field.</p>
        ContentRedaction:
          $ref: '#/components/schemas/ContentRedaction'
          description: The content redaction settings of the transcription job.
      description: Provides a summary of information about a transcription job.
    VocabularyInfo:
      type: object
      properties:
        VocabularyName:
          $ref: '#/components/schemas/VocabularyName'
          description: The name of the vocabulary.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the vocabulary entries.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the vocabulary was last modified.
        VocabularyState:
          $ref: '#/components/schemas/VocabularyState'
          description: The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.
      description: 'Provides information about a custom vocabulary. '
    VocabularyFilterInfo:
      type: object
      properties:
        VocabularyFilterName:
          $ref: '#/components/schemas/VocabularyFilterName'
          description: The name of the vocabulary filter. The name must be unique in the account that holds the filter.
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
          description: The language code of the words in the vocabulary filter.
        LastModifiedTime:
          $ref: '#/components/schemas/DateTime'
          description: The date and time that the vocabulary was last updated.
      description: Provides information about a vocabulary filter.
    Word:
      type: string
      minLength: 1
      maxLength: 256
security:
  - hmac: []
