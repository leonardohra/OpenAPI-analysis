openapi: 3.0.0
info:
  version: '2016-11-28'
  x-release: v4
  title: Amazon Lightsail
  description: '<p>Amazon Lightsail is the easiest way to get started with AWS for developers who just need virtual private servers. Lightsail includes everything you need to launch your project quickly - a virtual machine, a managed database, SSD-based storage, data transfer, DNS management, and a static IP - for a low, predictable price. You manage those Lightsail servers through the Lightsail console or by using the API or command-line interface (CLI).</p> <p>For more information about Lightsail concepts and tasks, see the <a href="https://lightsail.aws.amazon.com/ls/docs/all">Lightsail Dev Guide</a>.</p> <p>To use the Lightsail API or the CLI, you will need to use AWS Identity and Access Management (IAM) to generate access keys. For details about how to set this up, see the <a href="http://lightsail.aws.amazon.com/ls/docs/how-to/article/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli">Lightsail Dev Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: lightsail
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lightsail-2016-11-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/lightsail/'
servers:
  - url: 'http://lightsail.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Lightsail multi-region endpoint
  - url: 'https://lightsail.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Lightsail multi-region endpoint
  - url: 'http://lightsail.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Lightsail endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://lightsail.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Lightsail endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=Lightsail_20161128.AllocateStaticIp':
    post:
      operationId: AllocateStaticIp
      description: Allocates a static IP address.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocateStaticIpResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocateStaticIpRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AllocateStaticIp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.AttachDisk':
    post:
      operationId: AttachDisk
      description: '<p>Attaches a block storage disk to a running or stopped Lightsail instance and exposes it to the instance with the specified disk name.</p> <p>The <code>attach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachDiskResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDiskRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachDisk
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.AttachInstancesToLoadBalancer':
    post:
      operationId: AttachInstancesToLoadBalancer
      description: '<p>Attaches one or more Lightsail instances to a load balancer.</p> <p>After some time, the instances are attached to the load balancer and the health check status is available.</p> <p>The <code>attach instances to load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachInstancesToLoadBalancerResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachInstancesToLoadBalancerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachInstancesToLoadBalancer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.AttachLoadBalancerTlsCertificate':
    post:
      operationId: AttachLoadBalancerTlsCertificate
      description: '<p>Attaches a Transport Layer Security (TLS) certificate to your load balancer. TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>Once you create and validate your certificate, you can attach it to your load balancer. You can also use this API to rotate the certificates on your account. Use the <code>AttachLoadBalancerTlsCertificate</code> action with the non-attached certificate, and it will replace the existing one and become the attached certificate.</p> <p>The <code>AttachLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachLoadBalancerTlsCertificateResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachLoadBalancerTlsCertificateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachLoadBalancerTlsCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.AttachStaticIp':
    post:
      operationId: AttachStaticIp
      description: Attaches a static IP address to a specific Amazon Lightsail instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachStaticIpResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachStaticIpRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachStaticIp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CloseInstancePublicPorts':
    post:
      operationId: CloseInstancePublicPorts
      description: '<p>Closes the public ports on a specific Amazon Lightsail instance.</p> <p>The <code>close instance public ports</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseInstancePublicPortsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseInstancePublicPortsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CloseInstancePublicPorts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CopySnapshot':
    post:
      operationId: CopySnapshot
      description: '<p>Copies a manual snapshot of an instance or disk as another manual snapshot, or copies an automatic snapshot of an instance or disk as a manual snapshot. This operation can also be used to copy a manual or automatic snapshot of an instance or a disk from one AWS Region to another in Amazon Lightsail.</p> <p>When copying a <i>manual snapshot</i>, be sure to define the <code>source region</code>, <code>source snapshot name</code>, and <code>target snapshot name</code> parameters.</p> <p>When copying an <i>automatic snapshot</i>, be sure to define the <code>source region</code>, <code>source resource name</code>, <code>target snapshot name</code>, and either the <code>restore date</code> or the <code>use latest restorable auto snapshot</code> parameters.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopySnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopySnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CopySnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateCloudFormationStack':
    post:
      operationId: CreateCloudFormationStack
      description: '<p>Creates an AWS CloudFormation stack, which creates a new Amazon EC2 instance from an exported Amazon Lightsail snapshot. This operation results in a CloudFormation stack record that can be used to track the AWS CloudFormation stack created. Use the <code>get cloud formation stack records</code> operation to get a list of the CloudFormation stacks created.</p> <important> <p>Wait until after your new Amazon EC2 instance is created before running the <code>create cloud formation stack</code> operation again with the same export snapshot record.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCloudFormationStackResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCloudFormationStackRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateCloudFormationStack
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateContactMethod':
    post:
      operationId: CreateContactMethod
      description: '<p>Creates an email or SMS text message contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications in Amazon Lightsail</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContactMethodResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactMethodRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateContactMethod
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateDisk':
    post:
      operationId: CreateDisk
      description: '<p>Creates a block storage disk that can be attached to an Amazon Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>).</p> <p>The <code>create disk</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDiskResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiskRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDisk
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateDiskFromSnapshot':
    post:
      operationId: CreateDiskFromSnapshot
      description: '<p>Creates a block storage disk from a manual or automatic snapshot of a disk. The resulting disk can be attached to an Amazon Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>).</p> <p>The <code>create disk from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>disk snapshot name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDiskFromSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiskFromSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDiskFromSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateDiskSnapshot':
    post:
      operationId: CreateDiskSnapshot
      description: '<p>Creates a snapshot of a block storage disk. You can use snapshots for backups, to make copies of disks, and to save data before shutting down a Lightsail instance.</p> <p>You can take a snapshot of an attached disk that is in use; however, snapshots only capture data that has been written to your disk at the time the snapshot command is issued. This may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the disk long enough to take a snapshot, your snapshot should be complete. Nevertheless, if you cannot pause all file writes to the disk, you should unmount the disk from within the Lightsail instance, issue the create disk snapshot command, and then remount the disk to ensure a consistent and complete snapshot. You may remount and use your disk while the snapshot status is pending.</p> <p>You can also use this operation to create a snapshot of an instance''s system volume. You might want to do this, for example, to recover data from the system volume of a botched instance or to create a backup of the system volume like you would for a block storage disk. To create a snapshot of a system volume, just define the <code>instance name</code> parameter when issuing the snapshot command, and a snapshot of the defined instance''s system volume will be created. After the snapshot is available, you can create a block storage disk from the snapshot and attach it to a running instance to access the data on the disk.</p> <p>The <code>create disk snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDiskSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiskSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDiskSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateDomain':
    post:
      operationId: CreateDomain
      description: '<p>Creates a domain resource for the specified domain (e.g., example.com).</p> <p>The <code>create domain</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateDomainEntry':
    post:
      operationId: CreateDomainEntry
      description: '<p>Creates one of the following entry records associated with the domain: Address (A), canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</p> <p>The <code>create domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainEntryResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainEntryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDomainEntry
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateInstanceSnapshot':
    post:
      operationId: CreateInstanceSnapshot
      description: '<p>Creates a snapshot of a specific virtual private server, or <i>instance</i>. You can use a snapshot to create a new instance that is based on that snapshot.</p> <p>The <code>create instance snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstanceSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateInstanceSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateInstances':
    post:
      operationId: CreateInstances
      description: '<p>Creates one or more Amazon Lightsail instances.</p> <p>The <code>create instances</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstancesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateInstancesFromSnapshot':
    post:
      operationId: CreateInstancesFromSnapshot
      description: '<p>Creates one or more new instances from a manual or automatic snapshot of an instance.</p> <p>The <code>create instances from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>instance snapshot name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstancesFromSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesFromSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateInstancesFromSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateKeyPair':
    post:
      operationId: CreateKeyPair
      description: '<p>Creates an SSH key pair.</p> <p>The <code>create key pair</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKeyPairResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyPairRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateKeyPair
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateLoadBalancer':
    post:
      operationId: CreateLoadBalancer
      description: '<p>Creates a Lightsail load balancer. To learn more about deciding whether to load balance your application, see <a href="https://lightsail.aws.amazon.com/ls/docs/how-to/article/configure-lightsail-instances-for-load-balancing">Configure your Lightsail instances for load balancing</a>. You can create up to 5 load balancers per AWS Region in your account.</p> <p>When you create a load balancer, you can specify a unique name and port settings. To change additional load balancer settings, use the <code>UpdateLoadBalancerAttribute</code> operation.</p> <p>The <code>create load balancer</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLoadBalancerResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoadBalancerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateLoadBalancer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateLoadBalancerTlsCertificate':
    post:
      operationId: CreateLoadBalancerTlsCertificate
      description: '<p>Creates a Lightsail load balancer TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>The <code>CreateLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLoadBalancerTlsCertificateResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoadBalancerTlsCertificateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateLoadBalancerTlsCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabase':
    post:
      operationId: CreateRelationalDatabase
      description: '<p>Creates a new database in Amazon Lightsail.</p> <p>The <code>create relational database</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRelationalDatabaseResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRelationalDatabaseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateRelationalDatabase
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseFromSnapshot':
    post:
      operationId: CreateRelationalDatabaseFromSnapshot
      description: '<p>Creates a new database from an existing database snapshot in Amazon Lightsail.</p> <p>You can create a new database from a snapshot in if something goes wrong with your original database, or to change it to a different plan, such as a high availability or standard plan.</p> <p>The <code>create relational database from snapshot</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by relationalDatabaseSnapshotName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRelationalDatabaseFromSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRelationalDatabaseFromSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateRelationalDatabaseFromSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseSnapshot':
    post:
      operationId: CreateRelationalDatabaseSnapshot
      description: '<p>Creates a snapshot of your database in Amazon Lightsail. You can use snapshots for backups, to make copies of a database, and to save data before deleting a database.</p> <p>The <code>create relational database snapshot</code> operation supports tag-based access control via request tags. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRelationalDatabaseSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRelationalDatabaseSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateRelationalDatabaseSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteAlarm':
    post:
      operationId: DeleteAlarm
      description: '<p>Deletes an alarm.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAlarmResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '483':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAlarmRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteAlarm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteAutoSnapshot':
    post:
      operationId: DeleteAutoSnapshot
      description: 'Deletes an automatic snapshot of an instance or disk. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAutoSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAutoSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteAutoSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteContactMethod':
    post:
      operationId: DeleteContactMethod
      description: '<p>Deletes a contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications in Amazon Lightsail</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteContactMethodResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '483':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteContactMethodRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteContactMethod
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteDisk':
    post:
      operationId: DeleteDisk
      description: '<p>Deletes the specified block storage disk. The disk must be in the <code>available</code> state (not attached to a Lightsail instance).</p> <note> <p>The disk may remain in the <code>deleting</code> state for several minutes.</p> </note> <p>The <code>delete disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDiskResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDiskRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDisk
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteDiskSnapshot':
    post:
      operationId: DeleteDiskSnapshot
      description: '<p>Deletes the specified disk snapshot.</p> <p>When you make periodic snapshots of a disk, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the disk.</p> <p>The <code>delete disk snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk snapshot name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDiskSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDiskSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDiskSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteDomain':
    post:
      operationId: DeleteDomain
      description: '<p>Deletes the specified domain recordset and all of its domain records.</p> <p>The <code>delete domain</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteDomainEntry':
    post:
      operationId: DeleteDomainEntry
      description: '<p>Deletes a specific domain entry.</p> <p>The <code>delete domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDomainEntryResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainEntryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDomainEntry
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteInstance':
    post:
      operationId: DeleteInstance
      description: '<p>Deletes an Amazon Lightsail instance.</p> <p>The <code>delete instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstanceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInstanceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteInstanceSnapshot':
    post:
      operationId: DeleteInstanceSnapshot
      description: '<p>Deletes a specific snapshot of a virtual private server (or <i>instance</i>).</p> <p>The <code>delete instance snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance snapshot name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstanceSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInstanceSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteInstanceSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteKeyPair':
    post:
      operationId: DeleteKeyPair
      description: '<p>Deletes a specific SSH key pair.</p> <p>The <code>delete key pair</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>key pair name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKeyPairResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteKeyPairRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteKeyPair
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteKnownHostKeys':
    post:
      operationId: DeleteKnownHostKeys
      description: '<p>Deletes the known host key or certificate used by the Amazon Lightsail browser-based SSH or RDP clients to authenticate an instance. This operation enables the Lightsail browser-based SSH or RDP clients to connect to the instance after a host key mismatch.</p> <important> <p>Perform this operation only if you were expecting the host key or certificate mismatch or if you are familiar with the new host key or certificate on the instance. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-troubleshooting-browser-based-ssh-rdp-client-connection">Troubleshooting connection issues when using the Amazon Lightsail browser-based SSH or RDP client</a>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnownHostKeysResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteKnownHostKeysRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteKnownHostKeys
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancer':
    post:
      operationId: DeleteLoadBalancer
      description: '<p>Deletes a Lightsail load balancer and all its associated SSL/TLS certificates. Once the load balancer is deleted, you will need to create a new load balancer, create a new certificate, and verify domain ownership again.</p> <p>The <code>delete load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoadBalancerResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLoadBalancerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteLoadBalancer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancerTlsCertificate':
    post:
      operationId: DeleteLoadBalancerTlsCertificate
      description: '<p>Deletes an SSL/TLS certificate associated with a Lightsail load balancer.</p> <p>The <code>DeleteLoadBalancerTlsCertificate</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoadBalancerTlsCertificateResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLoadBalancerTlsCertificateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteLoadBalancerTlsCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabase':
    post:
      operationId: DeleteRelationalDatabase
      description: '<p>Deletes a database in Amazon Lightsail.</p> <p>The <code>delete relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRelationalDatabaseResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRelationalDatabaseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteRelationalDatabase
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabaseSnapshot':
    post:
      operationId: DeleteRelationalDatabaseSnapshot
      description: '<p>Deletes a database snapshot in Amazon Lightsail.</p> <p>The <code>delete relational database snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRelationalDatabaseSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRelationalDatabaseSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteRelationalDatabaseSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DetachDisk':
    post:
      operationId: DetachDisk
      description: '<p>Detaches a stopped block storage disk from a Lightsail instance. Make sure to unmount any file systems on the device within your operating system before stopping the instance and detaching the disk.</p> <p>The <code>detach disk</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>disk name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachDiskResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachDiskRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DetachDisk
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DetachInstancesFromLoadBalancer':
    post:
      operationId: DetachInstancesFromLoadBalancer
      description: '<p>Detaches the specified instances from a Lightsail load balancer.</p> <p>This operation waits until the instances are no longer needed before they are detached from the load balancer.</p> <p>The <code>detach instances from load balancer</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachInstancesFromLoadBalancerResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachInstancesFromLoadBalancerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DetachInstancesFromLoadBalancer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DetachStaticIp':
    post:
      operationId: DetachStaticIp
      description: Detaches a static IP from the Amazon Lightsail instance to which it is attached.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachStaticIpResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachStaticIpRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DetachStaticIp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DisableAddOn':
    post:
      operationId: DisableAddOn
      description: 'Disables an add-on for an Amazon Lightsail resource. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableAddOnResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableAddOnRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DisableAddOn
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.DownloadDefaultKeyPair':
    post:
      operationId: DownloadDefaultKeyPair
      description: Downloads the default SSH key pair from the user's account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadDefaultKeyPairResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadDefaultKeyPairRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DownloadDefaultKeyPair
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.EnableAddOn':
    post:
      operationId: EnableAddOn
      description: 'Enables or modifies an add-on for an Amazon Lightsail resource. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableAddOnResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableAddOnRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.EnableAddOn
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.ExportSnapshot':
    post:
      operationId: ExportSnapshot
      description: '<p>Exports an Amazon Lightsail instance or block storage disk snapshot to Amazon Elastic Compute Cloud (Amazon EC2). This operation results in an export snapshot record that can be used with the <code>create cloud formation stack</code> operation to create new Amazon EC2 instances.</p> <p>Exported instance snapshots appear in Amazon EC2 as Amazon Machine Images (AMIs), and the instance system disk appears as an Amazon Elastic Block Store (Amazon EBS) volume. Exported disk snapshots appear in Amazon EC2 as Amazon EBS volumes. Snapshots are exported to the same Amazon Web Services Region in Amazon EC2 as the source Lightsail snapshot.</p> <p/> <p>The <code>export snapshot</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>source snapshot name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p> <note> <p>Use the <code>get instance snapshots</code> or <code>get disk snapshots</code> operations to get a list of snapshots that you can export to Amazon EC2.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.ExportSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetActiveNames':
    post:
      operationId: GetActiveNames
      description: Returns the names of all active (not deleted) resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActiveNamesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActiveNamesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetActiveNames
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetAlarms':
    post:
      operationId: GetAlarms
      description: '<p>Returns information about the configured alarms. Specify an alarm name in your request to return information about a specific alarm, or specify a monitored resource name to return information about all alarms for a specific resource.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAlarmsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '483':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAlarmsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetAlarms
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetAutoSnapshots':
    post:
      operationId: GetAutoSnapshots
      description: 'Returns the available automatic snapshots for an instance or disk. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAutoSnapshotsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAutoSnapshotsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetAutoSnapshots
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetBlueprints':
    post:
      operationId: GetBlueprints
      description: '<p>Returns the list of available instance images, or <i>blueprints</i>. You can use a blueprint to create a new instance already running a specific operating system, as well as a preinstalled app or development stack. The software each instance is running depends on the blueprint image you choose.</p> <note> <p>Use active blueprints when creating new instances. Inactive blueprints are listed to support customers with existing instances and are not necessarily available to create new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlueprintsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBlueprintsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetBlueprints
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetBundles':
    post:
      operationId: GetBundles
      description: Returns the list of bundles that are available for purchase. A bundle describes the specs for your virtual private server (or <i>instance</i>).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBundlesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBundlesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetBundles
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetCloudFormationStackRecords':
    post:
      operationId: GetCloudFormationStackRecords
      description: <p>Returns the CloudFormation stack record created as a result of the <code>create cloud formation stack</code> operation.</p> <p>An AWS CloudFormation stack is used to create a new Amazon EC2 instance from an exported Lightsail snapshot.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCloudFormationStackRecordsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCloudFormationStackRecordsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetCloudFormationStackRecords
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetContactMethods':
    post:
      operationId: GetContactMethods
      description: '<p>Returns information about the configured contact methods. Specify a protocol in your request to return information about a specific contact method.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications in Amazon Lightsail</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactMethodsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetContactMethodsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetContactMethods
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetDisk':
    post:
      operationId: GetDisk
      description: Returns information about a specific block storage disk.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiskResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDiskRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDisk
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetDiskSnapshot':
    post:
      operationId: GetDiskSnapshot
      description: Returns information about a specific block storage disk snapshot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiskSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDiskSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDiskSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetDiskSnapshots':
    post:
      operationId: GetDiskSnapshots
      description: Returns information about all block storage disk snapshots in your AWS account and region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDiskSnapshotsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDiskSnapshotsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDiskSnapshots
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetDisks':
    post:
      operationId: GetDisks
      description: Returns information about all block storage disks in your AWS account and region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDisksResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDisksRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDisks
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetDomain':
    post:
      operationId: GetDomain
      description: Returns information about a specific domain recordset.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetDomains':
    post:
      operationId: GetDomains
      description: Returns a list of all domains in the user's account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDomainsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDomainsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDomains
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetExportSnapshotRecords':
    post:
      operationId: GetExportSnapshotRecords
      description: <p>Returns the export snapshot record created as a result of the <code>export snapshot</code> operation.</p> <p>An export snapshot record can be used to create a new Amazon EC2 instance and its related resources with the <code>create cloud formation stack</code> operation.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExportSnapshotRecordsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExportSnapshotRecordsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetExportSnapshotRecords
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstance':
    post:
      operationId: GetInstance
      description: 'Returns information about a specific Amazon Lightsail instance, which is a virtual private server.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstanceAccessDetails':
    post:
      operationId: GetInstanceAccessDetails
      description: '<p>Returns temporary SSH keys you can use to connect to a specific virtual private server, or <i>instance</i>.</p> <p>The <code>get instance access details</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceAccessDetailsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceAccessDetailsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceAccessDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstanceMetricData':
    post:
      operationId: GetInstanceMetricData
      description: 'Returns the data points for the specified Amazon Lightsail instance metric, given an instance name.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceMetricDataResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceMetricDataRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceMetricData
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstancePortStates':
    post:
      operationId: GetInstancePortStates
      description: 'Returns the port states for a specific virtual private server, or <i>instance</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstancePortStatesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstancePortStatesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstancePortStates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshot':
    post:
      operationId: GetInstanceSnapshot
      description: Returns information about a specific instance snapshot.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshots':
    post:
      operationId: GetInstanceSnapshots
      description: Returns all instance snapshots for the user's account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceSnapshotsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceSnapshotsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceSnapshots
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstanceState':
    post:
      operationId: GetInstanceState
      description: Returns the state of a specific instance. Works on one instance at a time.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceStateResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceStateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceState
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetInstances':
    post:
      operationId: GetInstances
      description: 'Returns information about all Amazon Lightsail virtual private servers, or <i>instances</i>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstancesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstancesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetKeyPair':
    post:
      operationId: GetKeyPair
      description: Returns information about a specific key pair.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKeyPairResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetKeyPairRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetKeyPair
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetKeyPairs':
    post:
      operationId: GetKeyPairs
      description: Returns information about all key pairs in the user's account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKeyPairsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetKeyPairsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetKeyPairs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetLoadBalancer':
    post:
      operationId: GetLoadBalancer
      description: Returns information about the specified Lightsail load balancer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoadBalancerResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLoadBalancerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetLoadBalancerMetricData':
    post:
      operationId: GetLoadBalancerMetricData
      description: Returns information about health metrics for your Lightsail load balancer.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoadBalancerMetricDataResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLoadBalancerMetricDataRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancerMetricData
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetLoadBalancerTlsCertificates':
    post:
      operationId: GetLoadBalancerTlsCertificates
      description: '<p>Returns information about the TLS certificates that are associated with the specified Lightsail load balancer.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>You can have a maximum of 2 certificates associated with a Lightsail load balancer. One is active and the other is inactive.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoadBalancerTlsCertificatesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLoadBalancerTlsCertificatesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancerTlsCertificates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetLoadBalancers':
    post:
      operationId: GetLoadBalancers
      description: Returns information about all load balancers in an account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoadBalancersResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLoadBalancersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetOperation':
    post:
      operationId: GetOperation
      description: 'Returns information about a specific operation. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOperationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetOperation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetOperations':
    post:
      operationId: GetOperations
      description: '<p>Returns information about all operations.</p> <p>Results are returned from oldest to newest, up to a maximum of 200. Results can be paged by making each subsequent call to <code>GetOperations</code> use the maximum (last) <code>statusChangedAt</code> value from the previous request.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOperationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetOperations
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetOperationsForResource':
    post:
      operationId: GetOperationsForResource
      description: 'Gets operations for a specific resource (e.g., an instance or a static IP).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOperationsForResourceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOperationsForResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetOperationsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRegions':
    post:
      operationId: GetRegions
      description: Returns a list of all valid regions for Amazon Lightsail. Use the <code>include availability zones</code> parameter to also return the Availability Zones in a region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRegionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRegions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabase':
    post:
      operationId: GetRelationalDatabase
      description: Returns information about a specific database in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabase
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBlueprints':
    post:
      operationId: GetRelationalDatabaseBlueprints
      description: <p>Returns a list of available database blueprints in Amazon Lightsail. A blueprint describes the major engine version of a database.</p> <p>You can use a blueprint ID to create a new database that runs a specific database engine.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseBlueprintsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseBlueprintsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseBlueprints
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBundles':
    post:
      operationId: GetRelationalDatabaseBundles
      description: <p>Returns the list of bundles that are available in Amazon Lightsail. A bundle describes the performance specifications for a database.</p> <p>You can use a bundle ID to create a new database with explicit performance specifications.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseBundlesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseBundlesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseBundles
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseEvents':
    post:
      operationId: GetRelationalDatabaseEvents
      description: Returns a list of events for a specific database in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseEventsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseEventsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseEvents
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogEvents':
    post:
      operationId: GetRelationalDatabaseLogEvents
      description: Returns a list of log events for a database in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseLogEventsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseLogEventsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseLogEvents
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogStreams':
    post:
      operationId: GetRelationalDatabaseLogStreams
      description: Returns a list of available log streams for a specific database in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseLogStreamsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseLogStreamsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseLogStreams
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMasterUserPassword':
    post:
      operationId: GetRelationalDatabaseMasterUserPassword
      description: '<p>Returns the current, previous, or pending versions of the master user password for a Lightsail database.</p> <p>The <code>GetRelationalDatabaseMasterUserPassword</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseMasterUserPasswordResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseMasterUserPasswordRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseMasterUserPassword
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMetricData':
    post:
      operationId: GetRelationalDatabaseMetricData
      description: Returns the data points of the specified metric for a database in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseMetricDataResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseMetricDataRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseMetricData
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseParameters':
    post:
      operationId: GetRelationalDatabaseParameters
      description: '<p>Returns all of the runtime parameters offered by the underlying database software, or engine, for a specific database in Amazon Lightsail.</p> <p>In addition to the parameter names and values, this operation returns other information about each parameter. This information includes whether changes require a reboot, whether the parameter is modifiable, the allowed values, and the data types.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseParametersResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseParametersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseParameters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshot':
    post:
      operationId: GetRelationalDatabaseSnapshot
      description: Returns information about a specific database snapshot in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseSnapshotResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseSnapshotRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseSnapshot
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshots':
    post:
      operationId: GetRelationalDatabaseSnapshots
      description: Returns information about all of your database snapshots in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabaseSnapshotsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabaseSnapshotsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseSnapshots
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetRelationalDatabases':
    post:
      operationId: GetRelationalDatabases
      description: Returns information about all of your databases in Amazon Lightsail.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRelationalDatabasesResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRelationalDatabasesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabases
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetStaticIp':
    post:
      operationId: GetStaticIp
      description: Returns information about a specific static IP.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStaticIpResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStaticIpRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetStaticIp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.GetStaticIps':
    post:
      operationId: GetStaticIps
      description: Returns information about all static IPs in the user's account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStaticIpsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStaticIpsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetStaticIps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.ImportKeyPair':
    post:
      operationId: ImportKeyPair
      description: Imports a public SSH key from a specific key pair.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportKeyPairResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportKeyPairRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.ImportKeyPair
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.IsVpcPeered':
    post:
      operationId: IsVpcPeered
      description: Returns a Boolean value indicating whether your Lightsail VPC is peered.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsVpcPeeredResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsVpcPeeredRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.IsVpcPeered
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.OpenInstancePublicPorts':
    post:
      operationId: OpenInstancePublicPorts
      description: '<p>Adds public ports to an Amazon Lightsail instance.</p> <p>The <code>open instance public ports</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenInstancePublicPortsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenInstancePublicPortsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.OpenInstancePublicPorts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.PeerVpc':
    post:
      operationId: PeerVpc
      description: Tries to peer the Lightsail VPC with the user's default VPC.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerVpcResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeerVpcRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.PeerVpc
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.PutAlarm':
    post:
      operationId: PutAlarm
      description: '<p>Creates or updates an alarm, and associates it with the specified metric.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p> <p>When this action creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.</p> <p>When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm. The alarm is then evaluated with the updated configuration.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAlarmResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAlarmRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.PutAlarm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.PutInstancePublicPorts':
    post:
      operationId: PutInstancePublicPorts
      description: '<p>Sets the specified open ports for an Amazon Lightsail instance, and closes all ports for every protocol not included in the current request.</p> <p>The <code>put instance public ports</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInstancePublicPortsResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInstancePublicPortsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.PutInstancePublicPorts
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.RebootInstance':
    post:
      operationId: RebootInstance
      description: '<p>Restarts a specific instance.</p> <p>The <code>reboot instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootInstanceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootInstanceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.RebootInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.RebootRelationalDatabase':
    post:
      operationId: RebootRelationalDatabase
      description: '<p>Restarts a specific database in Amazon Lightsail.</p> <p>The <code>reboot relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootRelationalDatabaseResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootRelationalDatabaseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.RebootRelationalDatabase
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.ReleaseStaticIp':
    post:
      operationId: ReleaseStaticIp
      description: Deletes a specific static IP from your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseStaticIpResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseStaticIpRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.ReleaseStaticIp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.SendContactMethodVerification':
    post:
      operationId: SendContactMethodVerification
      description: '<p>Sends a verification request to an email contact method to ensure it’s owned by the requester. SMS contact methods don’t need to be verified.</p> <p>A contact method is used to send you notifications about your Amazon Lightsail resources. You can add one email address and one mobile phone number contact method in each AWS Region. However, SMS text messaging is not supported in some AWS Regions, and SMS text messages cannot be sent to some countries/regions. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications in Amazon Lightsail</a>.</p> <p>A verification request is sent to the contact method when you initially create it. Use this action to send another verification request if a previous verification request was deleted, or has expired.</p> <important> <p>Notifications are not sent to an email contact method until after it is verified, and confirmed as valid.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendContactMethodVerificationResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '483':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendContactMethodVerificationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.SendContactMethodVerification
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.StartInstance':
    post:
      operationId: StartInstance
      description: '<p>Starts a specific Amazon Lightsail instance from a stopped state. To restart an instance, use the <code>reboot instance</code> operation.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip">Lightsail Dev Guide</a>.</p> </note> <p>The <code>start instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartInstanceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StartInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.StartRelationalDatabase':
    post:
      operationId: StartRelationalDatabase
      description: '<p>Starts a specific database from a stopped state in Amazon Lightsail. To restart a database, use the <code>reboot relational database</code> operation.</p> <p>The <code>start relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRelationalDatabaseResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRelationalDatabaseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StartRelationalDatabase
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.StopInstance':
    post:
      operationId: StopInstance
      description: '<p>Stops a specific Amazon Lightsail instance that is currently running.</p> <note> <p>When you start a stopped instance, Lightsail assigns a new public IP address to the instance. To use the same IP address after stopping and starting an instance, create a static IP address and attach it to the instance. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip">Lightsail Dev Guide</a>.</p> </note> <p>The <code>stop instance</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>instance name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopInstanceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StopInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.StopRelationalDatabase':
    post:
      operationId: StopRelationalDatabase
      description: '<p>Stops a specific database that is currently running in Amazon Lightsail.</p> <p>The <code>stop relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRelationalDatabaseResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRelationalDatabaseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StopRelationalDatabase
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.TagResource':
    post:
      operationId: TagResource
      description: '<p>Adds one or more tags to the specified Amazon Lightsail resource. Each resource can have a maximum of 50 tags. Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.</p> <p>The <code>tag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>resource name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.TestAlarm':
    post:
      operationId: TestAlarm
      description: '<p>Tests an alarm by displaying a banner on the Amazon Lightsail console. If a notification trigger is configured for the specified alarm, the test also sends a notification to the notification protocol (<code>Email</code> and/or <code>SMS</code>) configured for the alarm.</p> <p>An alarm is used to monitor a single metric for one of your resources. When a metric condition is met, the alarm can notify you by email, SMS text message, and a banner displayed on the Amazon Lightsail console. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestAlarmResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '483':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestAlarmRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.TestAlarm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.UnpeerVpc':
    post:
      operationId: UnpeerVpc
      description: Attempts to unpeer the Lightsail VPC from the user's default VPC.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnpeerVpcResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnpeerVpcRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UnpeerVpc
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.UntagResource':
    post:
      operationId: UntagResource
      description: '<p>Deletes the specified set of tag keys and their values from the specified Amazon Lightsail resource.</p> <p>The <code>untag resource</code> operation supports tag-based access control via request tags and resource tags applied to the resource identified by <code>resource name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.UpdateDomainEntry':
    post:
      operationId: UpdateDomainEntry
      description: '<p>Updates a domain recordset after it is created.</p> <p>The <code>update domain entry</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>domain name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainEntryResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainEntryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateDomainEntry
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.UpdateLoadBalancerAttribute':
    post:
      operationId: UpdateLoadBalancerAttribute
      description: '<p>Updates the specified attribute for a load balancer. You can only update one attribute at a time.</p> <p>The <code>update load balancer attribute</code> operation supports tag-based access control via resource tags applied to the resource identified by <code>load balancer name</code>. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLoadBalancerAttributeResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoadBalancerAttributeRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateLoadBalancerAttribute
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabase':
    post:
      operationId: UpdateRelationalDatabase
      description: '<p>Allows the update of one or more attributes of a database in Amazon Lightsail.</p> <p>Updates are applied immediately, or in cases where the updates could result in an outage, are applied during the database''s predefined maintenance window.</p> <p>The <code>update relational database</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRelationalDatabaseResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRelationalDatabaseRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateRelationalDatabase
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabaseParameters':
    post:
      operationId: UpdateRelationalDatabaseParameters
      description: '<p>Allows the update of one or more parameters of a database in Amazon Lightsail.</p> <p>Parameter updates don''t cause outages; therefore, their application is not subject to the preferred maintenance window. However, there are two ways in which parameter updates are applied: <code>dynamic</code> or <code>pending-reboot</code>. Parameters marked with a <code>dynamic</code> apply type are applied immediately. Parameters marked with a <code>pending-reboot</code> apply type are applied only after the database is rebooted using the <code>reboot relational database</code> operation.</p> <p>The <code>update relational database parameters</code> operation supports tag-based access control via resource tags applied to the resource identified by relationalDatabaseName. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail Dev Guide</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRelationalDatabaseParametersResult'
        '480':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationFailureException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthenticatedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRelationalDatabaseParametersRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateRelationalDatabaseParameters
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AllocateStaticIpResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    AllocateStaticIpRequest:
      type: object
      required:
        - staticIpName
      title: AllocateStaticIpRequest
      properties:
        staticIpName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the static IP address.
    ServiceException: {}
    InvalidInputException: {}
    NotFoundException: {}
    OperationFailureException: {}
    AccessDeniedException: {}
    AccountSetupInProgressException: {}
    UnauthenticatedException: {}
    AttachDiskResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    AttachDiskRequest:
      type: object
      required:
        - diskName
        - instanceName
        - diskPath
      title: AttachDiskRequest
      properties:
        diskName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The unique Lightsail disk name (e.g., <code>my-disk</code>).'
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the Lightsail instance where you want to utilize the storage disk.
        diskPath:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The disk path to expose to the instance (e.g., <code>/dev/xvdf</code>).'
    AttachInstancesToLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    AttachInstancesToLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
        - instanceNames
      title: AttachInstancesToLoadBalancerRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the load balancer.
        instanceNames:
          $ref: '#/components/schemas/ResourceNameList'
          description: '<p>An array of strings representing the instance name(s) you want to attach to your load balancer.</p> <p>An instance must be <code>running</code> before you can attach it to your load balancer.</p> <p>There are no additional limits on the number of instances you can attach to your load balancer, aside from the limit of Lightsail instances you can create in your account (20).</p>'
    AttachLoadBalancerTlsCertificateResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: '<p>An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.</p> <p>These SSL/TLS certificates are only usable by Lightsail load balancers. You can''t get the certificate and use it for another purpose.</p>'
    AttachLoadBalancerTlsCertificateRequest:
      type: object
      required:
        - loadBalancerName
        - certificateName
      title: AttachLoadBalancerTlsCertificateRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the load balancer to which you want to associate the SSL/TLS certificate.
        certificateName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your SSL/TLS certificate.
    AttachStaticIpResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    AttachStaticIpRequest:
      type: object
      required:
        - staticIpName
        - instanceName
      title: AttachStaticIpRequest
      properties:
        staticIpName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the static IP.
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The instance name to which you want to attach the static IP address.
    CloseInstancePublicPortsResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CloseInstancePublicPortsRequest:
      type: object
      required:
        - portInfo
        - instanceName
      title: CloseInstancePublicPortsRequest
      properties:
        portInfo:
          $ref: '#/components/schemas/PortInfo'
          description: Information about the public port you are trying to close.
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance on which you're attempting to close the public ports.
    CopySnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CopySnapshotRequest:
      type: object
      required:
        - targetSnapshotName
        - sourceRegion
      title: CopySnapshotRequest
      properties:
        sourceSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the source manual snapshot to copy.</p> <p>Constraint:</p> <ul> <li> <p>Define this parameter only when copying a manual snapshot as another manual snapshot.</p> </li> </ul>'
        sourceResourceName:
          $ref: '#/components/schemas/string'
          description: '<p>The name of the source instance or disk from which the source automatic snapshot was created.</p> <p>Constraint:</p> <ul> <li> <p>Define this parameter only when copying an automatic snapshot as a manual snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-keeping-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
        restoreDate:
          $ref: '#/components/schemas/string'
          description: '<p>The date of the source automatic snapshot to copy. Use the <code>get auto snapshots</code> operation to identify the dates of the available automatic snapshots.</p> <p>Constraints:</p> <ul> <li> <p>Must be specified in <code>YYYY-MM-DD</code> format.</p> </li> <li> <p>This parameter cannot be defined together with the <code>use latest restorable auto snapshot</code> parameter. The <code>restore date</code> and <code>use latest restorable auto snapshot</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when copying an automatic snapshot as a manual snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-keeping-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
        useLatestRestorableAutoSnapshot:
          $ref: '#/components/schemas/boolean'
          description: '<p>A Boolean value to indicate whether to use the latest available automatic snapshot of the specified source instance or disk.</p> <p>Constraints:</p> <ul> <li> <p>This parameter cannot be defined together with the <code>restore date</code> parameter. The <code>use latest restorable auto snapshot</code> and <code>restore date</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when copying an automatic snapshot as a manual snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-keeping-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
        targetSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the new manual snapshot to be created as a copy.
        sourceRegion:
          $ref: '#/components/schemas/RegionName'
          description: The AWS Region where the source manual or automatic snapshot is located.
    CreateCloudFormationStackResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateCloudFormationStackRequest:
      type: object
      required:
        - instances
      title: CreateCloudFormationStackRequest
      properties:
        instances:
          $ref: '#/components/schemas/InstanceEntryList'
          description: An array of parameters that will be used to create the new Amazon EC2 instance. You can only pass one instance entry at a time in this array. You will get an invalid parameter error if you pass more than one instance entry in this array.
    CreateContactMethodResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateContactMethodRequest:
      type: object
      required:
        - protocol
        - contactEndpoint
      title: CreateContactMethodRequest
      properties:
        protocol:
          $ref: '#/components/schemas/ContactProtocol'
          description: '<p>The protocol of the contact method, such as <code>Email</code> or <code>SMS</code> (text messaging).</p> <p>The <code>SMS</code> protocol is supported only in the following AWS Regions.</p> <ul> <li> <p>US East (N. Virginia) (<code>us-east-1</code>)</p> </li> <li> <p>US West (Oregon) (<code>us-west-2</code>)</p> </li> <li> <p>Europe (Ireland) (<code>eu-west-1</code>)</p> </li> <li> <p>Asia Pacific (Tokyo) (<code>ap-northeast-1</code>)</p> </li> <li> <p>Asia Pacific (Singapore) (<code>ap-southeast-1</code>)</p> </li> <li> <p>Asia Pacific (Sydney) (<code>ap-southeast-2</code>)</p> </li> </ul> <p>For a list of countries/regions where SMS text messages can be sent, and the latest AWS Regions where SMS text messaging is supported, see <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-supported-regions-countries.html">Supported Regions and Countries</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>For more information about notifications in Amazon Lightsail, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications in Amazon Lightsail</a>.</p>'
        contactEndpoint:
          $ref: '#/components/schemas/StringMax256'
          description: '<p>The destination of the contact method, such as an email address or a mobile phone number.</p> <p>Use the E.164 format when specifying a mobile phone number. E.164 is a standard for the phone number structure used for international telecommunication. Phone numbers that follow this format can have a maximum of 15 digits, and they are prefixed with the plus character (+) and the country code. For example, a U.S. phone number in E.164 format would be specified as +1XXX5550100. For more information, see <a href="https://en.wikipedia.org/wiki/E.164">E.164</a> in Wikipedia.</p>'
    CreateDiskResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateDiskRequest:
      type: object
      required:
        - diskName
        - availabilityZone
        - sizeInGb
      title: CreateDiskRequest
      properties:
        diskName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The unique Lightsail disk name (e.g., <code>my-disk</code>).'
        availabilityZone:
          $ref: '#/components/schemas/NonEmptyString'
          description: '<p>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Use the same Availability Zone as the Lightsail instance to which you want to attach the disk.</p> <p>Use the <code>get regions</code> operation to list the Availability Zones where Lightsail is currently available.</p>'
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: 'The size of the disk in GB (e.g., <code>32</code>).'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
        addOns:
          $ref: '#/components/schemas/AddOnRequestList'
          description: An array of objects that represent the add-ons to enable for the new disk.
    CreateDiskFromSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateDiskFromSnapshotRequest:
      type: object
      required:
        - diskName
        - availabilityZone
        - sizeInGb
      title: CreateDiskFromSnapshotRequest
      properties:
        diskName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The unique Lightsail disk name (e.g., <code>my-disk</code>).'
        diskSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the disk snapshot (e.g., <code>my-snapshot</code>) from which to create the new storage disk.</p> <p>Constraint:</p> <ul> <li> <p>This parameter cannot be defined together with the <code>source disk name</code> parameter. The <code>disk snapshot name</code> and <code>source disk name</code> parameters are mutually exclusive.</p> </li> </ul>'
        availabilityZone:
          $ref: '#/components/schemas/NonEmptyString'
          description: '<p>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Choose the same Availability Zone as the Lightsail instance where you want to create the disk.</p> <p>Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.</p>'
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: 'The size of the disk in GB (e.g., <code>32</code>).'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
        addOns:
          $ref: '#/components/schemas/AddOnRequestList'
          description: An array of objects that represent the add-ons to enable for the new disk.
        sourceDiskName:
          $ref: '#/components/schemas/string'
          description: '<p>The name of the source disk from which the source automatic snapshot was created.</p> <p>Constraints:</p> <ul> <li> <p>This parameter cannot be defined together with the <code>disk snapshot name</code> parameter. The <code>source disk name</code> and <code>disk snapshot name</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when creating a new disk from an automatic snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
        restoreDate:
          $ref: '#/components/schemas/string'
          description: '<p>The date of the automatic snapshot to use for the new disk. Use the <code>get auto snapshots</code> operation to identify the dates of the available automatic snapshots.</p> <p>Constraints:</p> <ul> <li> <p>Must be specified in <code>YYYY-MM-DD</code> format.</p> </li> <li> <p>This parameter cannot be defined together with the <code>use latest restorable auto snapshot</code> parameter. The <code>restore date</code> and <code>use latest restorable auto snapshot</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when creating a new disk from an automatic snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
        useLatestRestorableAutoSnapshot:
          $ref: '#/components/schemas/boolean'
          description: '<p>A Boolean value to indicate whether to use the latest available automatic snapshot.</p> <p>Constraints:</p> <ul> <li> <p>This parameter cannot be defined together with the <code>restore date</code> parameter. The <code>use latest restorable auto snapshot</code> and <code>restore date</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when creating a new disk from an automatic snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
    CreateDiskSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateDiskSnapshotRequest:
      type: object
      required:
        - diskSnapshotName
      title: CreateDiskSnapshotRequest
      properties:
        diskName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The unique name of the source disk (e.g., <code>Disk-Virginia-1</code>).</p> <note> <p>This parameter cannot be defined together with the <code>instance name</code> parameter. The <code>disk name</code> and <code>instance name</code> parameters are mutually exclusive.</p> </note>'
        diskSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the destination disk snapshot (e.g., <code>my-disk-snapshot</code>) based on the source disk.'
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The unique name of the source instance (e.g., <code>Amazon_Linux-512MB-Virginia-1</code>). When this is defined, a snapshot of the instance''s system volume is created.</p> <note> <p>This parameter cannot be defined together with the <code>disk name</code> parameter. The <code>instance name</code> and <code>disk name</code> parameters are mutually exclusive.</p> </note>'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateDomainResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateDomainRequest:
      type: object
      required:
        - domainName
      title: CreateDomainRequest
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: '<p>The domain name to manage (e.g., <code>example.com</code>).</p> <note> <p>You cannot register a new domain name using Lightsail. You must register a domain name using Amazon Route 53 or another domain name registrar. If you have already registered your domain, you can enter its name in this parameter to manage the DNS records for that domain.</p> </note>'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateDomainEntryResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateDomainEntryRequest:
      type: object
      required:
        - domainName
        - domainEntry
      title: CreateDomainEntryRequest
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: 'The domain name (e.g., <code>example.com</code>) for which you want to create the domain entry.'
        domainEntry:
          $ref: '#/components/schemas/DomainEntry'
          description: An array of key-value pairs containing information about the domain entry request.
    CreateInstanceSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateInstanceSnapshotRequest:
      type: object
      required:
        - instanceSnapshotName
        - instanceName
      title: CreateInstanceSnapshotRequest
      properties:
        instanceSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name for your new snapshot.
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The Lightsail instance on which to base your snapshot.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateInstancesResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateInstancesRequest:
      type: object
      required:
        - instanceNames
        - availabilityZone
        - blueprintId
        - bundleId
      title: CreateInstancesRequest
      properties:
        instanceNames:
          $ref: '#/components/schemas/StringList'
          description: 'The names to use for your new Lightsail instances. Separate multiple values using quotation marks and commas, for example: <code>["MyFirstInstance","MySecondInstance"]</code> '
        availabilityZone:
          $ref: '#/components/schemas/string'
          description: 'The Availability Zone in which to create your instance. Use the following format: <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones by using the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get regions</a> operation. Be sure to add the <code>include Availability Zones</code> parameter to your request.'
        customImageName:
          deprecated: true
          $ref: '#/components/schemas/ResourceName'
          description: '<p>(Deprecated) The name for your custom image.</p> <note> <p>In releases prior to June 12, 2017, this parameter was ignored by the API. It is now deprecated.</p> </note>'
        blueprintId:
          $ref: '#/components/schemas/NonEmptyString'
          description: '<p>The ID for a virtual private server image (e.g., <code>app_wordpress_4_4</code> or <code>app_lamp_7_0</code>). Use the <code>get blueprints</code> operation to return a list of available images (or <i>blueprints</i>).</p> <note> <p>Use active blueprints when creating new instances. Inactive blueprints are listed to support customers with existing instances and are not necessarily available to create new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases.</p> </note>'
        bundleId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The bundle of specification information for your virtual private server (or <i>instance</i>), including the pricing plan (e.g., <code>micro_1_0</code>).'
        userData:
          $ref: '#/components/schemas/string'
          description: '<p>A launch script you can create that configures a server with additional user data. For example, you might want to run <code>apt-get -y update</code>.</p> <note> <p>Depending on the machine image you choose, the command to get software on your instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the <a href="https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image">Dev Guide</a>.</p> </note>'
        keyPairName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your key pair.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
        addOns:
          $ref: '#/components/schemas/AddOnRequestList'
          description: An array of objects representing the add-ons to enable for the new instance.
    CreateInstancesFromSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateInstancesFromSnapshotRequest:
      type: object
      required:
        - instanceNames
        - availabilityZone
        - bundleId
      title: CreateInstancesFromSnapshotRequest
      properties:
        instanceNames:
          $ref: '#/components/schemas/StringList'
          description: The names for your new instances.
        attachedDiskMapping:
          $ref: '#/components/schemas/AttachedDiskMap'
          description: An object containing information about one or more disk mappings.
        availabilityZone:
          $ref: '#/components/schemas/string'
          description: 'The Availability Zone where you want to create your instances. Use the following formatting: <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones by using the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get regions</a> operation. Be sure to add the <code>include Availability Zones</code> parameter to your request.'
        instanceSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the instance snapshot on which you are basing your new instances. Use the get instance snapshots operation to return information about your existing snapshots.</p> <p>Constraint:</p> <ul> <li> <p>This parameter cannot be defined together with the <code>source instance name</code> parameter. The <code>instance snapshot name</code> and <code>source instance name</code> parameters are mutually exclusive.</p> </li> </ul>'
        bundleId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The bundle of specification information for your virtual private server (or <i>instance</i>), including the pricing plan (e.g., <code>micro_1_0</code>).'
        userData:
          $ref: '#/components/schemas/string'
          description: '<p>You can create a launch script that configures a server with additional user data. For example, <code>apt-get -y update</code>.</p> <note> <p>Depending on the machine image you choose, the command to get software on your instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the <a href="https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image">Dev Guide</a>.</p> </note>'
        keyPairName:
          $ref: '#/components/schemas/ResourceName'
          description: The name for your key pair.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
        addOns:
          $ref: '#/components/schemas/AddOnRequestList'
          description: An array of objects representing the add-ons to enable for the new instance.
        sourceInstanceName:
          $ref: '#/components/schemas/string'
          description: '<p>The name of the source instance from which the source automatic snapshot was created.</p> <p>Constraints:</p> <ul> <li> <p>This parameter cannot be defined together with the <code>instance snapshot name</code> parameter. The <code>source instance name</code> and <code>instance snapshot name</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when creating a new instance from an automatic snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
        restoreDate:
          $ref: '#/components/schemas/string'
          description: '<p>The date of the automatic snapshot to use for the new instance. Use the <code>get auto snapshots</code> operation to identify the dates of the available automatic snapshots.</p> <p>Constraints:</p> <ul> <li> <p>Must be specified in <code>YYYY-MM-DD</code> format.</p> </li> <li> <p>This parameter cannot be defined together with the <code>use latest restorable auto snapshot</code> parameter. The <code>restore date</code> and <code>use latest restorable auto snapshot</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when creating a new instance from an automatic snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
        useLatestRestorableAutoSnapshot:
          $ref: '#/components/schemas/boolean'
          description: '<p>A Boolean value to indicate whether to use the latest available automatic snapshot.</p> <p>Constraints:</p> <ul> <li> <p>This parameter cannot be defined together with the <code>restore date</code> parameter. The <code>use latest restorable auto snapshot</code> and <code>restore date</code> parameters are mutually exclusive.</p> </li> <li> <p>Define this parameter only when creating a new instance from an automatic snapshot. For more information, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail Dev Guide</a>.</p> </li> </ul>'
    CreateKeyPairResult:
      type: object
      properties:
        keyPair:
          $ref: '#/components/schemas/KeyPair'
          description: An array of key-value pairs containing information about the new key pair you just created.
        publicKeyBase64:
          $ref: '#/components/schemas/Base64'
          description: A base64-encoded public key of the <code>ssh-rsa</code> type.
        privateKeyBase64:
          $ref: '#/components/schemas/Base64'
          description: A base64-encoded RSA private key.
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateKeyPairRequest:
      type: object
      required:
        - keyPairName
      title: CreateKeyPairRequest
      properties:
        keyPairName:
          $ref: '#/components/schemas/ResourceName'
          description: The name for your new key pair.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
        - instancePort
      title: CreateLoadBalancerRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your load balancer.
        instancePort:
          $ref: '#/components/schemas/Port'
          description: The instance port where you're creating your load balancer.
        healthCheckPath:
          $ref: '#/components/schemas/string'
          description: '<p>The path you provided to perform the load balancer health check. If you didn''t specify a health check path, Lightsail uses the root path of your website (e.g., <code>"/"</code>).</p> <p>You may want to specify a custom health check path other than the root of your application if your home page loads slowly or has a lot of media or scripting on it.</p>'
        certificateName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the SSL/TLS certificate.</p> <p>If you specify <code>certificateName</code>, then <code>certificateDomainName</code> is required (and vice-versa).</p>'
        certificateDomainName:
          $ref: '#/components/schemas/DomainName'
          description: '<p>The domain name with which your certificate is associated (e.g., <code>example.com</code>).</p> <p>If you specify <code>certificateDomainName</code>, then <code>certificateName</code> is required (and vice-versa).</p>'
        certificateAlternativeNames:
          $ref: '#/components/schemas/DomainNameList'
          description: 'The optional alternative domains and subdomains to use with your SSL/TLS certificate (e.g., <code>www.example.com</code>, <code>example.com</code>, <code>m.example.com</code>, <code>blog.example.com</code>).'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateLoadBalancerTlsCertificateResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateLoadBalancerTlsCertificateRequest:
      type: object
      required:
        - loadBalancerName
        - certificateName
        - certificateDomainName
      title: CreateLoadBalancerTlsCertificateRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The load balancer name where you want to create the SSL/TLS certificate.
        certificateName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The SSL/TLS certificate name.</p> <p>You can have up to 10 certificates in your account at one time. Each Lightsail load balancer can have up to 2 certificates associated with it at one time. There is also an overall limit to the number of certificates that can be issue in a 365-day period. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>.</p>'
        certificateDomainName:
          $ref: '#/components/schemas/DomainName'
          description: 'The domain name (e.g., <code>example.com</code>) for your SSL/TLS certificate.'
        certificateAlternativeNames:
          $ref: '#/components/schemas/DomainNameList'
          description: 'An array of strings listing alternative domains and subdomains for your SSL/TLS certificate. Lightsail will de-dupe the names for you. You can have a maximum of 9 alternative names (in addition to the 1 primary domain). We do not support wildcards (e.g., <code>*.example.com</code>).'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
        - relationalDatabaseBlueprintId
        - relationalDatabaseBundleId
        - masterDatabaseName
        - masterUsername
      title: CreateRelationalDatabaseRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name to use for your new database.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p> </li> <li> <p>The first and last character must be a letter or number.</p> </li> </ul>'
        availabilityZone:
          $ref: '#/components/schemas/string'
          description: <p>The Availability Zone in which to create your new database. Use the <code>us-east-2a</code> case-sensitive format.</p> <p>You can get a list of Availability Zones by using the <code>get regions</code> operation. Be sure to add the <code>include relational database Availability Zones</code> parameter to your request.</p>
        relationalDatabaseBlueprintId:
          $ref: '#/components/schemas/string'
          description: <p>The blueprint ID for your new database. A blueprint describes the major engine version of a database.</p> <p>You can get a list of database blueprints IDs by using the <code>get relational database blueprints</code> operation.</p>
        relationalDatabaseBundleId:
          $ref: '#/components/schemas/string'
          description: <p>The bundle ID for your new database. A bundle describes the performance specifications for your database.</p> <p>You can get a list of database bundle IDs by using the <code>get relational database bundles</code> operation.</p>
        masterDatabaseName:
          $ref: '#/components/schemas/string'
          description: '<p>The name of the master database created when the Lightsail database resource is created.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 64 alphanumeric characters.</p> </li> <li> <p>Cannot be a word reserved by the specified database engine</p> </li> </ul>'
        masterUsername:
          $ref: '#/components/schemas/string'
          description: '<p>The master user name for your new database.</p> <p>Constraints:</p> <ul> <li> <p>Master user name is required.</p> </li> <li> <p>Must contain from 1 to 16 alphanumeric characters.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot be a reserved word for the database engine you choose.</p> <p>For more information about reserved words in MySQL 5.6 or 5.7, see the Keywords and Reserved Words articles for <a href="https://dev.mysql.com/doc/refman/5.6/en/keywords.html">MySQL 5.6</a> or <a href="https://dev.mysql.com/doc/refman/5.7/en/keywords.html">MySQL 5.7</a> respectively.</p> </li> </ul>'
        masterUserPassword:
          $ref: '#/components/schemas/SensitiveString'
          description: '<p>The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".</p> <p>Constraints: Must contain 8 to 41 characters.</p>'
        preferredBackupWindow:
          $ref: '#/components/schemas/string'
          description: '<p>The daily time range during which automated backups are created for your new database if automated backups are enabled.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region. For more information about the preferred backup window time blocks for each region, see the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Working With Backups</a> guide in the Amazon Relational Database Service (Amazon RDS) documentation.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the <code>hh24:mi-hh24:mi</code> format.</p> <p>Example: <code>16:00-16:30</code> </p> </li> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>'
        preferredMaintenanceWindow:
          $ref: '#/components/schemas/string'
          description: '<p>The weekly time range during which system maintenance can occur on your new database.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</p> </li> <li> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Example: <code>Tue:17:00-Tue:17:30</code> </p> </li> </ul>'
        publiclyAccessible:
          $ref: '#/components/schemas/boolean'
          description: Specifies the accessibility options for your new database. A value of <code>true</code> specifies a database that is available to resources outside of your Lightsail account. A value of <code>false</code> specifies a database that is available only to your Lightsail resources in the same region as your database.
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateRelationalDatabaseFromSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateRelationalDatabaseFromSnapshotRequest:
      type: object
      required:
        - relationalDatabaseName
      title: CreateRelationalDatabaseFromSnapshotRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name to use for your new database.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p> </li> <li> <p>The first and last character must be a letter or number.</p> </li> </ul>'
        availabilityZone:
          $ref: '#/components/schemas/string'
          description: <p>The Availability Zone in which to create your new database. Use the <code>us-east-2a</code> case-sensitive format.</p> <p>You can get a list of Availability Zones by using the <code>get regions</code> operation. Be sure to add the <code>include relational database Availability Zones</code> parameter to your request.</p>
        publiclyAccessible:
          $ref: '#/components/schemas/boolean'
          description: Specifies the accessibility options for your new database. A value of <code>true</code> specifies a database that is available to resources outside of your Lightsail account. A value of <code>false</code> specifies a database that is available only to your Lightsail resources in the same region as your database.
        relationalDatabaseSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database snapshot from which to create your new database.
        relationalDatabaseBundleId:
          $ref: '#/components/schemas/string'
          description: '<p>The bundle ID for your new database. A bundle describes the performance specifications for your database.</p> <p>You can get a list of database bundle IDs by using the <code>get relational database bundles</code> operation.</p> <p>When creating a new database from a snapshot, you cannot choose a bundle that is smaller than the bundle of the source database.</p>'
        sourceRelationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the source database.
        restoreTime:
          $ref: '#/components/schemas/IsoDate'
          description: '<p>The date and time to restore your database from.</p> <p>Constraints:</p> <ul> <li> <p>Must be before the latest restorable time for the database.</p> </li> <li> <p>Cannot be specified if the <code>use latest restorable time</code> parameter is <code>true</code>.</p> </li> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use a restore time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the restore time.</p> </li> </ul>'
        useLatestRestorableTime:
          $ref: '#/components/schemas/boolean'
          description: '<p>Specifies whether your database is restored from the latest backup time. A value of <code>true</code> restores from the latest backup time. </p> <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified if the <code>restore time</code> parameter is provided.</p>'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    CreateRelationalDatabaseSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    CreateRelationalDatabaseSnapshotRequest:
      type: object
      required:
        - relationalDatabaseName
        - relationalDatabaseSnapshotName
      title: CreateRelationalDatabaseSnapshotRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database on which to base your new snapshot.
        relationalDatabaseSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name for your new database snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p> </li> <li> <p>The first and last character must be a letter or number.</p> </li> </ul>'
        tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>The tag keys and optional values to add to the resource during create.</p> <p>To tag a resource after it has been created, see the <code>tag resource</code> operation.</p>'
    DeleteAlarmResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteAlarmRequest:
      type: object
      required:
        - alarmName
      title: DeleteAlarmRequest
      properties:
        alarmName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the alarm to delete.
    DeleteAutoSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteAutoSnapshotRequest:
      type: object
      required:
        - resourceName
        - date
      title: DeleteAutoSnapshotRequest
      properties:
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the source instance or disk from which to delete the automatic snapshot.
        date:
          $ref: '#/components/schemas/AutoSnapshotDate'
          description: The date of the automatic snapshot to delete in <code>YYYY-MM-DD</code> format. Use the <code>get auto snapshots</code> operation to get the available automatic snapshots for a resource.
    DeleteContactMethodResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteContactMethodRequest:
      type: object
      required:
        - protocol
      title: DeleteContactMethodRequest
      properties:
        protocol:
          $ref: '#/components/schemas/ContactProtocol'
          description: '<p>The protocol that will be deleted, such as <code>Email</code> or <code>SMS</code> (text messaging).</p> <note> <p>To delete an <code>Email</code> and an <code>SMS</code> contact method if you added both, you must run separate <code>DeleteContactMethod</code> actions to delete each protocol.</p> </note>'
    DeleteDiskResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteDiskRequest:
      type: object
      required:
        - diskName
      title: DeleteDiskRequest
      properties:
        diskName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The unique name of the disk you want to delete (e.g., <code>my-disk</code>).'
        forceDeleteAddOns:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value to indicate whether to delete the enabled add-ons for the disk.
    DeleteDiskSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteDiskSnapshotRequest:
      type: object
      required:
        - diskSnapshotName
      title: DeleteDiskSnapshotRequest
      properties:
        diskSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the disk snapshot you want to delete (e.g., <code>my-disk-snapshot</code>).'
    DeleteDomainResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteDomainRequest:
      type: object
      required:
        - domainName
      title: DeleteDomainRequest
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The specific domain name to delete.
    DeleteDomainEntryResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteDomainEntryRequest:
      type: object
      required:
        - domainName
        - domainEntry
      title: DeleteDomainEntryRequest
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain entry to delete.
        domainEntry:
          $ref: '#/components/schemas/DomainEntry'
          description: An array of key-value pairs containing information about your domain entries.
    DeleteInstanceResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteInstanceRequest:
      type: object
      required:
        - instanceName
      title: DeleteInstanceRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance to delete.
        forceDeleteAddOns:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value to indicate whether to delete the enabled add-ons for the disk.
    DeleteInstanceSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteInstanceSnapshotRequest:
      type: object
      required:
        - instanceSnapshotName
      title: DeleteInstanceSnapshotRequest
      properties:
        instanceSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the snapshot to delete.
    DeleteKeyPairResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteKeyPairRequest:
      type: object
      required:
        - keyPairName
      title: DeleteKeyPairRequest
      properties:
        keyPairName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the key pair to delete.
    DeleteKnownHostKeysResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteKnownHostKeysRequest:
      type: object
      required:
        - instanceName
      title: DeleteKnownHostKeysRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance for which you want to reset the host key or certificate.
    DeleteLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
      title: DeleteLoadBalancerRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the load balancer you want to delete.
    DeleteLoadBalancerTlsCertificateResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteLoadBalancerTlsCertificateRequest:
      type: object
      required:
        - loadBalancerName
        - certificateName
      title: DeleteLoadBalancerTlsCertificateRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The load balancer name.
        certificateName:
          $ref: '#/components/schemas/ResourceName'
          description: The SSL/TLS certificate name.
        force:
          $ref: '#/components/schemas/boolean'
          description: '<p>When <code>true</code>, forces the deletion of an SSL/TLS certificate.</p> <p>There can be two certificates associated with a Lightsail load balancer: the primary and the backup. The <code>force</code> parameter is required when the primary SSL/TLS certificate is in use by an instance attached to the load balancer.</p>'
    DeleteRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      title: DeleteRelationalDatabaseRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database that you are deleting.
        skipFinalSnapshot:
          $ref: '#/components/schemas/boolean'
          description: '<p>Determines whether a final database snapshot is created before your database is deleted. If <code>true</code> is specified, no database snapshot is created. If <code>false</code> is specified, a database snapshot is created before your database is deleted.</p> <p>You must specify the <code>final relational database snapshot name</code> parameter if the <code>skip final snapshot</code> parameter is <code>false</code>.</p> <p>Default: <code>false</code> </p>'
        finalRelationalDatabaseSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the database snapshot created if <code>skip final snapshot</code> is <code>false</code>, which is the default value for that parameter.</p> <note> <p>Specifying this parameter and also specifying the <code>skip final snapshot</code> parameter to <code>true</code> results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p> </li> <li> <p>The first and last character must be a letter or number.</p> </li> </ul>'
    DeleteRelationalDatabaseSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DeleteRelationalDatabaseSnapshotRequest:
      type: object
      required:
        - relationalDatabaseSnapshotName
      title: DeleteRelationalDatabaseSnapshotRequest
      properties:
        relationalDatabaseSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database snapshot that you are deleting.
    DetachDiskResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DetachDiskRequest:
      type: object
      required:
        - diskName
      title: DetachDiskRequest
      properties:
        diskName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The unique name of the disk you want to detach from your instance (e.g., <code>my-disk</code>).'
    DetachInstancesFromLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DetachInstancesFromLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
        - instanceNames
      title: DetachInstancesFromLoadBalancerRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the Lightsail load balancer.
        instanceNames:
          $ref: '#/components/schemas/ResourceNameList'
          description: An array of strings containing the names of the instances you want to detach from the load balancer.
    DetachStaticIpResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DetachStaticIpRequest:
      type: object
      required:
        - staticIpName
      title: DetachStaticIpRequest
      properties:
        staticIpName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the static IP to detach from the instance.
    DisableAddOnResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    DisableAddOnRequest:
      type: object
      required:
        - addOnType
        - resourceName
      title: DisableAddOnRequest
      properties:
        addOnType:
          $ref: '#/components/schemas/AddOnType'
          description: The add-on type to disable.
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the source resource for which to disable the add-on.
    DownloadDefaultKeyPairResult:
      type: object
      properties:
        publicKeyBase64:
          $ref: '#/components/schemas/Base64'
          description: A base64-encoded public key of the <code>ssh-rsa</code> type.
        privateKeyBase64:
          $ref: '#/components/schemas/Base64'
          description: A base64-encoded RSA private key.
    DownloadDefaultKeyPairRequest:
      type: object
      title: DownloadDefaultKeyPairRequest
      properties: {}
    EnableAddOnResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    EnableAddOnRequest:
      type: object
      required:
        - resourceName
        - addOnRequest
      title: EnableAddOnRequest
      properties:
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the source resource for which to enable or modify the add-on.
        addOnRequest:
          $ref: '#/components/schemas/AddOnRequest'
          description: An array of strings representing the add-on to enable or modify.
    ExportSnapshotResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    ExportSnapshotRequest:
      type: object
      required:
        - sourceSnapshotName
      title: ExportSnapshotRequest
      properties:
        sourceSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance or disk snapshot to be exported to Amazon EC2.
    GetActiveNamesResult:
      type: object
      properties:
        activeNames:
          $ref: '#/components/schemas/StringList'
          description: The list of active names returned by the get active names request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetActiveNames</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetActiveNamesRequest:
      type: object
      title: GetActiveNamesRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetActiveNames</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetAlarmsResult:
      type: object
      properties:
        alarms:
          $ref: '#/components/schemas/AlarmsList'
          description: An array of objects that describe the alarms.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetAlarms</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetAlarmsRequest:
      type: object
      title: GetAlarmsRequest
      properties:
        alarmName:
          $ref: '#/components/schemas/ResourceName'
          description: <p>The name of the alarm.</p> <p>Specify an alarm name to return information about a specific alarm.</p>
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetAlarms</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
        monitoredResourceName:
          $ref: '#/components/schemas/ResourceName'
          description: <p>The name of the Lightsail resource being monitored by the alarm.</p> <p>Specify a monitored resource name to return information about all alarms for a specific resource.</p>
    GetAutoSnapshotsResult:
      type: object
      properties:
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the source instance or disk for the automatic snapshots.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The resource type (e.g., <code>Instance</code> or <code>Disk</code>).'
        autoSnapshots:
          $ref: '#/components/schemas/AutoSnapshotDetailsList'
          description: An array of objects that describe the automatic snapshots that are available for the specified source instance or disk.
    GetAutoSnapshotsRequest:
      type: object
      required:
        - resourceName
      title: GetAutoSnapshotsRequest
      properties:
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the source instance or disk from which to get automatic snapshot information.
    GetBlueprintsResult:
      type: object
      properties:
        blueprints:
          $ref: '#/components/schemas/BlueprintList'
          description: An array of key-value pairs that contains information about the available blueprints.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetBlueprints</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetBlueprintsRequest:
      type: object
      title: GetBlueprintsRequest
      properties:
        includeInactive:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether to include inactive results in your request.
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetBlueprints</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetBundlesResult:
      type: object
      properties:
        bundles:
          $ref: '#/components/schemas/BundleList'
          description: An array of key-value pairs that contains information about the available bundles.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetBundles</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetBundlesRequest:
      type: object
      title: GetBundlesRequest
      properties:
        includeInactive:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value that indicates whether to include inactive bundle results in your request.
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetBundles</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetCloudFormationStackRecordsResult:
      type: object
      properties:
        cloudFormationStackRecords:
          $ref: '#/components/schemas/CloudFormationStackRecordList'
          description: A list of objects describing the CloudFormation stack records.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetCloudFormationStackRecords</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetCloudFormationStackRecordsRequest:
      type: object
      title: GetCloudFormationStackRecordsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetClouFormationStackRecords</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetContactMethodsResult:
      type: object
      properties:
        contactMethods:
          $ref: '#/components/schemas/ContactMethodsList'
          description: An array of objects that describe the contact methods.
    GetContactMethodsRequest:
      type: object
      title: GetContactMethodsRequest
      properties:
        protocols:
          $ref: '#/components/schemas/ContactProtocolsList'
          description: '<p>The protocols used to send notifications, such as <code>Email</code>, or <code>SMS</code> (text messaging).</p> <p>Specify a protocol in your request to return information about a specific contact method protocol.</p>'
    GetDiskResult:
      type: object
      properties:
        disk:
          $ref: '#/components/schemas/Disk'
          description: An object containing information about the disk.
    GetDiskRequest:
      type: object
      required:
        - diskName
      title: GetDiskRequest
      properties:
        diskName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the disk (e.g., <code>my-disk</code>).'
    GetDiskSnapshotResult:
      type: object
      properties:
        diskSnapshot:
          $ref: '#/components/schemas/DiskSnapshot'
          description: An object containing information about the disk snapshot.
    GetDiskSnapshotRequest:
      type: object
      required:
        - diskSnapshotName
      title: GetDiskSnapshotRequest
      properties:
        diskSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).'
    GetDiskSnapshotsResult:
      type: object
      properties:
        diskSnapshots:
          $ref: '#/components/schemas/DiskSnapshotList'
          description: An array of objects containing information about all block storage disk snapshots.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetDiskSnapshots</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetDiskSnapshotsRequest:
      type: object
      title: GetDiskSnapshotsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetDiskSnapshots</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetDisksResult:
      type: object
      properties:
        disks:
          $ref: '#/components/schemas/DiskList'
          description: An array of objects containing information about all block storage disks.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetDisks</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetDisksRequest:
      type: object
      title: GetDisksRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetDisks</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetDomainResult:
      type: object
      properties:
        domain:
          $ref: '#/components/schemas/Domain'
          description: An array of key-value pairs containing information about your get domain request.
    GetDomainRequest:
      type: object
      required:
        - domainName
      title: GetDomainRequest
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name for which your want to return information about.
    GetDomainsResult:
      type: object
      properties:
        domains:
          $ref: '#/components/schemas/DomainList'
          description: An array of key-value pairs containing information about each of the domain entries in the user's account.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetDomains</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetDomainsRequest:
      type: object
      title: GetDomainsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetDomains</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetExportSnapshotRecordsResult:
      type: object
      properties:
        exportSnapshotRecords:
          $ref: '#/components/schemas/ExportSnapshotRecordList'
          description: A list of objects describing the export snapshot records.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetExportSnapshotRecords</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetExportSnapshotRecordsRequest:
      type: object
      title: GetExportSnapshotRecordsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetExportSnapshotRecords</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetInstanceResult:
      type: object
      properties:
        instance:
          $ref: '#/components/schemas/Instance'
          description: An array of key-value pairs containing information about the specified instance.
    GetInstanceRequest:
      type: object
      required:
        - instanceName
      title: GetInstanceRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance.
    GetInstanceAccessDetailsResult:
      type: object
      properties:
        accessDetails:
          $ref: '#/components/schemas/InstanceAccessDetails'
          description: An array of key-value pairs containing information about a get instance access request.
    GetInstanceAccessDetailsRequest:
      type: object
      required:
        - instanceName
      title: GetInstanceAccessDetailsRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance to access.
        protocol:
          $ref: '#/components/schemas/InstanceAccessProtocol'
          description: The protocol to use to connect to your instance. Defaults to <code>ssh</code>.
    GetInstanceMetricDataResult:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/InstanceMetricName'
          description: The metric name to return data for.
        metricData:
          $ref: '#/components/schemas/MetricDatapointList'
          description: An array of key-value pairs containing information about the results of your get instance metric data request.
    GetInstanceMetricDataRequest:
      type: object
      required:
        - instanceName
        - metricName
        - period
        - startTime
        - endTime
        - unit
        - statistics
      title: GetInstanceMetricDataRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance for which you want to get metrics data.
        metricName:
          $ref: '#/components/schemas/InstanceMetricName'
          description: '<p>The metric for which you want to return information.</p> <p>Valid instance metric names are listed below, along with the most useful <code>statistics</code> to include in your request, and the published <code>unit</code> value.</p> <ul> <li> <p> <b> <code>CPUUtilization</code> </b> — The percentage of allocated compute units that are currently in use on the instance. This metric identifies the processing power to run the applications on the instance. Tools in your operating system can show a lower percentage than Lightsail when the instance is not allocated a full processor core.</p> <p> <code>Statistics</code>: The most useful statistics are <code>Maximum</code> and <code>Average</code>.</p> <p> <code>Unit</code>: The published unit is <code>Percent</code>.</p> </li> <li> <p> <b> <code>NetworkIn</code> </b> — The number of bytes received on all network interfaces by the instance. This metric identifies the volume of incoming network traffic to the instance. The number reported is the number of bytes received during the period. Because this metric is reported in 5-minute intervals, divide the reported number by 300 to find Bytes/second.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Bytes</code>.</p> </li> <li> <p> <b> <code>NetworkOut</code> </b> — The number of bytes sent out on all network interfaces by the instance. This metric identifies the volume of outgoing network traffic from the instance. The number reported is the number of bytes sent during the period. Because this metric is reported in 5-minute intervals, divide the reported number by 300 to find Bytes/second.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Bytes</code>.</p> </li> <li> <p> <b> <code>StatusCheckFailed</code> </b> — Reports whether the instance passed or failed both the instance status check and the system status check. This metric can be either 0 (passed) or 1 (failed). This metric data is available in 1-minute (60 seconds) granularity.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>StatusCheckFailed_Instance</code> </b> — Reports whether the instance passed or failed the instance status check. This metric can be either 0 (passed) or 1 (failed). This metric data is available in 1-minute (60 seconds) granularity.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>StatusCheckFailed_System</code> </b> — Reports whether the instance passed or failed the system status check. This metric can be either 0 (passed) or 1 (failed). This metric data is available in 1-minute (60 seconds) granularity.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> </ul>'
        period:
          $ref: '#/components/schemas/MetricPeriod'
          description: '<p>The granularity, in seconds, of the returned data points.</p> <p>The <code>StatusCheckFailed</code>, <code>StatusCheckFailed_Instance</code>, and <code>StatusCheckFailed_System</code> instance metric data is available in 1-minute (60 seconds) granularity. All other instance metric data is available in 5-minute (300 seconds) granularity.</p>'
        startTime:
          $ref: '#/components/schemas/timestamp'
          description: The start time of the time period.
        endTime:
          $ref: '#/components/schemas/timestamp'
          description: The end time of the time period.
        unit:
          $ref: '#/components/schemas/MetricUnit'
          description: 'The unit for the metric data request. Valid units depend on the metric data being required. For the valid units with each available metric, see the <code>metricName</code> parameter.'
        statistics:
          $ref: '#/components/schemas/MetricStatisticList'
          description: '<p>The statistic for the metric.</p> <p>The following statistics are available:</p> <ul> <li> <p> <code>Minimum</code> — The lowest value observed during the specified period. Use this value to determine low volumes of activity for your application.</p> </li> <li> <p> <code>Maximum</code> — The highest value observed during the specified period. Use this value to determine high volumes of activity for your application.</p> </li> <li> <p> <code>Sum</code> — All values submitted for the matching metric added together. You can use this statistic to determine the total volume of a metric.</p> </li> <li> <p> <code>Average</code> — The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum values, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum values. This comparison helps you to know when to increase or decrease your resources.</p> </li> <li> <p> <code>SampleCount</code> — The count, or number, of data points used for the statistical calculation.</p> </li> </ul>'
    GetInstancePortStatesResult:
      type: object
      properties:
        portStates:
          $ref: '#/components/schemas/InstancePortStateList'
          description: Information about the port states resulting from your request.
    GetInstancePortStatesRequest:
      type: object
      required:
        - instanceName
      title: GetInstancePortStatesRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance.
    GetInstanceSnapshotResult:
      type: object
      properties:
        instanceSnapshot:
          $ref: '#/components/schemas/InstanceSnapshot'
          description: An array of key-value pairs containing information about the results of your get instance snapshot request.
    GetInstanceSnapshotRequest:
      type: object
      required:
        - instanceSnapshotName
      title: GetInstanceSnapshotRequest
      properties:
        instanceSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the snapshot for which you are requesting information.
    GetInstanceSnapshotsResult:
      type: object
      properties:
        instanceSnapshots:
          $ref: '#/components/schemas/InstanceSnapshotList'
          description: An array of key-value pairs containing information about the results of your get instance snapshots request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetInstanceSnapshots</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetInstanceSnapshotsRequest:
      type: object
      title: GetInstanceSnapshotsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetInstanceSnapshots</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetInstanceStateResult:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/InstanceState'
          description: The state of the instance.
    GetInstanceStateRequest:
      type: object
      required:
        - instanceName
      title: GetInstanceStateRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance to get state information about.
    GetInstancesResult:
      type: object
      properties:
        instances:
          $ref: '#/components/schemas/InstanceList'
          description: An array of key-value pairs containing information about your instances.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetInstances</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetInstancesRequest:
      type: object
      title: GetInstancesRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetInstances</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetKeyPairResult:
      type: object
      properties:
        keyPair:
          $ref: '#/components/schemas/KeyPair'
          description: An array of key-value pairs containing information about the key pair.
    GetKeyPairRequest:
      type: object
      required:
        - keyPairName
      title: GetKeyPairRequest
      properties:
        keyPairName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the key pair for which you are requesting information.
    GetKeyPairsResult:
      type: object
      properties:
        keyPairs:
          $ref: '#/components/schemas/KeyPairList'
          description: An array of key-value pairs containing information about the key pairs.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetKeyPairs</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetKeyPairsRequest:
      type: object
      title: GetKeyPairsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetKeyPairs</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetLoadBalancerResult:
      type: object
      properties:
        loadBalancer:
          $ref: '#/components/schemas/LoadBalancer'
          description: An object containing information about your load balancer.
    GetLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
      title: GetLoadBalancerRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the load balancer.
    GetLoadBalancerMetricDataResult:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/LoadBalancerMetricName'
          description: '<p>The metric about which you are receiving information. Valid values are listed below, along with the most useful <code>statistics</code> to include in your request.</p> <ul> <li> <p> <b> <code>ClientTLSNegotiationErrorCount</code> </b> - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> </li> <li> <p> <b> <code>HealthyHostCount</code> </b> - The number of target instances that are considered healthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> </li> <li> <p> <b> <code>UnhealthyHostCount</code> </b> - The number of target instances that are considered unhealthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_4XX_Count</code> </b> - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_5XX_Count</code> </b> - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_2XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_3XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer. </p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_4XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_5XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>InstanceResponseTime</code> </b> - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p> </li> <li> <p> <b> <code>RejectedConnectionCount</code> </b> - The number of connections that were rejected because the load balancer had reached its maximum number of connections.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> </li> <li> <p> <b> <code>RequestCount</code> </b> - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> </ul>'
        metricData:
          $ref: '#/components/schemas/MetricDatapointList'
          description: An array of metric datapoint objects.
    GetLoadBalancerMetricDataRequest:
      type: object
      required:
        - loadBalancerName
        - metricName
        - period
        - startTime
        - endTime
        - unit
        - statistics
      title: GetLoadBalancerMetricDataRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the load balancer.
        metricName:
          $ref: '#/components/schemas/LoadBalancerMetricName'
          description: '<p>The metric for which you want to return information.</p> <p>Valid load balancer metric names are listed below, along with the most useful <code>statistics</code> to include in your request, and the published <code>unit</code> value.</p> <ul> <li> <p> <b> <code>ClientTLSNegotiationErrorCount</code> </b> — The number of TLS connections initiated by the client that did not establish a session with the load balancer due to a TLS error generated by the load balancer. Possible causes include a mismatch of ciphers or protocols.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>HealthyHostCount</code> </b> — The number of target instances that are considered healthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_2XX_Count</code> </b> — The number of HTTP 2XX response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_3XX_Count</code> </b> — The number of HTTP 3XX response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_4XX_Count</code> </b> — The number of HTTP 4XX response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_5XX_Count</code> </b> — The number of HTTP 5XX response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_4XX_Count</code> </b> — The number of HTTP 4XX client error codes that originated from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests were not received by the target instance. This count does not include response codes generated by the target instances.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_5XX_Count</code> </b> — The number of HTTP 5XX server error codes that originated from the load balancer. This does not include any response codes generated by the target instance. This metric is reported if there are no healthy instances attached to the load balancer, or if the request rate exceeds the capacity of the instances (spillover) or the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>InstanceResponseTime</code> </b> — The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p> <p> <code>Unit</code>: The published unit is <code>Seconds</code>.</p> </li> <li> <p> <b> <code>RejectedConnectionCount</code> </b> — The number of connections that were rejected because the load balancer had reached its maximum number of connections.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>RequestCount</code> </b> — The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>UnhealthyHostCount</code> </b> — The number of target instances that are considered unhealthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> </ul>'
        period:
          $ref: '#/components/schemas/MetricPeriod'
          description: 'The granularity, in seconds, of the returned data points.'
        startTime:
          $ref: '#/components/schemas/timestamp'
          description: The start time of the period.
        endTime:
          $ref: '#/components/schemas/timestamp'
          description: The end time of the period.
        unit:
          $ref: '#/components/schemas/MetricUnit'
          description: 'The unit for the metric data request. Valid units depend on the metric data being required. For the valid units with each available metric, see the <code>metricName</code> parameter.'
        statistics:
          $ref: '#/components/schemas/MetricStatisticList'
          description: '<p>The statistic for the metric.</p> <p>The following statistics are available:</p> <ul> <li> <p> <code>Minimum</code> — The lowest value observed during the specified period. Use this value to determine low volumes of activity for your application.</p> </li> <li> <p> <code>Maximum</code> — The highest value observed during the specified period. Use this value to determine high volumes of activity for your application.</p> </li> <li> <p> <code>Sum</code> — All values submitted for the matching metric added together. You can use this statistic to determine the total volume of a metric.</p> </li> <li> <p> <code>Average</code> — The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum values, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum values. This comparison helps you to know when to increase or decrease your resources.</p> </li> <li> <p> <code>SampleCount</code> — The count, or number, of data points used for the statistical calculation.</p> </li> </ul>'
    GetLoadBalancerTlsCertificatesResult:
      type: object
      properties:
        tlsCertificates:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateList'
          description: An array of LoadBalancerTlsCertificate objects describing your SSL/TLS certificates.
    GetLoadBalancerTlsCertificatesRequest:
      type: object
      required:
        - loadBalancerName
      title: GetLoadBalancerTlsCertificatesRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the load balancer you associated with your SSL/TLS certificate.
    GetLoadBalancersResult:
      type: object
      properties:
        loadBalancers:
          $ref: '#/components/schemas/LoadBalancerList'
          description: An array of LoadBalancer objects describing your load balancers.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetLoadBalancers</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetLoadBalancersRequest:
      type: object
      title: GetLoadBalancersRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetLoadBalancers</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetOperationResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    GetOperationRequest:
      type: object
      required:
        - operationId
      title: GetOperationRequest
      properties:
        operationId:
          $ref: '#/components/schemas/NonEmptyString'
          description: A GUID used to identify the operation.
    GetOperationsResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetOperations</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetOperationsRequest:
      type: object
      title: GetOperationsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetOperations</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetOperationsForResourceResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
        nextPageCount:
          deprecated: true
          $ref: '#/components/schemas/string'
          description: '<p>(Deprecated) Returns the number of pages of results that remain.</p> <note> <p>In releases prior to June 12, 2017, this parameter returned <code>null</code> by the API. It is now deprecated, and the API returns the <code>next page token</code> parameter instead.</p> </note>'
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetOperationsForResource</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetOperationsForResourceRequest:
      type: object
      required:
        - resourceName
      title: GetOperationsForResourceRequest
      properties:
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the resource for which you are requesting information.
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetOperationsForResource</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetRegionsResult:
      type: object
      properties:
        regions:
          $ref: '#/components/schemas/RegionList'
          description: An array of key-value pairs containing information about your get regions request.
    GetRegionsRequest:
      type: object
      title: GetRegionsRequest
      properties:
        includeAvailabilityZones:
          $ref: '#/components/schemas/boolean'
          description: 'A Boolean value indicating whether to also include Availability Zones in your get regions request. Availability Zones are indicated with a letter: e.g., <code>us-east-2a</code>.'
        includeRelationalDatabaseAvailabilityZones:
          $ref: '#/components/schemas/boolean'
          description: '&gt;A Boolean value indicating whether to also include Availability Zones for databases in your get regions request. Availability Zones are indicated with a letter (e.g., <code>us-east-2a</code>).'
    GetRelationalDatabaseResult:
      type: object
      properties:
        relationalDatabase:
          $ref: '#/components/schemas/RelationalDatabase'
          description: An object describing the specified database.
    GetRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      title: GetRelationalDatabaseRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database that you are looking up.
    GetRelationalDatabaseBlueprintsResult:
      type: object
      properties:
        blueprints:
          $ref: '#/components/schemas/RelationalDatabaseBlueprintList'
          description: An object describing the result of your get relational database blueprints request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetRelationalDatabaseBlueprints</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetRelationalDatabaseBlueprintsRequest:
      type: object
      title: GetRelationalDatabaseBlueprintsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetRelationalDatabaseBlueprints</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetRelationalDatabaseBundlesResult:
      type: object
      properties:
        bundles:
          $ref: '#/components/schemas/RelationalDatabaseBundleList'
          description: An object describing the result of your get relational database bundles request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetRelationalDatabaseBundles</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetRelationalDatabaseBundlesRequest:
      type: object
      title: GetRelationalDatabaseBundlesRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetRelationalDatabaseBundles</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetRelationalDatabaseEventsResult:
      type: object
      properties:
        relationalDatabaseEvents:
          $ref: '#/components/schemas/RelationalDatabaseEventList'
          description: An object describing the result of your get relational database events request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetRelationalDatabaseEvents</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetRelationalDatabaseEventsRequest:
      type: object
      required:
        - relationalDatabaseName
      title: GetRelationalDatabaseEventsRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database from which to get events.
        durationInMinutes:
          $ref: '#/components/schemas/integer'
          description: '<p>The number of minutes in the past from which to retrieve events. For example, to get all events from the past 2 hours, enter 120.</p> <p>Default: <code>60</code> </p> <p>The minimum is 1 and the maximum is 14 days (20160 minutes).</p>'
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetRelationalDatabaseEvents</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetRelationalDatabaseLogEventsResult:
      type: object
      properties:
        resourceLogEvents:
          $ref: '#/components/schemas/LogEventList'
          description: An object describing the result of your get relational database log events request.
        nextBackwardToken:
          $ref: '#/components/schemas/string'
          description: A token used for advancing to the previous page of results from your get relational database log events request.
        nextForwardToken:
          $ref: '#/components/schemas/string'
          description: A token used for advancing to the next page of results from your get relational database log events request.
    GetRelationalDatabaseLogEventsRequest:
      type: object
      required:
        - relationalDatabaseName
        - logStreamName
      title: GetRelationalDatabaseLogEventsRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database for which to get log events.
        logStreamName:
          $ref: '#/components/schemas/string'
          description: <p>The name of the log stream.</p> <p>Use the <code>get relational database log streams</code> operation to get a list of available log streams.</p>
        startTime:
          $ref: '#/components/schemas/IsoDate'
          description: '<p>The start of the time interval from which to get log events.</p> <p>Constraints:</p> <ul> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the start time.</p> </li> </ul>'
        endTime:
          $ref: '#/components/schemas/IsoDate'
          description: '<p>The end of the time interval from which to get log events.</p> <p>Constraints:</p> <ul> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the end time.</p> </li> </ul>'
        startFromHead:
          $ref: '#/components/schemas/boolean'
          description: '<p>Parameter to specify if the log should start from head or tail. If <code>true</code> is specified, the log event starts from the head of the log. If <code>false</code> is specified, the log event starts from the tail of the log.</p> <note> <p>For PostgreSQL, the default value of <code>false</code> is the only option available.</p> </note>'
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next or previous page of results from your request.</p> <p>To get a page token, perform an initial <code>GetRelationalDatabaseLogEvents</code> request. If your results are paginated, the response will return a next forward token and/or next backward token that you can specify as the page token in a subsequent request.</p>'
    GetRelationalDatabaseLogStreamsResult:
      type: object
      properties:
        logStreams:
          $ref: '#/components/schemas/StringList'
          description: An object describing the result of your get relational database log streams request.
    GetRelationalDatabaseLogStreamsRequest:
      type: object
      required:
        - relationalDatabaseName
      title: GetRelationalDatabaseLogStreamsRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database for which to get log streams.
    GetRelationalDatabaseMasterUserPasswordResult:
      type: object
      properties:
        masterUserPassword:
          $ref: '#/components/schemas/SensitiveString'
          description: The master user password for the <code>password version</code> specified.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the specified version of the master user password was created.
    GetRelationalDatabaseMasterUserPasswordRequest:
      type: object
      required:
        - relationalDatabaseName
      title: GetRelationalDatabaseMasterUserPasswordRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database for which to get the master user password.
        passwordVersion:
          $ref: '#/components/schemas/RelationalDatabasePasswordVersion'
          description: '<p>The password version to return.</p> <p>Specifying <code>CURRENT</code> or <code>PREVIOUS</code> returns the current or previous passwords respectively. Specifying <code>PENDING</code> returns the newest version of the password that will rotate to <code>CURRENT</code>. After the <code>PENDING</code> password rotates to <code>CURRENT</code>, the <code>PENDING</code> password is no longer available.</p> <p>Default: <code>CURRENT</code> </p>'
    GetRelationalDatabaseMetricDataResult:
      type: object
      properties:
        metricName:
          $ref: '#/components/schemas/RelationalDatabaseMetricName'
          description: The name of the metric.
        metricData:
          $ref: '#/components/schemas/MetricDatapointList'
          description: An object describing the result of your get relational database metric data request.
    GetRelationalDatabaseMetricDataRequest:
      type: object
      required:
        - relationalDatabaseName
        - metricName
        - period
        - startTime
        - endTime
        - unit
        - statistics
      title: GetRelationalDatabaseMetricDataRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database from which to get metric data.
        metricName:
          $ref: '#/components/schemas/RelationalDatabaseMetricName'
          description: '<p>The metric for which you want to return information.</p> <p>Valid relational database metric names are listed below, along with the most useful <code>statistics</code> to include in your request, and the published <code>unit</code> value. All relational database metric data is available in 1-minute (60 seconds) granularity.</p> <ul> <li> <p> <b> <code>CPUUtilization</code> </b> — The percentage of CPU utilization currently in use on the database.</p> <p> <code>Statistics</code>: The most useful statistics are <code>Maximum</code> and <code>Average</code>.</p> <p> <code>Unit</code>: The published unit is <code>Percent</code>.</p> </li> <li> <p> <b> <code>DatabaseConnections</code> </b> — The number of database connections in use.</p> <p> <code>Statistics</code>: The most useful statistics are <code>Maximum</code> and <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>DiskQueueDepth</code> </b> — The number of outstanding IOs (read/write requests) that are waiting to access the disk.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Count</code>.</p> </li> <li> <p> <b> <code>FreeStorageSpace</code> </b> — The amount of available storage space.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> <p> <code>Unit</code>: The published unit is <code>Bytes</code>.</p> </li> <li> <p> <b> <code>NetworkReceiveThroughput</code> </b> — The incoming (Receive) network traffic on the database, including both customer database traffic and AWS traffic used for monitoring and replication.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p> <p> <code>Unit</code>: The published unit is <code>Bytes/Second</code>.</p> </li> <li> <p> <b> <code>NetworkTransmitThroughput</code> </b> — The outgoing (Transmit) network traffic on the database, including both customer database traffic and AWS traffic used for monitoring and replication.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p> <p> <code>Unit</code>: The published unit is <code>Bytes/Second</code>.</p> </li> </ul>'
        period:
          $ref: '#/components/schemas/MetricPeriod'
          description: '<p>The granularity, in seconds, of the returned data points.</p> <p>All relational database metric data is available in 1-minute (60 seconds) granularity.</p>'
        startTime:
          $ref: '#/components/schemas/IsoDate'
          description: '<p>The start of the time interval from which to get metric data.</p> <p>Constraints:</p> <ul> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the start time.</p> </li> </ul>'
        endTime:
          $ref: '#/components/schemas/IsoDate'
          description: '<p>The end of the time interval from which to get metric data.</p> <p>Constraints:</p> <ul> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the end time.</p> </li> </ul>'
        unit:
          $ref: '#/components/schemas/MetricUnit'
          description: 'The unit for the metric data request. Valid units depend on the metric data being required. For the valid units with each available metric, see the <code>metricName</code> parameter.'
        statistics:
          $ref: '#/components/schemas/MetricStatisticList'
          description: '<p>The statistic for the metric.</p> <p>The following statistics are available:</p> <ul> <li> <p> <code>Minimum</code> — The lowest value observed during the specified period. Use this value to determine low volumes of activity for your application.</p> </li> <li> <p> <code>Maximum</code> — The highest value observed during the specified period. Use this value to determine high volumes of activity for your application.</p> </li> <li> <p> <code>Sum</code> — All values submitted for the matching metric added together. You can use this statistic to determine the total volume of a metric.</p> </li> <li> <p> <code>Average</code> — The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum values, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum values. This comparison helps you to know when to increase or decrease your resources.</p> </li> <li> <p> <code>SampleCount</code> — The count, or number, of data points used for the statistical calculation.</p> </li> </ul>'
    GetRelationalDatabaseParametersResult:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/RelationalDatabaseParameterList'
          description: An object describing the result of your get relational database parameters request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetRelationalDatabaseParameters</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetRelationalDatabaseParametersRequest:
      type: object
      required:
        - relationalDatabaseName
      title: GetRelationalDatabaseParametersRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database for which to get parameters.
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetRelationalDatabaseParameters</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetRelationalDatabaseSnapshotResult:
      type: object
      properties:
        relationalDatabaseSnapshot:
          $ref: '#/components/schemas/RelationalDatabaseSnapshot'
          description: An object describing the specified database snapshot.
    GetRelationalDatabaseSnapshotRequest:
      type: object
      required:
        - relationalDatabaseSnapshotName
      title: GetRelationalDatabaseSnapshotRequest
      properties:
        relationalDatabaseSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database snapshot for which to get information.
    GetRelationalDatabaseSnapshotsResult:
      type: object
      properties:
        relationalDatabaseSnapshots:
          $ref: '#/components/schemas/RelationalDatabaseSnapshotList'
          description: An object describing the result of your get relational database snapshots request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetRelationalDatabaseSnapshots</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetRelationalDatabaseSnapshotsRequest:
      type: object
      title: GetRelationalDatabaseSnapshotsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetRelationalDatabaseSnapshots</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetRelationalDatabasesResult:
      type: object
      properties:
        relationalDatabases:
          $ref: '#/components/schemas/RelationalDatabaseList'
          description: An object describing the result of your get relational databases request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetRelationalDatabases</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetRelationalDatabasesRequest:
      type: object
      title: GetRelationalDatabasesRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetRelationalDatabases</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    GetStaticIpResult:
      type: object
      properties:
        staticIp:
          $ref: '#/components/schemas/StaticIp'
          description: An array of key-value pairs containing information about the requested static IP.
    GetStaticIpRequest:
      type: object
      required:
        - staticIpName
      title: GetStaticIpRequest
      properties:
        staticIpName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the static IP in Lightsail.
    GetStaticIpsResult:
      type: object
      properties:
        staticIps:
          $ref: '#/components/schemas/StaticIpList'
          description: An array of key-value pairs containing information about your get static IPs request.
        nextPageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of resutls from your request.</p> <p>A next page token is not returned if there are no more results to display.</p> <p>To get the next page of results, perform another <code>GetStaticIps</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>'
    GetStaticIpsRequest:
      type: object
      title: GetStaticIpsRequest
      properties:
        pageToken:
          $ref: '#/components/schemas/string'
          description: '<p>The token to advance to the next page of results from your request.</p> <p>To get a page token, perform an initial <code>GetStaticIps</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p>'
    ImportKeyPairResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    ImportKeyPairRequest:
      type: object
      required:
        - keyPairName
        - publicKeyBase64
      title: ImportKeyPairRequest
      properties:
        keyPairName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the key pair for which you want to import the public key.
        publicKeyBase64:
          $ref: '#/components/schemas/Base64'
          description: A base64-encoded public key of the <code>ssh-rsa</code> type.
    IsVpcPeeredResult:
      type: object
      properties:
        isPeered:
          $ref: '#/components/schemas/boolean'
          description: 'Returns <code>true</code> if the Lightsail VPC is peered; otherwise, <code>false</code>.'
    IsVpcPeeredRequest:
      type: object
      title: IsVpcPeeredRequest
      properties: {}
    OpenInstancePublicPortsResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    OpenInstancePublicPortsRequest:
      type: object
      required:
        - portInfo
        - instanceName
      title: OpenInstancePublicPortsRequest
      properties:
        portInfo:
          $ref: '#/components/schemas/PortInfo'
          description: An array of key-value pairs containing information about the port mappings.
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance for which you want to open the public ports.
    PeerVpcResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    PeerVpcRequest:
      type: object
      title: PeerVpcRequest
      properties: {}
    PutAlarmResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    PutAlarmRequest:
      type: object
      required:
        - alarmName
        - metricName
        - monitoredResourceName
        - comparisonOperator
        - threshold
        - evaluationPeriods
      title: PutAlarmRequest
      properties:
        alarmName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name for the alarm. Specify the name of an existing alarm to update, and overwrite the previous configuration of the alarm.'
        metricName:
          $ref: '#/components/schemas/MetricName'
          description: '<p>The name of the metric to associate with the alarm.</p> <p>You can configure up to two alarms per metric.</p> <p>The following metrics are available for each resource type:</p> <ul> <li> <p> <b>Instances</b>: <code>CPUUtilization</code>, <code>NetworkIn</code>, <code>NetworkOut</code>, <code>StatusCheckFailed</code>, <code>StatusCheckFailed_Instance</code>, and <code>StatusCheckFailed_System</code>.</p> </li> <li> <p> <b>Load balancers</b>: <code>ClientTLSNegotiationErrorCount</code>, <code>HealthyHostCount</code>, <code>UnhealthyHostCount</code>, <code>HTTPCode_LB_4XX_Count</code>, <code>HTTPCode_LB_5XX_Count</code>, <code>HTTPCode_Instance_2XX_Count</code>, <code>HTTPCode_Instance_3XX_Count</code>, <code>HTTPCode_Instance_4XX_Count</code>, <code>HTTPCode_Instance_5XX_Count</code>, <code>InstanceResponseTime</code>, <code>RejectedConnectionCount</code>, and <code>RequestCount</code>.</p> </li> <li> <p> <b>Relational databases</b>: <code>CPUUtilization</code>, <code>DatabaseConnections</code>, <code>DiskQueueDepth</code>, <code>FreeStorageSpace</code>, <code>NetworkReceiveThroughput</code>, and <code>NetworkTransmitThroughput</code>.</p> </li> </ul>'
        monitoredResourceName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the Lightsail resource that will be monitored.</p> <p>Instances, load balancers, and relational databases are the only Lightsail resources that can currently be monitored by alarms.</p>'
        comparisonOperator:
          $ref: '#/components/schemas/ComparisonOperator'
          description: The arithmetic operation to use when comparing the specified statistic to the threshold. The specified statistic value is used as the first operand.
        threshold:
          $ref: '#/components/schemas/double'
          description: The value against which the specified statistic is compared.
        evaluationPeriods:
          $ref: '#/components/schemas/integer'
          description: '<p>The number of most recent periods over which data is compared to the specified threshold. If you are setting an "M out of N" alarm, this value (<code>evaluationPeriods</code>) is the N.</p> <p>If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies the rolling period of time in which data points are evaluated.</p> <p>Each evaluation period is five minutes long. For example, specify an evaluation period of 24 to evaluate a metric over a rolling period of two hours.</p> <p>You can specify a minimum valuation period of 1 (5 minutes), and a maximum evaluation period of 288 (24 hours).</p>'
        datapointsToAlarm:
          $ref: '#/components/schemas/integer'
          description: 'The number of data points that must be not within the specified threshold to trigger the alarm. If you are setting an "M out of N" alarm, this value (<code>datapointsToAlarm</code>) is the M.'
        treatMissingData:
          $ref: '#/components/schemas/TreatMissingData'
          description: '<p>Sets how this alarm will handle missing data points.</p> <p>An alarm can treat missing data in the following ways:</p> <ul> <li> <p> <code>breaching</code> — Assume the missing data is not within the threshold. Missing data counts towards the number of times the metric is not within the threshold.</p> </li> <li> <p> <code>notBreaching</code> — Assume the missing data is within the threshold. Missing data does not count towards the number of times the metric is not within the threshold.</p> </li> <li> <p> <code>ignore</code> — Ignore the missing data. Maintains the current alarm state.</p> </li> <li> <p> <code>missing</code> — Missing data is treated as missing.</p> </li> </ul> <p>If <code>treatMissingData</code> is not specified, the default behavior of <code>missing</code> is used.</p>'
        contactProtocols:
          $ref: '#/components/schemas/ContactProtocolsList'
          description: '<p>The contact protocols to use for the alarm, such as <code>Email</code>, <code>SMS</code> (text messaging), or both.</p> <p>A notification is sent via the specified contact protocol if notifications are enabled for the alarm, and when the alarm is triggered.</p> <p>A notification is not sent if a contact protocol is not specified, if the specified contact protocol is not configured in the AWS Region, or if notifications are not enabled for the alarm using the <code>notificationEnabled</code> paramater.</p> <p>Use the <code>CreateContactMethod</code> action to configure a contact protocol in an AWS Region.</p>'
        notificationTriggers:
          $ref: '#/components/schemas/NotificationTriggerList'
          description: '<p>The alarm states that trigger a notification.</p> <p>An alarm has the following possible states:</p> <ul> <li> <p> <code>ALARM</code> — The metric is outside of the defined threshold.</p> </li> <li> <p> <code>INSUFFICIENT_DATA</code> — The alarm has just started, the metric is not available, or not enough data is available for the metric to determine the alarm state.</p> </li> <li> <p> <code>OK</code> — The metric is within the defined threshold.</p> </li> </ul> <p>When you specify a notification trigger, the <code>ALARM</code> state must be specified. The <code>INSUFFICIENT_DATA</code> and <code>OK</code> states can be specified in addition to the <code>ALARM</code> state.</p> <ul> <li> <p>If you specify <code>OK</code> as an alarm trigger, a notification is sent when the alarm switches from an <code>ALARM</code> or <code>INSUFFICIENT_DATA</code> alarm state to an <code>OK</code> state. This can be thought of as an <i>all clear</i> alarm notification.</p> </li> <li> <p>If you specify <code>INSUFFICIENT_DATA</code> as the alarm trigger, a notification is sent when the alarm switches from an <code>OK</code> or <code>ALARM</code> alarm state to an <code>INSUFFICIENT_DATA</code> state.</p> </li> </ul> <p>The notification trigger defaults to <code>ALARM</code> if you don''t specify this parameter.</p>'
        notificationEnabled:
          $ref: '#/components/schemas/boolean'
          description: <p>Indicates whether the alarm is enabled.</p> <p>Notifications are enabled by default if you don't specify this parameter.</p>
    PutInstancePublicPortsResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    PutInstancePublicPortsRequest:
      type: object
      required:
        - portInfos
        - instanceName
      title: PutInstancePublicPortsRequest
      properties:
        portInfos:
          $ref: '#/components/schemas/PortInfoList'
          description: Specifies information about the public port(s).
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The Lightsail instance name of the public port(s) you are setting.
    RebootInstanceResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    RebootInstanceRequest:
      type: object
      required:
        - instanceName
      title: RebootInstanceRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance to reboot.
    RebootRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    RebootRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      title: RebootRelationalDatabaseRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database to reboot.
    ReleaseStaticIpResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    ReleaseStaticIpRequest:
      type: object
      required:
        - staticIpName
      title: ReleaseStaticIpRequest
      properties:
        staticIpName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the static IP to delete.
    SendContactMethodVerificationResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    SendContactMethodVerificationRequest:
      type: object
      required:
        - protocol
      title: SendContactMethodVerificationRequest
      properties:
        protocol:
          $ref: '#/components/schemas/ContactMethodVerificationProtocol'
          description: 'The protocol to verify, such as <code>Email</code> or <code>SMS</code> (text messaging).'
    StartInstanceResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    StartInstanceRequest:
      type: object
      required:
        - instanceName
      title: StartInstanceRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance (a virtual private server) to start.
    StartRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    StartRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      title: StartRelationalDatabaseRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database to start.
    StopInstanceResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    StopInstanceRequest:
      type: object
      required:
        - instanceName
      title: StopInstanceRequest
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the instance (a virtual private server) to stop.
        force:
          $ref: '#/components/schemas/boolean'
          description: '<p>When set to <code>True</code>, forces a Lightsail instance that is stuck in a <code>stopping</code> state to stop.</p> <important> <p>Only use the <code>force</code> parameter if your instance is stuck in the <code>stopping</code> state. In any other state, your instance should stop normally without adding this parameter to your API request.</p> </important>'
    StopRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    StopRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      title: StopRelationalDatabaseRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database to stop.
        relationalDatabaseSnapshotName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your new database snapshot to be created before stopping your database.
    TagResourceResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    TagResourceRequest:
      type: object
      required:
        - resourceName
        - tags
      title: TagResourceRequest
      properties:
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the resource to which you are adding tags.
        resourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource to which you want to add a tag.
        tags:
          $ref: '#/components/schemas/TagList'
          description: The tag key and optional value.
    TestAlarmResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    TestAlarmRequest:
      type: object
      required:
        - alarmName
        - state
      title: TestAlarmRequest
      properties:
        alarmName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the alarm to test.
        state:
          $ref: '#/components/schemas/AlarmState'
          description: '<p>The alarm state to test.</p> <p>An alarm has the following possible states that can be tested:</p> <ul> <li> <p> <code>ALARM</code> — The metric is outside of the defined threshold.</p> </li> <li> <p> <code>INSUFFICIENT_DATA</code> — The alarm has just started, the metric is not available, or not enough data is available for the metric to determine the alarm state.</p> </li> <li> <p> <code>OK</code> — The metric is within the defined threshold.</p> </li> </ul>'
    UnpeerVpcResult:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    UnpeerVpcRequest:
      type: object
      title: UnpeerVpcRequest
      properties: {}
    UntagResourceResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    UntagResourceRequest:
      type: object
      required:
        - resourceName
        - tagKeys
      title: UntagResourceRequest
      properties:
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the resource from which you are removing a tag.
        resourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource from which you want to remove a tag.
        tagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to delete from the specified resource.
    UpdateDomainEntryResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    UpdateDomainEntryRequest:
      type: object
      required:
        - domainName
        - domainEntry
      title: UpdateDomainEntryRequest
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain recordset to update.
        domainEntry:
          $ref: '#/components/schemas/DomainEntry'
          description: An array of key-value pairs containing information about the domain entry.
    UpdateLoadBalancerAttributeResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    UpdateLoadBalancerAttributeRequest:
      type: object
      required:
        - loadBalancerName
        - attributeName
        - attributeValue
      title: UpdateLoadBalancerAttributeRequest
      properties:
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the load balancer that you want to modify (e.g., <code>my-load-balancer</code>.'
        attributeName:
          $ref: '#/components/schemas/LoadBalancerAttributeName'
          description: The name of the attribute you want to update. Valid values are below.
        attributeValue:
          $ref: '#/components/schemas/StringMax256'
          description: The value that you want to specify for the attribute name.
    UpdateRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    UpdateRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      title: UpdateRelationalDatabaseRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database to update.
        masterUserPassword:
          $ref: '#/components/schemas/SensitiveString'
          description: '<p>The password for the master user of your database. The password can include any printable ASCII character except "/", """, or "@".</p> <p>Constraints: Must contain 8 to 41 characters.</p>'
        rotateMasterUserPassword:
          $ref: '#/components/schemas/boolean'
          description: '<p>When <code>true</code>, the master user password is changed to a new strong password generated by Lightsail.</p> <p>Use the <code>get relational database master user password</code> operation to get the new password.</p>'
        preferredBackupWindow:
          $ref: '#/components/schemas/string'
          description: '<p>The daily time range during which automated backups are created for your database if automated backups are enabled.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the <code>hh24:mi-hh24:mi</code> format.</p> <p>Example: <code>16:00-16:30</code> </p> </li> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Must not conflict with the preferred maintenance window.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>'
        preferredMaintenanceWindow:
          $ref: '#/components/schemas/string'
          description: '<p>The weekly time range during which system maintenance can occur on your database.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each AWS Region, occurring on a random day of the week.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</p> </li> <li> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> </li> <li> <p>Must be at least 30 minutes.</p> </li> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>Example: <code>Tue:17:00-Tue:17:30</code> </p> </li> </ul>'
        enableBackupRetention:
          $ref: '#/components/schemas/boolean'
          description: '<p>When <code>true</code>, enables automated backup retention for your database.</p> <p>Updates are applied during the next maintenance window because this can result in an outage.</p>'
        disableBackupRetention:
          $ref: '#/components/schemas/boolean'
          description: '<p>When <code>true</code>, disables automated backup retention for your database.</p> <p>Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database using the <code>create relational database snapshot</code> operation.</p> <p>Updates are applied during the next maintenance window because this can result in an outage.</p>'
        publiclyAccessible:
          $ref: '#/components/schemas/boolean'
          description: Specifies the accessibility options for your database. A value of <code>true</code> specifies a database that is available to resources outside of your Lightsail account. A value of <code>false</code> specifies a database that is available only to your Lightsail resources in the same region as your database.
        applyImmediately:
          $ref: '#/components/schemas/boolean'
          description: '<p>When <code>true</code>, applies changes immediately. When <code>false</code>, applies changes during the preferred maintenance window. Some changes may cause an outage.</p> <p>Default: <code>false</code> </p>'
        caCertificateIdentifier:
          $ref: '#/components/schemas/string'
          description: Indicates the certificate that needs to be associated with the database.
    UpdateRelationalDatabaseParametersResult:
      type: object
      properties:
        operations:
          $ref: '#/components/schemas/OperationList'
          description: 'An array of objects that describe the result of the action, such as the status of the request, the time stamp of the request, and the resources affected by the request.'
    UpdateRelationalDatabaseParametersRequest:
      type: object
      required:
        - relationalDatabaseName
        - parameters
      title: UpdateRelationalDatabaseParametersRequest
      properties:
        relationalDatabaseName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of your database for which to update parameters.
        parameters:
          $ref: '#/components/schemas/RelationalDatabaseParameterList'
          description: The database parameters to update.
    AccessDirection:
      type: string
      enum:
        - inbound
        - outbound
    string:
      type: string
    TimeOfDay:
      type: string
      pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'
    AddOn:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The name of the add-on.
        status:
          $ref: '#/components/schemas/string'
          description: The status of the add-on.
        snapshotTimeOfDay:
          $ref: '#/components/schemas/TimeOfDay'
          description: '<p>The daily time when an automatic snapshot is created.</p> <p>The time shown is in <code>HH:00</code> format, and in Coordinated Universal Time (UTC).</p> <p>The snapshot is automatically created between the time shown and up to 45 minutes after.</p>'
        nextSnapshotTimeOfDay:
          $ref: '#/components/schemas/TimeOfDay'
          description: '<p>The next daily time an automatic snapshot will be created.</p> <p>The time shown is in <code>HH:00</code> format, and in Coordinated Universal Time (UTC).</p> <p>The snapshot is automatically created between the time shown and up to 45 minutes after.</p>'
      description: Describes an add-on that is enabled for an Amazon Lightsail resource.
    AddOnList:
      type: array
      items:
        $ref: '#/components/schemas/AddOn'
    AddOnType:
      type: string
      enum:
        - AutoSnapshot
    AutoSnapshotAddOnRequest:
      type: object
      properties:
        snapshotTimeOfDay:
          $ref: '#/components/schemas/TimeOfDay'
          description: '<p>The daily time when an automatic snapshot will be created.</p> <p>Constraints:</p> <ul> <li> <p>Must be in <code>HH:00</code> format, and in an hourly increment.</p> </li> <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li> <li> <p>The snapshot will be automatically created between the time specified and up to 45 minutes after.</p> </li> </ul>'
      description: '<p>Describes a request to enable or modify the automatic snapshot add-on for an Amazon Lightsail instance or disk.</p> <p>When you modify the automatic snapshot time for a resource, it is typically effective immediately except under the following conditions:</p> <ul> <li> <p>If an automatic snapshot has been created for the current day, and you change the snapshot time to a later time of day, then the new snapshot time will be effective the following day. This ensures that two snapshots are not created for the current day.</p> </li> <li> <p>If an automatic snapshot has not yet been created for the current day, and you change the snapshot time to an earlier time of day, then the new snapshot time will be effective the following day and a snapshot is automatically created at the previously set time for the current day. This ensures that a snapshot is created for the current day.</p> </li> <li> <p>If an automatic snapshot has not yet been created for the current day, and you change the snapshot time to a time that is within 30 minutes from your current time, then the new snapshot time will be effective the following day and a snapshot is automatically created at the previously set time for the current day. This ensures that a snapshot is created for the current day, because 30 minutes is required between your current time and the new snapshot time that you specify.</p> </li> <li> <p>If an automatic snapshot is scheduled to be created within 30 minutes from your current time and you change the snapshot time, then the new snapshot time will be effective the following day and a snapshot is automatically created at the previously set time for the current day. This ensures that a snapshot is created for the current day, because 30 minutes is required between your current time and the new snapshot time that you specify.</p> </li> </ul>'
    AddOnRequest:
      type: object
      required:
        - addOnType
      properties:
        addOnType:
          $ref: '#/components/schemas/AddOnType'
          description: The add-on type.
        autoSnapshotAddOnRequest:
          $ref: '#/components/schemas/AutoSnapshotAddOnRequest'
          description: An object that represents additional parameters when enabling or modifying the automatic snapshot add-on.
      description: '<p>Describes a request to enable, modify, or disable an add-on for an Amazon Lightsail resource.</p> <note> <p>An additional cost may be associated with enabling add-ons. For more information, see the <a href="https://aws.amazon.com/lightsail/pricing/">Lightsail pricing page</a>.</p> </note>'
    AddOnRequestList:
      type: array
      items:
        $ref: '#/components/schemas/AddOnRequest'
    ResourceName:
      type: string
      pattern: '\w[\w\-]*\w'
    NonEmptyString:
      type: string
      pattern: .*\S.*
    IsoDate:
      type: string
      format: date-time
    ResourceLocation:
      type: object
      properties:
        availabilityZone:
          $ref: '#/components/schemas/string'
          description: The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).
        regionName:
          $ref: '#/components/schemas/RegionName'
          description: The AWS Region name.
      description: Describes the resource location.
    ResourceType:
      type: string
      enum:
        - Instance
        - StaticIp
        - KeyPair
        - InstanceSnapshot
        - Domain
        - PeeredVpc
        - LoadBalancer
        - LoadBalancerTlsCertificate
        - Disk
        - DiskSnapshot
        - RelationalDatabase
        - RelationalDatabaseSnapshot
        - ExportSnapshotRecord
        - CloudFormationStackRecord
        - Alarm
        - ContactMethod
    MonitoredResourceInfo:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource being monitored.
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the Lightsail resource being monitored.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: '<p>The Lightsail resource type of the resource being monitored.</p> <p>Instances, load balancers, and relational databases are the only Lightsail resources that can currently be monitored by alarms.</p>'
      description: '<p>Describes resource being monitored by an alarm.</p> <p>An alarm is a way to monitor your Amazon Lightsail resource metrics. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>'
    ComparisonOperator:
      type: string
      enum:
        - GreaterThanOrEqualToThreshold
        - GreaterThanThreshold
        - LessThanThreshold
        - LessThanOrEqualToThreshold
    integer:
      type: integer
    MetricPeriod:
      type: integer
      minimum: 60
      maximum: 86400
    double:
      type: number
      format: double
    TreatMissingData:
      type: string
      enum:
        - breaching
        - notBreaching
        - ignore
        - missing
    MetricStatistic:
      type: string
      enum:
        - Minimum
        - Maximum
        - Sum
        - Average
        - SampleCount
    MetricName:
      type: string
      enum:
        - CPUUtilization
        - NetworkIn
        - NetworkOut
        - StatusCheckFailed
        - StatusCheckFailed_Instance
        - StatusCheckFailed_System
        - ClientTLSNegotiationErrorCount
        - HealthyHostCount
        - UnhealthyHostCount
        - HTTPCode_LB_4XX_Count
        - HTTPCode_LB_5XX_Count
        - HTTPCode_Instance_2XX_Count
        - HTTPCode_Instance_3XX_Count
        - HTTPCode_Instance_4XX_Count
        - HTTPCode_Instance_5XX_Count
        - InstanceResponseTime
        - RejectedConnectionCount
        - RequestCount
        - DatabaseConnections
        - DiskQueueDepth
        - FreeStorageSpace
        - NetworkReceiveThroughput
        - NetworkTransmitThroughput
    AlarmState:
      type: string
      enum:
        - OK
        - ALARM
        - INSUFFICIENT_DATA
    MetricUnit:
      type: string
      enum:
        - Seconds
        - Microseconds
        - Milliseconds
        - Bytes
        - Kilobytes
        - Megabytes
        - Gigabytes
        - Terabytes
        - Bits
        - Kilobits
        - Megabits
        - Gigabits
        - Terabits
        - Percent
        - Count
        - Bytes/Second
        - Kilobytes/Second
        - Megabytes/Second
        - Gigabytes/Second
        - Terabytes/Second
        - Bits/Second
        - Kilobits/Second
        - Megabits/Second
        - Gigabits/Second
        - Terabits/Second
        - Count/Second
        - None
    ContactProtocolsList:
      type: array
      items:
        $ref: '#/components/schemas/ContactProtocol'
    NotificationTriggerList:
      type: array
      items:
        $ref: '#/components/schemas/AlarmState'
    boolean:
      type: boolean
    Alarm:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the alarm.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the alarm.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the alarm was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: An object that lists information about the location of the alarm.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The Lightsail resource type (e.g., <code>Alarm</code>).'
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about your Lightsail alarm. This code enables our support team to look up your Lightsail information more easily.
        monitoredResourceInfo:
          $ref: '#/components/schemas/MonitoredResourceInfo'
          description: An object that lists information about the resource monitored by the alarm.
        comparisonOperator:
          $ref: '#/components/schemas/ComparisonOperator'
          description: The arithmetic operation used when comparing the specified statistic and threshold.
        evaluationPeriods:
          $ref: '#/components/schemas/integer'
          description: The number of periods over which data is compared to the specified threshold.
        period:
          $ref: '#/components/schemas/MetricPeriod'
          description: 'The period, in seconds, over which the statistic is applied.'
        threshold:
          $ref: '#/components/schemas/double'
          description: The value against which the specified statistic is compared.
        datapointsToAlarm:
          $ref: '#/components/schemas/integer'
          description: The number of data points that must not within the specified threshold to trigger the alarm.
        treatMissingData:
          $ref: '#/components/schemas/TreatMissingData'
          description: '<p>Specifies how the alarm handles missing data points.</p> <p>An alarm can treat missing data in the following ways:</p> <ul> <li> <p> <code>breaching</code> — Assume the missing data is not within the threshold. Missing data counts towards the number of times the metric is not within the threshold.</p> </li> <li> <p> <code>notBreaching</code> — Assume the missing data is within the threshold. Missing data does not count towards the number of times the metric is not within the threshold.</p> </li> <li> <p> <code>ignore</code> — Ignore the missing data. Maintains the current alarm state.</p> </li> <li> <p> <code>missing</code> — Missing data is treated as missing.</p> </li> </ul>'
        statistic:
          $ref: '#/components/schemas/MetricStatistic'
          description: '<p>The statistic for the metric associated with the alarm.</p> <p>The following statistics are available:</p> <ul> <li> <p> <code>Minimum</code> — The lowest value observed during the specified period. Use this value to determine low volumes of activity for your application.</p> </li> <li> <p> <code>Maximum</code> — The highest value observed during the specified period. Use this value to determine high volumes of activity for your application.</p> </li> <li> <p> <code>Sum</code> — All values submitted for the matching metric added together. You can use this statistic to determine the total volume of a metric.</p> </li> <li> <p> <code>Average</code> — The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum values, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum values. This comparison helps you to know when to increase or decrease your resources.</p> </li> <li> <p> <code>SampleCount</code> — The count, or number, of data points used for the statistical calculation.</p> </li> </ul>'
        metricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric associated with the alarm.
        state:
          $ref: '#/components/schemas/AlarmState'
          description: '<p>The current state of the alarm.</p> <p>An alarm has the following possible states:</p> <ul> <li> <p> <code>ALARM</code> — The metric is outside of the defined threshold.</p> </li> <li> <p> <code>INSUFFICIENT_DATA</code> — The alarm has just started, the metric is not available, or not enough data is available for the metric to determine the alarm state.</p> </li> <li> <p> <code>OK</code> — The metric is within the defined threshold.</p> </li> </ul>'
        unit:
          $ref: '#/components/schemas/MetricUnit'
          description: The unit of the metric associated with the alarm.
        contactProtocols:
          $ref: '#/components/schemas/ContactProtocolsList'
          description: 'The contact protocols for the alarm, such as <code>Email</code>, <code>SMS</code> (text messaging), or both.'
        notificationTriggers:
          $ref: '#/components/schemas/NotificationTriggerList'
          description: The alarm states that trigger a notification.
        notificationEnabled:
          $ref: '#/components/schemas/boolean'
          description: Indicates whether the alarm is enabled.
      description: '<p>Describes an alarm.</p> <p>An alarm is a way to monitor your Amazon Lightsail resource metrics. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>'
    AlarmsList:
      type: array
      items:
        $ref: '#/components/schemas/Alarm'
    OperationList:
      type: array
      items:
        $ref: '#/components/schemas/Operation'
    ResourceNameList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceName'
    AttachedDisk:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/string'
          description: 'The path of the disk (e.g., <code>/dev/xvdf</code>).'
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: The size of the disk in GB.
      description: 'Describes a block storage disk that is attached to an instance, and is included in an automatic snapshot.'
    AttachedDiskList:
      type: array
      items:
        $ref: '#/components/schemas/AttachedDisk'
    DiskMapList:
      type: array
      items:
        $ref: '#/components/schemas/DiskMap'
    AttachedDiskMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DiskMapList'
    AutoSnapshotDate:
      type: string
      pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
    AutoSnapshotStatus:
      type: string
      enum:
        - Success
        - Failed
        - InProgress
        - NotFound
    AutoSnapshotDetails:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/string'
          description: The date of the automatic snapshot in <code>YYYY-MM-DD</code> format.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the automatic snapshot was created.
        status:
          $ref: '#/components/schemas/AutoSnapshotStatus'
          description: The status of the automatic snapshot.
        fromAttachedDisks:
          $ref: '#/components/schemas/AttachedDiskList'
          description: An array of objects that describe the block storage disks attached to the instance when the automatic snapshot was created.
      description: Describes an automatic snapshot.
    AutoSnapshotDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/AutoSnapshotDetails'
    AvailabilityZone:
      type: object
      properties:
        zoneName:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Availability Zone. The format is <code>us-east-2a</code> (case-sensitive).
        state:
          $ref: '#/components/schemas/NonEmptyString'
          description: The state of the Availability Zone.
      description: Describes an Availability Zone.
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    Base64:
      type: string
    BlueprintType:
      type: string
      enum:
        - os
        - app
    InstancePlatform:
      type: string
      enum:
        - LINUX_UNIX
        - WINDOWS
    Blueprint:
      type: object
      properties:
        blueprintId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The ID for the virtual private server image (e.g., <code>app_wordpress_4_4</code> or <code>app_lamp_7_0</code>).'
        name:
          $ref: '#/components/schemas/ResourceName'
          description: 'The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).'
        group:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The group name of the blueprint (e.g., <code>amazon-linux</code>).'
        type:
          $ref: '#/components/schemas/BlueprintType'
          description: 'The type of the blueprint (e.g., <code>os</code> or <code>app</code>).'
        description:
          $ref: '#/components/schemas/string'
          description: The description of the blueprint.
        isActive:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the blueprint is active. Inactive blueprints are listed to support customers with existing instances but are not necessarily available for launch of new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases.
        minPower:
          $ref: '#/components/schemas/integer'
          description: 'The minimum bundle power required to run this blueprint. For example, you need a bundle with a power value of 500 or more to create an instance that uses a blueprint with a minimum power value of 500. <code>0</code> indicates that the blueprint runs on all instance sizes. '
        version:
          $ref: '#/components/schemas/string'
          description: 'The version number of the operating system, application, or stack (e.g., <code>2016.03.0</code>).'
        versionCode:
          $ref: '#/components/schemas/string'
          description: The version code.
        productUrl:
          $ref: '#/components/schemas/string'
          description: The product URL to learn more about the image or blueprint.
        licenseUrl:
          $ref: '#/components/schemas/string'
          description: The end-user license agreement URL for the image or blueprint.
        platform:
          $ref: '#/components/schemas/InstancePlatform'
          description: The operating system platform (either Linux/Unix-based or Windows Server-based) of the blueprint.
      description: Describes a blueprint (a virtual private server image).
    BlueprintList:
      type: array
      items:
        $ref: '#/components/schemas/Blueprint'
    float:
      type: number
      format: float
    InstancePlatformList:
      type: array
      items:
        $ref: '#/components/schemas/InstancePlatform'
    Bundle:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/float'
          description: 'The price in US dollars (e.g., <code>5.0</code>).'
        cpuCount:
          $ref: '#/components/schemas/integer'
          description: 'The number of vCPUs included in the bundle (e.g., <code>2</code>).'
        diskSizeInGb:
          $ref: '#/components/schemas/integer'
          description: 'The size of the SSD (e.g., <code>30</code>).'
        bundleId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The bundle ID (e.g., <code>micro_1_0</code>).'
        instanceType:
          $ref: '#/components/schemas/string'
          description: 'The Amazon EC2 instance type (e.g., <code>t2.micro</code>).'
        isActive:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the bundle is active.
        name:
          $ref: '#/components/schemas/string'
          description: 'A friendly name for the bundle (e.g., <code>Micro</code>).'
        power:
          $ref: '#/components/schemas/integer'
          description: 'A numeric value that represents the power of the bundle (e.g., <code>500</code>). You can use the bundle''s power value in conjunction with a blueprint''s minimum power value to determine whether the blueprint will run on the bundle. For example, you need a bundle with a power value of 500 or more to create an instance that uses a blueprint with a minimum power value of 500.'
        ramSizeInGb:
          $ref: '#/components/schemas/float'
          description: 'The amount of RAM in GB (e.g., <code>2.0</code>).'
        transferPerMonthInGb:
          $ref: '#/components/schemas/integer'
          description: 'The data transfer rate per month in GB (e.g., <code>2000</code>).'
        supportedPlatforms:
          $ref: '#/components/schemas/InstancePlatformList'
          description: The operating system platform (Linux/Unix-based or Windows Server-based) that the bundle supports. You can only launch a <code>WINDOWS</code> bundle on a blueprint that supports the <code>WINDOWS</code> platform. <code>LINUX_UNIX</code> blueprints require a <code>LINUX_UNIX</code> bundle.
      description: 'Describes a bundle, which is a set of specs describing your virtual private server (or <i>instance</i>).'
    BundleList:
      type: array
      items:
        $ref: '#/components/schemas/Bundle'
    PortInfo:
      type: object
      properties:
        fromPort:
          $ref: '#/components/schemas/Port'
          description: The first port in the range.
        toPort:
          $ref: '#/components/schemas/Port'
          description: The last port in the range.
        protocol:
          $ref: '#/components/schemas/NetworkProtocol'
          description: 'The protocol. '
      description: Describes information about the ports on your virtual private server (or <i>instance</i>).
    Operation:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the operation.
        resourceName:
          $ref: '#/components/schemas/ResourceName'
          description: The resource name.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The resource type. '
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: 'The timestamp when the operation was initialized (e.g., <code>1479816991.349</code>).'
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The AWS Region and Availability Zone.
        isTerminal:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the operation is terminal.
        operationDetails:
          $ref: '#/components/schemas/string'
          description: 'Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).'
        operationType:
          $ref: '#/components/schemas/OperationType'
          description: 'The type of operation. '
        status:
          $ref: '#/components/schemas/OperationStatus'
          description: 'The status of the operation. '
        statusChangedAt:
          $ref: '#/components/schemas/IsoDate'
          description: 'The timestamp when the status was changed (e.g., <code>1479816991.349</code>).'
        errorCode:
          $ref: '#/components/schemas/string'
          description: The error code.
        errorDetails:
          $ref: '#/components/schemas/string'
          description: The error details.
      description: Describes the API operation.
    RecordState:
      type: string
      enum:
        - Started
        - Succeeded
        - Failed
    CloudFormationStackRecordSourceInfoList:
      type: array
      items:
        $ref: '#/components/schemas/CloudFormationStackRecordSourceInfo'
    DestinationInfo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the resource created at the destination.
        service:
          $ref: '#/components/schemas/NonEmptyString'
          description: The destination service of the record.
      description: Describes the destination of a record.
    CloudFormationStackRecord:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the CloudFormation stack record. It starts with <code>CloudFormationStackRecord</code> followed by a GUID.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the CloudFormation stack record.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The date when the CloudFormation stack record was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: A list of objects describing the Availability Zone and AWS Region of the CloudFormation stack record.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The Lightsail resource type (e.g., <code>CloudFormationStackRecord</code>).'
        state:
          $ref: '#/components/schemas/RecordState'
          description: The current state of the CloudFormation stack record.
        sourceInfo:
          $ref: '#/components/schemas/CloudFormationStackRecordSourceInfoList'
          description: A list of objects describing the source of the CloudFormation stack record.
        destinationInfo:
          $ref: '#/components/schemas/DestinationInfo'
          description: 'A list of objects describing the destination service, which is AWS CloudFormation, and the Amazon Resource Name (ARN) of the AWS CloudFormation stack.'
      description: <p>Describes a CloudFormation stack record created as a result of the <code>create cloud formation stack</code> operation.</p> <p>A CloudFormation stack record provides information about the AWS CloudFormation stack used to create a new Amazon Elastic Compute Cloud instance from an exported Lightsail instance snapshot.</p>
    CloudFormationStackRecordList:
      type: array
      items:
        $ref: '#/components/schemas/CloudFormationStackRecord'
    CloudFormationStackRecordSourceType:
      type: string
      enum:
        - ExportSnapshotRecord
    CloudFormationStackRecordSourceInfo:
      type: object
      properties:
        resourceType:
          $ref: '#/components/schemas/CloudFormationStackRecordSourceType'
          description: 'The Lightsail resource type (e.g., <code>ExportSnapshotRecord</code>).'
        name:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the record.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the export snapshot record.
      description: 'Describes the source of a CloudFormation stack record (i.e., the export snapshot record).'
    ContactMethodStatus:
      type: string
      enum:
        - PendingVerification
        - Valid
        - Invalid
    ContactProtocol:
      type: string
      enum:
        - Email
        - SMS
    ContactMethod:
      type: object
      properties:
        contactEndpoint:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The destination of the contact method, such as an email address or a mobile phone number.'
        status:
          $ref: '#/components/schemas/ContactMethodStatus'
          description: '<p>The current status of the contact method.</p> <p>A contact method has the following possible status:</p> <ul> <li> <p> <code>PendingVerification</code> — The contact method has not yet been verified, and the verification has not yet expired.</p> </li> <li> <p> <code>Valid</code> — The contact method has been verified.</p> </li> <li> <p> <code>InValid</code> — An attempt was made to verify the contact method, but the verification has expired.</p> </li> </ul>'
        protocol:
          $ref: '#/components/schemas/ContactProtocol'
          description: 'The protocol of the contact method, such as email or SMS (text messaging).'
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the contact method.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the contact method.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the contact method was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The Lightsail resource type (e.g., <code>ContactMethod</code>).'
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about your Lightsail contact method. This code enables our support team to look up your Lightsail information more easily.
      description: '<p>Describes a contact method.</p> <p>A contact method is a way to send you notifications. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications in Amazon Lightsail</a>.</p>'
    ContactMethodVerificationProtocol:
      type: string
      enum:
        - Email
    ContactMethodsList:
      type: array
      items:
        $ref: '#/components/schemas/ContactMethod'
    RegionName:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - eu-central-1
        - ca-central-1
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ap-northeast-2
    InstanceEntryList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceEntry'
    StringMax256:
      type: string
      minLength: 1
      maxLength: 256
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    DomainName:
      type: string
    DomainEntry:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the domain recordset entry.
        name:
          $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        target:
          $ref: '#/components/schemas/string'
          description: '<p>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</p> <p>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</p>'
        isAlias:
          $ref: '#/components/schemas/boolean'
          description: 'When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer'
        type:
          $ref: '#/components/schemas/DomainEntryType'
          description: '<p>The type of domain entry, such as address (A), canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT).</p> <p>The following domain entry types can be used:</p> <ul> <li> <p> <code>A</code> </p> </li> <li> <p> <code>CNAME</code> </p> </li> <li> <p> <code>MX</code> </p> </li> <li> <p> <code>NS</code> </p> </li> <li> <p> <code>SOA</code> </p> </li> <li> <p> <code>SRV</code> </p> </li> <li> <p> <code>TXT</code> </p> </li> </ul>'
        options:
          deprecated: true
          $ref: '#/components/schemas/DomainEntryOptions'
          description: '<p>(Deprecated) The options for the domain entry.</p> <note> <p>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</p> </note>'
      description: Describes a domain recordset entry.
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    KeyPair:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The friendly name of the SSH key pair.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Resource Name (ARN) of the key pair (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).'
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: 'The timestamp when the key pair was created (e.g., <code>1479816991.349</code>).'
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The region name and Availability Zone where the key pair was created.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: The resource type (usually <code>KeyPair</code>).
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        fingerprint:
          $ref: '#/components/schemas/Base64'
          description: The RSA fingerprint of the key pair.
      description: Describes the SSH key pair.
    Port:
      type: integer
      minimum: 0
      maximum: 65535
    DomainNameList:
      type: array
      items:
        $ref: '#/components/schemas/DomainName'
    SensitiveString:
      type: string
      format: password
    DiskState:
      type: string
      enum:
        - pending
        - error
        - available
        - in-use
        - unknown
    Disk:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The unique name of the disk.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the disk.
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The date when the disk was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The AWS Region and Availability Zone where the disk is located.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The Lightsail resource type (e.g., <code>Disk</code>).'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        addOns:
          $ref: '#/components/schemas/AddOnList'
          description: An array of objects representing the add-ons enabled on the disk.
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: The size of the disk in GB.
        isSystemDisk:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).
        iops:
          $ref: '#/components/schemas/integer'
          description: The input/output operations per second (IOPS) of the disk.
        path:
          $ref: '#/components/schemas/string'
          description: The disk path.
        state:
          $ref: '#/components/schemas/DiskState'
          description: Describes the status of the disk.
        attachedTo:
          $ref: '#/components/schemas/ResourceName'
          description: The resources to which the disk is attached.
        isAttached:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the disk is attached.
        attachmentState:
          deprecated: true
          $ref: '#/components/schemas/string'
          description: '<p>(Deprecated) The attachment state of the disk.</p> <note> <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but still included in the response. Use <code>isAttached</code> instead.</p> </note>'
        gbInUse:
          deprecated: true
          $ref: '#/components/schemas/integer'
          description: '<p>(Deprecated) The number of GB in use by the disk.</p> <note> <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p> </note>'
      description: Describes a system disk or a block storage disk.
    DiskInfo:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The disk name.
        path:
          $ref: '#/components/schemas/NonEmptyString'
          description: The disk path.
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: 'The size of the disk in GB (e.g., <code>32</code>).'
        isSystemDisk:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).
      description: Describes a disk.
    DiskInfoList:
      type: array
      items:
        $ref: '#/components/schemas/DiskInfo'
    DiskList:
      type: array
      items:
        $ref: '#/components/schemas/Disk'
    DiskMap:
      type: object
      properties:
        originalDiskPath:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The original disk path exposed to the instance (for example, <code>/dev/sdh</code>).'
        newDiskName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The new disk name (e.g., <code>my-new-disk</code>).'
      description: Describes a block storage disk mapping.
    DiskSnapshotState:
      type: string
      enum:
        - pending
        - completed
        - error
        - unknown
    DiskSnapshot:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).'
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the disk snapshot.
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The date when the disk snapshot was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The AWS Region and Availability Zone where the disk snapshot was created.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The Lightsail resource type (e.g., <code>DiskSnapshot</code>).'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: The size of the disk in GB.
        state:
          $ref: '#/components/schemas/DiskSnapshotState'
          description: The status of the disk snapshot operation.
        progress:
          $ref: '#/components/schemas/string'
          description: The progress of the disk snapshot operation.
        fromDiskName:
          $ref: '#/components/schemas/ResourceName'
          description: The unique name of the source disk from which the disk snapshot was created.
        fromDiskArn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the source disk from which the disk snapshot was created.
        fromInstanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The unique name of the source instance from which the disk (system volume) snapshot was created.
        fromInstanceArn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the source instance from which the disk (system volume) snapshot was created.
        isFromAutoSnapshot:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the snapshot was created from an automatic snapshot.
      description: Describes a block storage disk snapshot.
    DiskSnapshotInfo:
      type: object
      properties:
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: 'The size of the disk in GB (e.g., <code>32</code>).'
      description: Describes a disk snapshot.
    DiskSnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/DiskSnapshot'
    DomainEntryList:
      type: array
      items:
        $ref: '#/components/schemas/DomainEntry'
    Domain:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the domain.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Resource Name (ARN) of the domain recordset (e.g., <code>arn:aws:lightsail:global:123456789101:Domain/824cede0-abc7-4f84-8dbc-12345EXAMPLE</code>).'
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The date when the domain recordset was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The AWS Region and Availability Zones where the domain recordset was created.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The resource type. '
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        domainEntries:
          $ref: '#/components/schemas/DomainEntryList'
          description: An array of key-value pairs containing information about the domain entries.
      description: Describes a domain where you are storing recordsets in Lightsail.
    DomainEntryType:
      type: string
    DomainEntryOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/string'
    DomainEntryOptionsKeys:
      type: string
    DomainList:
      type: array
      items:
        $ref: '#/components/schemas/Domain'
    ExportSnapshotRecordSourceInfo:
      type: object
      properties:
        resourceType:
          $ref: '#/components/schemas/ExportSnapshotRecordSourceType'
          description: 'The Lightsail resource type (e.g., <code>InstanceSnapshot</code> or <code>DiskSnapshot</code>).'
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The date when the source instance or disk snapshot was created.
        name:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the source instance or disk snapshot.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the source instance or disk snapshot.
        fromResourceName:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the snapshot's source instance or disk.
        fromResourceArn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the snapshot's source instance or disk.
        instanceSnapshotInfo:
          $ref: '#/components/schemas/InstanceSnapshotInfo'
          description: A list of objects describing an instance snapshot.
        diskSnapshotInfo:
          $ref: '#/components/schemas/DiskSnapshotInfo'
          description: A list of objects describing a disk snapshot.
      description: Describes the source of an export snapshot record.
    ExportSnapshotRecord:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The export snapshot record name.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the export snapshot record.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The date when the export snapshot record was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The AWS Region and Availability Zone where the export snapshot record is located.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The Lightsail resource type (e.g., <code>ExportSnapshotRecord</code>).'
        state:
          $ref: '#/components/schemas/RecordState'
          description: The state of the export snapshot record.
        sourceInfo:
          $ref: '#/components/schemas/ExportSnapshotRecordSourceInfo'
          description: A list of objects describing the source of the export snapshot record.
        destinationInfo:
          $ref: '#/components/schemas/DestinationInfo'
          description: A list of objects describing the destination of the export snapshot record.
      description: Describes an export snapshot record.
    ExportSnapshotRecordList:
      type: array
      items:
        $ref: '#/components/schemas/ExportSnapshotRecord'
    ExportSnapshotRecordSourceType:
      type: string
      enum:
        - InstanceSnapshot
        - DiskSnapshot
    InstanceSnapshotInfo:
      type: object
      properties:
        fromBundleId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The bundle ID from which the source instance was created (e.g., <code>micro_1_0</code>).'
        fromBlueprintId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The blueprint ID from which the source instance (e.g., <code>os_debian_8_3</code>).'
        fromDiskInfo:
          $ref: '#/components/schemas/DiskInfoList'
          description: A list of objects describing the disks that were attached to the source instance.
      description: Describes an instance snapshot.
    InstanceAccessProtocol:
      type: string
      enum:
        - ssh
        - rdp
    InstanceAccessDetails:
      type: object
      properties:
        certKey:
          $ref: '#/components/schemas/string'
          description: 'For SSH access, the public key to use when accessing your instance For OpenSSH clients (e.g., command line SSH), you should save this value to <code>tempkey-cert.pub</code>.'
        expiresAt:
          $ref: '#/components/schemas/IsoDate'
          description: 'For SSH access, the date on which the temporary keys expire.'
        ipAddress:
          $ref: '#/components/schemas/IpAddress'
          description: The public IP address of the Amazon Lightsail instance.
        password:
          $ref: '#/components/schemas/string'
          description: '<p>For RDP access, the password for your Amazon Lightsail instance. Password will be an empty string if the password for your new instance is not ready yet. When you create an instance, it can take up to 15 minutes for the instance to be ready.</p> <note> <p>If you create an instance using any key pair other than the default (<code>LightsailDefaultKeyPair</code>), <code>password</code> will always be an empty string.</p> <p>If you change the Administrator password on the instance, Lightsail will continue to return the original password value. When accessing the instance using RDP, you need to manually enter the Administrator password after changing it from the default.</p> </note>'
        passwordData:
          $ref: '#/components/schemas/PasswordData'
          description: 'For a Windows Server-based instance, an object with the data you can use to retrieve your password. This is only needed if <code>password</code> is empty and the instance is not new (and therefore the password is not ready yet). When you create an instance, it can take up to 15 minutes for the instance to be ready.'
        privateKey:
          $ref: '#/components/schemas/string'
          description: 'For SSH access, the temporary private key. For OpenSSH clients (e.g., command line SSH), you should save this value to <code>tempkey</code>).'
        protocol:
          $ref: '#/components/schemas/InstanceAccessProtocol'
          description: The protocol for these Amazon Lightsail instance access details.
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of this Amazon Lightsail instance.
        username:
          $ref: '#/components/schemas/string'
          description: The user name to use when logging in to the Amazon Lightsail instance.
        hostKeys:
          $ref: '#/components/schemas/HostKeysList'
          description: Describes the public SSH host keys or the RDP certificate.
      description: The parameters for gaining temporary access to one of your Amazon Lightsail instances.
    InstanceMetricName:
      type: string
      enum:
        - CPUUtilization
        - NetworkIn
        - NetworkOut
        - StatusCheckFailed
        - StatusCheckFailed_Instance
        - StatusCheckFailed_System
    timestamp:
      type: string
      format: date-time
    MetricStatisticList:
      type: array
      items:
        $ref: '#/components/schemas/MetricStatistic'
    MetricDatapointList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDatapoint'
    InstancePortStateList:
      type: array
      items:
        $ref: '#/components/schemas/InstancePortState'
    Instance:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name the user gave the instance (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).'
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Resource Name (ARN) of the instance (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/244ad76f-8aad-4741-809f-12345EXAMPLE</code>).'
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: 'The timestamp when the instance was created (e.g., <code>1479734909.17</code>).'
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The region name and Availability Zone where the instance is located.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: The type of resource (usually <code>Instance</code>).
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        blueprintId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The blueprint ID (e.g., <code>os_amlinux_2016_03</code>).'
        blueprintName:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).'
        bundleId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The bundle for the instance (e.g., <code>micro_1_0</code>).'
        addOns:
          $ref: '#/components/schemas/AddOnList'
          description: An array of objects representing the add-ons enabled on the instance.
        isStaticIp:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether this instance has a static IP assigned to it.
        privateIpAddress:
          $ref: '#/components/schemas/IpAddress'
          description: The private IP address of the instance.
        publicIpAddress:
          $ref: '#/components/schemas/IpAddress'
          description: The public IP address of the instance.
        ipv6Address:
          $ref: '#/components/schemas/IpV6Address'
          description: The IPv6 address of the instance.
        hardware:
          $ref: '#/components/schemas/InstanceHardware'
          description: The size of the vCPU and the amount of RAM for the instance.
        networking:
          $ref: '#/components/schemas/InstanceNetworking'
          description: Information about the public ports and monthly data transfer rates for the instance.
        state:
          $ref: '#/components/schemas/InstanceState'
          description: 'The status code and the state (e.g., <code>running</code>) for the instance.'
        username:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The user name for connecting to the instance (e.g., <code>ec2-user</code>).'
        sshKeyName:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the SSH key being used to connect to the instance (e.g., <code>LightsailDefaultKeyPair</code>).'
      description: Describes an instance (a virtual private server).
    InstanceSnapshot:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the snapshot.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Resource Name (ARN) of the snapshot (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:InstanceSnapshot/d23b5706-3322-4d83-81e5-12345EXAMPLE</code>).'
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: 'The timestamp when the snapshot was created (e.g., <code>1479907467.024</code>).'
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The region name and Availability Zone where you created the snapshot.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: The type of resource (usually <code>InstanceSnapshot</code>).
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        state:
          $ref: '#/components/schemas/InstanceSnapshotState'
          description: The state the snapshot is in.
        progress:
          $ref: '#/components/schemas/string'
          description: The progress of the snapshot.
        fromAttachedDisks:
          $ref: '#/components/schemas/DiskList'
          description: An array of disk objects containing information about all block storage disks.
        fromInstanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The instance from which the snapshot was created.
        fromInstanceArn:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Resource Name (ARN) of the instance from which the snapshot was created (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/64b8404c-ccb1-430b-8daf-12345EXAMPLE</code>).'
        fromBlueprintId:
          $ref: '#/components/schemas/string'
          description: 'The blueprint ID from which you created the snapshot (e.g., <code>os_debian_8_3</code>). A blueprint is a virtual private server (or <i>instance</i>) image used to create instances quickly.'
        fromBundleId:
          $ref: '#/components/schemas/string'
          description: 'The bundle ID from which you created the snapshot (e.g., <code>micro_1_0</code>).'
        isFromAutoSnapshot:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the snapshot was created from an automatic snapshot.
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: The size in GB of the SSD.
      description: Describes an instance snapshot.
    InstanceSnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceSnapshot'
    InstanceState:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/integer'
          description: The status code for the instance.
        name:
          $ref: '#/components/schemas/string'
          description: 'The state of the instance (e.g., <code>running</code> or <code>pending</code>).'
      description: Describes the virtual private server (or <i>instance</i>) status.
    InstanceList:
      type: array
      items:
        $ref: '#/components/schemas/Instance'
    KeyPairList:
      type: array
      items:
        $ref: '#/components/schemas/KeyPair'
    LoadBalancerMetricName:
      type: string
      enum:
        - ClientTLSNegotiationErrorCount
        - HealthyHostCount
        - UnhealthyHostCount
        - HTTPCode_LB_4XX_Count
        - HTTPCode_LB_5XX_Count
        - HTTPCode_Instance_2XX_Count
        - HTTPCode_Instance_3XX_Count
        - HTTPCode_Instance_4XX_Count
        - HTTPCode_Instance_5XX_Count
        - InstanceResponseTime
        - RejectedConnectionCount
        - RequestCount
    LoadBalancer:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the load balancer (e.g., <code>my-load-balancer</code>).'
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the load balancer.
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about your Lightsail load balancer. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The date when your load balancer was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: 'The AWS Region where your load balancer was created (e.g., <code>us-east-2a</code>). Lightsail automatically creates your load balancer across Availability Zones.'
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The resource type (e.g., <code>LoadBalancer</code>.'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        dnsName:
          $ref: '#/components/schemas/NonEmptyString'
          description: The DNS name of your Lightsail load balancer.
        state:
          $ref: '#/components/schemas/LoadBalancerState'
          description: The status of your load balancer. Valid values are below.
        protocol:
          $ref: '#/components/schemas/LoadBalancerProtocol'
          description: '<p>The protocol you have enabled for your load balancer. Valid values are below.</p> <p>You can''t just have <code>HTTP_HTTPS</code>, but you can have just <code>HTTP</code>.</p>'
        publicPorts:
          $ref: '#/components/schemas/PortList'
          description: 'An array of public port settings for your load balancer. For HTTP, use port 80. For HTTPS, use port 443.'
        healthCheckPath:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The path you specified to perform your health checks. If no path is specified, the load balancer tries to make a request to the default (root) page.'
        instancePort:
          $ref: '#/components/schemas/integer'
          description: 'The port where the load balancer will direct traffic to your Lightsail instances. For HTTP traffic, it''s port 80. For HTTPS traffic, it''s port 443.'
        instanceHealthSummary:
          $ref: '#/components/schemas/InstanceHealthSummaryList'
          description: An array of InstanceHealthSummary objects describing the health of the load balancer.
        tlsCertificateSummaries:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateSummaryList'
          description: 'An array of LoadBalancerTlsCertificateSummary objects that provide additional information about the SSL/TLS certificates. For example, if <code>true</code>, the certificate is attached to the load balancer.'
        configurationOptions:
          $ref: '#/components/schemas/LoadBalancerConfigurationOptions'
          description: A string to string map of the configuration options for your load balancer. Valid values are listed below.
      description: Describes the Lightsail load balancer.
    LoadBalancerTlsCertificateList:
      type: array
      items:
        $ref: '#/components/schemas/LoadBalancerTlsCertificate'
    LoadBalancerList:
      type: array
      items:
        $ref: '#/components/schemas/LoadBalancer'
    RegionList:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    RelationalDatabaseBlueprintList:
      type: array
      items:
        $ref: '#/components/schemas/RelationalDatabaseBlueprint'
    RelationalDatabaseBundleList:
      type: array
      items:
        $ref: '#/components/schemas/RelationalDatabaseBundle'
    RelationalDatabaseEventList:
      type: array
      items:
        $ref: '#/components/schemas/RelationalDatabaseEvent'
    LogEventList:
      type: array
      items:
        $ref: '#/components/schemas/LogEvent'
    RelationalDatabasePasswordVersion:
      type: string
      enum:
        - CURRENT
        - PREVIOUS
        - PENDING
    RelationalDatabaseMetricName:
      type: string
      enum:
        - CPUUtilization
        - DatabaseConnections
        - DiskQueueDepth
        - FreeStorageSpace
        - NetworkReceiveThroughput
        - NetworkTransmitThroughput
    RelationalDatabaseParameterList:
      type: array
      items:
        $ref: '#/components/schemas/RelationalDatabaseParameter'
    RelationalDatabase:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The unique name of the database resource in Lightsail.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the database.
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the database was created. Formatted in Unix time.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The Region name and Availability Zone where the database is located.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: 'The Lightsail resource type for the database (for example, <code>RelationalDatabase</code>).'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        relationalDatabaseBlueprintId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The blueprint ID for the database. A blueprint describes the major engine version of a database.
        relationalDatabaseBundleId:
          $ref: '#/components/schemas/NonEmptyString'
          description: The bundle ID for the database. A bundle describes the performance specifications for your database.
        masterDatabaseName:
          $ref: '#/components/schemas/string'
          description: The name of the master database created when the Lightsail database resource is created.
        hardware:
          $ref: '#/components/schemas/RelationalDatabaseHardware'
          description: Describes the hardware of the database.
        state:
          $ref: '#/components/schemas/NonEmptyString'
          description: Describes the current state of the database.
        secondaryAvailabilityZone:
          $ref: '#/components/schemas/string'
          description: <p>Describes the secondary Availability Zone of a high availability database.</p> <p>The secondary database is used for failover support of a high availability database.</p>
        backupRetentionEnabled:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether automated backup retention is enabled for the database.
        pendingModifiedValues:
          $ref: '#/components/schemas/PendingModifiedRelationalDatabaseValues'
          description: Describes pending database value modifications.
        engine:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The database software (for example, <code>MySQL</code>).'
        engineVersion:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The database engine version (for example, <code>5.7.23</code>).'
        latestRestorableTime:
          $ref: '#/components/schemas/IsoDate'
          description: The latest point in time to which the database can be restored. Formatted in Unix time.
        masterUsername:
          $ref: '#/components/schemas/NonEmptyString'
          description: The master user name of the database.
        parameterApplyStatus:
          $ref: '#/components/schemas/NonEmptyString'
          description: The status of parameter updates for the database.
        preferredBackupWindow:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The daily time range during which automated backups are created for the database (for example, <code>16:00-16:30</code>).'
        preferredMaintenanceWindow:
          $ref: '#/components/schemas/NonEmptyString'
          description: '<p>The weekly time range during which system maintenance can occur on the database.</p> <p>In the format <code>ddd:hh24:mi-ddd:hh24:mi</code>. For example, <code>Tue:17:00-Tue:17:30</code>.</p>'
        publiclyAccessible:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the database is publicly accessible.
        masterEndpoint:
          $ref: '#/components/schemas/RelationalDatabaseEndpoint'
          description: The master endpoint for the database.
        pendingMaintenanceActions:
          $ref: '#/components/schemas/PendingMaintenanceActionList'
          description: Describes the pending maintenance actions for the database.
        caCertificateIdentifier:
          $ref: '#/components/schemas/string'
          description: The certificate associated with the database.
      description: Describes a database.
    RelationalDatabaseSnapshot:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the database snapshot.
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the database snapshot.
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code for the database snapshot. Include this code in your email to support when you have questions about a database snapshot in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the database snapshot was created.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The Region name and Availability Zone where the database snapshot is located.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: The Lightsail resource type.
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        engine:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The software of the database snapshot (for example, <code>MySQL</code>)'
        engineVersion:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The database engine version for the database snapshot (for example, <code>5.7.23</code>).'
        sizeInGb:
          $ref: '#/components/schemas/integer'
          description: 'The size of the disk in GB (for example, <code>32</code>) for the database snapshot.'
        state:
          $ref: '#/components/schemas/NonEmptyString'
          description: The state of the database snapshot.
        fromRelationalDatabaseName:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the source database from which the database snapshot was created.
        fromRelationalDatabaseArn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the database from which the database snapshot was created.
        fromRelationalDatabaseBundleId:
          $ref: '#/components/schemas/string'
          description: The bundle ID of the database from which the database snapshot was created.
        fromRelationalDatabaseBlueprintId:
          $ref: '#/components/schemas/string'
          description: The blueprint ID of the database from which the database snapshot was created. A blueprint describes the major engine version of a database.
      description: Describes a database snapshot.
    RelationalDatabaseSnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/RelationalDatabaseSnapshot'
    RelationalDatabaseList:
      type: array
      items:
        $ref: '#/components/schemas/RelationalDatabase'
    StaticIp:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the static IP (e.g., <code>StaticIP-Ohio-EXAMPLE</code>).'
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Resource Name (ARN) of the static IP (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:StaticIp/9cbb4a9e-f8e3-4dfe-b57e-12345EXAMPLE</code>).'
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: 'The timestamp when the static IP was created (e.g., <code>1479735304.222</code>).'
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The region and Availability Zone where the static IP was created.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: The resource type (usually <code>StaticIp</code>).
        ipAddress:
          $ref: '#/components/schemas/IpAddress'
          description: The static IP address.
        attachedTo:
          $ref: '#/components/schemas/ResourceName'
          description: 'The instance where the static IP is attached (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).'
        isAttached:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the static IP is attached.
      description: Describes the static IP.
    StaticIpList:
      type: array
      items:
        $ref: '#/components/schemas/StaticIp'
    HostKeyAttributes:
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/string'
          description: '<p>The SSH host key algorithm or the RDP certificate format.</p> <p>For SSH host keys, the algorithm may be <code>ssh-rsa</code>, <code>ecdsa-sha2-nistp256</code>, <code>ssh-ed25519</code>, etc. For RDP certificates, the algorithm is always <code>x509-cert</code>.</p>'
        publicKey:
          $ref: '#/components/schemas/string'
          description: The public SSH host key or the RDP certificate.
        witnessedAt:
          $ref: '#/components/schemas/IsoDate'
          description: The time that the SSH host key or RDP certificate was recorded by Lightsail.
        fingerprintSHA1:
          $ref: '#/components/schemas/string'
          description: '<p>The SHA-1 fingerprint of the returned SSH host key or RDP certificate.</p> <ul> <li> <p>Example of an SHA-1 SSH fingerprint:</p> <p> <code>SHA1:1CHH6FaAaXjtFOsR/t83vf91SR0</code> </p> </li> <li> <p>Example of an SHA-1 RDP fingerprint:</p> <p> <code>af:34:51:fe:09:f0:e0:da:b8:4e:56:ca:60:c2:10:ff:38:06:db:45</code> </p> </li> </ul>'
        fingerprintSHA256:
          $ref: '#/components/schemas/string'
          description: '<p>The SHA-256 fingerprint of the returned SSH host key or RDP certificate.</p> <ul> <li> <p>Example of an SHA-256 SSH fingerprint:</p> <p> <code>SHA256:KTsMnRBh1IhD17HpdfsbzeGA4jOijm5tyXsMjKVbB8o</code> </p> </li> <li> <p>Example of an SHA-256 RDP fingerprint:</p> <p> <code>03:9b:36:9f:4b:de:4e:61:70:fc:7c:c9:78:e7:d2:1a:1c:25:a8:0c:91:f6:7c:e4:d6:a0:85:c8:b4:53:99:68</code> </p> </li> </ul>'
        notValidBefore:
          $ref: '#/components/schemas/IsoDate'
          description: <p>The returned RDP certificate is valid after this point in time.</p> <p>This value is listed only for RDP certificates.</p>
        notValidAfter:
          $ref: '#/components/schemas/IsoDate'
          description: <p>The returned RDP certificate is not valid after this point in time.</p> <p>This value is listed only for RDP certificates.</p>
      description: Describes the public SSH host keys or the RDP certificate.
    HostKeysList:
      type: array
      items:
        $ref: '#/components/schemas/HostKeyAttributes'
    IpAddress:
      type: string
      pattern: '([0-9]{1,3}\.){3}[0-9]{1,3}'
    IpV6Address:
      type: string
      pattern: '([A-F0-9]{1,4}:){7}[A-F0-9]{1,4}'
    InstanceHardware:
      type: object
      properties:
        cpuCount:
          $ref: '#/components/schemas/integer'
          description: The number of vCPUs the instance has.
        disks:
          $ref: '#/components/schemas/DiskList'
          description: The disks attached to the instance.
        ramSizeInGb:
          $ref: '#/components/schemas/float'
          description: 'The amount of RAM in GB on the instance (e.g., <code>1.0</code>).'
      description: Describes the hardware for the instance.
    InstanceNetworking:
      type: object
      properties:
        monthlyTransfer:
          $ref: '#/components/schemas/MonthlyTransfer'
          description: The amount of data in GB allocated for monthly data transfers.
        ports:
          $ref: '#/components/schemas/InstancePortInfoList'
          description: An array of key-value pairs containing information about the ports on the instance.
      description: Describes monthly data transfer rates and port information for an instance.
    PasswordData:
      type: object
      properties:
        ciphertext:
          $ref: '#/components/schemas/string'
          description: '<p>The encrypted password. Ciphertext will be an empty string if access to your new instance is not ready yet. When you create an instance, it can take up to 15 minutes for the instance to be ready.</p> <note> <p>If you use the default key pair (<code>LightsailDefaultKeyPair</code>), the decrypted password will be available in the password field.</p> <p>If you are using a custom key pair, you need to use your own means of decryption.</p> <p>If you change the Administrator password on the instance, Lightsail will continue to return the original ciphertext value. When accessing the instance using RDP, you need to manually enter the Administrator password after changing it from the default.</p> </note>'
        keyPairName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the key pair that you used when creating your instance. If no key pair name was specified when creating the instance, Lightsail uses the default key pair (<code>LightsailDefaultKeyPair</code>).</p> <p>If you are using a custom key pair, you need to use your own means of decrypting your password using the <code>ciphertext</code>. Lightsail creates the ciphertext by encrypting your password with the public key part of this key pair.</p>'
      description: 'The password data for the Windows Server-based instance, including the ciphertext and the key pair name.'
    PortInfoSourceType:
      type: string
      enum:
        - DEFAULT
        - INSTANCE
        - NONE
        - CLOSED
    InstanceEntry:
      type: object
      required:
        - sourceName
        - instanceType
        - portInfoSource
        - availabilityZone
      properties:
        sourceName:
          $ref: '#/components/schemas/ResourceName'
          description: '<p>The name of the export snapshot record, which contains the exported Lightsail instance snapshot that will be used as the source of the new Amazon EC2 instance.</p> <p>Use the <code>get export snapshot records</code> operation to get a list of export snapshot records that you can use to create a CloudFormation stack.</p>'
        instanceType:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The instance type (e.g., <code>t2.micro</code>) to use for the new Amazon EC2 instance.'
        portInfoSource:
          $ref: '#/components/schemas/PortInfoSourceType'
          description: '<p>The port configuration to use for the new Amazon EC2 instance.</p> <p>The following configuration options are available:</p> <ul> <li> <p>DEFAULT — Use the default firewall settings from the image.</p> </li> <li> <p>INSTANCE — Use the firewall settings from the source Lightsail instance.</p> </li> <li> <p>NONE — Default to Amazon EC2.</p> </li> <li> <p>CLOSED — All ports closed.</p> </li> </ul>'
        userData:
          $ref: '#/components/schemas/string'
          description: '<p>A launch script you can create that configures a server with additional user data. For example, you might want to run <code>apt-get -y update</code>.</p> <note> <p>Depending on the machine image you choose, the command to get software on your instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>, and FreeBSD uses <code>pkg</code>.</p> </note>'
        availabilityZone:
          $ref: '#/components/schemas/string'
          description: The Availability Zone for the new Amazon EC2 instance.
      description: Describes the Amazon Elastic Compute Cloud instance and related resources to be created using the <code>create cloud formation stack</code> operation.
    InstanceHealthReason:
      type: string
      enum:
        - Lb.RegistrationInProgress
        - Lb.InitialHealthChecking
        - Lb.InternalError
        - Instance.ResponseCodeMismatch
        - Instance.Timeout
        - Instance.FailedHealthChecks
        - Instance.NotRegistered
        - Instance.NotInUse
        - Instance.DeregistrationInProgress
        - Instance.InvalidState
        - Instance.IpUnusable
    InstanceHealthState:
      type: string
      enum:
        - initial
        - healthy
        - unhealthy
        - unused
        - draining
        - unavailable
    InstanceHealthSummary:
      type: object
      properties:
        instanceName:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the Lightsail instance for which you are requesting health check data.
        instanceHealth:
          $ref: '#/components/schemas/InstanceHealthState'
          description: Describes the overall instance health. Valid values are below.
        instanceHealthReason:
          $ref: '#/components/schemas/InstanceHealthReason'
          description: '<p>More information about the instance health. If the <code>instanceHealth</code> is <code>healthy</code>, then an <code>instanceHealthReason</code> value is not provided.</p> <p>If <b> <code>instanceHealth</code> </b> is <code>initial</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Lb.RegistrationInProgress</code> </b> - The target instance is in the process of being registered with the load balancer.</p> </li> <li> <p> <b> <code>Lb.InitialHealthChecking</code> </b> - The Lightsail load balancer is still sending the target instance the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If <b> <code>instanceHealth</code> </b> is <code>unhealthy</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Instance.ResponseCodeMismatch</code> </b> - The health checks did not return an expected HTTP code.</p> </li> <li> <p> <b> <code>Instance.Timeout</code> </b> - The health check requests timed out.</p> </li> <li> <p> <b> <code>Instance.FailedHealthChecks</code> </b> - The health checks failed because the connection to the target instance timed out, the target instance response was malformed, or the target instance failed the health check for an unknown reason.</p> </li> <li> <p> <b> <code>Lb.InternalError</code> </b> - The health checks failed due to an internal error.</p> </li> </ul> <p>If <b> <code>instanceHealth</code> </b> is <code>unused</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Instance.NotRegistered</code> </b> - The target instance is not registered with the target group.</p> </li> <li> <p> <b> <code>Instance.NotInUse</code> </b> - The target group is not used by any load balancer, or the target instance is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <b> <code>Instance.IpUnusable</code> </b> - The target IP address is reserved for use by a Lightsail load balancer.</p> </li> <li> <p> <b> <code>Instance.InvalidState</code> </b> - The target is in the stopped or terminated state.</p> </li> </ul> <p>If <b> <code>instanceHealth</code> </b> is <code>draining</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Instance.DeregistrationInProgress</code> </b> - The target instance is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul>'
      description: Describes information about the health of the instance.
    InstanceHealthSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceHealthSummary'
    MonthlyTransfer:
      type: object
      properties:
        gbPerMonthAllocated:
          $ref: '#/components/schemas/integer'
          description: The amount allocated per month (in GB).
      description: Describes the monthly data transfer in and out of your virtual private server (or <i>instance</i>).
    InstancePortInfoList:
      type: array
      items:
        $ref: '#/components/schemas/InstancePortInfo'
    NetworkProtocol:
      type: string
      enum:
        - tcp
        - all
        - udp
    PortAccessType:
      type: string
      enum:
        - Public
        - Private
    InstancePortInfo:
      type: object
      properties:
        fromPort:
          $ref: '#/components/schemas/Port'
          description: The first port in the range.
        toPort:
          $ref: '#/components/schemas/Port'
          description: The last port in the range.
        protocol:
          $ref: '#/components/schemas/NetworkProtocol'
          description: '<p>The protocol being used. Can be one of the following.</p> <ul> <li> <p> <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn''t require reliable data stream service, use UDP instead.</p> </li> <li> <p> <code>all</code> - All transport layer protocol types. For more general information, see <a href="https://en.wikipedia.org/wiki/Transport_layer">Transport layer</a> on Wikipedia.</p> </li> <li> <p> <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. Applications that don''t require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</p> </li> </ul>'
        accessFrom:
          $ref: '#/components/schemas/string'
          description: 'The location from which access is allowed (e.g., <code>Anywhere (0.0.0.0/0)</code>).'
        accessType:
          $ref: '#/components/schemas/PortAccessType'
          description: The type of access (<code>Public</code> or <code>Private</code>).
        commonName:
          $ref: '#/components/schemas/string'
          description: The common name.
        accessDirection:
          $ref: '#/components/schemas/AccessDirection'
          description: The access direction (<code>inbound</code> or <code>outbound</code>).
      description: Describes information about the instance ports.
    PortState:
      type: string
      enum:
        - open
        - closed
    InstancePortState:
      type: object
      properties:
        fromPort:
          $ref: '#/components/schemas/Port'
          description: The first port in the range.
        toPort:
          $ref: '#/components/schemas/Port'
          description: The last port in the range.
        protocol:
          $ref: '#/components/schemas/NetworkProtocol'
          description: '<p>The protocol being used. Can be one of the following.</p> <ul> <li> <p> <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn''t require reliable data stream service, use UDP instead.</p> </li> <li> <p> <code>all</code> - All transport layer protocol types. For more general information, see <a href="https://en.wikipedia.org/wiki/Transport_layer">Transport layer</a> on Wikipedia.</p> </li> <li> <p> <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. Applications that don''t require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</p> </li> </ul>'
        state:
          $ref: '#/components/schemas/PortState'
          description: Specifies whether the instance port is <code>open</code> or <code>closed</code>.
      description: Describes the port state.
    InstanceSnapshotState:
      type: string
      enum:
        - pending
        - error
        - available
    LoadBalancerState:
      type: string
      enum:
        - active
        - provisioning
        - active_impaired
        - failed
        - unknown
    LoadBalancerProtocol:
      type: string
      enum:
        - HTTP_HTTPS
        - HTTP
    PortList:
      type: array
      items:
        $ref: '#/components/schemas/Port'
    LoadBalancerTlsCertificateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LoadBalancerTlsCertificateSummary'
    LoadBalancerConfigurationOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/string'
    LoadBalancerAttributeName:
      type: string
      enum:
        - HealthCheckPath
        - SessionStickinessEnabled
        - SessionStickiness_LB_CookieDurationSeconds
    LoadBalancerTlsCertificateStatus:
      type: string
      enum:
        - PENDING_VALIDATION
        - ISSUED
        - INACTIVE
        - EXPIRED
        - VALIDATION_TIMED_OUT
        - REVOKED
        - FAILED
        - UNKNOWN
    LoadBalancerTlsCertificateDomainValidationRecordList:
      type: array
      items:
        $ref: '#/components/schemas/LoadBalancerTlsCertificateDomainValidationRecord'
    LoadBalancerTlsCertificateFailureReason:
      type: string
      enum:
        - NO_AVAILABLE_CONTACTS
        - ADDITIONAL_VERIFICATION_REQUIRED
        - DOMAIN_NOT_ALLOWED
        - INVALID_PUBLIC_DOMAIN
        - OTHER
    LoadBalancerTlsCertificateRenewalSummary:
      type: object
      properties:
        renewalStatus:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateRenewalStatus'
          description: The status of Lightsail's managed renewal of the certificate. Valid values are listed below.
        domainValidationOptions:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateDomainValidationOptionList'
          description: 'Contains information about the validation of each domain name in the certificate, as it pertains to Lightsail''s managed renewal. This is different from the initial validation that occurs as a result of the RequestCertificate request.'
      description: Contains information about the status of Lightsail's managed renewal for the certificate.
    LoadBalancerTlsCertificateRevocationReason:
      type: string
      enum:
        - UNSPECIFIED
        - KEY_COMPROMISE
        - CA_COMPROMISE
        - AFFILIATION_CHANGED
        - SUPERCEDED
        - CESSATION_OF_OPERATION
        - CERTIFICATE_HOLD
        - REMOVE_FROM_CRL
        - PRIVILEGE_WITHDRAWN
        - A_A_COMPROMISE
    LoadBalancerTlsCertificate:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: 'The name of the SSL/TLS certificate (e.g., <code>my-certificate</code>).'
        arn:
          $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the SSL/TLS certificate.
        supportCode:
          $ref: '#/components/schemas/string'
          description: The support code. Include this code in your email to support when you have questions about your Lightsail load balancer or SSL/TLS certificate. This code enables our support team to look up your Lightsail information more easily.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The time when you created your SSL/TLS certificate.
        location:
          $ref: '#/components/schemas/ResourceLocation'
          description: The AWS Region and Availability Zone where you created your certificate.
        resourceType:
          $ref: '#/components/schemas/ResourceType'
          description: '<p>The resource type (e.g., <code>LoadBalancerTlsCertificate</code>).</p> <ul> <li> <p> <b> <code>Instance</code> </b> - A Lightsail instance (a virtual private server)</p> </li> <li> <p> <b> <code>StaticIp</code> </b> - A static IP address</p> </li> <li> <p> <b> <code>KeyPair</code> </b> - The key pair used to connect to a Lightsail instance</p> </li> <li> <p> <b> <code>InstanceSnapshot</code> </b> - A Lightsail instance snapshot</p> </li> <li> <p> <b> <code>Domain</code> </b> - A DNS zone</p> </li> <li> <p> <b> <code>PeeredVpc</code> </b> - A peered VPC</p> </li> <li> <p> <b> <code>LoadBalancer</code> </b> - A Lightsail load balancer</p> </li> <li> <p> <b> <code>LoadBalancerTlsCertificate</code> </b> - An SSL/TLS certificate associated with a Lightsail load balancer</p> </li> <li> <p> <b> <code>Disk</code> </b> - A Lightsail block storage disk</p> </li> <li> <p> <b> <code>DiskSnapshot</code> </b> - A block storage disk snapshot</p> </li> </ul>'
        tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tag keys and optional values for the resource. For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.'
        loadBalancerName:
          $ref: '#/components/schemas/ResourceName'
          description: The load balancer name where your SSL/TLS certificate is attached.
        isAttached:
          $ref: '#/components/schemas/boolean'
          description: 'When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.'
        status:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateStatus'
          description: The status of the SSL/TLS certificate. Valid values are below.
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name for your SSL/TLS certificate.
        domainValidationRecords:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateDomainValidationRecordList'
          description: An array of LoadBalancerTlsCertificateDomainValidationRecord objects describing the records.
        failureReason:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateFailureReason'
          description: The reason for the SSL/TLS certificate validation failure.
        issuedAt:
          $ref: '#/components/schemas/IsoDate'
          description: The time when the SSL/TLS certificate was issued.
        issuer:
          $ref: '#/components/schemas/NonEmptyString'
          description: The issuer of the certificate.
        keyAlgorithm:
          $ref: '#/components/schemas/NonEmptyString'
          description: The algorithm that was used to generate the key pair (the public and private key).
        notAfter:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the SSL/TLS certificate expires.
        notBefore:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the SSL/TLS certificate is first valid.
        renewalSummary:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateRenewalSummary'
          description: An object containing information about the status of Lightsail's managed renewal for the certificate.
        revocationReason:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateRevocationReason'
          description: The reason the certificate was revoked. Valid values are below.
        revokedAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the SSL/TLS certificate was revoked.
        serial:
          $ref: '#/components/schemas/NonEmptyString'
          description: The serial number of the certificate.
        signatureAlgorithm:
          $ref: '#/components/schemas/NonEmptyString'
          description: The algorithm that was used to sign the certificate.
        subject:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the entity that is associated with the public key contained in the certificate.
        subjectAlternativeNames:
          $ref: '#/components/schemas/StringList'
          description: 'One or more domains or subdomains included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CNAME) of the certificate and additional domain names that can be used to connect to the website, such as <code>example.com</code>, <code>www.example.com</code>, or <code>m.example.com</code>.'
      description: '<p>Describes a load balancer SSL/TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>'
    LoadBalancerTlsCertificateDomainStatus:
      type: string
      enum:
        - PENDING_VALIDATION
        - FAILED
        - SUCCESS
    LoadBalancerTlsCertificateDomainValidationOption:
      type: object
      properties:
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The fully qualified domain name in the certificate request.
        validationStatus:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateDomainStatus'
          description: The status of the domain validation. Valid values are listed below.
      description: Contains information about the domain names on an SSL/TLS certificate that you will use to validate domain ownership.
    LoadBalancerTlsCertificateDomainValidationOptionList:
      type: array
      items:
        $ref: '#/components/schemas/LoadBalancerTlsCertificateDomainValidationOption'
    LoadBalancerTlsCertificateDomainValidationRecord:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'A fully qualified domain name in the certificate. For example, <code>example.com</code>.'
        type:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of validation record. For example, <code>CNAME</code> for domain validation.'
        value:
          $ref: '#/components/schemas/NonEmptyString'
          description: The value for that type.
        validationStatus:
          $ref: '#/components/schemas/LoadBalancerTlsCertificateDomainStatus'
          description: The validation status. Valid values are listed below.
        domainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name against which your SSL/TLS certificate was validated.
      description: Describes the validation record of each domain name in the SSL/TLS certificate.
    LoadBalancerTlsCertificateRenewalStatus:
      type: string
      enum:
        - PENDING_AUTO_RENEWAL
        - PENDING_VALIDATION
        - SUCCESS
        - FAILED
    LoadBalancerTlsCertificateSummary:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
          description: The name of the SSL/TLS certificate.
        isAttached:
          $ref: '#/components/schemas/boolean'
          description: 'When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.'
      description: Provides a summary of SSL/TLS certificate metadata.
    LogEvent:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the database log event was created.
        message:
          $ref: '#/components/schemas/string'
          description: The message of the database log event.
      description: Describes a database log event.
    MetricDatapoint:
      type: object
      properties:
        average:
          $ref: '#/components/schemas/double'
          description: The average.
        maximum:
          $ref: '#/components/schemas/double'
          description: The maximum.
        minimum:
          $ref: '#/components/schemas/double'
          description: The minimum.
        sampleCount:
          $ref: '#/components/schemas/double'
          description: The sample count.
        sum:
          $ref: '#/components/schemas/double'
          description: The sum.
        timestamp:
          $ref: '#/components/schemas/timestamp'
          description: 'The timestamp (e.g., <code>1479816991.349</code>).'
        unit:
          $ref: '#/components/schemas/MetricUnit'
          description: 'The unit. '
      description: Describes the metric data point.
    ResourceArn:
      type: string
      pattern: '^arn:(aws[^:]*):([a-zA-Z0-9-]+):([a-z0-9-]+):([0-9]+):([a-zA-Z]+)/([a-zA-Z0-9-]+)$'
    OperationType:
      type: string
      enum:
        - DeleteKnownHostKeys
        - DeleteInstance
        - CreateInstance
        - StopInstance
        - StartInstance
        - RebootInstance
        - OpenInstancePublicPorts
        - PutInstancePublicPorts
        - CloseInstancePublicPorts
        - AllocateStaticIp
        - ReleaseStaticIp
        - AttachStaticIp
        - DetachStaticIp
        - UpdateDomainEntry
        - DeleteDomainEntry
        - CreateDomain
        - DeleteDomain
        - CreateInstanceSnapshot
        - DeleteInstanceSnapshot
        - CreateInstancesFromSnapshot
        - CreateLoadBalancer
        - DeleteLoadBalancer
        - AttachInstancesToLoadBalancer
        - DetachInstancesFromLoadBalancer
        - UpdateLoadBalancerAttribute
        - CreateLoadBalancerTlsCertificate
        - DeleteLoadBalancerTlsCertificate
        - AttachLoadBalancerTlsCertificate
        - CreateDisk
        - DeleteDisk
        - AttachDisk
        - DetachDisk
        - CreateDiskSnapshot
        - DeleteDiskSnapshot
        - CreateDiskFromSnapshot
        - CreateRelationalDatabase
        - UpdateRelationalDatabase
        - DeleteRelationalDatabase
        - CreateRelationalDatabaseFromSnapshot
        - CreateRelationalDatabaseSnapshot
        - DeleteRelationalDatabaseSnapshot
        - UpdateRelationalDatabaseParameters
        - StartRelationalDatabase
        - RebootRelationalDatabase
        - StopRelationalDatabase
        - EnableAddOn
        - DisableAddOn
        - PutAlarm
        - GetAlarms
        - DeleteAlarm
        - TestAlarm
        - CreateContactMethod
        - GetContactMethods
        - SendContactMethodVerification
        - DeleteContactMethod
    OperationStatus:
      type: string
      enum:
        - NotStarted
        - Started
        - Failed
        - Completed
        - Succeeded
    PendingMaintenanceAction:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/NonEmptyString'
          description: The type of pending database maintenance action.
        description:
          $ref: '#/components/schemas/NonEmptyString'
          description: Additional detail about the pending database maintenance action.
        currentApplyDate:
          $ref: '#/components/schemas/IsoDate'
          description: The effective date of the pending database maintenance action.
      description: Describes a pending database maintenance action.
    PendingMaintenanceActionList:
      type: array
      items:
        $ref: '#/components/schemas/PendingMaintenanceAction'
    PendingModifiedRelationalDatabaseValues:
      type: object
      properties:
        masterUserPassword:
          $ref: '#/components/schemas/string'
          description: The password for the master user of the database.
        engineVersion:
          $ref: '#/components/schemas/string'
          description: The database engine version.
        backupRetentionEnabled:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether automated backup retention is enabled.
      description: Describes a pending database value modification.
    PortInfoList:
      type: array
      items:
        $ref: '#/components/schemas/PortInfo'
    Region:
      type: object
      properties:
        continentCode:
          $ref: '#/components/schemas/string'
          description: 'The continent code (e.g., <code>NA</code>, meaning North America).'
        description:
          $ref: '#/components/schemas/string'
          description: 'The description of the AWS Region (e.g., <code>This region is recommended to serve users in the eastern United States and eastern Canada</code>).'
        displayName:
          $ref: '#/components/schemas/string'
          description: 'The display name (e.g., <code>Ohio</code>).'
        name:
          $ref: '#/components/schemas/RegionName'
          description: 'The region name (e.g., <code>us-east-2</code>).'
        availabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
          description: The Availability Zones. Follows the format <code>us-east-2a</code> (case-sensitive).
        relationalDatabaseAvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
          description: The Availability Zones for databases. Follows the format <code>us-east-2a</code> (case-sensitive).
      description: Describes the AWS Region.
    RelationalDatabaseHardware:
      type: object
      properties:
        cpuCount:
          $ref: '#/components/schemas/integer'
          description: The number of vCPUs for the database.
        diskSizeInGb:
          $ref: '#/components/schemas/integer'
          description: The size of the disk for the database.
        ramSizeInGb:
          $ref: '#/components/schemas/float'
          description: The amount of RAM in GB for the database.
      description: Describes the hardware of a database.
    RelationalDatabaseEndpoint:
      type: object
      properties:
        port:
          $ref: '#/components/schemas/integer'
          description: Specifies the port that the database is listening on.
        address:
          $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the DNS address of the database.
      description: Describes an endpoint for a database.
    RelationalDatabaseEngine:
      type: string
      enum:
        - mysql
    RelationalDatabaseBlueprint:
      type: object
      properties:
        blueprintId:
          $ref: '#/components/schemas/string'
          description: The ID for the database blueprint.
        engine:
          $ref: '#/components/schemas/RelationalDatabaseEngine'
          description: 'The database software of the database blueprint (for example, <code>MySQL</code>).'
        engineVersion:
          $ref: '#/components/schemas/string'
          description: 'The database engine version for the database blueprint (for example, <code>5.7.23</code>).'
        engineDescription:
          $ref: '#/components/schemas/string'
          description: The description of the database engine for the database blueprint.
        engineVersionDescription:
          $ref: '#/components/schemas/string'
          description: The description of the database engine version for the database blueprint.
        isEngineDefault:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the engine version is the default for the database blueprint.
      description: 'Describes a database image, or blueprint. A blueprint describes the major engine version of a database.'
    RelationalDatabaseBundle:
      type: object
      properties:
        bundleId:
          $ref: '#/components/schemas/string'
          description: The ID for the database bundle.
        name:
          $ref: '#/components/schemas/string'
          description: The name for the database bundle.
        price:
          $ref: '#/components/schemas/float'
          description: The cost of the database bundle in US currency.
        ramSizeInGb:
          $ref: '#/components/schemas/float'
          description: 'The amount of RAM in GB (for example, <code>2.0</code>) for the database bundle.'
        diskSizeInGb:
          $ref: '#/components/schemas/integer'
          description: The size of the disk for the database bundle.
        transferPerMonthInGb:
          $ref: '#/components/schemas/integer'
          description: The data transfer rate per month in GB for the database bundle.
        cpuCount:
          $ref: '#/components/schemas/integer'
          description: The number of virtual CPUs (vCPUs) for the database bundle.
        isEncrypted:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the database bundle is encrypted.
        isActive:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the database bundle is active.
      description: Describes a database bundle. A bundle describes the performance specifications of the database.
    RelationalDatabaseEvent:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/ResourceName'
          description: The database that the database event relates to.
        createdAt:
          $ref: '#/components/schemas/IsoDate'
          description: The timestamp when the database event was created.
        message:
          $ref: '#/components/schemas/string'
          description: The message of the database event.
        eventCategories:
          $ref: '#/components/schemas/StringList'
          description: The category that the database event belongs to.
      description: Describes an event for a database.
    RelationalDatabaseParameter:
      type: object
      properties:
        allowedValues:
          $ref: '#/components/schemas/string'
          description: Specifies the valid range of values for the parameter.
        applyMethod:
          $ref: '#/components/schemas/string'
          description: <p>Indicates when parameter updates are applied.</p> <p>Can be <code>immediate</code> or <code>pending-reboot</code>.</p>
        applyType:
          $ref: '#/components/schemas/string'
          description: Specifies the engine-specific parameter type.
        dataType:
          $ref: '#/components/schemas/string'
          description: Specifies the valid data type for the parameter.
        description:
          $ref: '#/components/schemas/string'
          description: Provides a description of the parameter.
        isModifiable:
          $ref: '#/components/schemas/boolean'
          description: A Boolean value indicating whether the parameter can be modified.
        parameterName:
          $ref: '#/components/schemas/string'
          description: Specifies the name of the parameter.
        parameterValue:
          $ref: '#/components/schemas/string'
          description: Specifies the value of the parameter.
      description: Describes the parameters of a database.
    TagKey:
      type: string
    TagValue:
      type: string
    Tag:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
          description: '<p>The key of the tag.</p> <p>Constraints: Tag keys accept a maximum of 128 letters, numbers, spaces in UTF-8, or the following characters: + - = . _ : / @</p>'
        value:
          $ref: '#/components/schemas/TagValue'
          description: '<p>The value of the tag.</p> <p>Constraints: Tag values accept a maximum of 256 letters, numbers, spaces in UTF-8, or the following characters: + - = . _ : / @</p>'
      description: '<p>Describes a tag key and optional value assigned to an Amazon Lightsail resource.</p> <p>For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail Dev Guide</a>.</p>'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
security:
  - hmac: []
