openapi: 3.0.0
info:
  version: '2018-11-05'
  x-release: v4
  title: AWS Transfer for SFTP
  description: 'AWS Transfer for SFTP is a fully managed service that enables the transfer of files directly into and out of Amazon S3 using the Secure File Transfer Protocol (SFTP)—also known as Secure Shell (SSH) File Transfer Protocol. AWS helps you seamlessly migrate your file transfer workflows to AWS Transfer for SFTP—by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53—so nothing changes for your customers and partners, or their applications. With your data in S3, you can use it with AWS services for processing, analytics, machine learning, and archiving. Getting started with AWS Transfer for SFTP (AWS SFTP) is easy; there is no infrastructure to buy and set up. '
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: transfer
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/transfer-2018-11-05.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/transfer/'
servers:
  - url: 'http://transfer.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Transfer multi-region endpoint
  - url: 'https://transfer.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Transfer multi-region endpoint
  - url: 'http://transfer.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Transfer endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://transfer.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Transfer endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=TransferService.CreateServer':
    post:
      operationId: CreateServer
      description: 'Instantiates an autoscaling virtual server based on Secure File Transfer Protocol (SFTP) in AWS. When you make updates to your server or when you work with users, use the service-generated <code>ServerId</code> property that is assigned to the newly created server.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServerResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.CreateServer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.CreateUser':
    post:
      operationId: CreateUser
      description: 'Creates a user and associates them with an existing Secure File Transfer Protocol (SFTP) server. You can only create and associate users with SFTP servers that have the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>, you can specify the user name, set the home directory, store the user''s public key, and assign the user''s AWS Identity and Access Management (IAM) role. You can also optionally add a scope-down policy, and assign metadata with tags that can be used to group and search for users.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.CreateUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.DeleteServer':
    post:
      operationId: DeleteServer
      description: <p>Deletes the Secure File Transfer Protocol (SFTP) server that you specify.</p> <p>No response returns from this operation.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.DeleteServer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.DeleteSshPublicKey':
    post:
      operationId: DeleteSshPublicKey
      description: <p>Deletes a user's Secure Shell (SSH) public key.</p> <p>No response is returned from this operation.</p>
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSshPublicKeyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.DeleteSshPublicKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.DeleteUser':
    post:
      operationId: DeleteUser
      description: '<p>Deletes the user belonging to the server you specify.</p> <p>No response returns from this operation.</p> <note> <p>When you delete a user from a server, the user''s information is lost.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.DeleteUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.DescribeServer':
    post:
      operationId: DescribeServer
      description: '<p>Describes the server that you specify by passing the <code>ServerId</code> parameter.</p> <p>The response contains a description of the server''s properties. When you set <code>EndpointType</code> to VPC, the response will contain the <code>EndpointDetails</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeServerResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.DescribeServer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.DescribeUser':
    post:
      operationId: DescribeUser
      description: '<p>Describes the user assigned to a specific server, as identified by its <code>ServerId</code> property.</p> <p>The response from this call returns the properties of the user associated with the <code>ServerId</code> value that was specified.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.DescribeUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.ImportSshPublicKey':
    post:
      operationId: ImportSshPublicKey
      description: '<p>Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code> value assigned to a specific server, identified by <code>ServerId</code>.</p> <p>The response returns the <code>UserName</code> value, the <code>ServerId</code> value, and the name of the <code>SshPublicKeyId</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSshPublicKeyResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportSshPublicKeyRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.ImportSshPublicKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.ListServers':
    post:
      operationId: ListServers
      description: Lists the Secure File Transfer Protocol (SFTP) servers that are associated with your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServersResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.ListServers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: 'Lists all of the tags associated with the Amazon Resource Number (ARN) you specify. The resource can be a user, server, or role.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.ListTagsForResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.ListUsers':
    post:
      operationId: ListUsers
      description: Lists the users for the server that you specify by passing the <code>ServerId</code> parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.ListUsers
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.StartServer':
    post:
      operationId: StartServer
      description: '<p>Changes the state of a Secure File Transfer Protocol (SFTP) server from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on an SFTP server that is already <code>ONLINE</code>. An <code>ONLINE</code> server can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code> can indicate an error condition. </p> <p>No response is returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.StartServer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.StopServer':
    post:
      operationId: StopServer
      description: '<p>Changes the state of an SFTP server from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information tied to your server such as server and user properties are not affected by stopping your server. Stopping a server will not reduce or impact your Secure File Transfer Protocol (SFTP) endpoint billing.</p> <p>The state of <code>STOPPING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.StopServer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.TagResource':
    post:
      operationId: TagResource
      description: '<p>Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>There is no response returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.TagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.TestIdentityProvider':
    post:
      operationId: TestIdentityProvider
      description: 'If the <code>IdentityProviderType</code> of the server is <code>API_Gateway</code>, tests whether your API Gateway is set up successfully. We highly recommend that you call this operation to test your authentication method as soon as you create your server. By doing so, you can troubleshoot issues with the API Gateway integration to ensure that your users can successfully use the service.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIdentityProviderResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIdentityProviderRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.TestIdentityProvider
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.UntagResource':
    post:
      operationId: UntagResource
      description: '<p>Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>No response is returned from this call.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.UntagResource
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.UpdateServer':
    post:
      operationId: UpdateServer
      description: <p>Updates the server properties after that server has been created.</p> <p>The <code>UpdateServer</code> call returns the <code>ServerId</code> of the Secure File Transfer Protocol (SFTP) server you updated.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServerResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '482':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '483':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '484':
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsException'
        '485':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.UpdateServer
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=TransferService.UpdateUser':
    post:
      operationId: UpdateUser
      description: '<p>Assigns new properties to a user. Parameters you pass modify any or all of the following: the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code> you specify.</p> <p>The response returns the <code>ServerId</code> and the <code>UserName</code> for the updated user.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
        '480':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '481':
          description: InternalServiceError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - TransferService.UpdateUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateServerResponse:
      type: object
      required:
        - ServerId
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: The service-assigned ID of the SFTP server that is created.
    CreateServerRequest:
      type: object
      title: CreateServerRequest
      properties:
        EndpointDetails:
          $ref: '#/components/schemas/EndpointDetails'
          description: 'The virtual private cloud (VPC) endpoint settings that are configured for your SFTP server. With a VPC endpoint, you can restrict access to your SFTP server to resources only within your VPC. To control incoming internet traffic, you will need to invoke the <code>UpdateServer</code> API and attach an Elastic IP to your server''s endpoint. '
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
          description: 'The type of VPC endpoint that you want your SFTP server to connect to. You can choose to connect to the public internet or a virtual private cloud (VPC) endpoint. With a VPC endpoint, you can restrict access to your SFTP server and resources only within your VPC.'
        HostKey:
          $ref: '#/components/schemas/HostKey'
          description: '<p>The RSA private key as generated by the <code>ssh-keygen -N "" -f my-new-server-key</code> command.</p> <important> <p>If you aren''t planning to migrate existing users from an existing SFTP server to a new AWS SFTP server, don''t update the host key. Accidentally changing a server''s host key can be disruptive.</p> </important> <p> For more information, see "https://alpha-docs-aws.amazon.com/transfer/latest/userguide/configuring-servers.html#change-host-key" in the <i>AWS SFTP User Guide.</i> </p>'
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
          description: 'This parameter is required when the <code>IdentityProviderType</code> is set to <code>API_GATEWAY</code>. Accepts an array containing all of the information required to call a customer-supplied authentication API, including the API Gateway URL. This property is not required when the <code>IdentityProviderType</code> is set to <code>SERVICE_MANAGED</code>.'
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
          description: 'Specifies the mode of authentication for the SFTP server. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access SFTP user credentials within the AWS Transfer for SFTP service. Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your choosing. The <code>API_GATEWAY</code> setting requires you to provide an API Gateway endpoint URL to call for authentication using the <code>IdentityProviderDetails</code> parameter.'
        LoggingRole:
          $ref: '#/components/schemas/Role'
          description: A value that allows the service to write your SFTP users' activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Key-value pairs that can be used to group and search for servers.
    ServiceUnavailableException: {}
    InternalServiceError: {}
    InvalidRequestException: {}
    ResourceExistsException: {}
    CreateUserResponse:
      type: object
      required:
        - ServerId
        - UserName
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: The ID of the SFTP server that the user is attached to.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: A unique string that identifies a user account associated with an SFTP server.
    CreateUserRequest:
      type: object
      required:
        - Role
        - ServerId
        - UserName
      title: CreateUserRequest
      properties:
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
          description: <p>The landing directory (folder) for a user when they log in to the server using their SFTP client. </p> <p>An example is &lt;<code>your-Amazon-S3-bucket-name&gt;/home/username</code>.</p>
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
          description: 'The type of landing directory (folder) you want your users'' home directory to be when they log into the SFTP server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket paths as is in their SFTP clients. If you set it <code>LOGICAL</code>, you will need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make S3 paths visible to your user.'
        HomeDirectoryMappings:
          $ref: '#/components/schemas/HomeDirectoryMappings'
          description: '<p>Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. You will need to specify the "<code>Entry</code>" and "<code>Target</code>" pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual S3 path. If you only specify a target, it will be displayed as is. You will need to also make sure that your AWS IAM Role provides access to paths in <code>Target</code>. The following is an example.</p> <p> <code>''[ "/bucket2/documentation", { "Entry": "your-personal-report.pdf", "Target": "/bucket3/customized-reports/${transfer:UserName}.pdf" } ]''</code> </p> <p>In most cases, you can use this value instead of the scope down policy to lock your user down to the designated home directory ("chroot"). To do this, you can set <code>Entry</code> to ''/'' and set <code>Target</code> to the HomeDirectory parameter value. </p> <note> <p>If the target of a logical directory entry does not exist in S3, the entry will be ignored. As a workaround, you can use the S3 api to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api call instead of s3 so you can use the put-object operation. For example, you use the following: <code>aws s3api put-object --bucket bucketname --key path/to/folder/</code>. Make sure that the end of the key name ends in a / for it to be considered a folder. </p> </note>'
        Policy:
          $ref: '#/components/schemas/Policy'
          description: '<p>A scope-down policy for your user so you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p> <note> <p>For scope-down policies, AWS Transfer for SFTP stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p> <p>For an example of a scope-down policy, see "https://docs.aws.amazon.com/transfer/latest/userguide/users.html#users-policies-scope-down"&gt;Creating a Scope-Down Policy.</p> <p>For more information, see "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html" in the <i>AWS Security Token Service API Reference</i>.</p> </note>'
        Role:
          $ref: '#/components/schemas/Role'
          description: The IAM role that controls your user's access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user's transfer requests.
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server instance. This is the specific SFTP server that you added your user to.
        SshPublicKeyBody:
          $ref: '#/components/schemas/SshPublicKeyBody'
          description: The public portion of the Secure Shell (SSH) key used to authenticate the user to the SFTP server.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: 'A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>. This user name must be a minimum of 3 and a maximum of 32 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore, and hyphen. The user name can''t start with a hyphen.'
    ResourceNotFoundException: {}
    DeleteServerRequest:
      type: object
      required:
        - ServerId
      title: DeleteServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A unique system-assigned identifier for an SFTP server instance.
    DeleteSshPublicKeyRequest:
      type: object
      required:
        - ServerId
        - SshPublicKeyId
        - UserName
      title: DeleteSshPublicKeyRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server instance that has the user assigned to it.
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
          description: A unique identifier used to reference your user's specific SSH key.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: A unique string that identifies a user whose public key is being deleted.
    ThrottlingException: {}
    DeleteUserRequest:
      type: object
      required:
        - ServerId
        - UserName
      title: DeleteUserRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server instance that has the user assigned to it.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: A unique string that identifies a user that is being deleted from the server.
    DescribeServerResponse:
      type: object
      required:
        - Server
      properties:
        Server:
          $ref: '#/components/schemas/DescribedServer'
          description: An array containing the properties of the server with the <code>ServerID</code> you specified.
    DescribeServerRequest:
      type: object
      required:
        - ServerId
      title: DescribeServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server.
    DescribeUserResponse:
      type: object
      required:
        - ServerId
        - User
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server that has this user assigned.
        User:
          $ref: '#/components/schemas/DescribedUser'
          description: An array containing the properties of the user account for the <code>ServerID</code> value that you specified.
    DescribeUserRequest:
      type: object
      required:
        - ServerId
        - UserName
      title: DescribeUserRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server that has this user assigned.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the AWS Transfer for SFTP service and perform file transfer tasks.
    ImportSshPublicKeyResponse:
      type: object
      required:
        - ServerId
        - SshPublicKeyId
        - UserName
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server.
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
          description: This identifier is the name given to a public key by the system that was imported.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: A user name assigned to the <code>ServerID</code> value that you specified.
      description: 'This response identifies the user, the server they belong to, and the identifier of the SSH public key associated with that user. A user can have more than one key on each server that they are associated with.'
    ImportSshPublicKeyRequest:
      type: object
      required:
        - ServerId
        - SshPublicKeyBody
        - UserName
      title: ImportSshPublicKeyRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server.
        SshPublicKeyBody:
          $ref: '#/components/schemas/SshPublicKeyBody'
          description: The public key portion of an SSH key pair.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The name of the user account that is assigned to one or more servers.
    ListServersResponse:
      type: object
      required:
        - Servers
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.'
        Servers:
          $ref: '#/components/schemas/ListedServers'
          description: An array of servers that were listed.
    ListServersRequest:
      type: object
      title: ListServersRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Specifies the number of servers to return as a response to the <code>ListServers</code> query.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'When additional results are obtained from the <code>ListServers</code> command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.'
    InvalidNextTokenException: {}
    ListTagsForResourceResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: This value is the ARN you specified to list the tags of.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'When you can get additional results from the <code>ListTagsForResource</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional tags.'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: 'Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define.'
    ListTagsForResourceRequest:
      type: object
      required:
        - Arn
      title: ListTagsForResourceRequest
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: 'Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific AWS resource, such as a server, user, or role.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Specifies the number of tags to return as a response to the <code>ListTagsForResource</code> request.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'When you request additional results from the <code>ListTagsForResource</code> operation, a <code>NextToken</code> parameter is returned in the input. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional tags.'
    ListUsersResponse:
      type: object
      required:
        - ServerId
        - Users
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional users.'
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server that the users are assigned to.
        Users:
          $ref: '#/components/schemas/ListedUsers'
          description: Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.
    ListUsersRequest:
      type: object
      required:
        - ServerId
      title: ListUsersRequest
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Specifies the number of users to return as a response to the <code>ListUsers</code> request.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional users.'
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for a Secure File Transfer Protocol (SFTP) server that has users assigned to it.
    StartServerRequest:
      type: object
      required:
        - ServerId
      title: StartServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server that you start.
    StopServerRequest:
      type: object
      required:
        - ServerId
      title: StopServerRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server that you stopped.
    TagResourceRequest:
      type: object
      required:
        - Arn
        - Tags
      title: TagResourceRequest
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: 'An Amazon Resource Name (ARN) for a specific AWS resource, such as a server, user, or role.'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.
    TestIdentityProviderResponse:
      type: object
      required:
        - StatusCode
        - Url
      properties:
        Response:
          $ref: '#/components/schemas/Response'
          description: The response that is returned from your API Gateway.
        StatusCode:
          $ref: '#/components/schemas/StatusCode'
          description: The HTTP status code that is the response from your API Gateway.
        Message:
          $ref: '#/components/schemas/Message'
          description: 'A message that indicates whether the test was successful or not. '
        Url:
          $ref: '#/components/schemas/Url'
          description: The endpoint of the service used to authenticate a user.
    TestIdentityProviderRequest:
      type: object
      required:
        - ServerId
        - UserName
      title: TestIdentityProviderRequest
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: This request parameter is the name of the user account to be tested.
        UserPassword:
          $ref: '#/components/schemas/UserPassword'
          description: The password of the user account to be tested.
    UntagResourceRequest:
      type: object
      required:
        - Arn
        - TagKeys
      title: UntagResourceRequest
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: 'This is the value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.'
        TagKeys:
          $ref: '#/components/schemas/TagKeys'
          description: TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.
    UpdateServerResponse:
      type: object
      required:
        - ServerId
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server that the user account is assigned to.
    UpdateServerRequest:
      type: object
      required:
        - ServerId
      title: UpdateServerRequest
      properties:
        EndpointDetails:
          $ref: '#/components/schemas/EndpointDetails'
          description: 'The virtual private cloud (VPC) endpoint settings that are configured for your SFTP server. With a VPC endpoint, you can restrict access to your SFTP server to resources only within your VPC. To control incoming internet traffic, you will need to associate one or more Elastic IP addresses with your server''s endpoint. '
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
          description: 'The type of endpoint that you want your SFTP server to connect to. You can choose to connect to the public internet or a virtual private cloud (VPC) endpoint. With a VPC endpoint, your SFTP server isn''t accessible over the public internet. '
        HostKey:
          $ref: '#/components/schemas/HostKey'
          description: '<p>The RSA private key as generated by <code>ssh-keygen -N "" -f my-new-server-key</code>.</p> <important> <p>If you aren''t planning to migrate existing users from an existing SFTP server to a new AWS SFTP server, don''t update the host key. Accidentally changing a server''s host key can be disruptive.</p> </important> <p> For more information, see "https://docs.aws.amazon.com/transfer/latest/userguide/configuring-servers.html#change-host-key" in the <i>AWS SFTP User Guide.</i> </p>'
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
          description: This response parameter is an array containing all of the information required to call a customer's authentication API method.
        LoggingRole:
          $ref: '#/components/schemas/NullableRole'
          description: 'A value that changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.'
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.
    ConflictException: {}
    UpdateUserResponse:
      type: object
      required:
        - ServerId
        - UserName
      properties:
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The unique identifier for a user that is assigned to the SFTP server instance that was specified in the request.
      description: ' <code>UpdateUserResponse</code> returns the user name and server identifier for the request to update a user''s properties.'
    UpdateUserRequest:
      type: object
      required:
        - ServerId
        - UserName
      title: UpdateUserRequest
      properties:
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
          description: <p>A parameter that specifies the landing directory (folder) for a user when they log in to the server using their client. </p> <p>An example is <code>&lt;your-Amazon-S3-bucket-name&gt;/home/username</code>.</p>
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
          description: 'The type of landing directory (folder) you want your users'' home directory to be when they log into the SFTP serve. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket paths as is in their SFTP clients. If you set it <code>LOGICAL</code>, you will need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make S3 paths visible to your user.'
        HomeDirectoryMappings:
          $ref: '#/components/schemas/HomeDirectoryMappings'
          description: '<p>Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. You will need to specify the "<code>Entry</code>" and "<code>Target</code>" pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual S3 path. If you only specify a target, it will be displayed as is. You will need to also make sure that your AWS IAM Role provides access to paths in <code>Target</code>. The following is an example.</p> <p> <code>''[ "/bucket2/documentation", { "Entry": "your-personal-report.pdf", "Target": "/bucket3/customized-reports/${transfer:UserName}.pdf" } ]''</code> </p> <p>In most cases, you can use this value instead of the scope down policy to lock your user down to the designated home directory ("chroot"). To do this, you can set <code>Entry</code> to ''/'' and set <code>Target</code> to the HomeDirectory parameter value. </p> <note> <p>If the target of a logical directory entry does not exist in S3, the entry will be ignored. As a workaround, you can use the S3 api to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api call instead of s3 so you can use the put-object operation. For example, you use the following: <code>aws s3api put-object --bucket bucketname --key path/to/folder/</code>. Make sure that the end of the key name ends in a / for it to be considered a folder. </p> </note>'
        Policy:
          $ref: '#/components/schemas/Policy'
          description: '<p>Allows you to supply a scope-down policy for your user so you can use the same AWS Identity and Access Management (IAM) role across multiple users. The policy scopes down user access to portions of your Amazon S3 bucket. Variables you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p> <note> <p>For scope-down policies, AWS Transfer for SFTP stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p> <p>For an example of a scope-down policy, see "https://docs.aws.amazon.com/transfer/latest/userguide/users.html#users-policies-scope-down"&gt;Creating a Scope-Down Policy.</p> <p>For more information, see "https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html" in the <i>AWS Security Token Service API Reference</i>.</p> </note>'
        Role:
          $ref: '#/components/schemas/Role'
          description: The IAM role that controls your user's access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the Secure File Transfer Protocol (SFTP) server to access your resources when servicing your SFTP user's transfer requests.
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: 'A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>. This is the string that will be used by your user when they log in to your SFTP server. This user name is a minimum of 3 and a maximum of 32 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore, and hyphen. The user name can''t start with a hyphen.'
    AddressAllocationId:
      type: string
    AddressAllocationIds:
      type: array
      items:
        $ref: '#/components/schemas/AddressAllocationId'
    Arn:
      type: string
      pattern: 'arn:.*'
      minLength: 20
      maxLength: 1600
    EndpointDetails:
      type: object
      properties:
        AddressAllocationIds:
          $ref: '#/components/schemas/AddressAllocationIds'
          description: <p>A list of address allocation IDs that are required to attach an Elastic IP address to your SFTP server's endpoint. This is only valid in the <code>UpdateServer</code> API.</p> <note> <p>This property can only be use when <code>EndpointType</code> is set to <code>VPC</code>.</p> </note>
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: A list of subnet IDs that are required to host your SFTP server endpoint in your VPC.
        VpcEndpointId:
          $ref: '#/components/schemas/VpcEndpointId'
          description: The ID of the VPC endpoint.
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The VPC ID of the virtual private cloud in which the SFTP server's endpoint will be hosted.
      description: 'The virtual private cloud (VPC) endpoint settings that are configured for your SFTP server. With a VPC endpoint, you can restrict access to your SFTP server and resources only within your VPC. To control incoming internet traffic, invoke the <code>UpdateServer</code> API and attach an Elastic IP to your server''s endpoint. '
    EndpointType:
      type: string
      enum:
        - PUBLIC
        - VPC
        - VPC_ENDPOINT
    HostKey:
      type: string
      maxLength: 4096
      format: password
    IdentityProviderDetails:
      type: object
      properties:
        Url:
          $ref: '#/components/schemas/Url'
          description: The <code>Url</code> parameter provides contains the location of the service endpoint used to authenticate users.
        InvocationRole:
          $ref: '#/components/schemas/Role'
          description: The <code>InvocationRole</code> parameter provides the type of <code>InvocationRole</code> used to authenticate the user account.
      description: Returns information related to the type of user authentication that is in use for a server's users. A server can have only one method of authentication.
    IdentityProviderType:
      type: string
      enum:
        - SERVICE_MANAGED
        - API_GATEWAY
      description: 'Returns information related to the type of user authentication that is in use for a server''s users. For <code>SERVICE_MANAGED</code> authentication, the Secure Shell (SSH) public keys are stored with a user on an SFTP server instance. For <code>API_GATEWAY</code> authentication, your custom authentication method is implemented by using an API call. A server can have only one method of authentication.'
    Role:
      type: string
      pattern: 'arn:.*role/.*'
      minLength: 20
      maxLength: 2048
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 50
    ServerId:
      type: string
      pattern: '^s-([0-9a-f]{17})$'
      minLength: 19
      maxLength: 19
    HomeDirectory:
      type: string
      pattern: ^$|/.*
      maxLength: 1024
    HomeDirectoryType:
      type: string
      enum:
        - PATH
        - LOGICAL
    HomeDirectoryMappings:
      type: array
      items:
        $ref: '#/components/schemas/HomeDirectoryMapEntry'
      minItems: 1
      maxItems: 50
    Policy:
      type: string
      maxLength: 2048
    SshPublicKeyBody:
      type: string
      pattern: '^ssh-rsa\s+[A-Za-z0-9+/]+[=]{0,3}(\s+.+)?\s*$'
      maxLength: 2048
    UserName:
      type: string
      pattern: '^[a-zA-Z0-9_][a-zA-Z0-9_-]{2,31}$'
      minLength: 3
      maxLength: 32
    DateImported:
      type: string
      format: date-time
    SshPublicKeyId:
      type: string
      pattern: '^key-[0-9a-f]{17}$'
      minLength: 21
      maxLength: 21
    DescribedServer:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: Specifies the unique Amazon Resource Name (ARN) for the server to be described.
        EndpointDetails:
          $ref: '#/components/schemas/EndpointDetails'
          description: The virtual private cloud (VPC) endpoint settings that you configured for your SFTP server.
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
          description: 'The type of endpoint that your SFTP server is connected to. If your SFTP server is connected to a VPC endpoint, your server isn''t accessible over the public internet.'
        HostKeyFingerprint:
          $ref: '#/components/schemas/HostKeyFingerprint'
          description: This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the <code>ssh-keygen -l -E md5 -f my-new-server-key</code> command.
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
          description: Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of the server is <code>SERVICE_MANAGED</code>&gt;.
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
          description: This property defines the mode of authentication method enabled for this service. A value of <code>SERVICE_MANAGED</code> means that you are using this server to store and access SFTP user credentials within the service. A value of <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that will be invoked for authenticating your user into the service.
        LoggingRole:
          $ref: '#/components/schemas/Role'
          description: 'This property is an AWS Identity and Access Management (IAM) entity that allows the server to turn on Amazon CloudWatch logging for Amazon S3 events. When set, user activity can be viewed in your CloudWatch logs.'
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: This property is a unique system-assigned identifier for the SFTP server that you instantiate.
        State:
          $ref: '#/components/schemas/State'
          description: '<p>The condition of the SFTP server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>'
        Tags:
          $ref: '#/components/schemas/Tags'
          description: This property contains the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.
        UserCount:
          $ref: '#/components/schemas/UserCount'
          description: The number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.
      description: 'Describes the properties of the server that was specified. Information returned includes the following: the server Amazon Resource Name (ARN), the authentication configuration and type, the logging role, the server ID and state, and assigned tags or metadata. '
    DescribedUser:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: This property contains the unique Amazon Resource Name (ARN) for the user that was requested to be described.
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
          description: 'This property specifies the landing directory (or folder), which is the location that files are written to or read from in an Amazon S3 bucket for the described user. An example is <code>/<i>your s3 bucket name</i>/home/<i>username</i> </code>.'
        HomeDirectoryMappings:
          $ref: '#/components/schemas/HomeDirectoryMappings'
          description: '<p>Logical directory mappings that you specified for what S3 paths and keys should be visible to your user and how you want to make them visible. You will need to specify the "<code>Entry</code>" and "<code>Target</code>" pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual S3 path. If you only specify a target, it will be displayed as is. You will need to also make sure that your AWS IAM Role provides access to paths in <code>Target</code>.</p> <p>In most cases, you can use this value instead of the scope down policy to lock your user down to the designated home directory ("chroot"). To do this, you can set <code>Entry</code> to ''/'' and set <code>Target</code> to the HomeDirectory parameter value. </p> <p>In most cases, you can use this value instead of the scope down policy to lock your user down to the designated home directory ("chroot"). To do this, you can set <code>Entry</code> to ''/'' and set <code>Target</code> to the HomeDirectory parameter value.</p>'
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
          description: 'The type of landing directory (folder) you mapped for your users'' to see when they log into the SFTP server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket paths as is in their SFTP clients. If you set it <code>LOGICAL</code>, you will need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make S3 paths visible to your user.'
        Policy:
          $ref: '#/components/schemas/Policy'
          description: Specifies the name of the policy in use for the described user.
        Role:
          $ref: '#/components/schemas/Role'
          description: This property specifies the IAM role that controls your user's access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the SFTP server to access your resources when servicing your SFTP user's transfer requests.
        SshPublicKeys:
          $ref: '#/components/schemas/SshPublicKeys'
          description: This property contains the public key portion of the Secure Shell (SSH) keys stored for the described user.
        Tags:
          $ref: '#/components/schemas/Tags'
          description: This property contains the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: This property is the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your SFTP server.
      description: Returns properties of the user that you want to describe.
    HostKeyFingerprint:
      type: string
    State:
      type: string
      enum:
        - OFFLINE
        - ONLINE
        - STARTING
        - STOPPING
        - START_FAILED
        - STOP_FAILED
      description: '<p>Describes the condition of the SFTP server with respect to its ability to perform file operations. There are six possible states: <code>OFFLINE</code>, <code>ONLINE</code>, <code>STARTING</code>, <code>STOPPING</code>, <code>START_FAILED</code>, and <code>STOP_FAILED</code>.</p> <p> <code>OFFLINE</code> indicates that the SFTP server exists, but that it is not available for file operations. <code>ONLINE</code> indicates that the SFTP server is available to perform file operations. <code>STARTING</code> indicates that the SFTP server''s was instantiated, but the server is not yet available to perform file operations. Under normal conditions, it can take a couple of minutes for an SFTP server to be completely operational. Both <code>START_FAILED</code> and <code>STOP_FAILED</code> are error conditions.</p>'
    UserCount:
      type: integer
    SshPublicKeys:
      type: array
      items:
        $ref: '#/components/schemas/SshPublicKey'
      maxItems: 5
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    VpcEndpointId:
      type: string
      pattern: '^vpce-[0-9a-f]{17}$'
      minLength: 22
      maxLength: 22
    VpcId:
      type: string
    MapEntry:
      type: string
      pattern: ^/.*
      maxLength: 1024
    MapTarget:
      type: string
      pattern: ^/.*
      maxLength: 1024
    HomeDirectoryMapEntry:
      type: object
      required:
        - Entry
        - Target
      properties:
        Entry:
          $ref: '#/components/schemas/MapEntry'
          description: Represents an entry and a target for <code>HomeDirectoryMappings</code>.
        Target:
          $ref: '#/components/schemas/MapTarget'
          description: Represents the map target that is used in a <code>HomeDirectorymapEntry</code>.
      description: Represents an object that contains entries and a targets for <code>HomeDirectoryMappings</code>.
    Url:
      type: string
      maxLength: 255
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    NextToken:
      type: string
      minLength: 1
      maxLength: 6144
    ListedServers:
      type: array
      items:
        $ref: '#/components/schemas/ListedServer'
    ListedUsers:
      type: array
      items:
        $ref: '#/components/schemas/ListedUser'
    ListedServer:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: The unique Amazon Resource Name (ARN) for the server to be listed.
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
          description: 'The authentication method used to validate a user for the server that was specified. This can include Secure Shell (SSH), user name and password combinations, or your own custom authentication method. Valid values include <code>SERVICE_MANAGED</code> or <code>API_GATEWAY</code>.'
        EndpointType:
          $ref: '#/components/schemas/EndpointType'
          description: 'The type of VPC endpoint that your SFTP server is connected to. If your SFTP server is connected to a VPC endpoint, your server isn''t accessible over the public internet.'
        LoggingRole:
          $ref: '#/components/schemas/Role'
          description: The AWS Identity and Access Management entity that allows the server to turn on Amazon CloudWatch logging.
        ServerId:
          $ref: '#/components/schemas/ServerId'
          description: This value is the unique system assigned identifier for the SFTP servers that were listed.
        State:
          $ref: '#/components/schemas/State'
          description: '<p>This property describes the condition of the SFTP server for the server that was described. A value of <code>ONLINE</code>&gt; indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>'
        UserCount:
          $ref: '#/components/schemas/UserCount'
          description: This property is a numeric value that indicates the number of users that are assigned to the SFTP server you specified with the <code>ServerId</code>.
      description: Returns properties of the server that was specified.
    SshPublicKeyCount:
      type: integer
    ListedUser:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
          description: This property is the unique Amazon Resource Name (ARN) for the user that you want to learn about.
        HomeDirectory:
          $ref: '#/components/schemas/HomeDirectory'
          description: This value specifies the location that files are written to or read from an Amazon S3 bucket for the user you specify by their ARN.
        HomeDirectoryType:
          $ref: '#/components/schemas/HomeDirectoryType'
          description: 'The type of landing directory (folder) you mapped for your users'' home directory. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket paths as is in their SFTP clients. If you set it <code>LOGICAL</code>, you will need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make S3 paths visible to your user.'
        Role:
          $ref: '#/components/schemas/Role'
          description: 'The role in use by this user. A <i>role</i> is an AWS Identity and Access Management (IAM) entity that, in this case, allows the SFTP server to act on a user''s behalf. It allows the server to inherit the trust relationship that enables that user to perform file operations to their Amazon S3 bucket.'
        SshPublicKeyCount:
          $ref: '#/components/schemas/SshPublicKeyCount'
          description: This value is the number of SSH public keys stored for the user you specified.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The name of the user whose ARN was specified. User names are used for authentication purposes.
      description: Returns properties of the user that you specify.
    Message:
      type: string
    NullableRole:
      type: string
      pattern: '^$|arn:.*role/.*'
      maxLength: 2048
    Response:
      type: string
    SshPublicKey:
      type: object
      required:
        - DateImported
        - SshPublicKeyBody
        - SshPublicKeyId
      properties:
        DateImported:
          $ref: '#/components/schemas/DateImported'
          description: The date that the public key was added to the user account.
        SshPublicKeyBody:
          $ref: '#/components/schemas/SshPublicKeyBody'
          description: The content of the SSH public key as specified by the <code>PublicKeyId</code>.
        SshPublicKeyId:
          $ref: '#/components/schemas/SshPublicKeyId'
          description: The <code>SshPublicKeyId</code> parameter contains the identifier of the public key.
      description: 'Provides information about the public Secure Shell (SSH) key that is associated with a user account for a specific server (as identified by <code>ServerId</code>). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific SFTP server.'
    StatusCode:
      type: integer
    SubnetId:
      type: string
    TagKey:
      type: string
      maxLength: 128
    TagValue:
      type: string
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The name assigned to the tag that you create.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: This property contains one or more values that you assigned to the key name you create.
      description: 'Creates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called <code>Group</code> and assign the values <code>Research</code> and <code>Accounting</code> to that group.'
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    UserPassword:
      type: string
      maxLength: 2048
      format: password
security:
  - hmac: []
