openapi: 3.0.0
info:
  version: '2019-11-15'
  x-release: v4
  title: Amazon Fraud Detector
  description: 'This is the Amazon Fraud Detector API Reference. This guide is for developers who need detailed information about Amazon Fraud Detector API actions, data types, and errors. For more information about Amazon Fraud Detector features, see the <a href="https://docs.aws.amazon.com/frauddetector/latest/ug/">Amazon Fraud Detector User Guide</a>.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: frauddetector
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/frauddetector-2019-11-15.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/frauddetector/'
servers:
  - url: 'http://frauddetector.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Fraud Detector multi-region endpoint
  - url: 'https://frauddetector.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Fraud Detector multi-region endpoint
  - url: 'http://frauddetector.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Fraud Detector endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://frauddetector.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Fraud Detector endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=AWSHawksNestServiceFacade.BatchCreateVariable':
    post:
      operationId: BatchCreateVariable
      description: Creates a batch of variables.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateVariableResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateVariableRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.BatchCreateVariable
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.BatchGetVariable':
    post:
      operationId: BatchGetVariable
      description: Gets a batch of variables.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetVariableResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetVariableRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.BatchGetVariable
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.CreateDetectorVersion':
    post:
      operationId: CreateDetectorVersion
      description: Creates a detector version. The detector version starts in a <code>DRAFT</code> status.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDetectorVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDetectorVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.CreateDetectorVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.CreateModelVersion':
    post:
      operationId: CreateModelVersion
      description: 'Creates a version of the model using the specified model type. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.CreateModelVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.CreateRule':
    post:
      operationId: CreateRule
      description: 'Creates a rule for use with the specified detector. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRuleResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRuleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.CreateRule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.CreateVariable':
    post:
      operationId: CreateVariable
      description: Creates a variable.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVariableResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVariableRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.CreateVariable
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.DeleteDetectorVersion':
    post:
      operationId: DeleteDetectorVersion
      description: Deletes the detector version.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDetectorVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDetectorVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.DeleteDetectorVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.DeleteEvent':
    post:
      operationId: DeleteEvent
      description: Deletes the specified event.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEventResult'
        '480':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '481':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.DeleteEvent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.DescribeDetector':
    post:
      operationId: DescribeDetector
      description: Gets all versions for a specified detector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDetectorResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDetectorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.DescribeDetector
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.DescribeModelVersions':
    post:
      operationId: DescribeModelVersions
      description: 'Gets all of the model versions for the specified model type or for the specified model type and model ID. You can also get details for a single, specified model version. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelVersionsResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelVersionsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.DescribeModelVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetDetectorVersion':
    post:
      operationId: GetDetectorVersion
      description: 'Gets a particular detector version. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDetectorVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDetectorVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetDetectorVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetDetectors':
    post:
      operationId: GetDetectors
      description: 'Gets all of detectors. This is a paginated API. If you provide a null <code>maxSizePerPage</code>, this actions retrieves a maximum of 10 records per page. If you provide a <code>maxSizePerPage</code>, the value must be between 5 and 10. To get the next page results, provide the pagination token from the <code>GetEventTypesResponse</code> as part of your request. A null pagination token fetches the records from the beginning. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDetectorsResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDetectorsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetDetectors
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetExternalModels':
    post:
      operationId: GetExternalModels
      description: 'Gets the details for one or more Amazon SageMaker models that have been imported into the service. This is a paginated API. If you provide a null <code>maxSizePerPage</code>, this actions retrieves a maximum of 10 records per page. If you provide a <code>maxSizePerPage</code>, the value must be between 5 and 10. To get the next page results, provide the pagination token from the <code>GetExternalModelsResult</code> as part of your request. A null pagination token fetches the records from the beginning. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExternalModelsResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExternalModelsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetExternalModels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetModelVersion':
    post:
      operationId: GetModelVersion
      description: 'Gets a model version. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetModelVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetModels':
    post:
      operationId: GetModels
      description: 'Gets all of the models for the AWS account, or the specified model type, or gets a single model for the specified model type, model ID combination. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetModels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetOutcomes':
    post:
      operationId: GetOutcomes
      description: 'Gets one or more outcomes. This is a paginated API. If you provide a null <code>maxSizePerPage</code>, this actions retrieves a maximum of 10 records per page. If you provide a <code>maxSizePerPage</code>, the value must be between 50 and 100. To get the next page results, provide the pagination token from the <code>GetOutcomesResult</code> as part of your request. A null pagination token fetches the records from the beginning. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutcomesResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOutcomesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetOutcomes
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetPrediction':
    post:
      operationId: GetPrediction
      description: 'Evaluates an event against a detector version. If a version ID is not provided, the detector’s (<code>ACTIVE</code>) version is used. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPredictionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPredictionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetPrediction
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetRules':
    post:
      operationId: GetRules
      description: Gets all rules available for the specified detector.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRulesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.GetVariables':
    post:
      operationId: GetVariables
      description: 'Gets all of the variables or the specific variable. This is a paginated API. Providing null <code>maxSizePerPage</code> results in retrieving maximum of 100 records per page. If you provide <code>maxSizePerPage</code> the value must be between 50 and 100. To get the next page result, a provide a pagination token from <code>GetVariablesResult</code> as part of your request. Null pagination token fetches the records from the beginning. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVariablesResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVariablesRequest'
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.GetVariables
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.PutDetector':
    post:
      operationId: PutDetector
      description: 'Creates or updates a detector. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDetectorResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDetectorRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.PutDetector
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.PutExternalModel':
    post:
      operationId: PutExternalModel
      description: 'Creates or updates an Amazon SageMaker model endpoint. You can also use this action to update the configuration of the model endpoint, including the IAM role and/or the mapped variables. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutExternalModelResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExternalModelRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.PutExternalModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.PutModel':
    post:
      operationId: PutModel
      description: 'Creates or updates a model. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutModelResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutModelRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.PutModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.PutOutcome':
    post:
      operationId: PutOutcome
      description: 'Creates or updates an outcome. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOutcomeResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOutcomeRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.PutOutcome
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateDetectorVersion':
    post:
      operationId: UpdateDetectorVersion
      description: ' Updates a detector version. The detector version attributes that you can update include models, external model endpoints, rules, and description. You can only update a <code>DRAFT</code> detector version.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetectorVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDetectorVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.UpdateDetectorVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateDetectorVersionMetadata':
    post:
      operationId: UpdateDetectorVersionMetadata
      description: 'Updates the detector version''s description. You can update the metadata for any detector version (<code>DRAFT, ACTIVE,</code> or <code>INACTIVE</code>). '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetectorVersionMetadataResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDetectorVersionMetadataRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.UpdateDetectorVersionMetadata
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateDetectorVersionStatus':
    post:
      operationId: UpdateDetectorVersionStatus
      description: 'Updates the detector version’s status. You can perform the following promotions or demotions using <code>UpdateDetectorVersionStatus</code>: <code>DRAFT</code> to <code>ACTIVE</code>, <code>ACTIVE</code> to <code>INACTIVE</code>, and <code>INACTIVE</code> to <code>ACTIVE</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetectorVersionStatusResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDetectorVersionStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.UpdateDetectorVersionStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateModelVersion':
    post:
      operationId: UpdateModelVersion
      description: '<p>Updates a model version. You can update the description and status attributes using this action. You can perform the following status updates: </p> <ol> <li> <p>Change the <code>TRAINING_COMPLETE</code> status to <code>ACTIVE</code> </p> </li> <li> <p>Change <code>ACTIVE</code> back to <code>TRAINING_COMPLETE</code> </p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateModelVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModelVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.UpdateModelVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateRuleMetadata':
    post:
      operationId: UpdateRuleMetadata
      description: 'Updates a rule''s metadata. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleMetadataResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleMetadataRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.UpdateRuleMetadata
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateRuleVersion':
    post:
      operationId: UpdateRuleVersion
      description: 'Updates a rule version resulting in a new rule version. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleVersionResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleVersionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.UpdateRuleVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSHawksNestServiceFacade.UpdateVariable':
    post:
      operationId: UpdateVariable
      description: Updates a variable.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVariableResult'
        '480':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVariableRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSHawksNestServiceFacade.UpdateVariable
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchCreateVariableResult:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/BatchCreateVariableErrorList'
          description: Provides the errors for the <code>BatchCreateVariable</code> request.
    BatchCreateVariableRequest:
      type: object
      required:
        - variableEntries
      title: BatchCreateVariableRequest
      properties:
        variableEntries:
          $ref: '#/components/schemas/VariableEntryList'
          description: The list of variables for the batch create variable request.
    ValidationException: {}
    InternalServerException: {}
    ThrottlingException: {}
    BatchGetVariableResult:
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/VariableList'
          description: The returned variables.
        errors:
          $ref: '#/components/schemas/BatchGetVariableErrorList'
          description: The errors from the request.
    BatchGetVariableRequest:
      type: object
      required:
        - names
      title: BatchGetVariableRequest
      properties:
        names:
          $ref: '#/components/schemas/NameList'
          description: The list of variable names to get.
    CreateDetectorVersionResult:
      type: object
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The ID for the created version's parent detector.
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The ID for the created detector. '
        status:
          $ref: '#/components/schemas/DetectorVersionStatus'
          description: The status of the detector version.
    CreateDetectorVersionRequest:
      type: object
      required:
        - detectorId
        - rules
      title: CreateDetectorVersionRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The ID of the detector under which you want to create a new version.
        description:
          $ref: '#/components/schemas/description'
          description: The description of the detector version.
        externalModelEndpoints:
          $ref: '#/components/schemas/ListOfStrings'
          description: The Amazon Sagemaker model endpoints to include in the detector version.
        rules:
          $ref: '#/components/schemas/RuleList'
          description: The rules to include in the detector version.
        modelVersions:
          $ref: '#/components/schemas/ListOfModelVersions'
          description: The model versions to include in the detector version.
    ResourceNotFoundException: {}
    CreateModelVersionResult:
      type: object
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: 'The model ID. '
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        modelVersionNumber:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The version of the model. '
        status:
          $ref: '#/components/schemas/string'
          description: 'The model version status. '
    CreateModelVersionRequest:
      type: object
      required:
        - modelId
        - modelType
      title: CreateModelVersionRequest
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: 'The model ID. '
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        description:
          $ref: '#/components/schemas/description'
          description: The model version description.
    CreateRuleResult:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/Rule'
          description: The created rule.
    CreateRuleRequest:
      type: object
      required:
        - ruleId
        - detectorId
        - expression
        - language
        - outcomes
      title: CreateRuleRequest
      properties:
        ruleId:
          $ref: '#/components/schemas/identifier'
          description: The rule ID.
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID for the rule's parent detector.
        description:
          $ref: '#/components/schemas/description'
          description: The rule description.
        expression:
          $ref: '#/components/schemas/ruleExpression'
          description: The rule expression.
        language:
          $ref: '#/components/schemas/Language'
          description: The language of the rule.
        outcomes:
          $ref: '#/components/schemas/NonEmptyListOfStrings'
          description: The outcome or outcomes returned when the rule expression matches.
    CreateVariableResult:
      type: object
      properties: {}
    CreateVariableRequest:
      type: object
      required:
        - name
        - dataType
        - dataSource
        - defaultValue
      title: CreateVariableRequest
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The name of the variable.
        dataType:
          $ref: '#/components/schemas/DataType'
          description: The data type.
        dataSource:
          $ref: '#/components/schemas/DataSource'
          description: The source of the data.
        defaultValue:
          $ref: '#/components/schemas/string'
          description: The default value for the variable when no value is received.
        description:
          $ref: '#/components/schemas/string'
          description: The description.
        variableType:
          $ref: '#/components/schemas/string'
          description: The variable type.
    DeleteDetectorVersionResult:
      type: object
      properties: {}
    DeleteDetectorVersionRequest:
      type: object
      required:
        - detectorId
        - detectorVersionId
      title: DeleteDetectorVersionRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The ID of the parent detector for the detector version to delete.
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: The ID of the detector version to delete.
    DeleteEventResult:
      type: object
      properties: {}
    DeleteEventRequest:
      type: object
      required:
        - eventId
      title: DeleteEventRequest
      properties:
        eventId:
          $ref: '#/components/schemas/string'
          description: The ID of the event to delete.
    DescribeDetectorResult:
      type: object
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        detectorVersionSummaries:
          $ref: '#/components/schemas/DetectorVersionSummaryList'
          description: The status and description for each detector version.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next token to be used for subsequent requests.
    DescribeDetectorRequest:
      type: object
      required:
        - detectorId
      title: DescribeDetectorRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next token from the previous response.
        maxResults:
          $ref: '#/components/schemas/DetectorVersionMaxResults'
          description: The maximum number of results to return for the request.
    DescribeModelVersionsResult:
      type: object
      properties:
        modelVersionDetails:
          $ref: '#/components/schemas/ModelVersionDetailList'
          description: The model version details.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next token.
    DescribeModelVersionsRequest:
      type: object
      title: DescribeModelVersionsRequest
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: The model ID.
        modelVersionNumber:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The model version. '
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next token from the previous results.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
    GetDetectorVersionResult:
      type: object
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: The detector version ID.
        description:
          $ref: '#/components/schemas/description'
          description: The detector version description.
        externalModelEndpoints:
          $ref: '#/components/schemas/ListOfStrings'
          description: The Amazon SageMaker model endpoints included in the detector version.
        modelVersions:
          $ref: '#/components/schemas/ListOfModelVersions'
          description: 'The model versions included in the detector version. '
        rules:
          $ref: '#/components/schemas/RuleList'
          description: The rules included in the detector version.
        status:
          $ref: '#/components/schemas/DetectorVersionStatus'
          description: The status of the detector version.
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: 'The timestamp when the detector version was last updated. '
        createdTime:
          $ref: '#/components/schemas/time'
          description: 'The timestamp when the detector version was created. '
    GetDetectorVersionRequest:
      type: object
      required:
        - detectorId
        - detectorVersionId
      title: GetDetectorVersionRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: The detector version ID.
    GetDetectorsResult:
      type: object
      properties:
        detectors:
          $ref: '#/components/schemas/DetectorList'
          description: The detectors.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next page token.
    GetDetectorsRequest:
      type: object
      title: GetDetectorsRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next token for the subsequent request.
        maxResults:
          $ref: '#/components/schemas/DetectorsMaxResults'
          description: The maximum number of objects to return for the request.
    GetExternalModelsResult:
      type: object
      properties:
        externalModels:
          $ref: '#/components/schemas/ExternalModelList'
          description: Gets the Amazon SageMaker models.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next page token to be used in subsequent requests.
    GetExternalModelsRequest:
      type: object
      title: GetExternalModelsRequest
      properties:
        modelEndpoint:
          $ref: '#/components/schemas/string'
          description: The Amazon SageMaker model endpoint.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next page token for the request.
        maxResults:
          $ref: '#/components/schemas/ExternalModelsMaxResults'
          description: The maximum number of objects to return for the request.
    GetModelVersionResult:
      type: object
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: 'The model ID. '
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: 'The model type. '
        modelVersionNumber:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The model version. '
        description:
          $ref: '#/components/schemas/description'
          description: The model version description.
        status:
          $ref: '#/components/schemas/string'
          description: 'The model version status. '
    GetModelVersionRequest:
      type: object
      required:
        - modelId
        - modelType
        - modelVersionNumber
      title: GetModelVersionRequest
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: 'The model ID. '
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: 'The model type. '
        modelVersionNumber:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The model version. '
    GetModelsResult:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/string'
          description: 'The next token for subsequent requests. '
        models:
          $ref: '#/components/schemas/ModelList'
          description: 'The returned models. '
    GetModelsRequest:
      type: object
      title: GetModelsRequest
      properties:
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        modelId:
          $ref: '#/components/schemas/identifier'
          description: The model ID.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next token for the request.
        maxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum results to return for the request.
    GetOutcomesResult:
      type: object
      properties:
        outcomes:
          $ref: '#/components/schemas/OutcomeList'
          description: 'The outcomes. '
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next page token for subsequent requests.
    GetOutcomesRequest:
      type: object
      title: GetOutcomesRequest
      properties:
        name:
          $ref: '#/components/schemas/identifier'
          description: The name of the outcome or outcomes to get.
        nextToken:
          $ref: '#/components/schemas/string'
          description: 'The next page token for the request. '
        maxResults:
          $ref: '#/components/schemas/OutcomesMaxResults'
          description: 'The maximum number of objects to return for the request. '
    GetPredictionResult:
      type: object
      properties:
        outcomes:
          $ref: '#/components/schemas/ListOfStrings'
          description: The prediction outcomes.
        modelScores:
          $ref: '#/components/schemas/ListOfModelScores'
          description: The model scores for models used in the detector version.
    GetPredictionRequest:
      type: object
      required:
        - detectorId
        - eventId
      title: GetPredictionRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/string'
          description: 'The detector ID. '
        detectorVersionId:
          $ref: '#/components/schemas/string'
          description: The detector version ID.
        eventId:
          $ref: '#/components/schemas/string'
          description: The unique ID used to identify the event.
        eventAttributes:
          $ref: '#/components/schemas/EventAttributeMap'
          description: Names of variables you defined in Amazon Fraud Detector to represent event data elements and their corresponding values for the event you are sending for evaluation.
        externalModelEndpointDataBlobs:
          $ref: '#/components/schemas/ExternalModelEndpointDataBlobMap'
          description: The Amazon SageMaker model endpoint input data blobs.
    GetRulesResult:
      type: object
      properties:
        ruleDetails:
          $ref: '#/components/schemas/RuleDetailList'
          description: The details of the requested rule.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next page token to be used in subsequent requests.
    GetRulesRequest:
      type: object
      required:
        - detectorId
      title: GetRulesRequest
      properties:
        ruleId:
          $ref: '#/components/schemas/identifier'
          description: The rule ID.
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        ruleVersion:
          $ref: '#/components/schemas/nonEmptyString'
          description: The rule version.
        nextToken:
          $ref: '#/components/schemas/string'
          description: The next page token.
        maxResults:
          $ref: '#/components/schemas/RulesMaxResults'
          description: The maximum number of rules to return for the request.
    GetVariablesResult:
      type: object
      properties:
        variables:
          $ref: '#/components/schemas/VariableList'
          description: 'The names of the variables returned. '
        nextToken:
          $ref: '#/components/schemas/string'
          description: 'The next page token to be used in subsequent requests. '
    GetVariablesRequest:
      type: object
      title: GetVariablesRequest
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: 'The name of the variable. '
        nextToken:
          $ref: '#/components/schemas/string'
          description: 'The next page token of the get variable request. '
        maxResults:
          $ref: '#/components/schemas/VariablesMaxResults'
          description: 'The max size per page determined for the get variable request. '
    PutDetectorResult:
      type: object
      properties: {}
    PutDetectorRequest:
      type: object
      required:
        - detectorId
      title: PutDetectorRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: 'The detector ID. '
        description:
          $ref: '#/components/schemas/description'
          description: The description of the detector.
    PutExternalModelResult:
      type: object
      properties: {}
    PutExternalModelRequest:
      type: object
      required:
        - modelEndpoint
        - modelSource
        - role
        - inputConfiguration
        - outputConfiguration
        - modelEndpointStatus
      title: PutExternalModelRequest
      properties:
        modelEndpoint:
          $ref: '#/components/schemas/string'
          description: The model endpoints name.
        modelSource:
          $ref: '#/components/schemas/ModelSource'
          description: The source of the model.
        role:
          $ref: '#/components/schemas/Role'
          description: The IAM role used to invoke the model endpoint.
        inputConfiguration:
          $ref: '#/components/schemas/ModelInputConfiguration'
          description: The model endpoint input configuration.
        outputConfiguration:
          $ref: '#/components/schemas/ModelOutputConfiguration'
          description: The model endpoint output configuration.
        modelEndpointStatus:
          $ref: '#/components/schemas/ModelEndpointStatus'
          description: The model endpoint’s status in Amazon Fraud Detector.
    PutModelResult:
      type: object
      properties: {}
    PutModelRequest:
      type: object
      required:
        - modelId
        - modelType
        - trainingDataSource
        - modelVariables
        - labelSchema
      title: PutModelRequest
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: The model ID.
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: 'The model type. '
        description:
          $ref: '#/components/schemas/description'
          description: 'The model description. '
        trainingDataSource:
          $ref: '#/components/schemas/TrainingDataSource'
          description: 'The training data source location in Amazon S3. '
        modelVariables:
          $ref: '#/components/schemas/ModelVariablesList'
          description: The model input variables.
        labelSchema:
          $ref: '#/components/schemas/LabelSchema'
          description: The label schema.
    PutOutcomeResult:
      type: object
      properties: {}
    PutOutcomeRequest:
      type: object
      required:
        - name
      title: PutOutcomeRequest
      properties:
        name:
          $ref: '#/components/schemas/identifier'
          description: The name of the outcome.
        description:
          $ref: '#/components/schemas/description'
          description: The outcome description.
    UpdateDetectorVersionResult:
      type: object
      properties: {}
    UpdateDetectorVersionRequest:
      type: object
      required:
        - detectorId
        - detectorVersionId
        - externalModelEndpoints
        - rules
      title: UpdateDetectorVersionRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The parent detector ID for the detector version you want to update.
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The detector version ID. '
        externalModelEndpoints:
          $ref: '#/components/schemas/ListOfStrings'
          description: The Amazon SageMaker model endpoints to include in the detector version.
        rules:
          $ref: '#/components/schemas/RuleList'
          description: The rules to include in the detector version.
        description:
          $ref: '#/components/schemas/description'
          description: 'The detector version description. '
        modelVersions:
          $ref: '#/components/schemas/ListOfModelVersions'
          description: The model versions to include in the detector version.
    UpdateDetectorVersionMetadataResult:
      type: object
      properties: {}
    UpdateDetectorVersionMetadataRequest:
      type: object
      required:
        - detectorId
        - detectorVersionId
        - description
      title: UpdateDetectorVersionMetadataRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The detector version ID. '
        description:
          $ref: '#/components/schemas/description'
          description: The description.
    UpdateDetectorVersionStatusResult:
      type: object
      properties: {}
    UpdateDetectorVersionStatusRequest:
      type: object
      required:
        - detectorId
        - detectorVersionId
        - status
      title: UpdateDetectorVersionStatusRequest
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: 'The detector ID. '
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The detector version ID. '
        status:
          $ref: '#/components/schemas/DetectorVersionStatus'
          description: The new status.
    UpdateModelVersionResult:
      type: object
      properties: {}
    UpdateModelVersionRequest:
      type: object
      required:
        - modelId
        - modelType
        - modelVersionNumber
        - description
        - status
      title: UpdateModelVersionRequest
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: The model ID.
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        modelVersionNumber:
          $ref: '#/components/schemas/nonEmptyString'
          description: The model version.
        description:
          $ref: '#/components/schemas/description'
          description: The model description.
        status:
          $ref: '#/components/schemas/ModelVersionStatus'
          description: The new model status.
    UpdateRuleMetadataResult:
      type: object
      properties: {}
    UpdateRuleMetadataRequest:
      type: object
      required:
        - rule
        - description
      title: UpdateRuleMetadataRequest
      properties:
        rule:
          $ref: '#/components/schemas/Rule'
          description: The rule to update.
        description:
          $ref: '#/components/schemas/description'
          description: The rule description.
    UpdateRuleVersionResult:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/Rule'
          description: The new rule version that was created.
    UpdateRuleVersionRequest:
      type: object
      required:
        - rule
        - expression
        - language
        - outcomes
      title: UpdateRuleVersionRequest
      properties:
        rule:
          $ref: '#/components/schemas/Rule'
          description: The rule to update.
        description:
          $ref: '#/components/schemas/description'
          description: The description.
        expression:
          $ref: '#/components/schemas/ruleExpression'
          description: The rule expression.
        language:
          $ref: '#/components/schemas/Language'
          description: The language.
        outcomes:
          $ref: '#/components/schemas/NonEmptyListOfStrings'
          description: The outcomes.
    UpdateVariableResult:
      type: object
      properties: {}
    UpdateVariableRequest:
      type: object
      required:
        - name
      title: UpdateVariableRequest
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The name of the variable.
        defaultValue:
          $ref: '#/components/schemas/string'
          description: The new default value of the variable.
        description:
          $ref: '#/components/schemas/string'
          description: The new description.
        variableType:
          $ref: '#/components/schemas/string'
          description: The variable type.
    string:
      type: string
    integer:
      type: integer
    BatchCreateVariableError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The name.
        code:
          $ref: '#/components/schemas/integer'
          description: 'The error code. '
        message:
          $ref: '#/components/schemas/string'
          description: The error message.
      description: Provides the error of the batch create variable API.
    BatchCreateVariableErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateVariableError'
    VariableEntryList:
      type: array
      items:
        $ref: '#/components/schemas/VariableEntry'
      minItems: 1
      maxItems: 25
    BatchGetVariableError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: 'The error name. '
        code:
          $ref: '#/components/schemas/integer'
          description: 'The error code. '
        message:
          $ref: '#/components/schemas/string'
          description: The error message.
      description: Provides the error of the batch get variable API.
    BatchGetVariableErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetVariableError'
    NameList:
      type: array
      items:
        $ref: '#/components/schemas/string'
      minItems: 1
      maxItems: 100
    VariableList:
      type: array
      items:
        $ref: '#/components/schemas/Variable'
    identifier:
      type: string
      pattern: '^[0-9a-z_-]+$'
      minLength: 1
      maxLength: 64
    description:
      type: string
      minLength: 1
      maxLength: 128
    ListOfStrings:
      type: array
      items:
        $ref: '#/components/schemas/string'
    RuleList:
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    ListOfModelVersions:
      type: array
      items:
        $ref: '#/components/schemas/ModelVersion'
    nonEmptyString:
      type: string
      minLength: 1
    DetectorVersionStatus:
      type: string
      enum:
        - DRAFT
        - ACTIVE
        - INACTIVE
    ModelTypeEnum:
      type: string
      enum:
        - ONLINE_FRAUD_INSIGHTS
    ruleExpression:
      type: string
      minLength: 1
      maxLength: 4096
    Language:
      type: string
      enum:
        - DETECTORPL
    NonEmptyListOfStrings:
      type: array
      items:
        $ref: '#/components/schemas/string'
      minItems: 1
    Rule:
      type: object
      required:
        - detectorId
        - ruleId
        - ruleVersion
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector for which the rule is associated.
        ruleId:
          $ref: '#/components/schemas/identifier'
          description: The rule ID.
        ruleVersion:
          $ref: '#/components/schemas/nonEmptyString'
          description: The rule version.
      description: A rule.
    DataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - FLOAT
        - BOOLEAN
    DataSource:
      type: string
      enum:
        - EVENT
        - MODEL_SCORE
        - EXTERNAL_MODEL_SCORE
    CsvIndexToVariableMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/string'
    DetectorVersionMaxResults:
      type: integer
      minimum: 1000
      maximum: 2500
    DetectorVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DetectorVersionSummary'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 10
    ModelVersionDetailList:
      type: array
      items:
        $ref: '#/components/schemas/ModelVersionDetail'
    time:
      type: string
    Detector:
      type: object
      properties:
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector ID.
        description:
          $ref: '#/components/schemas/description'
          description: The detector description.
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of when the detector was last updated.
        createdTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of when the detector was created.
      description: The detector.
    DetectorList:
      type: array
      items:
        $ref: '#/components/schemas/Detector'
    DetectorVersionSummary:
      type: object
      properties:
        detectorVersionId:
          $ref: '#/components/schemas/nonEmptyString'
          description: 'The detector version ID. '
        status:
          $ref: '#/components/schemas/DetectorVersionStatus'
          description: 'The detector version status. '
        description:
          $ref: '#/components/schemas/description'
          description: 'The detector version description. '
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of when the detector version was last updated.
      description: The summary of the detector version.
    DetectorsMaxResults:
      type: integer
      minimum: 5
      maximum: 10
    attributeValue:
      type: string
      minLength: 1
      maxLength: 256
      format: password
    EventAttributeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/attributeValue'
    ModelSource:
      type: string
      enum:
        - SAGEMAKER
    Role:
      type: object
      required:
        - arn
        - name
      properties:
        arn:
          $ref: '#/components/schemas/string'
          description: The role ARN.
        name:
          $ref: '#/components/schemas/string'
          description: The role name.
      description: The role used to invoke external model endpoints.
    ModelInputConfiguration:
      type: object
      required:
        - isOpaque
      properties:
        format:
          $ref: '#/components/schemas/ModelInputDataFormat'
          description: ' The format of the model input configuration. The format differs depending on if it is passed through to SageMaker or constructed by Amazon Fraud Detector.'
        isOpaque:
          $ref: '#/components/schemas/IsOpaque'
          description: ' For an opaque-model, the input to the model will be a ByteBuffer blob provided in the getPrediction request, and will be passed to SageMaker as-is. For non-opaque models, the input will be constructed by Amazon Fraud Detector based on the model-configuration. '
        jsonInputTemplate:
          $ref: '#/components/schemas/string'
          description: ' Template for constructing the JSON input-data sent to SageMaker. At event-evaluation, the placeholders for variable names in the template will be replaced with the variable values before being sent to SageMaker. '
        csvInputTemplate:
          $ref: '#/components/schemas/string'
          description: ' Template for constructing the CSV input-data sent to SageMaker. At event-evaluation, the placeholders for variable-names in the template will be replaced with the variable values before being sent to SageMaker. '
      description: The model input configuration.
    ModelOutputConfiguration:
      type: object
      required:
        - format
      properties:
        format:
          $ref: '#/components/schemas/ModelOutputDataFormat'
          description: The format of the model output configuration.
        jsonKeyToVariableMap:
          $ref: '#/components/schemas/JsonKeyToVariableMap'
          description: 'A map of JSON keys in response from SageMaker to the Amazon Fraud Detector variables. '
        csvIndexToVariableMap:
          $ref: '#/components/schemas/CsvIndexToVariableMap'
          description: 'A map of CSV index values in the SageMaker response to the Amazon Fraud Detector variables. '
      description: Provides the model output configuration.
    ModelEndpointStatus:
      type: string
      enum:
        - ASSOCIATED
        - DISSOCIATED
    ExternalModel:
      type: object
      properties:
        modelEndpoint:
          $ref: '#/components/schemas/string'
          description: The Amazon SageMaker model endpoints.
        modelSource:
          $ref: '#/components/schemas/ModelSource'
          description: The source of the model.
        role:
          $ref: '#/components/schemas/Role'
          description: 'The role used to invoke the model. '
        inputConfiguration:
          $ref: '#/components/schemas/ModelInputConfiguration'
          description: The input configuration.
        outputConfiguration:
          $ref: '#/components/schemas/ModelOutputConfiguration'
          description: The output configuration.
        modelEndpointStatus:
          $ref: '#/components/schemas/ModelEndpointStatus'
          description: The Amazon Fraud Detector status for the external model endpoint
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of when the model was last updated.
        createdTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of when the model was last created.
      description: The Amazon SageMaker model.
    ModelEndpointDataBlob:
      type: object
      properties:
        byteBuffer:
          $ref: '#/components/schemas/blob'
          description: The byte buffer of the Amazon SageMaker model endpoint input data blob.
        contentType:
          $ref: '#/components/schemas/contentType'
          description: 'The content type of the Amazon SageMaker model endpoint input data blob. '
      description: A pre-formed Amazon SageMaker model input you can include if your detector version includes an imported Amazon SageMaker model endpoint with pass-through input configuration.
    ExternalModelEndpointDataBlobMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ModelEndpointDataBlob'
    ExternalModelList:
      type: array
      items:
        $ref: '#/components/schemas/ExternalModel'
    ExternalModelsMaxResults:
      type: integer
      minimum: 5
      maximum: 10
    ModelList:
      type: array
      items:
        $ref: '#/components/schemas/Model'
    OutcomesMaxResults:
      type: integer
      minimum: 50
      maximum: 100
    OutcomeList:
      type: array
      items:
        $ref: '#/components/schemas/Outcome'
    ListOfModelScores:
      type: array
      items:
        $ref: '#/components/schemas/ModelScores'
    RulesMaxResults:
      type: integer
      minimum: 50
      maximum: 100
    RuleDetailList:
      type: array
      items:
        $ref: '#/components/schemas/RuleDetail'
    VariablesMaxResults:
      type: integer
      minimum: 50
      maximum: 100
    IsOpaque:
      type: boolean
    JsonKeyToVariableMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/string'
    LabelMapper:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ListOfStrings'
    LabelSchema:
      type: object
      required:
        - labelKey
        - labelMapper
      properties:
        labelKey:
          $ref: '#/components/schemas/string'
          description: The label key.
        labelMapper:
          $ref: '#/components/schemas/LabelMapper'
          description: 'The label mapper maps the Amazon Fraud Detector supported label to the appropriate source labels. For example, if <code>"FRAUD"</code> and <code>"LEGIT"</code> are Amazon Fraud Detector supported labels, this mapper could be: <code>{"FRAUD" =&gt; ["0"]</code>, "LEGIT" =&gt; ["1"]} or <code>{"FRAUD" =&gt; ["false"], "LEGIT" =&gt; ["true"]}</code> or <code>{"FRAUD" =&gt; ["fraud", "abuse"], "LEGIT" =&gt; ["legit", "safe"]}</code>. The value part of the mapper is a list, because you may have multiple variants for a single Amazon Fraud Detector label. '
      description: The label schema.
    ModelScores:
      type: object
      properties:
        modelVersion:
          $ref: '#/components/schemas/ModelVersion'
          description: The model version.
        scores:
          $ref: '#/components/schemas/ModelPredictionMap'
          description: The model's fraud prediction scores.
      description: The fraud prediction scores.
    ModelVersion:
      type: object
      required:
        - modelId
        - modelType
        - modelVersionNumber
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: The parent model ID.
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        modelVersionNumber:
          $ref: '#/components/schemas/nonEmptyString'
          description: The model version.
      description: The model version.
    MetricsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/string'
    TrainingDataSource:
      type: object
      required:
        - dataLocation
        - dataAccessRoleArn
      properties:
        dataLocation:
          $ref: '#/components/schemas/s3BucketLocation'
          description: The data location of the training data source.
        dataAccessRoleArn:
          $ref: '#/components/schemas/iamRoleArn'
          description: The data access role ARN for the training data source.
      description: The training data source.
    ModelVariablesList:
      type: array
      items:
        $ref: '#/components/schemas/ModelVariable'
    Model:
      type: object
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: The model ID.
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        description:
          $ref: '#/components/schemas/description'
          description: The model description.
        trainingDataSource:
          $ref: '#/components/schemas/TrainingDataSource'
          description: The model training data source in Amazon S3.
        modelVariables:
          $ref: '#/components/schemas/ModelVariablesList'
          description: The model input variables.
        labelSchema:
          $ref: '#/components/schemas/LabelSchema'
          description: The model label schema.
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of last time the model was updated.
        createdTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of when the model was created.
      description: The model.
    blob:
      type: string
    contentType:
      type: string
      minLength: 1
      maxLength: 1024
    ModelInputDataFormat:
      type: string
      enum:
        - TEXT_CSV
        - APPLICATION_JSON
    ModelOutputDataFormat:
      type: string
      enum:
        - TEXT_CSV
        - APPLICATION_JSONLINES
    float:
      type: number
      format: float
    ModelPredictionMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/float'
    ModelVariableIndex:
      type: integer
    ModelVariable:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The model variable's name.&gt;
        index:
          $ref: '#/components/schemas/ModelVariableIndex'
          description: The model variable's index.&gt;
      description: The model variable.&gt;
    ModelVersionDetail:
      type: object
      properties:
        modelId:
          $ref: '#/components/schemas/identifier'
          description: The model ID.
        modelType:
          $ref: '#/components/schemas/ModelTypeEnum'
          description: The model type.
        modelVersionNumber:
          $ref: '#/components/schemas/nonEmptyString'
          description: The model version.
        description:
          $ref: '#/components/schemas/description'
          description: The model description.
        status:
          $ref: '#/components/schemas/string'
          description: The model status.
        trainingDataSource:
          $ref: '#/components/schemas/TrainingDataSource'
          description: The model training data source.
        modelVariables:
          $ref: '#/components/schemas/ModelVariablesList'
          description: The model variables.
        labelSchema:
          $ref: '#/components/schemas/LabelSchema'
          description: The model label schema.
        validationMetrics:
          $ref: '#/components/schemas/MetricsMap'
          description: The model validation metrics.
        trainingMetrics:
          $ref: '#/components/schemas/MetricsMap'
          description: The model training metrics.
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: The timestamp when the model was last updated.
        createdTime:
          $ref: '#/components/schemas/time'
          description: The timestamp when the model was created.
      description: 'Provides the model version details. '
    ModelVersionStatus:
      type: string
      enum:
        - TRAINING_IN_PROGRESS
        - TRAINING_COMPLETE
        - ACTIVATE_REQUESTED
        - ACTIVATE_IN_PROGRESS
        - ACTIVE
        - INACTIVATE_IN_PROGRESS
        - INACTIVE
        - ERROR
    Outcome:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/identifier'
          description: The outcome name.
        description:
          $ref: '#/components/schemas/description'
          description: The outcome description.
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: The timestamp when the outcome was last updated.
        createdTime:
          $ref: '#/components/schemas/time'
          description: The timestamp when the outcome was created.
      description: The outcome.
    RuleDetail:
      type: object
      properties:
        ruleId:
          $ref: '#/components/schemas/identifier'
          description: The rule ID.
        description:
          $ref: '#/components/schemas/description'
          description: The rule description.
        detectorId:
          $ref: '#/components/schemas/identifier'
          description: The detector for which the rule is associated.
        ruleVersion:
          $ref: '#/components/schemas/nonEmptyString'
          description: The rule version.
        expression:
          $ref: '#/components/schemas/ruleExpression'
          description: The rule expression.
        language:
          $ref: '#/components/schemas/Language'
          description: The rule language.
        outcomes:
          $ref: '#/components/schemas/NonEmptyListOfStrings'
          description: The rule outcomes.
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: Timestamp of the last time the rule was updated.
        createdTime:
          $ref: '#/components/schemas/time'
          description: The timestamp of when the rule was created.
      description: The details of the rule.
    s3BucketLocation:
      type: string
      pattern: '^s3:\/\/[^\s]+$'
      minLength: 1
      maxLength: 512
    iamRoleArn:
      type: string
      pattern: '^arn\:aws\:iam\:\:[0-9]{12}\:role\/[^\s]{2,64}$'
      minLength: 1
      maxLength: 256
    Variable:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The name of the variable.
        dataType:
          $ref: '#/components/schemas/DataType'
          description: The data type of the variable.
        dataSource:
          $ref: '#/components/schemas/DataSource'
          description: The data source of the variable.
        defaultValue:
          $ref: '#/components/schemas/string'
          description: The default value of the variable.
        description:
          $ref: '#/components/schemas/string'
          description: 'The description of the variable. '
        variableType:
          $ref: '#/components/schemas/string'
          description: The variable type of the variable.
        lastUpdatedTime:
          $ref: '#/components/schemas/time'
          description: The time when variable was last updated.
        createdTime:
          $ref: '#/components/schemas/time'
          description: The time when the variable was created.
      description: The variable.
    VariableEntry:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/string'
          description: The name of the variable entry.
        dataType:
          $ref: '#/components/schemas/string'
          description: The data type of the variable entry.
        dataSource:
          $ref: '#/components/schemas/string'
          description: The data source of the variable entry.
        defaultValue:
          $ref: '#/components/schemas/string'
          description: The default value of the variable entry.
        description:
          $ref: '#/components/schemas/string'
          description: The description of the variable entry.
        variableType:
          $ref: '#/components/schemas/string'
          description: The type of the variable entry.
      description: The variable entry in a list.
    attributeKey:
      type: string
      minLength: 1
      maxLength: 64
security:
  - hmac: []
