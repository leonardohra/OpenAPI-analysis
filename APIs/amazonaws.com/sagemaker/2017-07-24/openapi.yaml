openapi: 3.0.0
info:
  version: '2017-07-24'
  x-release: v4
  title: Amazon SageMaker Service
  description: Provides APIs for creating and managing Amazon SageMaker resources.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sagemaker
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sagemaker-2017-07-24.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/sagemaker/'
servers:
  - url: 'http://api.sagemaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SageMaker multi-region endpoint
  - url: 'https://api.sagemaker.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SageMaker multi-region endpoint
  - url: 'http://api.sagemaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SageMaker endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://api.sagemaker.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SageMaker endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=SageMaker.AddTags':
    post:
      operationId: AddTags
      description: '<p>Adds or overwrites one or more tags for the specified Amazon SageMaker resource. You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints.</p> <p>Each tag consists of a key and an optional value. Tag keys must be unique per resource. For more information about tags, see For more information, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS Tagging Strategies</a>.</p> <note> <p>Tags that you add to a hyperparameter tuning job by calling this API are also added to any training jobs that the hyperparameter tuning job launches after you call this API, but not to training jobs that the hyperparameter tuning job launched before you called this API. To make sure that the tags associated with a hyperparameter tuning job are also added to all training jobs that the hyperparameter tuning job launches, add the tags when you first create the tuning job by specifying them in the <code>Tags</code> parameter of <a>CreateHyperParameterTuningJob</a> </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.AddTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.AssociateTrialComponent':
    post:
      operationId: AssociateTrialComponent
      description: 'Associates a trial component with a trial. A trial component can be associated with multiple trials. To disassociate a trial component from a trial, call the <a>DisassociateTrialComponent</a> API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.AssociateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateAlgorithm':
    post:
      operationId: CreateAlgorithm
      description: Create a machine learning algorithm that you can use in Amazon SageMaker and list in the AWS Marketplace.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAlgorithmOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlgorithmInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateAlgorithm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateApp':
    post:
      operationId: CreateApp
      description: 'Creates a running App for the specified UserProfile. Supported Apps are JupyterServer and KernelGateway. This operation is automatically invoked by Amazon SageMaker Amazon SageMaker Studio (Studio) upon access to the associated Studio Domain, and when new kernel configurations are selected by the user. A user may have multiple Apps active simultaneously. Apps will automatically terminate and be deleted when stopped from within Studio, or when the DeleteApp API is manually called. UserProfiles are limited to 5 concurrently running Apps at a time.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateAutoMLJob':
    post:
      operationId: CreateAutoMLJob
      description: Creates an AutoPilot job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAutoMLJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutoMLJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateCodeRepository':
    post:
      operationId: CreateCodeRepository
      description: '<p>Creates a Git repository as a resource in your Amazon SageMaker account. You can associate the repository with notebook instances so that you can use Git source control for the notebooks you create. The Git repository is a resource in your Amazon SageMaker account, so it can be associated with more than one notebook instance, and it persists independently from the lifecycle of any notebook instances it is associated with.</p> <p>The repository can be hosted either in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCodeRepositoryOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateCompilationJob':
    post:
      operationId: CreateCompilationJob
      description: '<p>Starts a model compilation job. After the model has been compiled, Amazon SageMaker saves the resulting model artifacts to an Amazon Simple Storage Service (Amazon S3) bucket that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts with AWS IoT Greengrass. In that case, deploy them as an ML resource.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p>A name for the compilation job</p> </li> <li> <p> Information about the input model artifacts </p> </li> <li> <p>The output location for the compiled model and the device (target) that the model runs on </p> </li> <li> <p> <code>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker assumes to perform the model compilation job</code> </p> </li> </ul> <p>You can also provide a <code>Tag</code> to track the model compilation job''s resource use and costs. The response body contains the <code>CompilationJobArn</code> for the compiled job.</p> <p>To stop a model compilation job, use <a>StopCompilationJob</a>. To get information about a particular model compilation job, use <a>DescribeCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompilationJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompilationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateCompilationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateDomain':
    post:
      operationId: CreateDomain
      description: 'Creates a Domain for Amazon SageMaker Amazon SageMaker Studio (Studio), which can be accessed by end-users in a web browser. A Domain has an associated directory, list of authorized users, and a variety of security, application, policies, and Amazon Virtual Private Cloud configurations. An AWS account is limited to one Domain, per region. Users within a domain can share notebook files and other artifacts with each other. When a Domain is created, an Amazon Elastic File System (EFS) is also created for use by all of the users within the Domain. Each user receives a private home directory within the EFS for notebooks, Git repositories, and data files. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDomainResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateEndpoint':
    post:
      operationId: CreateEndpoint
      description: '<p>Creates an endpoint using the endpoint configuration specified in the request. Amazon SageMaker uses the endpoint to provision resources and deploy models. You create the endpoint configuration with the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html">CreateEndpointConfig</a> API. </p> <p> Use this API to deploy models using Amazon SageMaker hosting services. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (AWS SDK for Python (Boto 3)).</a> </p> <note> <p> You must not delete an <code>EndpointConfig</code> that is in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> </note> <p>The endpoint name must be unique within an AWS Region in your AWS account. </p> <p>When it receives the request, Amazon SageMaker creates the endpoint, launches the resources (ML compute instances), and deploys the model(s) on them. </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Creating</code>. After it creates the endpoint, it sets the status to <code>InService</code>. Amazon SageMaker can then process incoming requests for inferences. To check the status of an endpoint, use the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API.</p> <p>If any of the models hosted at this endpoint get model data from an Amazon S3 location, Amazon SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provided. AWS STS is activated in your IAM user account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and Deactivating AWS STS in an AWS Region</a> in the <i>AWS Identity and Access Management User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateEndpointConfig':
    post:
      operationId: CreateEndpointConfig
      description: '<p>Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the <code>CreateModel</code> API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html">CreateEndpoint</a> API.</p> <note> <p> Use this API if you want to use Amazon SageMaker hosting services to deploy models into production. </p> </note> <p>In the request, you define a <code>ProductionVariant</code>, for each model that you want to deploy. Each <code>ProductionVariant</code> parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy. </p> <p>If you are hosting multiple models, you also assign a <code>VariantWeight</code> to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (AWS SDK for Python (Boto 3)).</a> </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndpointConfigOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateEndpointConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateExperiment':
    post:
      operationId: CreateExperiment
      description: '<p>Creates an Amazon SageMaker <i>experiment</i>. An experiment is a collection of <i>trials</i> that are observed, compared and evaluated as a group. A trial is a set of steps, called <i>trial components</i>, that produce a machine learning model.</p> <p>The goal of an experiment is to determine the components that produce the best model. Multiple trials are performed, each one isolating and measuring the impact of a change to one or more inputs, while keeping the remaining inputs constant.</p> <p>When you use Amazon SageMaker Studio or the Amazon SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the AWS SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to experiments, trials, trial components and then use the <a>Search</a> API to search for the tags.</p> <p>To add a description to an experiment, specify the optional <code>Description</code> parameter. To add a description later, or to change the description, call the <a>UpdateExperiment</a> API.</p> <p>To get a list of all your experiments, call the <a>ListExperiments</a> API. To view an experiment''s properties, call the <a>DescribeExperiment</a> API. To get a list of all the trials associated with an experiment, call the <a>ListTrials</a> API. To create a trial call the <a>CreateTrial</a> API.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExperimentResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateFlowDefinition':
    post:
      operationId: CreateFlowDefinition
      description: Creates a flow definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFlowDefinitionResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFlowDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateFlowDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateHumanTaskUi':
    post:
      operationId: CreateHumanTaskUi
      description: 'Defines the settings you will use for the human review workflow user interface. Reviewers will see a three-panel interface with an instruction area, the item to review, and an input area.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHumanTaskUiResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHumanTaskUiRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateHumanTaskUi
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateHyperParameterTuningJob':
    post:
      operationId: CreateHyperParameterTuningJob
      description: 'Starts a hyperparameter tuning job. A hyperparameter tuning job finds the best version of a model by running many training jobs on your dataset using the algorithm you choose and values for hyperparameters within ranges that you specify. It then chooses the hyperparameter values that result in a model that performs the best, as measured by an objective metric that you choose.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHyperParameterTuningJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHyperParameterTuningJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateLabelingJob':
    post:
      operationId: CreateLabelingJob
      description: '<p>Creates a job that uses workers to label the data objects in your input dataset. You can use the labeled data to train machine learning models.</p> <p>You can select your workforce from one of three providers:</p> <ul> <li> <p>A private workforce that you create. It can include employees, contractors, and outside experts. Use a private workforce when want the data to stay within your organization or when a specific set of skills is required.</p> </li> <li> <p>One or more vendors that you select from the AWS Marketplace. Vendors provide expertise in specific areas. </p> </li> <li> <p>The Amazon Mechanical Turk workforce. This is the largest workforce, but it should only be used for public data or data that has been stripped of any personally identifiable information.</p> </li> </ul> <p>You can also use <i>automated data labeling</i> to reduce the number of data objects that need to be labeled by a human. Automated data labeling uses <i>active learning</i> to determine if a data object can be labeled by machine or if it needs to be sent to a human worker. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-automated-labeling.html">Using Automated Data Labeling</a>.</p> <p>The data objects to be labeled are contained in an Amazon S3 bucket. You create a <i>manifest file</i> that describes the location of each object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-data.html">Using Input and Output Data</a>.</p> <p>The output can be used as the manifest file for another labeling job or as training data for your machine learning models.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLabelingJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateLabelingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateModel':
    post:
      operationId: CreateModel
      description: '<p>Creates a model in Amazon SageMaker. In the request, you name the model and describe a primary container. For the primary container, you specify the Docker image that contains inference code, artifacts (from prior training), and a custom environment map that the inference code uses when you deploy the model for predictions.</p> <p>Use this API to create a model if you want to use Amazon SageMaker hosting services or run a batch transform job.</p> <p>To host your model, you create an endpoint configuration with the <code>CreateEndpointConfig</code> API, and then create an endpoint with the <code>CreateEndpoint</code> API. Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment. </p> <p>For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto">Deploy the Model to Amazon SageMaker Hosting Services (AWS SDK for Python (Boto 3)).</a> </p> <p>To run a batch transform using your model, you start a job with the <code>CreateTransformJob</code> API. Amazon SageMaker uses your model and your dataset to get inferences which are then saved to a specified S3 location.</p> <p>In the <code>CreateModel</code> request, you must define a container with the <code>PrimaryContainer</code> parameter.</p> <p>In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances or for batch transform jobs. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other AWS resources, you grant necessary permissions via this role.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateModelPackage':
    post:
      operationId: CreateModelPackage
      description: '<p>Creates a model package that you can use to create Amazon SageMaker models or list on AWS Marketplace. Buyers can subscribe to model packages listed on AWS Marketplace to create models in Amazon SageMaker.</p> <p>To create a model package by specifying a Docker container that contains your inference code and the Amazon S3 location of your model artifacts, provide values for <code>InferenceSpecification</code>. To create a model from an algorithm resource that you created or subscribed to in AWS Marketplace, provide a value for <code>SourceAlgorithmSpecification</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateModelPackageOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateModelPackageInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateModelPackage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateMonitoringSchedule':
    post:
      operationId: CreateMonitoringSchedule
      description: Creates a schedule that regularly starts Amazon SageMaker Processing Jobs to monitor the data captured for an Amazon SageMaker Endoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMonitoringScheduleResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateNotebookInstance':
    post:
      operationId: CreateNotebookInstance
      description: '<p>Creates an Amazon SageMaker notebook instance. A notebook instance is a machine learning (ML) compute instance running on a Jupyter notebook. </p> <p>In a <code>CreateNotebookInstance</code> request, specify the type of ML compute instance that you want to run. Amazon SageMaker launches the instance, installs common libraries that you can use to explore datasets for model training, and attaches an ML storage volume to the notebook instance. </p> <p>Amazon SageMaker also provides a set of example notebooks. Each notebook demonstrates how to use Amazon SageMaker with a specific algorithm or with a machine learning framework. </p> <p>After receiving the request, Amazon SageMaker does the following:</p> <ol> <li> <p>Creates a network interface in the Amazon SageMaker VPC.</p> </li> <li> <p>(Option) If you specified <code>SubnetId</code>, Amazon SageMaker creates a network interface in your own VPC, which is inferred from the subnet ID that you provide in the input. When creating this network interface, Amazon SageMaker attaches the security group that you specified in the request to the network interface that it creates in your VPC.</p> </li> <li> <p>Launches an EC2 instance of the type specified in the request in the Amazon SageMaker VPC. If you specified <code>SubnetId</code> of your VPC, Amazon SageMaker specifies both network interfaces when launching this instance. This enables inbound traffic from your own VPC to the notebook instance, assuming that the security groups allow it.</p> </li> </ol> <p>After creating the notebook instance, Amazon SageMaker returns its Amazon Resource Name (ARN). You can''t change the name of a notebook instance after you create it.</p> <p>After Amazon SageMaker creates the notebook instance, you can connect to the Jupyter server and work in Jupyter notebooks. For example, you can write code to explore a dataset that you can use for model training, train a model, host models by creating Amazon SageMaker endpoints, and validate hosted models. </p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateNotebookInstanceLifecycleConfig':
    post:
      operationId: CreateNotebookInstanceLifecycleConfig
      description: '<p>Creates a lifecycle configuration that you can associate with a notebook instance. A <i>lifecycle configuration</i> is a collection of shell scripts that run when you create or start a notebook instance.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreatePresignedDomainUrl':
    post:
      operationId: CreatePresignedDomainUrl
      description: 'Creates a URL for a specified UserProfile in a Domain. When accessed in a web browser, the user will be automatically signed in to Amazon SageMaker Amazon SageMaker Studio (Studio), and granted access to all of the Apps and files associated with that Amazon Elastic File System (EFS). This operation can only be called when AuthMode equals IAM. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePresignedDomainUrlResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePresignedDomainUrlRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreatePresignedDomainUrl
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreatePresignedNotebookInstanceUrl':
    post:
      operationId: CreatePresignedNotebookInstanceUrl
      description: '<p>Returns a URL that you can use to connect to the Jupyter server from a notebook instance. In the Amazon SageMaker console, when you choose <code>Open</code> next to a notebook instance, Amazon SageMaker opens a new tab showing the Jupyter server home page from the notebook instance. The console uses this API to get the URL and show the page.</p> <p>IAM authorization policies for this API are also enforced for every HTTP request and WebSocket frame that attempts to connect to the notebook instance.For example, you can restrict access to this API and to the URL that it returns to a list of IP addresses that you specify. Use the <code>NotIpAddress</code> condition operator and the <code>aws:SourceIP</code> condition context key to specify the list of IP addresses that you want to have access to the notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security_iam_id-based-policy-examples.html#nbi-ip-filter">Limit Access to a Notebook Instance by IP Address</a>.</p> <note> <p>The URL that you get from a call to is valid only for 5 minutes. If you try to use the URL after the 5-minute limit expires, you are directed to the AWS console sign-in page.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePresignedNotebookInstanceUrlOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePresignedNotebookInstanceUrlInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreatePresignedNotebookInstanceUrl
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateProcessingJob':
    post:
      operationId: CreateProcessingJob
      description: Creates a processing job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProcessingJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProcessingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateProcessingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateTrainingJob':
    post:
      operationId: CreateTrainingJob
      description: '<p>Starts a model training job. After training completes, Amazon SageMaker saves the resulting model artifacts to an Amazon S3 location that you specify. </p> <p>If you choose to host your model using Amazon SageMaker hosting services, you can use the resulting model artifacts as part of the model. You can also use the artifacts in a machine learning service other than Amazon SageMaker, provided that you know how to use them for inferences. </p> <p>In the request body, you provide the following: </p> <ul> <li> <p> <code>AlgorithmSpecification</code> - Identifies the training algorithm to use. </p> </li> <li> <p> <code>HyperParameters</code> - Specify these algorithm-specific parameters to enable the estimation of model parameters during training. Hyperparameters can be tuned to optimize this learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> </li> <li> <p> <code>InputDataConfig</code> - Describes the training dataset and the Amazon S3, EFS, or FSx location where it is stored.</p> </li> <li> <p> <code>OutputDataConfig</code> - Identifies the Amazon S3 bucket where you want Amazon SageMaker to save the results of model training. </p> <p/> </li> <li> <p> <code>ResourceConfig</code> - Identifies the resources, ML compute instances, and ML storage volumes to deploy for model training. In distributed training, you specify more than one instance. </p> </li> <li> <p> <code>EnableManagedSpotTraining</code> - Optimize the cost of training machine learning models by up to 80% by using Amazon EC2 Spot instances. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-managed-spot-training.html">Managed Spot Training</a>. </p> </li> <li> <p> <code>RoleARN</code> - The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during model training. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete model training. </p> </li> <li> <p> <code>StoppingCondition</code> - To help cap training costs, use <code>MaxRuntimeInSeconds</code> to set a time limit for training. Use <code>MaxWaitTimeInSeconds</code> to specify how long you are willing to wait for a managed spot training job to complete. </p> </li> </ul> <p> For more information about Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html">How It Works</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrainingJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrainingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTrainingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateTransformJob':
    post:
      operationId: CreateTransformJob
      description: '<p>Starts a transform job. A transform job uses a trained model to get inferences on a dataset and saves these results to an Amazon S3 location that you specify.</p> <p>To perform batch transformations, you create a transform job and use the data that you have readily available.</p> <p>In the request body, you provide the following:</p> <ul> <li> <p> <code>TransformJobName</code> - Identifies the transform job. The name must be unique within an AWS Region in an AWS account.</p> </li> <li> <p> <code>ModelName</code> - Identifies the model to use. <code>ModelName</code> must be the name of an existing Amazon SageMaker model in the same AWS Region and AWS account. For information on creating a model, see <a>CreateModel</a>.</p> </li> <li> <p> <code>TransformInput</code> - Describes the dataset to be transformed and the Amazon S3 location where it is stored.</p> </li> <li> <p> <code>TransformOutput</code> - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.</p> </li> <li> <p> <code>TransformResources</code> - Identifies the ML compute instances for the transform job.</p> </li> </ul> <p>For more information about how batch transformation works, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html">Batch Transform</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransformJobResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransformJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTransformJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateTrial':
    post:
      operationId: CreateTrial
      description: '<p>Creates an Amazon SageMaker <i>trial</i>. A trial is a set of steps called <i>trial components</i> that produce a machine learning model. A trial is part of a single Amazon SageMaker <i>experiment</i>.</p> <p>When you use Amazon SageMaker Studio or the Amazon SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the AWS SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to a trial and then use the <a>Search</a> API to search for the tags.</p> <p>To get a list of all your trials, call the <a>ListTrials</a> API. To view a trial''s properties, call the <a>DescribeTrial</a> API. To create a trial component, call the <a>CreateTrialComponent</a> API.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrialResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateTrialComponent':
    post:
      operationId: CreateTrialComponent
      description: '<p>Creates a <i>trial component</i>, which is a stage of a machine learning <i>trial</i>. A trial is composed of one or more trial components. A trial component can be used in multiple trials.</p> <p>Trial components include pre-processing jobs, training jobs, and batch transform jobs.</p> <p>When you use Amazon SageMaker Studio or the Amazon SageMaker Python SDK, all experiments, trials, and trial components are automatically tracked, logged, and indexed. When you use the AWS SDK for Python (Boto), you must use the logging APIs provided by the SDK.</p> <p>You can add tags to a trial component and then use the <a>Search</a> API to search for the tags.</p> <note> <p> <code>CreateTrialComponent</code> can only be invoked from within an Amazon SageMaker managed environment. This includes Amazon SageMaker training jobs, processing jobs, transform jobs, and Amazon SageMaker notebooks. A call to <code>CreateTrialComponent</code> from outside one of these environments results in an error.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrialComponentResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateUserProfile':
    post:
      operationId: CreateUserProfile
      description: 'Creates a new user profile. A user profile represents a single user within a Domain, and is the main way to reference a "person" for the purposes of sharing, reporting and other user-oriented features. This entity is created during on-boarding. If an administrator invites a person by email or imports them from SSO, a new UserProfile is automatically created. This entity is the primary holder of settings for an individual user and has a reference to the user''s private Amazon Elastic File System (EFS) home directory. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserProfileResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.CreateWorkteam':
    post:
      operationId: CreateWorkteam
      description: <p>Creates a new work team for labeling your data. A work team is defined by one or more Amazon Cognito user pools. You must first create the user pools before you can create a work team.</p> <p>You cannot create more than 25 work teams in an account and region.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkteamResponse'
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.CreateWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteAlgorithm':
    post:
      operationId: DeleteAlgorithm
      description: Removes the specified algorithm from your account.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAlgorithmInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteAlgorithm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteApp':
    post:
      operationId: DeleteApp
      description: Used to stop and delete an app.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteCodeRepository':
    post:
      operationId: DeleteCodeRepository
      description: Deletes the specified Git repository from your account.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteDomain':
    post:
      operationId: DeleteDomain
      description: 'Used to delete a domain. If you on-boarded with IAM mode, you will need to delete your domain to on-board again using SSO. Use with caution. All of the members of the domain will lose access to their EFS volume, including data, notebooks, and other artifacts. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteEndpoint':
    post:
      operationId: DeleteEndpoint
      description: '<p>Deletes an endpoint. Amazon SageMaker frees up all of the resources that were deployed when the endpoint was created. </p> <p>Amazon SageMaker retires any custom KMS key grants associated with the endpoint, meaning you don''t need to use the <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_RevokeGrant.html">RevokeGrant</a> API call.</p>'
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteEndpointConfig':
    post:
      operationId: DeleteEndpointConfig
      description: 'Deletes an endpoint configuration. The <code>DeleteEndpointConfig</code> API deletes only the specified configuration. It does not delete endpoints created using the configuration. '
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEndpointConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteEndpointConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteExperiment':
    post:
      operationId: DeleteExperiment
      description: Deletes an Amazon SageMaker experiment. All trials associated with the experiment must be deleted first. Use the <a>ListTrials</a> API to get a list of the trials associated with the experiment.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExperimentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteFlowDefinition':
    post:
      operationId: DeleteFlowDefinition
      description: Deletes the specified flow definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFlowDefinitionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFlowDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteFlowDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteModel':
    post:
      operationId: DeleteModel
      description: 'Deletes a model. The <code>DeleteModel</code> API deletes only the model entry that was created in Amazon SageMaker when you called the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a> API. It does not delete model artifacts, inference code, or the IAM role that you specified when creating the model. '
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteModelPackage':
    post:
      operationId: DeleteModelPackage
      description: <p>Deletes a model package.</p> <p>A model package is used to create Amazon SageMaker models or list on AWS Marketplace. Buyers can subscribe to model packages listed on AWS Marketplace to create models in Amazon SageMaker.</p>
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteModelPackageInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteModelPackage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteMonitoringSchedule':
    post:
      operationId: DeleteMonitoringSchedule
      description: 'Deletes a monitoring schedule. Also stops the schedule had not already been stopped. This does not delete the job execution history of the monitoring schedule. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteNotebookInstance':
    post:
      operationId: DeleteNotebookInstance
      description: '<p> Deletes an Amazon SageMaker notebook instance. Before you can delete a notebook instance, you must call the <code>StopNotebookInstance</code> API. </p> <important> <p>When you delete a notebook instance, you lose all of your data. Amazon SageMaker removes the ML compute instance, and deletes the ML storage volume and the network interface associated with the notebook instance. </p> </important>'
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteNotebookInstanceLifecycleConfig':
    post:
      operationId: DeleteNotebookInstanceLifecycleConfig
      description: Deletes a notebook instance lifecycle configuration.
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteTags':
    post:
      operationId: DeleteTags
      description: '<p>Deletes the specified tags from an Amazon SageMaker resource.</p> <p>To list a resource''s tags, use the <code>ListTags</code> API. </p> <note> <p>When you call this API to delete tags from a hyperparameter tuning job, the deleted tags are not removed from training jobs that the hyperparameter tuning job launched before you called this API.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTagsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagsInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteTrial':
    post:
      operationId: DeleteTrial
      description: Deletes the specified trial. All trial components that make up the trial must be deleted first. Use the <a>DescribeTrialComponent</a> API to get the list of trial components.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrialResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteTrialComponent':
    post:
      operationId: DeleteTrialComponent
      description: 'Deletes the specified trial component. A trial component must be disassociated from all trials before the trial component can be deleted. To disassociate a trial component from a trial, call the <a>DisassociateTrialComponent</a> API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteUserProfile':
    post:
      operationId: DeleteUserProfile
      description: Deletes a user profile.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DeleteWorkteam':
    post:
      operationId: DeleteWorkteam
      description: Deletes an existing work team. This operation can't be undone.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkteamResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DeleteWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeAlgorithm':
    post:
      operationId: DescribeAlgorithm
      description: Returns a description of the specified algorithm that is in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlgorithmOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAlgorithmInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeAlgorithm
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeApp':
    post:
      operationId: DescribeApp
      description: Describes the app.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAppResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAppRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeApp
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeAutoMLJob':
    post:
      operationId: DescribeAutoMLJob
      description: Returns information about an Amazon SageMaker job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAutoMLJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAutoMLJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeCodeRepository':
    post:
      operationId: DescribeCodeRepository
      description: Gets details about the specified Git repository.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCodeRepositoryOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeCompilationJob':
    post:
      operationId: DescribeCompilationJob
      description: '<p>Returns information about a model compilation job.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about multiple model compilation jobs, use <a>ListCompilationJobs</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCompilationJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCompilationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeCompilationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeDomain':
    post:
      operationId: DescribeDomain
      description: The desciption of the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDomainResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeEndpoint':
    post:
      operationId: DescribeEndpoint
      description: Returns the description of an endpoint.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEndpointOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeEndpointConfig':
    post:
      operationId: DescribeEndpointConfig
      description: Returns the description of an endpoint configuration created using the <code>CreateEndpointConfig</code> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEndpointConfigOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEndpointConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeEndpointConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeExperiment':
    post:
      operationId: DescribeExperiment
      description: Provides a list of an experiment's properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeExperimentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeFlowDefinition':
    post:
      operationId: DescribeFlowDefinition
      description: Returns information about the specified flow definition.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFlowDefinitionResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFlowDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeFlowDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeHumanTaskUi':
    post:
      operationId: DescribeHumanTaskUi
      description: Returns information about the requested human task user interface.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHumanTaskUiResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHumanTaskUiRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeHumanTaskUi
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeHyperParameterTuningJob':
    post:
      operationId: DescribeHyperParameterTuningJob
      description: Gets a description of a hyperparameter tuning job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHyperParameterTuningJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHyperParameterTuningJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeLabelingJob':
    post:
      operationId: DescribeLabelingJob
      description: Gets information about a labeling job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLabelingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeLabelingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeLabelingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeModel':
    post:
      operationId: DescribeModel
      description: Describes a model that you created using the <code>CreateModel</code> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModel
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeModelPackage':
    post:
      operationId: DescribeModelPackage
      description: '<p>Returns a description of the specified model package, which is used to create Amazon SageMaker models or list them on AWS Marketplace.</p> <p>To create models in Amazon SageMaker, buyers can subscribe to model packages listed on AWS Marketplace.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeModelPackageOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeModelPackageInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeModelPackage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeMonitoringSchedule':
    post:
      operationId: DescribeMonitoringSchedule
      description: Describes the schedule for a monitoring job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMonitoringScheduleResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeNotebookInstance':
    post:
      operationId: DescribeNotebookInstance
      description: Returns information about a notebook instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotebookInstanceOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeNotebookInstanceLifecycleConfig':
    post:
      operationId: DescribeNotebookInstanceLifecycleConfig
      description: '<p>Returns a description of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeNotebookInstanceLifecycleConfigOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeProcessingJob':
    post:
      operationId: DescribeProcessingJob
      description: Returns a description of a processing job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProcessingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeProcessingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeProcessingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeSubscribedWorkteam':
    post:
      operationId: DescribeSubscribedWorkteam
      description: Gets information about a work team provided by a vendor. It returns details about the subscription with a vendor in the AWS Marketplace.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSubscribedWorkteamResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSubscribedWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeSubscribedWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeTrainingJob':
    post:
      operationId: DescribeTrainingJob
      description: Returns information about a training job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrainingJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrainingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTrainingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeTransformJob':
    post:
      operationId: DescribeTransformJob
      description: Returns information about a transform job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTransformJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTransformJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTransformJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeTrial':
    post:
      operationId: DescribeTrial
      description: Provides a list of a trial's properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrialResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeTrialComponent':
    post:
      operationId: DescribeTrialComponent
      description: Provides a list of a trials component's properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeUserProfile':
    post:
      operationId: DescribeUserProfile
      description: Describes the user profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserProfileResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeWorkforce':
    post:
      operationId: DescribeWorkforce
      description: '<p>Lists private workforce information, including workforce name, Amazon Resource Name (ARN), and, if applicable, allowed IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Allowable IP address ranges are the IP addresses that workers can use to access tasks. </p> <important> <p>This operation applies only to private workforces.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkforceResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkforceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeWorkforce
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DescribeWorkteam':
    post:
      operationId: DescribeWorkteam
      description: 'Gets information about a specific work team. You can see information such as the create date, the last updated date, membership information, and the work team''s Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkteamResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DescribeWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.DisassociateTrialComponent':
    post:
      operationId: DisassociateTrialComponent
      description: '<p>Disassociates a trial component from a trial. This doesn''t effect other trials the component is associated with. Before you can delete a component, you must disassociate the component from all trials it is associated with. To associate a trial component with a trial, call the <a>AssociateTrialComponent</a> API.</p> <p>To get a list of the trials a component is associated with, use the <a>Search</a> API. Specify <code>ExperimentTrialComponent</code> for the <code>Resource</code> parameter. The list appears in the response under <code>Results.TrialComponent.Parents</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateTrialComponentResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.DisassociateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.GetSearchSuggestions':
    post:
      operationId: GetSearchSuggestions
      description: 'An auto-complete API for the search functionality in the Amazon SageMaker console. It returns suggestions of possible matches for the property name to use in <code>Search</code> queries. Provides suggestions for <code>HyperParameters</code>, <code>Tags</code>, and <code>Metrics</code>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchSuggestionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSearchSuggestionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.GetSearchSuggestions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListAlgorithms':
    post:
      operationId: ListAlgorithms
      description: Lists the machine learning algorithms that have been created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlgorithmsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAlgorithmsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListAlgorithms
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListApps':
    post:
      operationId: ListApps
      description: Lists apps.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAppsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListApps
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListAutoMLJobs':
    post:
      operationId: ListAutoMLJobs
      description: Request a list of jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutoMLJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAutoMLJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListAutoMLJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListCandidatesForAutoMLJob':
    post:
      operationId: ListCandidatesForAutoMLJob
      description: List the Candidates created for the job.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCandidatesForAutoMLJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCandidatesForAutoMLJobRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCandidatesForAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListCodeRepositories':
    post:
      operationId: ListCodeRepositories
      description: Gets a list of the Git repositories in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCodeRepositoriesOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCodeRepositoriesInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCodeRepositories
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListCompilationJobs':
    post:
      operationId: ListCompilationJobs
      description: '<p>Lists model compilation jobs that satisfy various filters.</p> <p>To create a model compilation job, use <a>CreateCompilationJob</a>. To get information about a particular model compilation job you have created, use <a>DescribeCompilationJob</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompilationJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCompilationJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListCompilationJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListDomains':
    post:
      operationId: ListDomains
      description: Lists the domains.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDomainsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListDomains
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListEndpointConfigs':
    post:
      operationId: ListEndpointConfigs
      description: Lists endpoint configurations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointConfigsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEndpointConfigsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListEndpointConfigs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListEndpoints':
    post:
      operationId: ListEndpoints
      description: Lists endpoints.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEndpointsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListEndpoints
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListExperiments':
    post:
      operationId: ListExperiments
      description: Lists all the experiments in your account. The list can be filtered to show only experiments that were created in a specific time range. The list can be sorted by experiment name or creation time.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExperimentsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListExperimentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListExperiments
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListFlowDefinitions':
    post:
      operationId: ListFlowDefinitions
      description: Returns information about the flow definitions in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowDefinitionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFlowDefinitionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListFlowDefinitions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListHumanTaskUis':
    post:
      operationId: ListHumanTaskUis
      description: Returns information about the human task user interfaces in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHumanTaskUisResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHumanTaskUisRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListHumanTaskUis
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListHyperParameterTuningJobs':
    post:
      operationId: ListHyperParameterTuningJobs
      description: Gets a list of <a>HyperParameterTuningJobSummary</a> objects that describe the hyperparameter tuning jobs launched in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHyperParameterTuningJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHyperParameterTuningJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListHyperParameterTuningJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListLabelingJobs':
    post:
      operationId: ListLabelingJobs
      description: Gets a list of labeling jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelingJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLabelingJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListLabelingJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListLabelingJobsForWorkteam':
    post:
      operationId: ListLabelingJobsForWorkteam
      description: Gets a list of labeling jobs assigned to a specified work team.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelingJobsForWorkteamResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLabelingJobsForWorkteamRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListLabelingJobsForWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListModelPackages':
    post:
      operationId: ListModelPackages
      description: Lists the model packages that have been created.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelPackagesOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelPackagesInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModelPackages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListModels':
    post:
      operationId: ListModels
      description: 'Lists models created with the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateModel.html">CreateModel</a> API.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListModelsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListModels
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListMonitoringExecutions':
    post:
      operationId: ListMonitoringExecutions
      description: Returns list of all monitoring job executions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitoringExecutionsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMonitoringExecutionsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListMonitoringExecutions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListMonitoringSchedules':
    post:
      operationId: ListMonitoringSchedules
      description: Returns list of all monitoring schedules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitoringSchedulesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMonitoringSchedulesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListMonitoringSchedules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListNotebookInstanceLifecycleConfigs':
    post:
      operationId: ListNotebookInstanceLifecycleConfigs
      description: Lists notebook instance lifestyle configurations created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotebookInstanceLifecycleConfigsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNotebookInstanceLifecycleConfigsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListNotebookInstanceLifecycleConfigs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListNotebookInstances':
    post:
      operationId: ListNotebookInstances
      description: 'Returns a list of the Amazon SageMaker notebook instances in the requester''s account in an AWS Region. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotebookInstancesOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNotebookInstancesInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListNotebookInstances
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListProcessingJobs':
    post:
      operationId: ListProcessingJobs
      description: Lists processing jobs that satisfy various filters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProcessingJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProcessingJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListProcessingJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListSubscribedWorkteams':
    post:
      operationId: ListSubscribedWorkteams
      description: Gets a list of the work teams that you are subscribed to in the AWS Marketplace. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscribedWorkteamsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSubscribedWorkteamsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListSubscribedWorkteams
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListTags':
    post:
      operationId: ListTags
      description: Returns the tags for the specified Amazon SageMaker resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsInput'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListTrainingJobs':
    post:
      operationId: ListTrainingJobs
      description: Lists training jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrainingJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrainingJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrainingJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListTrainingJobsForHyperParameterTuningJob':
    post:
      operationId: ListTrainingJobsForHyperParameterTuningJob
      description: Gets a list of <a>TrainingJobSummary</a> objects that describe the training jobs that a hyperparameter tuning job launched.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrainingJobsForHyperParameterTuningJobResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrainingJobsForHyperParameterTuningJobRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrainingJobsForHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListTransformJobs':
    post:
      operationId: ListTransformJobs
      description: Lists transform jobs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransformJobsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTransformJobsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTransformJobs
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListTrialComponents':
    post:
      operationId: ListTrialComponents
      description: '<p>Lists the trial components in your account. You can sort the list by trial component name or creation time. You can filter the list to show only components that were created in a specific time range. You can also filter on one of the following:</p> <ul> <li> <p> <code>ExperimentName</code> </p> </li> <li> <p> <code>SourceArn</code> </p> </li> <li> <p> <code>TrialName</code> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrialComponentsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrialComponentsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrialComponents
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListTrials':
    post:
      operationId: ListTrials
      description: Lists the trials in your account. Specify an experiment name to limit the list to the trials that are part of that experiment. Specify a trial component name to limit the list to the trials that associated with that trial component. The list can be filtered to show only trials that were created in a specific time range. The list can be sorted by trial name or creation time.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTrialsResponse'
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTrialsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListTrials
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListUserProfiles':
    post:
      operationId: ListUserProfiles
      description: Lists user profiles.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserProfilesResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUserProfilesRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListUserProfiles
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.ListWorkteams':
    post:
      operationId: ListWorkteams
      description: Gets a list of work teams that you have defined in a region. The list may be empty if no work team satisfies the filter specified in the <code>NameContains</code> parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkteamsResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkteamsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.ListWorkteams
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.RenderUiTemplate':
    post:
      operationId: RenderUiTemplate
      description: 'Renders the UI template so that you can preview the worker''s experience. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderUiTemplateResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderUiTemplateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.RenderUiTemplate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.Search':
    post:
      operationId: Search
      description: '<p>Finds Amazon SageMaker resources that match a search query. Matching resource objects are returned as a list of <code>SearchResult</code> objects in the response. You can sort the search results by any resource property in a ascending or descending order.</p> <p>You can query against the following value types: numeric, text, Boolean, and timestamp.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.Search
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StartMonitoringSchedule':
    post:
      operationId: StartMonitoringSchedule
      description: <p>Starts a previously stopped monitoring schedule.</p> <note> <p>New monitoring schedules are immediately started after creation.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StartMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StartNotebookInstance':
    post:
      operationId: StartNotebookInstance
      description: 'Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume. After configuring the notebook instance, Amazon SageMaker sets the notebook instance status to <code>InService</code>. A notebook instance''s status must be <code>InService</code> before you can connect to your Jupyter notebook. '
      responses:
        '200':
          description: Success
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StartNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopAutoMLJob':
    post:
      operationId: StopAutoMLJob
      description: A method for forcing the termination of a running job.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAutoMLJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopAutoMLJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopCompilationJob':
    post:
      operationId: StopCompilationJob
      description: '<p>Stops a model compilation job.</p> <p> To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal. This gracefully shuts the job down. If the job hasn''t stopped, it sends the SIGKILL signal.</p> <p>When it receives a <code>StopCompilationJob</code> request, Amazon SageMaker changes the <a>CompilationJobSummary$CompilationJobStatus</a> of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the <a>CompilationJobSummary$CompilationJobStatus</a> to <code>Stopped</code>. </p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopCompilationJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopCompilationJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopHyperParameterTuningJob':
    post:
      operationId: StopHyperParameterTuningJob
      description: '<p>Stops a running hyperparameter tuning job and all running training jobs that the tuning job launched.</p> <p>All model artifacts output from the training jobs are stored in Amazon Simple Storage Service (Amazon S3). All data that the training jobs write to Amazon CloudWatch Logs are still available in CloudWatch. After the tuning job moves to the <code>Stopped</code> state, it releases all reserved resources for the tuning job.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopHyperParameterTuningJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopHyperParameterTuningJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopLabelingJob':
    post:
      operationId: StopLabelingJob
      description: Stops a running labeling job. A job that is stopped cannot be restarted. Any results obtained before the job is stopped are placed in the Amazon S3 output bucket.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopLabelingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopLabelingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopMonitoringSchedule':
    post:
      operationId: StopMonitoringSchedule
      description: Stops a previously started monitoring schedule.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopNotebookInstance':
    post:
      operationId: StopNotebookInstance
      description: '<p>Terminates the ML compute instance. Before terminating the instance, Amazon SageMaker disconnects the ML storage volume from it. Amazon SageMaker preserves the ML storage volume. Amazon SageMaker stops charging you for the ML compute instance when you call <code>StopNotebookInstance</code>.</p> <p>To access data on the ML storage volume for a notebook instance that has been terminated, call the <code>StartNotebookInstance</code> API. <code>StartNotebookInstance</code> launches another ML compute instance, configures it, and attaches the preserved ML storage volume so you can continue your work. </p>'
      responses:
        '200':
          description: Success
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopProcessingJob':
    post:
      operationId: StopProcessingJob
      description: Stops a processing job.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopProcessingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopProcessingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopTrainingJob':
    post:
      operationId: StopTrainingJob
      description: '<p>Stops a training job. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of the training is not lost. </p> <p>When it receives a <code>StopTrainingJob</code> request, Amazon SageMaker changes the status of the job to <code>Stopping</code>. After Amazon SageMaker stops the job, it sets the status to <code>Stopped</code>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTrainingJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopTrainingJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.StopTransformJob':
    post:
      operationId: StopTransformJob
      description: '<p>Stops a transform job.</p> <p>When Amazon SageMaker receives a <code>StopTransformJob</code> request, the status of the job changes to <code>Stopping</code>. After Amazon SageMaker stops the job, the status is set to <code>Stopped</code>. When you stop a transform job before it is completed, Amazon SageMaker doesn''t store the job''s output in Amazon S3.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTransformJobRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.StopTransformJob
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateCodeRepository':
    post:
      operationId: UpdateCodeRepository
      description: Updates the specified Git repository with the specified values.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCodeRepositoryOutput'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCodeRepositoryInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateCodeRepository
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateDomain':
    post:
      operationId: UpdateDomain
      description: Updates a domain. Changes will impact all of the people in the domain.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateDomain
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateEndpoint':
    post:
      operationId: UpdateEndpoint
      description: '<p>Deploys the new <code>EndpointConfig</code> specified in the request, switches to using newly created endpoint, and then deletes resources provisioned for the endpoint using the previous <code>EndpointConfig</code> (there is no availability loss). </p> <p>When Amazon SageMaker receives the request, it sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API. </p> <note> <p>You must not delete an <code>EndpointConfig</code> in use by an endpoint that is live or while the <code>UpdateEndpoint</code> or <code>CreateEndpoint</code> operations are being performed on the endpoint. To update an endpoint, you must create a new <code>EndpointConfig</code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateEndpoint
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateEndpointWeightsAndCapacities':
    post:
      operationId: UpdateEndpointWeightsAndCapacities
      description: 'Updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variant associated with an existing endpoint. When it receives the request, Amazon SageMaker sets the endpoint status to <code>Updating</code>. After updating the endpoint, it sets the status to <code>InService</code>. To check the status of an endpoint, use the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_DescribeEndpoint.html">DescribeEndpoint</a> API. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointWeightsAndCapacitiesOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointWeightsAndCapacitiesInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateEndpointWeightsAndCapacities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateExperiment':
    post:
      operationId: UpdateExperiment
      description: 'Adds, updates, or removes the description of an experiment. Updates the display name of an experiment.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExperimentResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExperimentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateExperiment
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateMonitoringSchedule':
    post:
      operationId: UpdateMonitoringSchedule
      description: Updates a previously created schedule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMonitoringScheduleResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMonitoringScheduleRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateMonitoringSchedule
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateNotebookInstance':
    post:
      operationId: UpdateNotebookInstance
      description: Updates a notebook instance. NotebookInstance updates include upgrading or downgrading the ML compute instance used for your notebook instance to accommodate changes in your workload requirements.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotebookInstanceOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotebookInstanceInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateNotebookInstance
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateNotebookInstanceLifecycleConfig':
    post:
      operationId: UpdateNotebookInstanceLifecycleConfig
      description: Updates a notebook instance lifecycle configuration created with the <a>CreateNotebookInstanceLifecycleConfig</a> API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotebookInstanceLifecycleConfigOutput'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotebookInstanceLifecycleConfigInput'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateNotebookInstanceLifecycleConfig
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateTrial':
    post:
      operationId: UpdateTrial
      description: Updates the display name of a trial.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrialResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrialRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateTrial
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateTrialComponent':
    post:
      operationId: UpdateTrialComponent
      description: Updates one or more properties of a trial component.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrialComponentResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrialComponentRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateTrialComponent
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateUserProfile':
    post:
      operationId: UpdateUserProfile
      description: Updates a user profile.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserProfileResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
        '481':
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUse'
        '482':
          description: ResourceNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateUserProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateWorkforce':
    post:
      operationId: UpdateWorkforce
      description: '<p>Restricts access to tasks assigned to workers in the specified workforce to those within specific ranges of IP addresses. You specify allowed IP addresses by creating a list of up to four <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>.</p> <p>By default, a workforce isn''t restricted to specific IP addresses. If you specify a range of IP addresses, workers who attempt to access tasks using any IP address outside the specified range are denied access and get a <code>Not Found</code> error message on the worker portal. After restricting access with this operation, you can see the allowed IP values for a private workforce with the operation.</p> <important> <p>This operation applies only to private workforces.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkforceResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkforceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateWorkforce
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=SageMaker.UpdateWorkteam':
    post:
      operationId: UpdateWorkteam
      description: Updates an existing work team with new member definitions or description.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkteamResponse'
        '480':
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceeded'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkteamRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SageMaker.UpdateWorkteam
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddTagsOutput:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags associated with the Amazon SageMaker resource.
    AddTagsInput:
      type: object
      required:
        - ResourceArn
        - Tags
      title: AddTagsInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that you want to tag.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of <code>Tag</code> objects. Each tag is a key-value pair. Only the <code>key</code> parameter is required. If you don''t specify a value, Amazon SageMaker sets the value to an empty string. '
    AssociateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The ARN of the trial component.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    AssociateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
        - TrialName
      title: AssociateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to associated with the trial.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to associate with.
    ResourceNotFound: {}
    ResourceLimitExceeded: {}
    CreateAlgorithmOutput:
      type: object
      required:
        - AlgorithmArn
      properties:
        AlgorithmArn:
          $ref: '#/components/schemas/AlgorithmArn'
          description: The Amazon Resource Name (ARN) of the new algorithm.
    CreateAlgorithmInput:
      type: object
      required:
        - AlgorithmName
        - TrainingSpecification
      title: CreateAlgorithmInput
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm.
        AlgorithmDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description of the algorithm.
        TrainingSpecification:
          $ref: '#/components/schemas/TrainingSpecification'
          description: '<p>Specifies details about training jobs run by this algorithm, including the following:</p> <ul> <li> <p>The Amazon ECR path of the container and the version digest of the algorithm.</p> </li> <li> <p>The hyperparameters that the algorithm supports.</p> </li> <li> <p>The instance types that the algorithm supports for training.</p> </li> <li> <p>Whether the algorithm supports distributed training.</p> </li> <li> <p>The metrics that the algorithm emits to Amazon CloudWatch.</p> </li> <li> <p>Which metrics that the algorithm emits can be used as the objective metric for hyperparameter tuning jobs.</p> </li> <li> <p>The input channels that the algorithm supports for training data. For example, an algorithm might support <code>train</code>, <code>validation</code>, and <code>test</code> channels.</p> </li> </ul>'
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: '<p>Specifies details about inference jobs that the algorithm runs, including the following:</p> <ul> <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li> <li> <p>The instance types that the algorithm supports for transform jobs and real-time endpoints used for inference.</p> </li> <li> <p>The input and output content formats that the algorithm supports for inference.</p> </li> </ul>'
        ValidationSpecification:
          $ref: '#/components/schemas/AlgorithmValidationSpecification'
          description: 'Specifies configurations for one or more training jobs and that Amazon SageMaker runs to test the algorithm''s training code and, optionally, one or more batch transform jobs that Amazon SageMaker runs to test the algorithm''s inference code.'
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: Whether to certify the algorithm so that it can be listed in AWS Marketplace.
    CreateAppResponse:
      type: object
      properties:
        AppArn:
          $ref: '#/components/schemas/AppArn'
          description: The app's Amazon Resource Name (ARN).
    CreateAppRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
        - AppType
        - AppName
      title: CreateAppRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Each tag consists of a key and an optional value. Tag keys must be unique per resource.
        ResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and quantity.
    ResourceInUse: {}
    CreateAutoMLJobResponse:
      type: object
      required:
        - AutoMLJobArn
      properties:
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: 'When a job is created, it is assigned a unique ARN.'
    CreateAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
        - InputDataConfig
        - OutputDataConfig
        - RoleArn
      title: CreateAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: Identifies an AutoPilot job. Must be unique to your account and is case-insensitive.
        InputDataConfig:
          $ref: '#/components/schemas/AutoMLInputDataConfig'
          description: 'Similar to InputDataConfig supported by Tuning. Format(s) supported: CSV.'
        OutputDataConfig:
          $ref: '#/components/schemas/AutoMLOutputDataConfig'
          description: 'Similar to OutputDataConfig supported by Tuning. Format(s) supported: CSV.'
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
          description: 'Defines the kind of preprocessing and algorithms intended for the candidates. Options include: BinaryClassification, MulticlassClassification, and Regression.'
        AutoMLJobObjective:
          $ref: '#/components/schemas/AutoMLJobObjective'
          description: 'Defines the job''s objective. You provide a MetricName and AutoML will infer minimize or maximize. If this is not provided, the most commonly used ObjectiveMetric for problem type will be selected.'
        AutoMLJobConfig:
          $ref: '#/components/schemas/AutoMLJobConfig'
          description: Contains CompletionCriteria and SecurityConfig.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role that will be used to access the data.
        GenerateCandidateDefinitionsOnly:
          $ref: '#/components/schemas/GenerateCandidateDefinitionsOnly'
          description: 'This will generate possible candidates without training a model. A candidate is a combination of data preprocessors, algorithms, and algorithm parameter settings.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Each tag consists of a key and an optional value. Tag keys must be unique per resource.
    CreateCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryArn
      properties:
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The Amazon Resource Name (ARN) of the new repository.
    CreateCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
        - GitConfig
      title: CreateCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: 'The name of the Git repository. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
        GitConfig:
          $ref: '#/components/schemas/GitConfig'
          description: 'Specifies details about the repository, including the URL where the repository is located, the default branch, and credentials to use to access the repository.'
    CreateCompilationJobResponse:
      type: object
      required:
        - CompilationJobArn
      properties:
        CompilationJobArn:
          $ref: '#/components/schemas/CompilationJobArn'
          description: '<p>If the action is successful, the service sends back an HTTP 200 response. Amazon SageMaker returns the following data in JSON format:</p> <ul> <li> <p> <code>CompilationJobArn</code>: The Amazon Resource Name (ARN) of the compiled job.</p> </li> </ul>'
    CreateCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
        - RoleArn
        - InputConfig
        - OutputConfig
        - StoppingCondition
      title: CreateCompilationJobRequest
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: 'A name for the model compilation job. The name must be unique within the AWS Region and within your AWS account. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf. </p> <p>During model compilation, Amazon SageMaker needs your permission to:</p> <ul> <li> <p>Read input data from an S3 bucket</p> </li> <li> <p>Write model artifacts to an S3 bucket</p> </li> <li> <p>Write logs to Amazon CloudWatch Logs</p> </li> <li> <p>Publish metrics to Amazon CloudWatch</p> </li> </ul> <p>You grant permissions for all of these tasks to an IAM role. To pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles.</a> </p>'
        InputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: 'Provides information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
        OutputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: Provides information about the output location for the compiled model and the target device the model runs on.
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: 'Specifies a limit to how long a model compilation job can run. When the job reaches the time limit, Amazon SageMaker ends the compilation job. Use this API to cap model training costs.'
    CreateDomainResponse:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the created domain.
        Url:
          $ref: '#/components/schemas/String1024'
          description: The URL to the created domain.
    CreateDomainRequest:
      type: object
      required:
        - DomainName
        - AuthMode
        - DefaultUserSettings
        - SubnetIds
        - VpcId
      title: CreateDomainRequest
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: A name for the domain.
        AuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: The mode of authentication that member use to access the domain.
        DefaultUserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: The default user settings.
        SubnetIds:
          $ref: '#/components/schemas/Subnets'
          description: Security setting to limit to a set of subnets.
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: Security setting to limit the domain's communication to a Amazon Virtual Private Cloud.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Each tag consists of a key and an optional value. Tag keys must be unique per resource.
        HomeEfsFileSystemKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The AWS Key Management Service encryption key ID.
    CreateEndpointOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
    CreateEndpointInput:
      type: object
      required:
        - EndpointName
        - EndpointConfigName
      title: CreateEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint. The name must be unique within an AWS Region in your AWS account.
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: 'The name of an endpoint configuration. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html">CreateEndpointConfig</a>. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a>in the <i>AWS Billing and Cost Management User Guide</i>. '
    CreateEndpointConfigOutput:
      type: object
      required:
        - EndpointConfigArn
      properties:
        EndpointConfigArn:
          $ref: '#/components/schemas/EndpointConfigArn'
          description: 'The Amazon Resource Name (ARN) of the endpoint configuration. '
    CreateEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
        - ProductionVariants
      title: CreateEndpointConfigInput
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: 'The name of the endpoint configuration. You specify this name in a <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html">CreateEndpoint</a> request. '
        ProductionVariants:
          $ref: '#/components/schemas/ProductionVariantList'
          description: 'An list of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfig'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'A list of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i> AWS Billing and Cost Management User Guide</i>. '
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.</p> <p>The KmsKeyId can be any of the following formats: </p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias name ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateEndpoint</code>, <code>UpdateEndpoint</code> requests. For more information, refer to the AWS Key Management Service section<a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html"> Using Key Policies in AWS KMS </a> </p> <note> <p>Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can''t request a <code>KmsKeyId</code> when using an instance type with local storage. If any of the models that you specify in the <code>ProductionVariants</code> parameter use nitro-based instances with local storage, do not specify a value for the <code>KmsKeyId</code> parameter. If you specify a value for <code>KmsKeyId</code> when using any nitro-based instances with local storage, the call to <code>CreateEndpointConfig</code> fails.</p> <p>For a list of instance types that support local instance storage, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> <p>For more information about local instance storage encryption, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html">SSD Instance Store Volumes</a>.</p> </note>'
    CreateExperimentResponse:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
    CreateExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: CreateExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment. The name must be unique in your AWS account and is not case-sensitive.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. The name doesn''t need to be unique. If you don''t specify <code>DisplayName</code>, the value in <code>ExperimentName</code> is displayed.'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the experiment. You can use <a>Search</a> API to search on the tags.
    CreateFlowDefinitionResponse:
      type: object
      required:
        - FlowDefinitionArn
      properties:
        FlowDefinitionArn:
          $ref: '#/components/schemas/FlowDefinitionArn'
          description: The Amazon Resource Name (ARN) of the flow definition you create.
    CreateFlowDefinitionRequest:
      type: object
      required:
        - FlowDefinitionName
        - HumanLoopConfig
        - OutputConfig
        - RoleArn
      title: CreateFlowDefinitionRequest
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of your flow definition.
        HumanLoopActivationConfig:
          $ref: '#/components/schemas/HumanLoopActivationConfig'
          description: An object containing information about the events that trigger a human workflow.
        HumanLoopConfig:
          $ref: '#/components/schemas/HumanLoopConfig'
          description: An object containing information about the tasks the human reviewers will perform.
        OutputConfig:
          $ref: '#/components/schemas/FlowDefinitionOutputConfig'
          description: An object containing information about where the human review results will be uploaded.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of the role needed to call other services on your behalf. For example, <code>arn:aws:iam::1234567890:role/service-role/AmazonSageMaker-ExecutionRole-20180111T151298</code>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs that contain metadata to help you categorize and organize a flow definition. Each tag consists of a key and a value, both of which you define.'
    CreateHumanTaskUiResponse:
      type: object
      required:
        - HumanTaskUiArn
      properties:
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: The Amazon Resource Name (ARN) of the human review workflow user interface you create.
    CreateHumanTaskUiRequest:
      type: object
      required:
        - HumanTaskUiName
        - UiTemplate
      title: CreateHumanTaskUiRequest
      properties:
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the user interface you are creating.
        UiTemplate:
          $ref: '#/components/schemas/UiTemplate'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs that contain metadata to help you categorize and organize a human review workflow user interface. Each tag consists of a key and a value, both of which you define.'
    CreateHyperParameterTuningJobResponse:
      type: object
      required:
        - HyperParameterTuningJobArn
      properties:
        HyperParameterTuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the tuning job. Amazon SageMaker assigns an ARN to a hyperparameter tuning job when you create it.
    CreateHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobConfig
      title: CreateHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: 'The name of the tuning job. This name is the prefix for the names of all training jobs that this tuning job launches. The name must be unique within the same AWS account and AWS Region. The name must have { } to { } characters. Valid characters are a-z, A-Z, 0-9, and : + = @ _ % - (hyphen). The name is not case sensitive.'
        HyperParameterTuningJobConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobConfig'
          description: 'The <a>HyperParameterTuningJobConfig</a> object that describes the tuning job, including the search strategy, the objective metric used to evaluate training jobs, ranges of parameters to search, and resource limits for the tuning job. For more information, see <a>automatic-model-tuning</a> '
        TrainingJobDefinition:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinition'
          description: 'The <a>HyperParameterTrainingJobDefinition</a> object that describes the training jobs that this tuning job launches, including static hyperparameters, input data configuration, output data configuration, resource configuration, and stopping condition.'
        TrainingJobDefinitions:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitions'
          description: <p/>
        WarmStartConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobWarmStartConfig'
          description: '<p>Specifies the configuration for starting the hyperparameter tuning job using one or more previous tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric. If you specify <code>IDENTICAL_DATA_AND_ALGORITHM</code> as the <code>WarmStartType</code> value for the warm start configuration, the training job that performs the best in the new tuning job is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS Tagging Strategies</a>.</p> <p>Tags that you specify for the tuning job are also added to all training jobs that the tuning job launches.</p>'
    CreateLabelingJobResponse:
      type: object
      required:
        - LabelingJobArn
      properties:
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the labeling job. You use this ARN to identify the labeling job.
    CreateLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
        - LabelAttributeName
        - InputConfig
        - OutputConfig
        - RoleArn
        - HumanTaskConfig
      title: CreateLabelingJobRequest
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job. This name is used to identify the job in a list of labeling jobs.
        LabelAttributeName:
          $ref: '#/components/schemas/LabelAttributeName'
          description: 'The attribute name to use for the label in the output manifest file. This is the key for the key/value pair formed with the label that a worker assigns to the object. The name can''t end with "-metadata". If you are running a semantic segmentation labeling job, the attribute name must end with "-ref". If you are running any other kind of labeling job, the attribute name must not end with "-ref".'
        InputConfig:
          $ref: '#/components/schemas/LabelingJobInputConfig'
          description: 'Input data for the labeling job, such as the Amazon S3 location of the data objects and the location of the manifest file that describes the data objects.'
        OutputConfig:
          $ref: '#/components/schemas/LabelingJobOutputConfig'
          description: 'The location of the output data and the AWS Key Management Service key ID for the key used to encrypt the output data, if any.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Number (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during data labeling. You must grant this role the necessary permissions so that Amazon SageMaker can successfully complete data labeling.
        LabelCategoryConfigS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The S3 URL of the file that defines the categories used to label the data objects.</p> <p>The file is a JSON structure in the following format:</p> <p> <code>{</code> </p> <p> <code> "document-version": "2018-11-28"</code> </p> <p> <code> "labels": [</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 1</i>"</code> </p> <p> <code> },</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 2</i>"</code> </p> <p> <code> },</code> </p> <p> <code> ...</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label n</i>"</code> </p> <p> <code> }</code> </p> <p> <code> ]</code> </p> <p> <code>}</code> </p>'
        StoppingConditions:
          $ref: '#/components/schemas/LabelingJobStoppingConditions'
          description: 'A set of conditions for stopping the labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.'
        LabelingJobAlgorithmsConfig:
          $ref: '#/components/schemas/LabelingJobAlgorithmsConfig'
          description: Configures the information required to perform automated data labeling.
        HumanTaskConfig:
          $ref: '#/components/schemas/HumanTaskConfig'
          description: 'Configures the labeling task and how it is presented to workers; including, but not limited to price, keywords, and batch size (task count).'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
    CreateModelOutput:
      type: object
      required:
        - ModelArn
      properties:
        ModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: The ARN of the model created in Amazon SageMaker.
    CreateModelInput:
      type: object
      required:
        - ModelName
        - ExecutionRoleArn
      title: CreateModelInput
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the new model.
        PrimaryContainer:
          $ref: '#/components/schemas/ContainerDefinition'
          description: 'The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions. '
        Containers:
          $ref: '#/components/schemas/ContainerDefinitionList'
          description: Specifies the containers in the inference pipeline.
        ExecutionRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances or for batch transform jobs. Deploying on ML compute instances is part of model hosting. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_VpcConfig.html">VpcConfig</a> object that specifies the VPC that you want your model to connect to. Control access to and from your model container by configuring the VPC. <code>VpcConfig</code> is used in hosting services and in batch transform. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-vpc.html">Protect Data in Batch Transform Jobs by Using an Amazon Virtual Private Cloud</a>.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
    CreateModelPackageOutput:
      type: object
      required:
        - ModelPackageArn
      properties:
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the new model package.
    CreateModelPackageInput:
      type: object
      required:
        - ModelPackageName
      title: CreateModelPackageInput
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: 'The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
        ModelPackageDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A description of the model package.
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: '<p>Specifies details about inference jobs that can be run with models based on this model package, including the following:</p> <ul> <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li> <li> <p>The instance types that the model package supports for transform jobs and real-time endpoints used for inference.</p> </li> <li> <p>The input and output content formats that the model package supports for inference.</p> </li> </ul>'
        ValidationSpecification:
          $ref: '#/components/schemas/ModelPackageValidationSpecification'
          description: Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
        SourceAlgorithmSpecification:
          $ref: '#/components/schemas/SourceAlgorithmSpecification'
          description: Details about the algorithm that was used to create the model package.
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: Whether to certify the model package for listing on AWS Marketplace.
    CreateMonitoringScheduleResponse:
      type: object
      required:
        - MonitoringScheduleArn
      properties:
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
    CreateMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
        - MonitoringScheduleConfig
      title: CreateMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule. The name must be unique within an AWS Region within an AWS account.
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
          description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href=" https://docs-aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
    CreateNotebookInstanceOutput:
      type: object
      properties:
        NotebookInstanceArn:
          $ref: '#/components/schemas/NotebookInstanceArn'
          description: 'The Amazon Resource Name (ARN) of the notebook instance. '
    CreateNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
        - InstanceType
        - RoleArn
      title: CreateNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the new notebook instance.
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The type of ML compute instance to launch for the notebook instance.
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
          description: 'The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance. '
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: 'The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p> When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html">Enabling and Disabling Keys</a> in the <i>AWS Key Management Service Developer Guide</i>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the notebook instance. You can add tags later by using the <code>CreateTags</code> API.
        LifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: 'The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.'
        DirectInternetAccess:
          $ref: '#/components/schemas/DirectInternetAccess'
          description: '<p>Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to <code>Disabled</code> this notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access">Notebook Instances Are Internet-Enabled by Default</a>. You can set the value of this parameter to <code>Disabled</code> only if you set a value for the <code>SubnetId</code> parameter.</p>'
        VolumeSizeInGB:
          $ref: '#/components/schemas/NotebookInstanceVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.'
        AcceleratorTypes:
          $ref: '#/components/schemas/NotebookInstanceAcceleratorTypes'
          description: 'A list of Elastic Inference (EI) instance types to associate with this notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'A Git repository to associate with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories to associate with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        RootAccess:
          $ref: '#/components/schemas/RootAccess'
          description: '<p>Whether root access is enabled or disabled for users of the notebook instance. The default value is <code>Enabled</code>.</p> <note> <p>Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users.</p> </note>'
    CreateNotebookInstanceLifecycleConfigOutput:
      type: object
      properties:
        NotebookInstanceLifecycleConfigArn:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigArn'
          description: The Amazon Resource Name (ARN) of the lifecycle configuration.
    CreateNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: CreateNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        OnCreate:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.'
        OnStart:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.'
    CreatePresignedDomainUrlResponse:
      type: object
      properties:
        AuthorizedUrl:
          $ref: '#/components/schemas/PresignedDomainUrl'
          description: The presigned URL.
    CreatePresignedDomainUrlRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: CreatePresignedDomainUrlRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The name of the UserProfile to sign-in as.
        SessionExpirationDurationInSeconds:
          $ref: '#/components/schemas/SessionExpirationDurationInSeconds'
          description: The session expiration duration in seconds.
    CreatePresignedNotebookInstanceUrlOutput:
      type: object
      properties:
        AuthorizedUrl:
          $ref: '#/components/schemas/NotebookInstanceUrl'
          description: 'A JSON object that contains the URL string. '
    CreatePresignedNotebookInstanceUrlInput:
      type: object
      required:
        - NotebookInstanceName
      title: CreatePresignedNotebookInstanceUrlInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance.
        SessionExpirationDurationInSeconds:
          $ref: '#/components/schemas/SessionExpirationDurationInSeconds'
          description: 'The duration of the session, in seconds. The default is 12 hours.'
    CreateProcessingJobResponse:
      type: object
      required:
        - ProcessingJobArn
      properties:
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the processing job.
    CreateProcessingJobRequest:
      type: object
      required:
        - ProcessingJobName
        - ProcessingResources
        - AppSpecification
        - RoleArn
      title: CreateProcessingJobRequest
      properties:
        ProcessingInputs:
          $ref: '#/components/schemas/ProcessingInputs'
          description: 'For each input, data is downloaded from S3 into the processing container before the processing job begins running if "S3InputMode" is set to <code>File</code>.'
        ProcessingOutputConfig:
          $ref: '#/components/schemas/ProcessingOutputConfig'
          description: Output configuration for the processing job.
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: ' The name of the processing job. The name must be unique within an AWS Region in the AWS account.'
        ProcessingResources:
          $ref: '#/components/schemas/ProcessingResources'
          description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.'
        StoppingCondition:
          $ref: '#/components/schemas/ProcessingStoppingCondition'
          description: The time limit for how long the processing job is allowed to run.
        AppSpecification:
          $ref: '#/components/schemas/AppSpecification'
          description: Configures the processing job to run a specified Docker container image.
        Environment:
          $ref: '#/components/schemas/ProcessingEnvironmentMap'
          description: Sets the environment variables in the Docker container.
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Networking options for a processing job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs-aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
    CreateTrainingJobResponse:
      type: object
      required:
        - TrainingJobArn
      properties:
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
    CreateTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
        - AlgorithmSpecification
        - RoleArn
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      title: CreateTrainingJobRequest
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: 'The name of the training job. The name must be unique within an AWS Region in an AWS account. '
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: '<p>Algorithm-specific parameters that influence the quality of the model. You set hyperparameters before you start the learning process. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>'
        AlgorithmSpecification:
          $ref: '#/components/schemas/AlgorithmSpecification'
          description: 'The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about providing your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: '<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3, EFS, or FSx location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. For example, if you specify an EFS location, input data files will be made available as input streams. They do not need to be downloaded.</p>'
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: 'Specifies the path to the S3 location where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. '
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: '<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that you want your training job to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p>'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. '
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-encrypt.html">Protect Communications Between ML Compute Instances in a Distributed Training Job</a>.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: '<p>To train models using managed spot training, choose <code>True</code>. Managed spot training provides a fully managed and scalable infrastructure for training machine learning models. this option is useful when training jobs can be interrupted and when there is flexibility when the training job is run. </p> <p>The complete and intermediate results of jobs are stored in an Amazon S3 bucket, and can be used as a starting point to train models incrementally. Amazon SageMaker provides metrics and logs in CloudWatch. They can be used to see when managed spot training jobs are running, interrupted, resumed, or completed. </p>'
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
          description: Contains information about the output location for managed spot training checkpoint data.
        DebugHookConfig:
          $ref: '#/components/schemas/DebugHookConfig'
        DebugRuleConfigurations:
          $ref: '#/components/schemas/DebugRuleConfigurations'
          description: Configuration information for debugging rules.
        TensorBoardOutputConfig:
          $ref: '#/components/schemas/TensorBoardOutputConfig'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
    CreateTransformJobResponse:
      type: object
      required:
        - TransformJobArn
      properties:
        TransformJobArn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job.
    CreateTransformJobRequest:
      type: object
      required:
        - TransformJobName
        - ModelName
        - TransformInput
        - TransformOutput
        - TransformResources
      title: CreateTransformJobRequest
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: 'The name of the transform job. The name must be unique within an AWS Region in an AWS account. '
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model that you want to use for the transform job. <code>ModelName</code> must be the name of an existing Amazon SageMaker model within an AWS Region in an AWS account.
        MaxConcurrentTransforms:
          $ref: '#/components/schemas/MaxConcurrentTransforms'
          description: 'The maximum number of parallel requests that can be sent to each instance in a transform job. If <code>MaxConcurrentTransforms</code> is set to <code>0</code> or left unset, Amazon SageMaker checks the optional execution-parameters to determine the settings for your chosen algorithm. If the execution-parameters endpoint is not enabled, the default value is <code>1</code>. For more information on execution-parameters, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-batch-code.html#your-algorithms-batch-code-how-containe-serves-requests">How Containers Serve Requests</a>. For built-in algorithms, you don''t need to set a value for <code>MaxConcurrentTransforms</code>.'
        MaxPayloadInMB:
          $ref: '#/components/schemas/MaxPayloadInMB'
          description: '<p>The maximum allowed size of the payload, in MB. A <i>payload</i> is the data portion of a record (without metadata). The value in <code>MaxPayloadInMB</code> must be greater than, or equal to, the size of a single record. To estimate the size of a record in MB, divide the size of your dataset by the number of records. To ensure that the records fit within the maximum payload size, we recommend using a slightly larger value. The default value is <code>6</code> MB. </p> <p>For cases where the payload might be arbitrarily large and is transmitted using HTTP chunked encoding, set the value to <code>0</code>. This feature works only in supported algorithms. Currently, Amazon SageMaker built-in algorithms do not support HTTP chunked encoding.</p>'
        BatchStrategy:
          $ref: '#/components/schemas/BatchStrategy'
          description: '<p>Specifies the number of records to include in a mini-batch for an HTTP inference request. A <i>record</i> <i/> is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. </p> <p>To enable the batch strategy, you must set the <code>SplitType</code> property of the <a>DataProcessing</a> object to <code>Line</code>, <code>RecordIO</code>, or <code>TFRecord</code>.</p> <p>To use only one record when making an HTTP invocation request to a container, set <code>BatchStrategy</code> to <code>SingleRecord</code> and <code>SplitType</code> to <code>Line</code>.</p> <p>To fit as many records in a mini-batch as can fit within the <code>MaxPayloadInMB</code> limit, set <code>BatchStrategy</code> to <code>MultiRecord</code> and <code>SplitType</code> to <code>Line</code>.</p>'
        Environment:
          $ref: '#/components/schemas/TransformEnvironmentMap'
          description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
          description: Describes the input source and the way the transform job consumes it.
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
          description: Describes the results of the transform job.
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
          description: 'Describes the resources, including ML instance types and ML instance count, to use for the transform job.'
        DataProcessing:
          $ref: '#/components/schemas/DataProcessing'
          description: 'The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
    CreateTrialResponse:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    CreateTrialRequest:
      type: object
      required:
        - TrialName
        - ExperimentName
      title: CreateTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial. The name must be unique in your AWS account and is not case-sensitive.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to associate the trial with.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the trial. You can use <a>Search</a> API to search on the tags.
    CreateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
    CreateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: CreateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component. The name must be unique in your AWS account and is not case-sensitive.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: '<p>The status of the component. States include:</p> <ul> <li> <p>InProgress</p> </li> <li> <p>Completed</p> </li> <li> <p>Failed</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: The hyperparameters for the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: 'The input artifacts for the component. Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types.'
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: 'The output artifacts for the component. Examples of output artifacts are metrics, snapshots, logs, and images.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the component. You can use <a>Search</a> API to search on the tags.
    CreateUserProfileResponse:
      type: object
      properties:
        UserProfileArn:
          $ref: '#/components/schemas/UserProfileArn'
          description: The user profile Amazon Resource Name (ARN).
    CreateUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: CreateUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The ID of the associated Domain.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: A name for the UserProfile.
        SingleSignOnUserIdentifier:
          $ref: '#/components/schemas/SingleSignOnUserIdentifier'
          description: 'A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain''s AuthMode is SSO, this field is required. If the Domain''s AuthMode is not SSO, this field cannot be specified. '
        SingleSignOnUserValue:
          $ref: '#/components/schemas/String256'
          description: 'The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain''s AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain''s AuthMode is not SSO, this field cannot be specified. '
        Tags:
          $ref: '#/components/schemas/TagList'
          description: Each tag consists of a key and an optional value. Tag keys must be unique per resource.
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    CreateWorkteamResponse:
      type: object
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team. You can use this ARN to identify the work team.
    CreateWorkteamRequest:
      type: object
      required:
        - WorkteamName
        - MemberDefinitions
        - Description
      title: CreateWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team. Use this name to identify the work team.
        MemberDefinitions:
          $ref: '#/components/schemas/MemberDefinitions'
          description: '<p>A list of <code>MemberDefinition</code> objects that contains objects that identify the Amazon Cognito user pool that makes up the work team. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools.html">Amazon Cognito User Pools</a>.</p> <p>All of the <code>CognitoMemberDefinition</code> objects that make up the member definition must have the same <code>ClientId</code> and <code>UserPool</code> values.</p>'
        Description:
          $ref: '#/components/schemas/String200'
          description: A description of the work team.
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: Configures notification of workers regarding available or expiring work items.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: '<p>An array of key-value pairs.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html">Resource Tag</a> and <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i> AWS Billing and Cost Management User Guide</i>.</p>'
    DeleteAlgorithmInput:
      type: object
      required:
        - AlgorithmName
      title: DeleteAlgorithmInput
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm to delete.
    DeleteAppRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
        - AppType
        - AppName
      title: DeleteAppRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
    DeleteCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      title: DeleteCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository to delete.
    DeleteDomainRequest:
      type: object
      required:
        - DomainId
      title: DeleteDomainRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        RetentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
          description: 'The retention policy for this domain, which specifies which resources will be retained after the Domain is deleted. By default, all resources are retained (not automatically deleted). '
    DeleteEndpointInput:
      type: object
      required:
        - EndpointName
      title: DeleteEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint that you want to delete.
    DeleteEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
      title: DeleteEndpointConfigInput
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration that you want to delete.
    DeleteExperimentResponse:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment that is being deleted.
    DeleteExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: DeleteExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to delete.
    DeleteFlowDefinitionResponse:
      type: object
      properties: {}
    DeleteFlowDefinitionRequest:
      type: object
      required:
        - FlowDefinitionName
      title: DeleteFlowDefinitionRequest
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of the flow definition you are deleting.
    DeleteModelInput:
      type: object
      required:
        - ModelName
      title: DeleteModelInput
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model to delete.
    DeleteModelPackageInput:
      type: object
      required:
        - ModelPackageName
      title: DeleteModelPackageInput
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: 'The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
    DeleteMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: DeleteMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule to delete.
    DeleteNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: DeleteNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the Amazon SageMaker notebook instance to delete.
    DeleteNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: DeleteNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration to delete.
    DeleteTagsOutput:
      type: object
      properties: {}
    DeleteTagsInput:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: DeleteTagsInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource whose tags you want to delete.
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: An array or one or more tag keys to delete.
    DeleteTrialResponse:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial that is being deleted.
    DeleteTrialRequest:
      type: object
      required:
        - TrialName
      title: DeleteTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to delete.
    DeleteTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the component is being deleted.
    DeleteTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: DeleteTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to delete.
    DeleteUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: DeleteUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
    DeleteWorkteamResponse:
      type: object
      required:
        - Success
      properties:
        Success:
          $ref: '#/components/schemas/Success'
          description: 'Returns <code>true</code> if the work team was successfully deleted; otherwise, returns <code>false</code>.'
    DeleteWorkteamRequest:
      type: object
      required:
        - WorkteamName
      title: DeleteWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team to delete.
    DescribeAlgorithmOutput:
      type: object
      required:
        - AlgorithmName
        - AlgorithmArn
        - CreationTime
        - TrainingSpecification
        - AlgorithmStatus
        - AlgorithmStatusDetails
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm being described.
        AlgorithmArn:
          $ref: '#/components/schemas/AlgorithmArn'
          description: The Amazon Resource Name (ARN) of the algorithm.
        AlgorithmDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief summary about the algorithm.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp specifying when the algorithm was created.
        TrainingSpecification:
          $ref: '#/components/schemas/TrainingSpecification'
          description: Details about training jobs run by this algorithm.
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: Details about inference jobs that the algorithm runs.
        ValidationSpecification:
          $ref: '#/components/schemas/AlgorithmValidationSpecification'
          description: Details about configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
        AlgorithmStatus:
          $ref: '#/components/schemas/AlgorithmStatus'
          description: The current status of the algorithm.
        AlgorithmStatusDetails:
          $ref: '#/components/schemas/AlgorithmStatusDetails'
          description: Details about the current status of the algorithm.
        ProductId:
          $ref: '#/components/schemas/ProductId'
          description: The product identifier of the algorithm.
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: Whether the algorithm is certified to be listed in AWS Marketplace.
    DescribeAlgorithmInput:
      type: object
      required:
        - AlgorithmName
      title: DescribeAlgorithmInput
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name of the algorithm to describe.
    DescribeAppResponse:
      type: object
      properties:
        AppArn:
          $ref: '#/components/schemas/AppArn'
          description: The app's Amazon Resource Name (ARN).
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        Status:
          $ref: '#/components/schemas/AppStatus'
          description: The status.
        LastHealthCheckTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last health check.
        LastUserActivityTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last user's activity.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The failure reason.
        ResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and quantity.
    DescribeAppRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
        - AppType
        - AppName
      title: DescribeAppRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
    DescribeAutoMLJobResponse:
      type: object
      required:
        - AutoMLJobName
        - AutoMLJobArn
        - InputDataConfig
        - OutputDataConfig
        - RoleArn
        - CreationTime
        - LastModifiedTime
        - AutoMLJobStatus
        - AutoMLJobSecondaryStatus
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: Returns the name of a job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: Returns the job's ARN.
        InputDataConfig:
          $ref: '#/components/schemas/AutoMLInputDataConfig'
          description: Returns the job's input data config.
        OutputDataConfig:
          $ref: '#/components/schemas/AutoMLOutputDataConfig'
          description: Returns the job's output data config.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that has read permission to the input data location and write permission to the output data location in Amazon S3.
        AutoMLJobObjective:
          $ref: '#/components/schemas/AutoMLJobObjective'
          description: Returns the job's objective.
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
          description: Returns the job's problem type.
        AutoMLJobConfig:
          $ref: '#/components/schemas/AutoMLJobConfig'
          description: Returns the job's config.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: Returns the job's creation time.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: Returns the job's end time.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Returns the job's last modified time.
        FailureReason:
          $ref: '#/components/schemas/AutoMLFailureReason'
          description: Returns the job's FailureReason.
        BestCandidate:
          $ref: '#/components/schemas/AutoMLCandidate'
          description: Returns the job's BestCandidate.
        AutoMLJobStatus:
          $ref: '#/components/schemas/AutoMLJobStatus'
          description: Returns the job's AutoMLJobStatus.
        AutoMLJobSecondaryStatus:
          $ref: '#/components/schemas/AutoMLJobSecondaryStatus'
          description: Returns the job's AutoMLJobSecondaryStatus.
        GenerateCandidateDefinitionsOnly:
          $ref: '#/components/schemas/GenerateCandidateDefinitionsOnly'
          description: Returns the job's output from GenerateCandidateDefinitionsOnly.
        AutoMLJobArtifacts:
          $ref: '#/components/schemas/AutoMLJobArtifacts'
          description: Returns information on the job's artifacts found in AutoMLJobArtifacts.
        ResolvedAttributes:
          $ref: '#/components/schemas/ResolvedAttributes'
          description: 'This contains ProblemType, AutoMLJobObjective and CompletionCriteria. They''re auto-inferred values, if not provided by you. If you do provide them, then they''ll be the same as provided.'
    DescribeAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
      title: DescribeAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: Request information about a job using that job's unique name.
    DescribeCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryName
        - CodeRepositoryArn
        - CreationTime
        - LastModifiedTime
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository.
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The Amazon Resource Name (ARN) of the Git repository.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The date and time that the repository was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The date and time that the repository was last changed.
        GitConfig:
          $ref: '#/components/schemas/GitConfig'
          description: 'Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the repository.'
    DescribeCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      title: DescribeCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository to describe.
    DescribeCompilationJobResponse:
      type: object
      required:
        - CompilationJobName
        - CompilationJobArn
        - CompilationJobStatus
        - StoppingCondition
        - CreationTime
        - LastModifiedTime
        - FailureReason
        - ModelArtifacts
        - RoleArn
        - InputConfig
        - OutputConfig
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job.
        CompilationJobArn:
          $ref: '#/components/schemas/CompilationJobArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker assumes to perform the model compilation job.
        CompilationJobStatus:
          $ref: '#/components/schemas/CompilationJobStatus'
          description: The status of the model compilation job.
        CompilationStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: '<p>The time when the model compilation job started the <code>CompilationJob</code> instances. </p> <p>You are billed for the time between this timestamp and the timestamp in the <a>DescribeCompilationJobResponse$CompilationEndTime</a> field. In Amazon CloudWatch Logs, the start time might be later than this time. That''s because it takes time to download the compilation job, which depends on the size of the compilation job container. </p>'
        CompilationEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the model compilation job on a compilation job instance ended. For a successful or stopped job, this is when the job''s model artifacts have finished uploading. For a failed job, this is when Amazon SageMaker detected that the job failed. '
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: 'Specifies a limit to how long a model compilation job can run. When the job reaches the time limit, Amazon SageMaker ends the compilation job. Use this API to cap model training costs.'
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time that the model compilation job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The time that the status of the model compilation job was last modified.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If a model compilation job failed, the reason it failed. '
        ModelArtifacts:
          $ref: '#/components/schemas/ModelArtifacts'
          description: Information about the location in Amazon S3 that has been configured for storing the model artifacts used in the compilation job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the model compilation job.
        InputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: 'Information about the location in Amazon S3 of the input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
        OutputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: Information about the output location for the compiled model and the target device that the model runs on.
    DescribeCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
      title: DescribeCompilationJobRequest
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job that you want information about.
    DescribeDomainResponse:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The domain's Amazon Resource Name (ARN).
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name.
        HomeEfsFileSystemId:
          $ref: '#/components/schemas/ResourceId'
          description: The ID of the Amazon Elastic File System (EFS) managed by this Domain.
        SingleSignOnManagedApplicationInstanceId:
          $ref: '#/components/schemas/String256'
          description: The SSO managed application instance ID.
        Status:
          $ref: '#/components/schemas/DomainStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The failure reason.
        AuthMode:
          $ref: '#/components/schemas/AuthMode'
          description: The domain's authentication mode.
        DefaultUserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: 'Settings which are applied to all UserProfile in this domain, if settings are not explicitly specified in a given UserProfile. '
        HomeEfsFileSystemKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The AWS Key Management Service encryption key ID.
        SubnetIds:
          $ref: '#/components/schemas/Subnets'
          description: Security setting to limit to a set of subnets.
        Url:
          $ref: '#/components/schemas/String1024'
          description: The domain's URL.
        VpcId:
          $ref: '#/components/schemas/VpcId'
          description: The ID of the Amazon Virtual Private Cloud.
    DescribeDomainRequest:
      type: object
      required:
        - DomainId
      title: DescribeDomainRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
    DescribeEndpointOutput:
      type: object
      required:
        - EndpointName
        - EndpointArn
        - EndpointConfigName
        - EndpointStatus
        - CreationTime
        - LastModifiedTime
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of the endpoint.
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration associated with this endpoint.
        ProductionVariants:
          $ref: '#/components/schemas/ProductionVariantSummaryList'
          description: ' An array of <a>ProductionVariantSummary</a> objects, one for each model hosted behind this endpoint. '
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfigSummary'
        EndpointStatus:
          $ref: '#/components/schemas/EndpointStatus'
          description: '<p>The status of the endpoint.</p> <ul> <li> <p> <code>OutOfService</code>: Endpoint is not available to take incoming requests.</p> </li> <li> <p> <code>Creating</code>: <a>CreateEndpoint</a> is executing.</p> </li> <li> <p> <code>Updating</code>: <a>UpdateEndpoint</a> or <a>UpdateEndpointWeightsAndCapacities</a> is executing.</p> </li> <li> <p> <code>SystemUpdating</code>: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count.</p> </li> <li> <p> <code>RollingBack</code>: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an <code>InService</code> status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an <a>UpdateEndpointWeightsAndCapacities</a> call or when the <a>UpdateEndpointWeightsAndCapacities</a> operation is called explicitly.</p> </li> <li> <p> <code>InService</code>: Endpoint is available to process incoming requests.</p> </li> <li> <p> <code>Deleting</code>: <a>DeleteEndpoint</a> is executing.</p> </li> <li> <p> <code>Failed</code>: Endpoint could not be created, updated, or re-scaled. Use <a>DescribeEndpointOutput$FailureReason</a> for information about the failure. <a>DeleteEndpoint</a> is the only operation that can be performed on a failed endpoint.</p> </li> </ul>'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the status of the endpoint is <code>Failed</code>, the reason why it failed. '
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was last modified.
    DescribeEndpointInput:
      type: object
      required:
        - EndpointName
      title: DescribeEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint.
    DescribeEndpointConfigOutput:
      type: object
      required:
        - EndpointConfigName
        - EndpointConfigArn
        - ProductionVariants
        - CreationTime
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: Name of the Amazon SageMaker endpoint configuration.
        EndpointConfigArn:
          $ref: '#/components/schemas/EndpointConfigArn'
          description: The Amazon Resource Name (ARN) of the endpoint configuration.
        ProductionVariants:
          $ref: '#/components/schemas/ProductionVariantList'
          description: 'An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint.'
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfig'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint configuration was created.
    DescribeEndpointConfigInput:
      type: object
      required:
        - EndpointConfigName
      title: DescribeEndpointConfigInput
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration.
    DescribeExperimentResponse:
      type: object
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        Source:
          $ref: '#/components/schemas/ExperimentSource'
          description: 'The ARN of the source and, optionally, the type.'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the experiment.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the experiment.
    DescribeExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: DescribeExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to describe.
    DescribeFlowDefinitionResponse:
      type: object
      required:
        - FlowDefinitionArn
        - FlowDefinitionName
        - FlowDefinitionStatus
        - CreationTime
        - HumanLoopConfig
        - OutputConfig
        - RoleArn
      properties:
        FlowDefinitionArn:
          $ref: '#/components/schemas/FlowDefinitionArn'
          description: The Amazon Resource Name (ARN) of the flow defintion.
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The Amazon Resource Name (ARN) of the flow definition.
        FlowDefinitionStatus:
          $ref: '#/components/schemas/FlowDefinitionStatus'
          description: The status of the flow definition. Valid values are listed below.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the flow definition was created.
        HumanLoopActivationConfig:
          $ref: '#/components/schemas/HumanLoopActivationConfig'
          description: An object containing information about what triggers a human review workflow.
        HumanLoopConfig:
          $ref: '#/components/schemas/HumanLoopConfig'
          description: 'An object containing information about who works on the task, the workforce task price, and other task details.'
        OutputConfig:
          $ref: '#/components/schemas/FlowDefinitionOutputConfig'
          description: An object containing information about the output file.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) execution role for the flow definition.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: <p/>
    DescribeFlowDefinitionRequest:
      type: object
      required:
        - FlowDefinitionName
      title: DescribeFlowDefinitionRequest
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of the flow definition.
    DescribeHumanTaskUiResponse:
      type: object
      required:
        - HumanTaskUiArn
        - HumanTaskUiName
        - CreationTime
        - UiTemplate
      properties:
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: The Amazon Resource Name (ARN) of the human task user interface.
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the human task user interface.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the human task user interface was created.
        UiTemplate:
          $ref: '#/components/schemas/UiTemplateInfo'
    DescribeHumanTaskUiRequest:
      type: object
      required:
        - HumanTaskUiName
      title: DescribeHumanTaskUiRequest
      properties:
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the human task user interface you want information about.
    DescribeHyperParameterTuningJobResponse:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobArn
        - HyperParameterTuningJobConfig
        - HyperParameterTuningJobStatus
        - CreationTime
        - TrainingJobStatusCounters
        - ObjectiveStatusCounters
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job.
        HyperParameterTuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the tuning job.
        HyperParameterTuningJobConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobConfig'
          description: The <a>HyperParameterTuningJobConfig</a> object that specifies the configuration of the tuning job.
        TrainingJobDefinition:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinition'
          description: The <a>HyperParameterTrainingJobDefinition</a> object that specifies the definition of the training jobs that this tuning job launches.
        TrainingJobDefinitions:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitions'
          description: <p/>
        HyperParameterTuningJobStatus:
          $ref: '#/components/schemas/HyperParameterTuningJobStatus'
          description: 'The status of the tuning job: InProgress, Completed, Failed, Stopping, or Stopped.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job started.
        HyperParameterTuningEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job ended.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time that the status of the tuning job was modified. '
        TrainingJobStatusCounters:
          $ref: '#/components/schemas/TrainingJobStatusCounters'
          description: 'The <a>TrainingJobStatusCounters</a> object that specifies the number of training jobs, categorized by status, that this tuning job launched.'
        ObjectiveStatusCounters:
          $ref: '#/components/schemas/ObjectiveStatusCounters'
          description: 'The <a>ObjectiveStatusCounters</a> object that specifies the number of training jobs, categorized by the status of their final objective metric, that this tuning job launched.'
        BestTrainingJob:
          $ref: '#/components/schemas/HyperParameterTrainingJobSummary'
          description: A <a>TrainingJobSummary</a> object that describes the training job that completed with the best current <a>HyperParameterTuningJobObjective</a>.
        OverallBestTrainingJob:
          $ref: '#/components/schemas/HyperParameterTrainingJobSummary'
          description: 'If the hyperparameter tuning job is an warm start tuning job with a <code>WarmStartType</code> of <code>IDENTICAL_DATA_AND_ALGORITHM</code>, this is the <a>TrainingJobSummary</a> for the training job with the best objective metric value of all training jobs launched by this tuning job and all parent jobs specified for the warm start tuning job.'
        WarmStartConfig:
          $ref: '#/components/schemas/HyperParameterTuningJobWarmStartConfig'
          description: The configuration for starting the hyperparameter parameter tuning job using one or more previous tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the tuning job failed, the reason it failed.'
    DescribeHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      title: DescribeHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job to describe.
    DescribeLabelingJobResponse:
      type: object
      required:
        - LabelingJobStatus
        - LabelCounters
        - CreationTime
        - LastModifiedTime
        - JobReferenceCode
        - LabelingJobName
        - LabelingJobArn
        - InputConfig
        - OutputConfig
        - RoleArn
        - HumanTaskConfig
      properties:
        LabelingJobStatus:
          $ref: '#/components/schemas/LabelingJobStatus'
          description: 'The processing status of the labeling job. '
        LabelCounters:
          $ref: '#/components/schemas/LabelCounters'
          description: 'Provides a breakdown of the number of data objects labeled by humans, the number of objects labeled by machine, the number of objects than couldn''t be labeled, and the total number of objects labeled. '
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the job failed, the reason that it failed. '
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the labeling job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the labeling job was last updated.
        JobReferenceCode:
          $ref: '#/components/schemas/JobReferenceCode'
          description: A unique identifier for work done as part of a labeling job.
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name assigned to the labeling job when it was created.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the labeling job.
        LabelAttributeName:
          $ref: '#/components/schemas/LabelAttributeName'
          description: The attribute used as the label in the output manifest file.
        InputConfig:
          $ref: '#/components/schemas/LabelingJobInputConfig'
          description: 'Input configuration information for the labeling job, such as the Amazon S3 location of the data objects and the location of the manifest file that describes the data objects.'
        OutputConfig:
          $ref: '#/components/schemas/LabelingJobOutputConfig'
          description: 'The location of the job''s output data and the AWS Key Management Service key ID for the key used to encrypt the output data, if any.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that Amazon SageMaker assumes to perform tasks on your behalf during data labeling.
        LabelCategoryConfigS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The S3 location of the JSON file that defines the categories used to label data objects. Please note the following label-category limits:</p> <ul> <li> <p>Semantic segmentation labeling jobs using automated labeling: 20 labels</p> </li> <li> <p>Box bounding labeling jobs (all): 10 labels</p> </li> </ul> <p>The file is a JSON structure in the following format:</p> <p> <code>{</code> </p> <p> <code> "document-version": "2018-11-28"</code> </p> <p> <code> "labels": [</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 1</i>"</code> </p> <p> <code> },</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label 2</i>"</code> </p> <p> <code> },</code> </p> <p> <code> ...</code> </p> <p> <code> {</code> </p> <p> <code> "label": "<i>label n</i>"</code> </p> <p> <code> }</code> </p> <p> <code> ]</code> </p> <p> <code>}</code> </p>'
        StoppingConditions:
          $ref: '#/components/schemas/LabelingJobStoppingConditions'
          description: 'A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped.'
        LabelingJobAlgorithmsConfig:
          $ref: '#/components/schemas/LabelingJobAlgorithmsConfig'
          description: Configuration information for automated data labeling.
        HumanTaskConfig:
          $ref: '#/components/schemas/HumanTaskConfig'
          description: Configuration information required for human workers to complete a labeling task.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
        LabelingJobOutput:
          $ref: '#/components/schemas/LabelingJobOutput'
          description: The location of the output produced by the labeling job.
    DescribeLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
      title: DescribeLabelingJobRequest
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job to return information for.
    DescribeModelOutput:
      type: object
      required:
        - ModelName
        - ExecutionRoleArn
        - CreationTime
        - ModelArn
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: Name of the Amazon SageMaker model.
        PrimaryContainer:
          $ref: '#/components/schemas/ContainerDefinition'
          description: 'The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production. '
        Containers:
          $ref: '#/components/schemas/ContainerDefinitionList'
          description: The containers in the inference pipeline.
        ExecutionRoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified for the model.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that this model has access to. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> '
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the model was created.
        ModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model.
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'If <code>True</code>, no inbound or outbound network calls can be made to or from the model container.'
    DescribeModelInput:
      type: object
      required:
        - ModelName
      title: DescribeModelInput
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model.
    DescribeModelPackageOutput:
      type: object
      required:
        - ModelPackageName
        - ModelPackageArn
        - CreationTime
        - ModelPackageStatus
        - ModelPackageStatusDetails
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model package being described.
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the model package.
        ModelPackageDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief summary of the model package.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp specifying when the model package was created.
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
          description: Details about inference jobs that can be run with models based on this model package.
        SourceAlgorithmSpecification:
          $ref: '#/components/schemas/SourceAlgorithmSpecification'
          description: Details about the algorithm that was used to create the model package.
        ValidationSpecification:
          $ref: '#/components/schemas/ModelPackageValidationSpecification'
          description: Configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
        ModelPackageStatus:
          $ref: '#/components/schemas/ModelPackageStatus'
          description: The current status of the model package.
        ModelPackageStatusDetails:
          $ref: '#/components/schemas/ModelPackageStatusDetails'
          description: Details about the current status of the model package.
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
          description: Whether the model package is certified for listing on AWS Marketplace.
    DescribeModelPackageInput:
      type: object
      required:
        - ModelPackageName
      title: DescribeModelPackageInput
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name of the model package to describe.
    DescribeMonitoringScheduleResponse:
      type: object
      required:
        - MonitoringScheduleArn
        - MonitoringScheduleName
        - MonitoringScheduleStatus
        - CreationTime
        - LastModifiedTime
        - MonitoringScheduleConfig
      properties:
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: Name of the monitoring schedule.
        MonitoringScheduleStatus:
          $ref: '#/components/schemas/ScheduleStatus'
          description: The status of an monitoring job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'A string, up to one KB in size, that contains the reason a monitoring job failed, if it failed.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the monitoring job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the monitoring job was last modified.
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
          description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: ' The name of the endpoint for the monitoring job.'
        LastMonitoringExecutionSummary:
          $ref: '#/components/schemas/MonitoringExecutionSummary'
          description: 'Describes metadata on the last execution to run, if there was one.'
    DescribeMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: DescribeMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: Name of a previously created monitoring schedule.
    DescribeNotebookInstanceOutput:
      type: object
      properties:
        NotebookInstanceArn:
          $ref: '#/components/schemas/NotebookInstanceArn'
          description: The Amazon Resource Name (ARN) of the notebook instance.
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: 'The name of the Amazon SageMaker notebook instance. '
        NotebookInstanceStatus:
          $ref: '#/components/schemas/NotebookInstanceStatus'
          description: The status of the notebook instance.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If status is <code>Failed</code>, the reason it failed.'
        Url:
          $ref: '#/components/schemas/NotebookInstanceUrl'
          description: 'The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. '
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The type of ML compute instance running on the notebook instance.
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
          description: The ID of the VPC subnet.
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: The IDs of the VPC security groups.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of the IAM role associated with the instance. '
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance. '
        NetworkInterfaceId:
          $ref: '#/components/schemas/NetworkInterfaceId'
          description: 'The network interface IDs that Amazon SageMaker created at the time of creating the instance. '
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: 'A timestamp. Use this parameter to retrieve the time when the notebook instance was last modified. '
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp. Use this parameter to return the time when the notebook instance was created
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: '<p>Returns the name of a notebook instance lifecycle configuration.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a> </p>'
        DirectInternetAccess:
          $ref: '#/components/schemas/DirectInternetAccess'
          description: '<p>Describes whether Amazon SageMaker provides internet access to the notebook instance. If this value is set to <i>Disabled</i>, the notebook instance does not have internet access, and cannot connect to Amazon SageMaker training and endpoint services.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access">Notebook Instances Are Internet-Enabled by Default</a>.</p>'
        VolumeSizeInGB:
          $ref: '#/components/schemas/NotebookInstanceVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume attached to the notebook instance.'
        AcceleratorTypes:
          $ref: '#/components/schemas/NotebookInstanceAcceleratorTypes'
          description: 'A list of the Elastic Inference (EI) instance types associated with this notebook instance. Currently only one EI instance type can be associated with a notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        RootAccess:
          $ref: '#/components/schemas/RootAccess'
          description: '<p>Whether root access is enabled or disabled for users of the notebook instance.</p> <note> <p>Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users.</p> </note>'
    DescribeNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: DescribeNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance that you want information about.
    DescribeNotebookInstanceLifecycleConfigOutput:
      type: object
      properties:
        NotebookInstanceLifecycleConfigArn:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigArn'
          description: The Amazon Resource Name (ARN) of the lifecycle configuration.
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        OnCreate:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs only once, when you create a notebook instance.'
        OnStart:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance.'
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A timestamp that tells when the lifecycle configuration was last modified.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that tells when the lifecycle configuration was created.
    DescribeNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: DescribeNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration to describe.
    DescribeProcessingJobResponse:
      type: object
      required:
        - ProcessingJobName
        - ProcessingResources
        - AppSpecification
        - ProcessingJobArn
        - ProcessingJobStatus
        - CreationTime
      properties:
        ProcessingInputs:
          $ref: '#/components/schemas/ProcessingInputs'
          description: The inputs for a processing job.
        ProcessingOutputConfig:
          $ref: '#/components/schemas/ProcessingOutputConfig'
          description: Output configuration for the processing job.
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job. The name must be unique within an AWS Region in the AWS account.
        ProcessingResources:
          $ref: '#/components/schemas/ProcessingResources'
          description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.'
        StoppingCondition:
          $ref: '#/components/schemas/ProcessingStoppingCondition'
          description: The time limit for how long the processing job is allowed to run.
        AppSpecification:
          $ref: '#/components/schemas/AppSpecification'
          description: Configures the processing job to run a specified container image.
        Environment:
          $ref: '#/components/schemas/ProcessingEnvironmentMap'
          description: The environment variables set in the Docker container.
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Networking options for a processing job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
          description: The configuration information used to create an experiment.
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the processing job.
        ProcessingJobStatus:
          $ref: '#/components/schemas/ProcessingJobStatus'
          description: Provides the status of a processing job.
        ExitMessage:
          $ref: '#/components/schemas/ExitMessage'
          description: 'An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'A string, up to one KB in size, that contains the reason a processing job failed, if it failed.'
        ProcessingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job completed.
        ProcessingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job started.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job was last modified.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job was created.
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The ARN of a monitoring schedule for an endpoint associated with this processing job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The ARN of an AutoML job associated with this processing job.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The ARN of a training job associated with this processing job.
    DescribeProcessingJobRequest:
      type: object
      required:
        - ProcessingJobName
      title: DescribeProcessingJobRequest
      properties:
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job. The name must be unique within an AWS Region in the AWS account.
    DescribeSubscribedWorkteamResponse:
      type: object
      required:
        - SubscribedWorkteam
      properties:
        SubscribedWorkteam:
          $ref: '#/components/schemas/SubscribedWorkteam'
          description: A <code>Workteam</code> instance that contains information about the work team.
    DescribeSubscribedWorkteamRequest:
      type: object
      required:
        - WorkteamArn
      title: DescribeSubscribedWorkteamRequest
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the subscribed work team to describe.
    DescribeTrainingJobResponse:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - ModelArtifacts
        - TrainingJobStatus
        - SecondaryStatus
        - AlgorithmSpecification
        - ResourceConfig
        - StoppingCondition
        - CreationTime
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: ' Name of the model training job. '
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        TuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the associated hyperparameter tuning job if the training job was launched by a hyperparameter tuning job.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: <p/>
        ModelArtifacts:
          $ref: '#/components/schemas/ModelArtifacts'
          description: 'Information about the Amazon S3 location that is configured for storing model artifacts. '
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: '<p>The status of the training job.</p> <p>Amazon SageMaker provides the following training job statuses:</p> <ul> <li> <p> <code>InProgress</code> - The training is in progress.</p> </li> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> <li> <p> <code>Failed</code> - The training job has failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeTrainingJobResponse</code> call.</p> </li> <li> <p> <code>Stopping</code> - The training job is stopping.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> <p>For more detailed information, see <code>SecondaryStatus</code>. </p>'
        SecondaryStatus:
          $ref: '#/components/schemas/SecondaryStatus'
          description: '<p> Provides detailed information about the state of the training job. For detailed information on the secondary status of the training job, see <code>StatusMessage</code> under <a>SecondaryStatusTransition</a>.</p> <p>Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Interrupted</code> - The job stopped because the managed spot training instances were interrupted. </p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>MaxWaitTmeExceeded</code> - The job stopped because it exceeded the maximum allowed wait time.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the training job failed, the reason it failed. '
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: 'Algorithm-specific parameters. '
        AlgorithmSpecification:
          $ref: '#/components/schemas/AlgorithmSpecification'
          description: 'Information about the algorithm used for training, and algorithm metadata. '
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: 'The AWS Identity and Access Management (IAM) role configured for the training job. '
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: 'An array of <code>Channel</code> objects that describes each data input channel. '
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: 'The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts. '
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: 'Resources, including ML compute instances and ML storage volumes, that are configured for model training. '
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that this training job has access to. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. It also specifies the maximum time to wait for a spot instance. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p>'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the training job was created.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates the time when the training job starts on training instances. You are billed for the time interval between this time and the value of <code>TrainingEndTime</code>. The start time in CloudWatch Logs might be later than this time. The difference is due to the time it takes to download the training data and to the size of the training container.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the status of the training job was last modified.
        SecondaryStatusTransitions:
          $ref: '#/components/schemas/SecondaryStatusTransitions'
          description: A history of all of the secondary statuses that the training job has transitioned through.
        FinalMetricDataList:
          $ref: '#/components/schemas/FinalMetricDataList'
          description: 'A collection of <code>MetricData</code> objects that specify the names, values, and dates and times that the training algorithm emitted to Amazon CloudWatch.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'If you want to allow inbound or outbound network calls, except for calls between peers within a training cluster for distributed training, choose <code>True</code>. If you enable network isolation for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithms in distributed training.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: A Boolean indicating whether managed spot training is enabled (<code>True</code>) or not (<code>False</code>).
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
        TrainingTimeInSeconds:
          $ref: '#/components/schemas/TrainingTimeInSeconds'
          description: The training time in seconds.
        BillableTimeInSeconds:
          $ref: '#/components/schemas/BillableTimeInSeconds'
          description: '<p>The billable time in seconds.</p> <p>You can calculate the savings from using managed spot training using the formula <code>(1 - BillableTimeInSeconds / TrainingTimeInSeconds) * 100</code>. For example, if <code>BillableTimeInSeconds</code> is 100 and <code>TrainingTimeInSeconds</code> is 500, the savings is 80%.</p>'
        DebugHookConfig:
          $ref: '#/components/schemas/DebugHookConfig'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
        DebugRuleConfigurations:
          $ref: '#/components/schemas/DebugRuleConfigurations'
          description: Configuration information for debugging rules.
        TensorBoardOutputConfig:
          $ref: '#/components/schemas/TensorBoardOutputConfig'
        DebugRuleEvaluationStatuses:
          $ref: '#/components/schemas/DebugRuleEvaluationStatuses'
          description: Status about the debug rule evaluation.
    DescribeTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
      title: DescribeTrainingJobRequest
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job.
    DescribeTransformJobResponse:
      type: object
      required:
        - TransformJobName
        - TransformJobArn
        - TransformJobStatus
        - ModelName
        - TransformInput
        - TransformResources
        - CreationTime
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job.
        TransformJobArn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job.
        TransformJobStatus:
          $ref: '#/components/schemas/TransformJobStatus'
          description: 'The status of the transform job. If the transform job failed, the reason is returned in the <code>FailureReason</code> field.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the transform job failed, <code>FailureReason</code> describes why it failed. A transform job creates a log file, which includes error messages, and stores it as an Amazon S3 object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html">Log Amazon SageMaker Events with Amazon CloudWatch</a>.'
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model used in the transform job.
        MaxConcurrentTransforms:
          $ref: '#/components/schemas/MaxConcurrentTransforms'
          description: The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is 1.
        MaxPayloadInMB:
          $ref: '#/components/schemas/MaxPayloadInMB'
          description: 'The maximum payload size, in MB, used in the transform job.'
        BatchStrategy:
          $ref: '#/components/schemas/BatchStrategy'
          description: '<p>Specifies the number of records to include in a mini-batch for an HTTP inference request. A <i>record</i> <i/> is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. </p> <p>To enable the batch strategy, you must set <code>SplitType</code> to <code>Line</code>, <code>RecordIO</code>, or <code>TFRecord</code>.</p>'
        Environment:
          $ref: '#/components/schemas/TransformEnvironmentMap'
          description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
          description: Describes the dataset to be transformed and the Amazon S3 location where it is stored.
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
          description: Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
          description: 'Describes the resources, including ML instance types and ML instance count, to use for the transform job.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the transform Job was created.
        TransformStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of <code>TransformEndTime</code>.
        TransformEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates when the transform job has been completed, or has stopped or failed. You are billed for the time interval between this time and the value of <code>TransformStartTime</code>.'
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: <p/>
        DataProcessing:
          $ref: '#/components/schemas/DataProcessing'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
    DescribeTransformJobRequest:
      type: object
      required:
        - TransformJobName
      title: DescribeTransformJobRequest
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job that you want to view details of.
    DescribeTrialResponse:
      type: object
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment the trial is part of.
        Source:
          $ref: '#/components/schemas/TrialSource'
          description: 'The Amazon Resource Name (ARN) of the source and, optionally, the job type.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the trial.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the trial.
    DescribeTrialRequest:
      type: object
      required:
        - TrialName
      title: DescribeTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to describe.
    DescribeTrialComponentResponse:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        Source:
          $ref: '#/components/schemas/TrialComponentSource'
          description: 'The Amazon Resource Name (ARN) of the source and, optionally, the job type.'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: '<p>The status of the component. States include:</p> <ul> <li> <p>InProgress</p> </li> <li> <p>Completed</p> </li> <li> <p>Failed</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the component.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the component.
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: The hyperparameters of the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The input artifacts of the component.
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The output artifacts of the component.
        Metrics:
          $ref: '#/components/schemas/TrialComponentMetricSummaries'
          description: The metrics for the component.
    DescribeTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: DescribeTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component to describe.
    DescribeUserProfileResponse:
      type: object
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileArn:
          $ref: '#/components/schemas/UserProfileArn'
          description: The user profile Amazon Resource Name (ARN).
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        HomeEfsFileSystemUid:
          $ref: '#/components/schemas/EfsUid'
          description: The homa Amazon Elastic File System (EFS) Uid.
        Status:
          $ref: '#/components/schemas/UserProfileStatus'
          description: The status.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The failure reason.
        SingleSignOnUserIdentifier:
          $ref: '#/components/schemas/SingleSignOnUserIdentifier'
          description: The SSO user identifier.
        SingleSignOnUserValue:
          $ref: '#/components/schemas/String256'
          description: The SSO user value.
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    DescribeUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: DescribeUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
    DescribeWorkforceResponse:
      type: object
      required:
        - Workforce
      properties:
        Workforce:
          $ref: '#/components/schemas/Workforce'
          description: 'A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each AWS Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.'
    DescribeWorkforceRequest:
      type: object
      required:
        - WorkforceName
      title: DescribeWorkforceRequest
      properties:
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: 'The name of the private workforce whose access you want to restrict. <code>WorkforceName</code> is automatically set to <code>default</code> when a workforce is created and cannot be modified. '
    DescribeWorkteamResponse:
      type: object
      required:
        - Workteam
      properties:
        Workteam:
          $ref: '#/components/schemas/Workteam'
          description: 'A <code>Workteam</code> instance that contains information about the work team. '
    DescribeWorkteamRequest:
      type: object
      required:
        - WorkteamName
      title: DescribeWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team to return a description of.
    DisassociateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The ARN of the trial component.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    DisassociateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
        - TrialName
      title: DisassociateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to disassociate from the trial.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to disassociate from.
    GetSearchSuggestionsResponse:
      type: object
      properties:
        PropertyNameSuggestions:
          $ref: '#/components/schemas/PropertyNameSuggestionList'
          description: A list of property names for a <code>Resource</code> that match a <code>SuggestionQuery</code>.
    GetSearchSuggestionsRequest:
      type: object
      required:
        - Resource
      title: GetSearchSuggestionsRequest
      properties:
        Resource:
          $ref: '#/components/schemas/ResourceType'
          description: The name of the Amazon SageMaker resource to Search for.
        SuggestionQuery:
          $ref: '#/components/schemas/SuggestionQuery'
          description: Limits the property names that are included in the response.
    ListAlgorithmsOutput:
      type: object
      required:
        - AlgorithmSummaryList
      properties:
        AlgorithmSummaryList:
          $ref: '#/components/schemas/AlgorithmSummaryList'
          description: '&gt;An array of <code>AlgorithmSummary</code> objects, each of which lists an algorithm.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of algorithms, use it in the subsequent request.'
    ListAlgorithmsInput:
      type: object
      title: ListAlgorithmsInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only algorithms created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only algorithms created before the specified time (timestamp).
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of algorithms to return in the response.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the algorithm name. This filter returns only algorithms whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response to a previous <code>ListAlgorithms</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of algorithms, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/AlgorithmSortBy'
          description: The parameter by which to sort the results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is <code>Ascending</code>.
    ListAppsResponse:
      type: object
      properties:
        Apps:
          $ref: '#/components/schemas/AppList'
          description: The list of apps.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListAppsRequest:
      type: object
      title: ListAppsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Returns a list up to a specified limit.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is Ascending.
        SortBy:
          $ref: '#/components/schemas/AppSortKey'
          description: The parameter by which to sort the results. The default is CreationTime.
        DomainIdEquals:
          $ref: '#/components/schemas/DomainId'
          description: A parameter to search for the domain ID.
        UserProfileNameEquals:
          $ref: '#/components/schemas/UserProfileName'
          description: A parameter to search by user profile name.
    ListAutoMLJobsResponse:
      type: object
      required:
        - AutoMLJobSummaries
      properties:
        AutoMLJobSummaries:
          $ref: '#/components/schemas/AutoMLJobSummaries'
          description: Returns a summary list of jobs.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListAutoMLJobsRequest:
      type: object
      title: ListAutoMLJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: 'Request a list of jobs, using a filter for time.'
        NameContains:
          $ref: '#/components/schemas/AutoMLNameContains'
          description: 'Request a list of jobs, using a search filter for name.'
        StatusEquals:
          $ref: '#/components/schemas/AutoMLJobStatus'
          description: 'Request a list of jobs, using a filter for status.'
        SortOrder:
          $ref: '#/components/schemas/AutoMLSortOrder'
          description: The sort order for the results. The default is Descending.
        SortBy:
          $ref: '#/components/schemas/AutoMLSortBy'
          description: The parameter by which to sort the results. The default is AutoMLJobName.
        MaxResults:
          $ref: '#/components/schemas/AutoMLMaxResults'
          description: Request a list of jobs up to a specified limit.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListCandidatesForAutoMLJobResponse:
      type: object
      required:
        - Candidates
      properties:
        Candidates:
          $ref: '#/components/schemas/AutoMLCandidates'
          description: Summaries about the Candidates.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListCandidatesForAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
      title: ListCandidatesForAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: List the Candidates created for the job by providing the job's name.
        StatusEquals:
          $ref: '#/components/schemas/CandidateStatus'
          description: List the Candidates for the job and filter by status.
        CandidateNameEquals:
          $ref: '#/components/schemas/CandidateName'
          description: List the Candidates for the job and filter by candidate name.
        SortOrder:
          $ref: '#/components/schemas/AutoMLSortOrder'
          description: The sort order for the results. The default is Ascending.
        SortBy:
          $ref: '#/components/schemas/CandidateSortBy'
          description: The parameter by which to sort the results. The default is Descending.
        MaxResults:
          $ref: '#/components/schemas/AutoMLMaxResults'
          description: List the job's Candidates up to a specified limit.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListCodeRepositoriesOutput:
      type: object
      required:
        - CodeRepositorySummaryList
      properties:
        CodeRepositorySummaryList:
          $ref: '#/components/schemas/CodeRepositorySummaryList'
          description: '<p>Gets a list of summaries of the Git repositories. Each summary specifies the following values for the repository: </p> <ul> <li> <p>Name</p> </li> <li> <p>Amazon Resource Name (ARN)</p> </li> <li> <p>Creation time</p> </li> <li> <p>Last modified time</p> </li> <li> <p>Configuration information, including the URL location of the repository and the ARN of the AWS Secrets Manager secret that contains the credentials used to access the repository.</p> </li> </ul>'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of a <code>ListCodeRepositoriesOutput</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of Git repositories, use the token in the next request.'
    ListCodeRepositoriesInput:
      type: object
      title: ListCodeRepositoriesInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only Git repositories that were created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only Git repositories that were created before the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only Git repositories that were last modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only Git repositories that were last modified before the specified time.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of Git repositories to return in the response.
        NameContains:
          $ref: '#/components/schemas/CodeRepositoryNameContains'
          description: A string in the Git repositories name. This filter returns only repositories whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of a <code>ListCodeRepositoriesOutput</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of Git repositories, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/CodeRepositorySortBy'
          description: The field to sort results by. The default is <code>Name</code>.
        SortOrder:
          $ref: '#/components/schemas/CodeRepositorySortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListCompilationJobsResponse:
      type: object
      required:
        - CompilationJobSummaries
      properties:
        CompilationJobSummaries:
          $ref: '#/components/schemas/CompilationJobSummaries'
          description: 'An array of <a>CompilationJobSummary</a> objects, each describing a model compilation job. '
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this <code>NextToken</code>. To retrieve the next set of model compilation jobs, use this token in the next request.'
    ListCompilationJobsRequest:
      type: object
      title: ListCompilationJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListCompilationJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model compilation jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of model compilation jobs to return in the response.
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: 'A filter that returns the model compilation jobs that were created after a specified time. '
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns the model compilation jobs that were created before a specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns the model compilation jobs that were modified after a specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns the model compilation jobs that were modified before a specified time.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A filter that returns the model compilation jobs whose name contains a specified string.
        StatusEquals:
          $ref: '#/components/schemas/CompilationJobStatus'
          description: A filter that retrieves model compilation jobs with a specific <a>DescribeCompilationJobResponse$CompilationJobStatus</a> status.
        SortBy:
          $ref: '#/components/schemas/ListCompilationJobsSortBy'
          description: The field by which to sort results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListDomainsResponse:
      type: object
      properties:
        Domains:
          $ref: '#/components/schemas/DomainList'
          description: The list of domains.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListDomainsRequest:
      type: object
      title: ListDomainsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Returns a list up to a specified limit.
    ListEndpointConfigsOutput:
      type: object
      required:
        - EndpointConfigs
      properties:
        EndpointConfigs:
          $ref: '#/components/schemas/EndpointConfigSummaryList'
          description: An array of endpoint configurations.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of endpoint configurations, use it in the subsequent request '
    ListEndpointConfigsInput:
      type: object
      title: ListEndpointConfigsInput
      properties:
        SortBy:
          $ref: '#/components/schemas/EndpointConfigSortKey'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/OrderKey'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the result of the previous <code>ListEndpointConfig</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoint configurations, use the token in the next request. '
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of training jobs to return in the response.
        NameContains:
          $ref: '#/components/schemas/EndpointConfigNameContains'
          description: 'A string in the endpoint configuration name. This filter returns only endpoint configurations whose name contains the specified string. '
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoint configurations created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoint configurations with a creation time greater than or equal to the specified time (timestamp).
    ListEndpointsOutput:
      type: object
      required:
        - Endpoints
      properties:
        Endpoints:
          $ref: '#/components/schemas/EndpointSummaryList'
          description: ' An array or endpoint objects. '
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request. '
    ListEndpointsInput:
      type: object
      title: ListEndpointsInput
      properties:
        SortBy:
          $ref: '#/components/schemas/EndpointSortKey'
          description: Sorts the list of results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/OrderKey'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the result of a <code>ListEndpoints</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoints, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of endpoints to return in the response.
        NameContains:
          $ref: '#/components/schemas/EndpointNameContains'
          description: A string in endpoint names. This filter returns only endpoints whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoints that were created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only endpoints with a creation time greater than or equal to the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: ' A filter that returns only endpoints that were modified before the specified timestamp. '
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: ' A filter that returns only endpoints that were modified after the specified timestamp. '
        StatusEquals:
          $ref: '#/components/schemas/EndpointStatus'
          description: ' A filter that returns only endpoints with the specified status.'
    ListExperimentsResponse:
      type: object
      properties:
        ExperimentSummaries:
          $ref: '#/components/schemas/ExperimentSummaries'
          description: A list of the summaries of your experiments.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of experiments, if there are any.'
    ListExperimentsRequest:
      type: object
      title: ListExperimentsRequest
      properties:
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only experiments created after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only experiments created before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortExperimentsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListExperiments</code> didn''t return the full set of experiments, the call returns a token for getting the next set of experiments.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of experiments to return in the response. The default value is 10.
    ListFlowDefinitionsResponse:
      type: object
      required:
        - FlowDefinitionSummaries
      properties:
        FlowDefinitionSummaries:
          $ref: '#/components/schemas/FlowDefinitionSummaries'
          description: An array of objects describing the flow definitions.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
    ListFlowDefinitionsRequest:
      type: object
      title: ListFlowDefinitionsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only flow definitions with a creation time greater than or equal to the specified timestamp.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only flow definitions that were created before the specified timestamp.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The total number of items to return. If the total number of available items is more than the value specified in <code>MaxResults</code>, then a <code>NextToken</code> will be provided in the output that you can use to resume pagination.'
    ListHumanTaskUisResponse:
      type: object
      required:
        - HumanTaskUiSummaries
      properties:
        HumanTaskUiSummaries:
          $ref: '#/components/schemas/HumanTaskUiSummaries'
          description: An array of objects describing the human task user interfaces.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
    ListHumanTaskUisRequest:
      type: object
      title: ListHumanTaskUisRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only human task user interfaces with a creation time greater than or equal to the specified timestamp.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only human task user interfaces that were created before the specified timestamp.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: A token to resume pagination.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The total number of items to return. If the total number of available items is more than the value specified in <code>MaxResults</code>, then a <code>NextToken</code> will be provided in the output that you can use to resume pagination.'
    ListHyperParameterTuningJobsResponse:
      type: object
      required:
        - HyperParameterTuningJobSummaries
      properties:
        HyperParameterTuningJobSummaries:
          $ref: '#/components/schemas/HyperParameterTuningJobSummaries'
          description: A list of <a>HyperParameterTuningJobSummary</a> objects that describe the tuning jobs that the <code>ListHyperParameterTuningJobs</code> request returned.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of this <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.'
    ListHyperParameterTuningJobsRequest:
      type: object
      title: ListHyperParameterTuningJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListHyperParameterTuningJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of tuning jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of tuning jobs to return. The default value is 10.
        SortBy:
          $ref: '#/components/schemas/HyperParameterTuningJobSortByOptions'
          description: The field to sort results by. The default is <code>Name</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the tuning job name. This filter returns only tuning jobs whose name contains the specified string.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were created before the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only tuning jobs that were modified before the specified time.
        StatusEquals:
          $ref: '#/components/schemas/HyperParameterTuningJobStatus'
          description: A filter that returns only tuning jobs with the specified status.
    ListLabelingJobsResponse:
      type: object
      properties:
        LabelingJobSummaryList:
          $ref: '#/components/schemas/LabelingJobSummaryList'
          description: 'An array of <code>LabelingJobSummary</code> objects, each describing a labeling job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of labeling jobs, use it in the subsequent request.'
    ListLabelingJobsRequest:
      type: object
      title: ListLabelingJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs modified after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs modified before the specified time (timestamp).
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of labeling jobs to return in each page of the response.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListLabelingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the labeling job name. This filter returns only labeling jobs whose name contains the specified string.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        StatusEquals:
          $ref: '#/components/schemas/LabelingJobStatus'
          description: A filter that retrieves only labeling jobs with a specific status.
    ListLabelingJobsForWorkteamResponse:
      type: object
      required:
        - LabelingJobSummaryList
      properties:
        LabelingJobSummaryList:
          $ref: '#/components/schemas/LabelingJobForWorkteamSummaryList'
          description: 'An array of <code>LabelingJobSummary</code> objects, each describing a labeling job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of labeling jobs, use it in the subsequent request.'
    ListLabelingJobsForWorkteamRequest:
      type: object
      required:
        - WorkteamArn
      title: ListLabelingJobsForWorkteamRequest
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team for which you want to see labeling jobs for.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of labeling jobs to return in each page of the response.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListLabelingJobsForWorkteam</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only labeling jobs created before the specified time (timestamp).
        JobReferenceCodeContains:
          $ref: '#/components/schemas/JobReferenceCodeContains'
          description: A filter the limits jobs to only the ones whose job reference code contains the specified string.
        SortBy:
          $ref: '#/components/schemas/ListLabelingJobsForWorkteamSortByOptions'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListModelPackagesOutput:
      type: object
      required:
        - ModelPackageSummaryList
      properties:
        ModelPackageSummaryList:
          $ref: '#/components/schemas/ModelPackageSummaryList'
          description: 'An array of <code>ModelPackageSummary</code> objects, each of which lists a model package.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of model packages, use it in the subsequent request.'
    ListModelPackagesInput:
      type: object
      title: ListModelPackagesInput
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only model packages created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only model packages created before the specified time (timestamp).
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of model packages to return in the response.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the model package name. This filter returns only model packages whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response to a previous <code>ListModelPackages</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of model packages, use the token in the next request.'
        SortBy:
          $ref: '#/components/schemas/ModelPackageSortBy'
          description: The parameter by which to sort the results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is <code>Ascending</code>.
    ListModelsOutput:
      type: object
      required:
        - Models
      properties:
        Models:
          $ref: '#/components/schemas/ModelSummaryList'
          description: 'An array of <code>ModelSummary</code> objects, each of which lists a model.'
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: ' If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of models, use it in the subsequent request. '
    ListModelsInput:
      type: object
      title: ListModelsInput
      properties:
        SortBy:
          $ref: '#/components/schemas/ModelSortKey'
          description: Sorts the list of results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/OrderKey'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of models to return in the response.
        NameContains:
          $ref: '#/components/schemas/ModelNameContains'
          description: A string in the training job name. This filter returns only models in the training job whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only models created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only models with a creation time greater than or equal to the specified time (timestamp).
    ListMonitoringExecutionsResponse:
      type: object
      required:
        - MonitoringExecutionSummaries
      properties:
        MonitoringExecutionSummaries:
          $ref: '#/components/schemas/MonitoringExecutionSummaryList'
          description: A JSON array in which each element is a summary for a monitoring execution.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of jobs, use it in the subsequent reques'
    ListMonitoringExecutionsRequest:
      type: object
      title: ListMonitoringExecutionsRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: Name of a specific schedule to fetch jobs for.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of a specific endpoint to fetch jobs for.
        SortBy:
          $ref: '#/components/schemas/MonitoringExecutionSortKey'
          description: 'Whether to sort results by <code>Status</code>, <code>CreationTime</code>, <code>ScheduledTime</code> field. The default is <code>CreationTime</code>.'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Whether to sort the results in <code>Ascending</code> or <code>Descending</code> order. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of jobs to return in the response. The default value is 10.
        ScheduledTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: Filter for jobs scheduled before a specified time.
        ScheduledTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: Filter for jobs scheduled after a specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs created before a specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs created after a specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs modified after a specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only jobs modified before a specified time.
        StatusEquals:
          $ref: '#/components/schemas/ExecutionStatus'
          description: A filter that retrieves only jobs with a specific status.
    ListMonitoringSchedulesResponse:
      type: object
      required:
        - MonitoringScheduleSummaries
      properties:
        MonitoringScheduleSummaries:
          $ref: '#/components/schemas/MonitoringScheduleSummaryList'
          description: A JSON array in which each element is a summary for a monitoring schedule.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of jobs, use it in the subsequent reques'
    ListMonitoringSchedulesRequest:
      type: object
      title: ListMonitoringSchedulesRequest
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: Name of a specific endpoint to fetch schedules for.
        SortBy:
          $ref: '#/components/schemas/MonitoringScheduleSortKey'
          description: 'Whether to sort results by <code>Status</code>, <code>CreationTime</code>, <code>ScheduledTime</code> field. The default is <code>CreationTime</code>.'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: Whether to sort the results in <code>Ascending</code> or <code>Descending</code> order. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of jobs to return in the response. The default value is 10.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: Filter for monitoring schedules whose name contains a specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules created before a specified time.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules created after a specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules modified before a specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only monitoring schedules modified after a specified time.
        StatusEquals:
          $ref: '#/components/schemas/ScheduleStatus'
          description: A filter that returns only monitoring schedules modified before a specified time.
    ListNotebookInstanceLifecycleConfigsOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To get the next set of lifecycle configurations, use it in the next request. '
        NotebookInstanceLifecycleConfigs:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSummaryList'
          description: 'An array of <code>NotebookInstanceLifecycleConfiguration</code> objects, each listing a lifecycle configuration.'
    ListNotebookInstanceLifecycleConfigsInput:
      type: object
      title: ListNotebookInstanceLifecycleConfigsInput
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of a <code>ListNotebookInstanceLifecycleConfigs</code> request was truncated, the response includes a <code>NextToken</code>. To get the next set of lifecycle configurations, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of lifecycle configurations to return in the response.
        SortBy:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSortKey'
          description: Sorts the list of results. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSortOrder'
          description: The sort order for results.
        NameContains:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigNameContains'
          description: A string in the lifecycle configuration name. This filter returns only lifecycle configurations whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only lifecycle configurations that were created before the specified time (timestamp).
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only lifecycle configurations that were created after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only lifecycle configurations that were modified before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only lifecycle configurations that were modified after the specified time (timestamp).
    ListNotebookInstancesOutput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response to the previous <code>ListNotebookInstances</code> request was truncated, Amazon SageMaker returns this token. To retrieve the next set of notebook instances, use the token in the next request.'
        NotebookInstances:
          $ref: '#/components/schemas/NotebookInstanceSummaryList'
          description: 'An array of <code>NotebookInstanceSummary</code> objects, one for each notebook instance.'
    ListNotebookInstancesInput:
      type: object
      title: ListNotebookInstancesInput
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: '<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p>You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of notebook instances to return.
        SortBy:
          $ref: '#/components/schemas/NotebookInstanceSortKey'
          description: The field to sort results by. The default is <code>Name</code>.
        SortOrder:
          $ref: '#/components/schemas/NotebookInstanceSortOrder'
          description: 'The sort order for results. '
        NameContains:
          $ref: '#/components/schemas/NotebookInstanceNameContains'
          description: A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string.
        CreationTimeBefore:
          $ref: '#/components/schemas/CreationTime'
          description: 'A filter that returns only notebook instances that were created before the specified time (timestamp). '
        CreationTimeAfter:
          $ref: '#/components/schemas/CreationTime'
          description: A filter that returns only notebook instances that were created after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only notebook instances that were modified before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A filter that returns only notebook instances that were modified after the specified time (timestamp).
        StatusEquals:
          $ref: '#/components/schemas/NotebookInstanceStatus'
          description: A filter that returns only notebook instances with the specified status.
        NotebookInstanceLifecycleConfigNameContains:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: A string in the name of a notebook instances lifecycle configuration associated with this notebook instance. This filter returns only notebook instances associated with a lifecycle configuration with a name that contains the specified string.
        DefaultCodeRepositoryContains:
          $ref: '#/components/schemas/CodeRepositoryContains'
          description: A string in the name or URL of a Git repository associated with this notebook instance. This filter returns only notebook instances associated with a git repository with a name that contains the specified string.
        AdditionalCodeRepositoryEquals:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: A filter that returns only notebook instances with associated with the specified git repository.
    ListProcessingJobsResponse:
      type: object
      required:
        - ProcessingJobSummaries
      properties:
        ProcessingJobSummaries:
          $ref: '#/components/schemas/ProcessingJobSummaries'
          description: 'An array of <code>ProcessingJobSummary</code> objects, each listing a processing job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of processing jobs, use it in the subsequent request.'
    ListProcessingJobsRequest:
      type: object
      title: ListProcessingJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs created after the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only processing jobs modified before the specified time.
        NameContains:
          $ref: '#/components/schemas/String'
          description: A string in the processing job name. This filter returns only processing jobs whose name contains the specified string.
        StatusEquals:
          $ref: '#/components/schemas/ProcessingJobStatus'
          description: A filter that retrieves only processing jobs with a specific status.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListProcessingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of processing jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of processing jobs to return in the response.
    ListSubscribedWorkteamsResponse:
      type: object
      required:
        - SubscribedWorkteams
      properties:
        SubscribedWorkteams:
          $ref: '#/components/schemas/SubscribedWorkteams'
          description: 'An array of <code>Workteam</code> objects, each describing a work team.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of work teams, use it in the subsequent request.'
    ListSubscribedWorkteamsRequest:
      type: object
      title: ListSubscribedWorkteamsRequest
      properties:
        NameContains:
          $ref: '#/components/schemas/WorkteamName'
          description: A string in the work team name. This filter returns only work teams whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListSubscribedWorkteams</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of work teams to return in each page of the response.
    ListTagsOutput:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of <code>Tag</code> objects, each with a tag key and a value.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' If response is truncated, Amazon SageMaker includes a token in the response. You can use this token in your subsequent request to fetch next set of tokens. '
    ListTagsInput:
      type: object
      required:
        - ResourceArn
      title: ListTagsInput
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: ' If the response to the previous <code>ListTags</code> request is truncated, Amazon SageMaker returns this token. To retrieve the next set of tags, use it in the subsequent request. '
        MaxResults:
          $ref: '#/components/schemas/ListTagsMaxResults'
          description: Maximum number of tags to return.
    ListTrainingJobsResponse:
      type: object
      required:
        - TrainingJobSummaries
      properties:
        TrainingJobSummaries:
          $ref: '#/components/schemas/TrainingJobSummaries'
          description: 'An array of <code>TrainingJobSummary</code> objects, each listing a training job.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request.'
    ListTrainingJobsRequest:
      type: object
      title: ListTrainingJobsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListTrainingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request. '
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of training jobs to return in the response.
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs created after the specified time (timestamp).
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs created before the specified time (timestamp).
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs modified after the specified time (timestamp).
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only training jobs modified before the specified time (timestamp).
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the training job name. This filter returns only training jobs whose name contains the specified string.
        StatusEquals:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: A filter that retrieves only training jobs with a specific status.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListTrainingJobsForHyperParameterTuningJobResponse:
      type: object
      required:
        - TrainingJobSummaries
      properties:
        TrainingJobSummaries:
          $ref: '#/components/schemas/HyperParameterTrainingJobSummaries'
          description: A list of <a>TrainingJobSummary</a> objects that describe the training jobs that the <code>ListTrainingJobsForHyperParameterTuningJob</code> request returned.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of this <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.'
    ListTrainingJobsForHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      title: ListTrainingJobsForHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job whose training jobs you want to list.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListTrainingJobsForHyperParameterTuningJob</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of training jobs to return. The default value is 10.
        StatusEquals:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: A filter that returns only training jobs with the specified status.
        SortBy:
          $ref: '#/components/schemas/TrainingJobSortByOptions'
          description: '<p>The field to sort results by. The default is <code>Name</code>.</p> <p>If the value of this field is <code>FinalObjectiveMetricValue</code>, any training jobs that did not return an objective metric are not listed.</p>'
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
    ListTransformJobsResponse:
      type: object
      required:
        - TransformJobSummaries
      properties:
        TransformJobSummaries:
          $ref: '#/components/schemas/TransformJobSummaries'
          description: An array of <code>TransformJobSummary</code> objects.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of transform jobs, use it in the next request.'
    ListTransformJobsRequest:
      type: object
      title: ListTransformJobsRequest
      properties:
        CreationTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs created after the specified time.
        CreationTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs created before the specified time.
        LastModifiedTimeAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs modified after the specified time.
        LastModifiedTimeBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only transform jobs modified before the specified time.
        NameContains:
          $ref: '#/components/schemas/NameContains'
          description: A string in the transform job name. This filter returns only transform jobs whose name contains the specified string.
        StatusEquals:
          $ref: '#/components/schemas/TransformJobStatus'
          description: A filter that retrieves only transform jobs with a specific status.
        SortBy:
          $ref: '#/components/schemas/SortBy'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListTransformJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of transform jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of transform jobs to return in the response. The default value is <code>10</code>.
    ListTrialComponentsResponse:
      type: object
      properties:
        TrialComponentSummaries:
          $ref: '#/components/schemas/TrialComponentSummaries'
          description: A list of the summaries of your trial components.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of components, if there are any.'
    ListTrialComponentsRequest:
      type: object
      title: ListTrialComponentsRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'A filter that returns only components that are part of the specified experiment. If you specify <code>ExperimentName</code>, you can''t filter by <code>SourceArn</code> or <code>TrialName</code>.'
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'A filter that returns only components that are part of the specified trial. If you specify <code>TrialName</code>, you can''t filter by <code>ExperimentName</code> or <code>SourceArn</code>.'
        SourceArn:
          $ref: '#/components/schemas/String256'
          description: 'A filter that returns only components that have the specified source Amazon Resource Name (ARN). If you specify <code>SourceArn</code>, you can''t filter by <code>ExperimentName</code> or <code>TrialName</code>.'
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only components created after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only components created before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortTrialComponentsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of components to return in the response. The default value is 10.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListTrialComponents</code> didn''t return the full set of components, the call returns a token for getting the next set of components.'
    ListTrialsResponse:
      type: object
      properties:
        TrialSummaries:
          $ref: '#/components/schemas/TrialSummaries'
          description: A list of the summaries of your trials.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'A token for getting the next set of trials, if there are any.'
    ListTrialsRequest:
      type: object
      title: ListTrialsRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: A filter that returns only trials that are part of the specified experiment.
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: A filter that returns only trials that are associated with the specified trial component.
        CreatedAfter:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only trials created after the specified time.
        CreatedBefore:
          $ref: '#/components/schemas/Timestamp'
          description: A filter that returns only trials created before the specified time.
        SortBy:
          $ref: '#/components/schemas/SortTrialsBy'
          description: The property used to sort results. The default value is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order. The default value is <code>Descending</code>.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of trials to return in the response. The default value is 10.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous call to <code>ListTrials</code> didn''t return the full set of trials, the call returns a token for getting the next set of trials.'
    ListUserProfilesResponse:
      type: object
      properties:
        UserProfiles:
          $ref: '#/components/schemas/UserProfileList'
          description: The list of user profiles.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
    ListUserProfilesRequest:
      type: object
      title: ListUserProfilesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: Returns a list up to a specified limit.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for the results. The default is Ascending.
        SortBy:
          $ref: '#/components/schemas/UserProfileSortKey'
          description: The parameter by which to sort the results. The default is CreationTime.
        DomainIdEquals:
          $ref: '#/components/schemas/DomainId'
          description: A parameter by which to filter the results.
        UserProfileNameContains:
          $ref: '#/components/schemas/UserProfileName'
          description: A parameter by which to filter the results.
    ListWorkteamsResponse:
      type: object
      required:
        - Workteams
      properties:
        Workteams:
          $ref: '#/components/schemas/Workteams'
          description: 'An array of <code>Workteam</code> objects, each describing a work team.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of work teams, use it in the subsequent request.'
    ListWorkteamsRequest:
      type: object
      title: ListWorkteamsRequest
      properties:
        SortBy:
          $ref: '#/components/schemas/ListWorkteamsSortByOptions'
          description: The field to sort results by. The default is <code>CreationTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SortOrder'
          description: The sort order for results. The default is <code>Ascending</code>.
        NameContains:
          $ref: '#/components/schemas/WorkteamName'
          description: A string in the work team's name. This filter returns only work teams whose name contains the specified string.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>ListWorkteams</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of labeling jobs, use the token in the next request.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of work teams to return in each page of the response.
    RenderUiTemplateResponse:
      type: object
      required:
        - RenderedContent
        - Errors
      properties:
        RenderedContent:
          $ref: '#/components/schemas/String'
          description: A Liquid template that renders the HTML for the worker UI.
        Errors:
          $ref: '#/components/schemas/RenderingErrorList'
          description: 'A list of one or more <code>RenderingError</code> objects if any were encountered while rendering the template. If there were no errors, the list is empty.'
    RenderUiTemplateRequest:
      type: object
      required:
        - UiTemplate
        - Task
        - RoleArn
      title: RenderUiTemplateRequest
      properties:
        UiTemplate:
          $ref: '#/components/schemas/UiTemplate'
          description: A <code>Template</code> object containing the worker UI template to render.
        Task:
          $ref: '#/components/schemas/RenderableTask'
          description: A <code>RenderableTask</code> object containing a representative task to render.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) that has access to the S3 objects that are used by the template.
    SearchResponse:
      type: object
      properties:
        Results:
          $ref: '#/components/schemas/SearchResultsList'
          description: A list of <code>SearchResult</code> objects.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If the result of the previous <code>Search</code> request was truncated, the response includes a NextToken. To retrieve the next set of results, use the token in the next request.'
    SearchRequest:
      type: object
      required:
        - Resource
      title: SearchRequest
      properties:
        Resource:
          $ref: '#/components/schemas/ResourceType'
          description: The name of the Amazon SageMaker resource to search for.
        SearchExpression:
          $ref: '#/components/schemas/SearchExpression'
          description: 'A Boolean conditional statement. Resource objects must satisfy this condition to be included in search results. You must provide at least one subexpression, filter, or nested filter. The maximum number of recursive <code>SubExpressions</code>, <code>NestedFilters</code>, and <code>Filters</code> that can be included in a <code>SearchExpression</code> object is 50.'
        SortBy:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: The name of the resource property used to sort the <code>SearchResults</code>. The default is <code>LastModifiedTime</code>.
        SortOrder:
          $ref: '#/components/schemas/SearchSortOrder'
          description: How <code>SearchResults</code> are ordered. Valid values are <code>Ascending</code> or <code>Descending</code>. The default is <code>Descending</code>.
        NextToken:
          $ref: '#/components/schemas/NextToken'
          description: 'If more than <code>MaxResults</code> resource objects match the specified <code>SearchExpression</code>, the <code>SearchResponse</code> includes a <code>NextToken</code>. The <code>NextToken</code> can be passed to the next <code>SearchRequest</code> to continue retrieving results for the specified <code>SearchExpression</code> and <code>Sort</code> parameters.'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a <code>SearchResponse</code>.
    StartMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: StartMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the schedule to start.
    StartNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: StartNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance to start.
    StopAutoMLJobRequest:
      type: object
      required:
        - AutoMLJobName
      title: StopAutoMLJobRequest
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: The name of the object you are requesting.
    StopCompilationJobRequest:
      type: object
      required:
        - CompilationJobName
      title: StopCompilationJobRequest
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job to stop.
    StopHyperParameterTuningJobRequest:
      type: object
      required:
        - HyperParameterTuningJobName
      title: StopHyperParameterTuningJobRequest
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job to stop.
    StopLabelingJobRequest:
      type: object
      required:
        - LabelingJobName
      title: StopLabelingJobRequest
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job to stop.
    StopMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
      title: StopMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the schedule to stop.
    StopNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: StopNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance to terminate.
    StopProcessingJobRequest:
      type: object
      required:
        - ProcessingJobName
      title: StopProcessingJobRequest
      properties:
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job to stop.
    StopTrainingJobRequest:
      type: object
      required:
        - TrainingJobName
      title: StopTrainingJobRequest
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job to stop.
    StopTransformJobRequest:
      type: object
      required:
        - TransformJobName
      title: StopTransformJobRequest
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job to stop.
    UpdateCodeRepositoryOutput:
      type: object
      required:
        - CodeRepositoryArn
      properties:
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The ARN of the Git repository.
    UpdateCodeRepositoryInput:
      type: object
      required:
        - CodeRepositoryName
      title: UpdateCodeRepositoryInput
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository to update.
        GitConfig:
          $ref: '#/components/schemas/GitConfigForUpdate'
          description: '<p>The configuration of the git repository, including the URL and the Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
    UpdateDomainResponse:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The domain Amazon Resource Name (ARN).
    UpdateDomainRequest:
      type: object
      required:
        - DomainId
      title: UpdateDomainRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        DefaultUserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    UpdateEndpointOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
    UpdateEndpointInput:
      type: object
      required:
        - EndpointName
        - EndpointConfigName
      title: UpdateEndpointInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint whose configuration you want to update.
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the new endpoint configuration.
        RetainAllVariantProperties:
          $ref: '#/components/schemas/Boolean'
          description: 'When updating endpoint resources, enables or disables the retention of variant properties, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set <code>RetainAllVariantProperties</code> to <code>true</code>. To use the variant properties specified in a new <code>EndpointConfig</code> call when updating an endpoint, set <code>RetainAllVariantProperties</code> to <code>false</code>.'
        ExcludeRetainedVariantProperties:
          $ref: '#/components/schemas/VariantPropertyList'
          description: 'When you are updating endpoint resources with <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_UpdateEndpoint.html#SageMaker-UpdateEndpoint-request-RetainAllVariantProperties">RetainAllVariantProperties</a>, whose value is set to <code>true</code>, <code>ExcludeRetainedVariantProperties</code> specifies the list of type <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_VariantProperty.html">VariantProperty</a> to override with the values provided by <code>EndpointConfig</code>. If you don''t specify a value for <code>ExcludeAllVariantProperties</code>, no variant properties are overridden. '
    UpdateEndpointWeightsAndCapacitiesOutput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the updated endpoint.
    UpdateEndpointWeightsAndCapacitiesInput:
      type: object
      required:
        - EndpointName
        - DesiredWeightsAndCapacities
      title: UpdateEndpointWeightsAndCapacitiesInput
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of an existing Amazon SageMaker endpoint.
        DesiredWeightsAndCapacities:
          $ref: '#/components/schemas/DesiredWeightAndCapacityList'
          description: An object that provides new capacity and weight values for a variant.
    UpdateExperimentResponse:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
    UpdateExperimentRequest:
      type: object
      required:
        - ExperimentName
      title: UpdateExperimentRequest
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment to update.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
    ConflictException: {}
    UpdateMonitoringScheduleResponse:
      type: object
      required:
        - MonitoringScheduleArn
      properties:
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
    UpdateMonitoringScheduleRequest:
      type: object
      required:
        - MonitoringScheduleName
        - MonitoringScheduleConfig
      title: UpdateMonitoringScheduleRequest
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule. The name must be unique within an AWS Region within an AWS account.
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
          description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
    UpdateNotebookInstanceOutput:
      type: object
      properties: {}
    UpdateNotebookInstanceInput:
      type: object
      required:
        - NotebookInstanceName
      title: UpdateNotebookInstanceInput
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance to update.
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The Amazon ML compute instance type.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: '<p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access the notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker Roles</a>. </p> <note> <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the <code>iam:PassRole</code> permission.</p> </note>'
        LifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: 'The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.'
        DisassociateLifecycleConfig:
          $ref: '#/components/schemas/DisassociateNotebookInstanceLifecycleConfig'
          description: 'Set to <code>true</code> to remove the notebook instance lifecycle configuration currently associated with the notebook instance. This operation is idempotent. If you specify a lifecycle configuration that is not associated with the notebook instance when you call this method, it does not throw an error.'
        VolumeSizeInGB:
          $ref: '#/components/schemas/NotebookInstanceVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB. ML storage volumes are encrypted, so Amazon SageMaker can''t determine the amount of available free space on the volume. Because of this, you can increase the volume size when you update a notebook instance, but you can''t decrease the volume size. If you want to decrease the size of the ML storage volume in use, create a new notebook instance with the desired size.'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'The Git repository to associate with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories to associate with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AcceleratorTypes:
          $ref: '#/components/schemas/NotebookInstanceAcceleratorTypes'
          description: 'A list of the Elastic Inference (EI) instance types to associate with this notebook instance. Currently only one EI instance type can be associated with a notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
        DisassociateAcceleratorTypes:
          $ref: '#/components/schemas/DisassociateNotebookInstanceAcceleratorTypes'
          description: 'A list of the Elastic Inference (EI) instance types to remove from this notebook instance. This operation is idempotent. If you specify an accelerator type that is not associated with the notebook instance when you call this method, it does not throw an error.'
        DisassociateDefaultCodeRepository:
          $ref: '#/components/schemas/DisassociateDefaultCodeRepository'
          description: 'The name or URL of the default Git repository to remove from this notebook instance. This operation is idempotent. If you specify a Git repository that is not associated with the notebook instance when you call this method, it does not throw an error.'
        DisassociateAdditionalCodeRepositories:
          $ref: '#/components/schemas/DisassociateAdditionalCodeRepositories'
          description: 'A list of names or URLs of the default Git repositories to remove from this notebook instance. This operation is idempotent. If you specify a Git repository that is not associated with the notebook instance when you call this method, it does not throw an error.'
        RootAccess:
          $ref: '#/components/schemas/RootAccess'
          description: '<p>Whether root access is enabled or disabled for users of the notebook instance. The default value is <code>Enabled</code>.</p> <note> <p>If you set this to <code>Disabled</code>, users don''t have root access on the notebook instance, but lifecycle configuration scripts still run with root permissions.</p> </note>'
    UpdateNotebookInstanceLifecycleConfigOutput:
      type: object
      properties: {}
    UpdateNotebookInstanceLifecycleConfigInput:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
      title: UpdateNotebookInstanceLifecycleConfigInput
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        OnCreate:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.'
        OnStart:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigList'
          description: 'The shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.'
    UpdateTrialResponse:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
    UpdateTrialRequest:
      type: object
      required:
        - TrialName
      title: UpdateTrialRequest
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial to update.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
    UpdateTrialComponentResponse:
      type: object
      properties:
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
    UpdateTrialComponentRequest:
      type: object
      required:
        - TrialComponentName
      title: UpdateTrialComponentRequest
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the component to update.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. The name doesn''t need to be unique. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: The new status of the component.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: Replaces all of the component's hyperparameters with the specified hyperparameters.
        ParametersToRemove:
          $ref: '#/components/schemas/ListTrialComponentKey256'
          description: The hyperparameters to remove from the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: Replaces all of the component's input artifacts with the specified artifacts.
        InputArtifactsToRemove:
          $ref: '#/components/schemas/ListTrialComponentKey256'
          description: The input artifacts to remove from the component.
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: Replaces all of the component's output artifacts with the specified artifacts.
        OutputArtifactsToRemove:
          $ref: '#/components/schemas/ListTrialComponentKey256'
          description: The output artifacts to remove from the component.
    UpdateUserProfileResponse:
      type: object
      properties:
        UserProfileArn:
          $ref: '#/components/schemas/UserProfileArn'
          description: The user profile Amazon Resource Name (ARN).
    UpdateUserProfileRequest:
      type: object
      required:
        - DomainId
        - UserProfileName
      title: UpdateUserProfileRequest
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
    UpdateWorkforceResponse:
      type: object
      required:
        - Workforce
      properties:
        Workforce:
          $ref: '#/components/schemas/Workforce'
          description: 'A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each AWS Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.'
    UpdateWorkforceRequest:
      type: object
      required:
        - WorkforceName
      title: UpdateWorkforceRequest
      properties:
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: 'The name of the private workforce whose access you want to restrict. <code>WorkforceName</code> is automatically set to <code>default</code> when a workforce is created and cannot be modified. '
        SourceIpConfig:
          $ref: '#/components/schemas/SourceIpConfig'
          description: '<p>A list of one to four worker IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>) that can be used to access tasks assigned to this workforce.</p> <p>Maximum: Four CIDR values</p>'
    UpdateWorkteamResponse:
      type: object
      required:
        - Workteam
      properties:
        Workteam:
          $ref: '#/components/schemas/Workteam'
          description: A <code>Workteam</code> object that describes the updated work team.
    UpdateWorkteamRequest:
      type: object
      required:
        - WorkteamName
      title: UpdateWorkteamRequest
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team to update.
        MemberDefinitions:
          $ref: '#/components/schemas/MemberDefinitions'
          description: A list of <code>MemberDefinition</code> objects that contain the updated work team members.
        Description:
          $ref: '#/components/schemas/String200'
          description: An updated description for the work team.
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: Configures SNS topic notifications for available or expiring work items
    Accept:
      type: string
      pattern: .*
      maxLength: 256
    AccountId:
      type: string
      pattern: ^\d+$
    ResourceArn:
      type: string
      pattern: 'arn:.*'
      maxLength: 256
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    CodeRepositoryNameOrUrl:
      type: string
      pattern: '^https://([^/]+)/?(.*)$|^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 1024
    AdditionalCodeRepositoryNamesOrUrls:
      type: array
      items:
        $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
      maxItems: 3
    AlgorithmArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:algorithm/.*'
      minLength: 1
      maxLength: 2048
    AlgorithmImage:
      type: string
      pattern: .*
      maxLength: 255
    AlgorithmSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ArnOrName:
      type: string
      pattern: '(arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$'
      minLength: 1
      maxLength: 170
    TrainingInputMode:
      type: string
      enum:
        - Pipe
        - File
    MetricDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDefinition'
      minItems: 0
      maxItems: 40
    Boolean:
      type: boolean
    AlgorithmSpecification:
      type: object
      required:
        - TrainingInputMode
      properties:
        TrainingImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: 'The registry path of the Docker image that contains the training algorithm. For information about docker registry paths for built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Algorithms Provided by Amazon SageMaker: Common Parameters</a>. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>.'
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: 'The name of the algorithm resource to use for the training job. This must be an algorithm resource that you created or subscribe to on AWS Marketplace. If you specify a value for this parameter, you can''t specify a value for <code>TrainingImage</code>.'
        TrainingInputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accommodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won''t be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>'
        MetricDefinitions:
          $ref: '#/components/schemas/MetricDefinitionList'
          description: A list of metric definition objects. Each object specifies the metric name and regular expressions used to parse algorithm logs. Amazon SageMaker publishes each metric to Amazon CloudWatch.
        EnableSageMakerMetricsTimeSeries:
          $ref: '#/components/schemas/Boolean'
          description: '<p>To generate and save time-series metrics during training, set to <code>true</code>. The default is <code>false</code> and time-series metrics aren''t generated except in the following cases:</p> <ul> <li> <p>You use one of the Amazon SageMaker built-in algorithms</p> </li> <li> <p>You use one of the following <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/pre-built-containers-frameworks-deep-learning.html">Prebuilt Amazon SageMaker Docker Images</a>:</p> <ul> <li> <p>Tensorflow (version &gt;= 1.15)</p> </li> <li> <p>MXNet (version &gt;= 1.6)</p> </li> <li> <p>PyTorch (version &gt;= 1.3)</p> </li> </ul> </li> <li> <p>You specify at least one <a>MetricDefinition</a> </p> </li> </ul>'
      description: '<p>Specifies the training algorithm to use in a <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html">CreateTrainingJob</a> request.</p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For information about using your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>. </p>'
    AlgorithmStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Completed
        - Failed
        - Deleting
    AlgorithmStatusItemList:
      type: array
      items:
        $ref: '#/components/schemas/AlgorithmStatusItem'
    AlgorithmStatusDetails:
      type: object
      properties:
        ValidationStatuses:
          $ref: '#/components/schemas/AlgorithmStatusItemList'
          description: The status of algorithm validation.
        ImageScanStatuses:
          $ref: '#/components/schemas/AlgorithmStatusItemList'
          description: The status of the scan of the algorithm's Docker image container.
      description: Specifies the validation and image scan statuses of the algorithm.
    EntityName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
      minLength: 1
      maxLength: 63
    DetailedAlgorithmStatus:
      type: string
      enum:
        - NotStarted
        - InProgress
        - Completed
        - Failed
    String:
      type: string
    AlgorithmStatusItem:
      type: object
      required:
        - Name
        - Status
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm for which the overall status is being reported.
        Status:
          $ref: '#/components/schemas/DetailedAlgorithmStatus'
          description: The current status.
        FailureReason:
          $ref: '#/components/schemas/String'
          description: 'if the overall status is <code>Failed</code>, the reason for the failure.'
      description: Represents the overall status of an algorithm.
    EntityDescription:
      type: string
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 1024
    CreationTime:
      type: string
      format: date-time
    AlgorithmSummary:
      type: object
      required:
        - AlgorithmName
        - AlgorithmArn
        - CreationTime
        - AlgorithmStatus
      properties:
        AlgorithmName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the algorithm that is described by the summary.
        AlgorithmArn:
          $ref: '#/components/schemas/AlgorithmArn'
          description: The Amazon Resource Name (ARN) of the algorithm.
        AlgorithmDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the algorithm.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that shows when the algorithm was created.
        AlgorithmStatus:
          $ref: '#/components/schemas/AlgorithmStatus'
          description: The overall status of the algorithm.
      description: Provides summary information about an algorithm.
    AlgorithmSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AlgorithmSummary'
    TrainingJobDefinition:
      type: object
      required:
        - TrainingInputMode
        - InputDataConfig
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      properties:
        TrainingInputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>The input mode used by the algorithm for the training job. For the input modes that Amazon SageMaker algorithms support, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>.</p> <p>If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container.</p>'
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: The hyperparameters used for the training job.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: 'An array of <code>Channel</code> objects, each of which specifies an input source.'
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts.
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: 'The resources, including the ML compute instances and ML storage volumes, to use for model training.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the SIGTERM signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts.</p>'
      description: Defines the input needed to run a training job using the algorithm.
    TransformJobDefinition:
      type: object
      required:
        - TransformInput
        - TransformOutput
        - TransformResources
      properties:
        MaxConcurrentTransforms:
          $ref: '#/components/schemas/MaxConcurrentTransforms'
          description: The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
        MaxPayloadInMB:
          $ref: '#/components/schemas/MaxPayloadInMB'
          description: 'The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).'
        BatchStrategy:
          $ref: '#/components/schemas/BatchStrategy'
          description: <p>A string that determines the number of records included in a single mini-batch.</p> <p> <code>SingleRecord</code> means only one record is used per mini-batch. <code>MultiRecord</code> means a mini-batch is set to contain as many records that can fit within the <code>MaxPayloadInMB</code> limit.</p>
        Environment:
          $ref: '#/components/schemas/TransformEnvironmentMap'
          description: The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
          description: A description of the input source and the way the transform job consumes it.
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
          description: Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
          description: Identifies the ML compute instances for the transform job.
      description: Defines the input needed to run a transform job using the inference specification specified in the algorithm.
    AlgorithmValidationProfile:
      type: object
      required:
        - ProfileName
        - TrainingJobDefinition
      properties:
        ProfileName:
          $ref: '#/components/schemas/EntityName'
          description: 'The name of the profile for the algorithm. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen).'
        TrainingJobDefinition:
          $ref: '#/components/schemas/TrainingJobDefinition'
          description: The <code>TrainingJobDefinition</code> object that describes the training job that Amazon SageMaker runs to validate your algorithm.
        TransformJobDefinition:
          $ref: '#/components/schemas/TransformJobDefinition'
          description: The <code>TransformJobDefinition</code> object that describes the transform job that Amazon SageMaker runs to validate your algorithm.
      description: <p>Defines a training job and a batch transform job that Amazon SageMaker runs to validate your algorithm.</p> <p>The data provided in the validation profile is made available to your buyers on AWS Marketplace.</p>
    AlgorithmValidationProfiles:
      type: array
      items:
        $ref: '#/components/schemas/AlgorithmValidationProfile'
      minItems: 1
      maxItems: 1
    RoleArn:
      type: string
      pattern: '^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$'
      minLength: 20
      maxLength: 2048
    AlgorithmValidationSpecification:
      type: object
      required:
        - ValidationRole
        - ValidationProfiles
      properties:
        ValidationRole:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM roles that Amazon SageMaker uses to run the training jobs.
        ValidationProfiles:
          $ref: '#/components/schemas/AlgorithmValidationProfiles'
          description: 'An array of <code>AlgorithmValidationProfile</code> objects, each of which specifies a training job and batch transform job that Amazon SageMaker runs to validate your algorithm.'
      description: Specifies configurations for one or more training jobs that Amazon SageMaker runs to test the algorithm.
    LambdaFunctionArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?'
      maxLength: 2048
    AnnotationConsolidationConfig:
      type: object
      required:
        - AnnotationConsolidationLambdaArn
      properties:
        AnnotationConsolidationLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: '<p>The Amazon Resource Name (ARN) of a Lambda function implements the logic for annotation consolidation.</p> <p>For the built-in bounding box, image classification, semantic segmentation, and text classification task types, Amazon SageMaker Ground Truth provides the following Lambda functions:</p> <ul> <li> <p> <i>Bounding box</i> - Finds the most similar boxes from different workers based on the Jaccard index of the boxes.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-BoundingBox</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-BoundingBox</code> </p> </li> <li> <p> <i>Image classification</i> - Uses a variant of the Expectation Maximization approach to estimate the true class of an image based on annotations from individual workers.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-ImageMultiClass</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-ImageMultiClass</code> </p> </li> <li> <p> <i>Semantic segmentation</i> - Treats each pixel in an image as a multi-class classification and treats pixel annotations from workers as "votes" for the correct label.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-SemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-SemanticSegmentation</code> </p> </li> <li> <p> <i>Text classification</i> - Uses a variant of the Expectation Maximization approach to estimate the true class of text based on annotations from individual workers.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-TextMultiClass</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-TextMultiClass</code> </p> </li> <li> <p> <i>Named entity recognition</i> - Groups similar selections and calculates aggregate boundaries, resolving to most-assigned label.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-NamedEntityRecognition</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-NamedEntityRecognition</code> </p> </li> <li> <p> <i>Bounding box verification</i> - Uses a variant of the Expectation Maximization approach to estimate the true class of verification judgement for bounding box labels based on annotations from individual workers.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-VerificationBoundingBox</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-VerificationBoundingBox</code> </p> </li> <li> <p> <i>Semantic segmentation verification</i> - Uses a variant of the Expectation Maximization approach to estimate the true class of verification judgment for semantic segmentation labels based on annotations from individual workers.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-VerificationSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <i>Bounding box adjustment</i> - Finds the most similar boxes from different workers based on the Jaccard index of the adjusted annotations.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-AdjustmentBoundingBox</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-AdjustmentBoundingBox</code> </p> </li> <li> <p> <i>Semantic segmentation adjustment</i> - Treats each pixel in an image as a multi-class classification and treats pixel adjusted annotations from workers as "votes" for the correct label.</p> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:ACS-AdjustmentSemanticSegmentation</code> </p> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:ACS-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-annotation-consolidation.html">Annotation Consolidation</a>.</p>'
      description: Configures how labels are consolidated across human workers.
    AppArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app/.*'
      maxLength: 256
    DomainId:
      type: string
      maxLength: 63
    UserProfileName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    AppType:
      type: string
      enum:
        - JupyterServer
        - KernelGateway
        - TensorBoard
    AppName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    AppStatus:
      type: string
      enum:
        - Deleted
        - Deleting
        - Failed
        - InService
        - Pending
    AppDetails:
      type: object
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        AppType:
          $ref: '#/components/schemas/AppType'
          description: The type of app.
        AppName:
          $ref: '#/components/schemas/AppName'
          description: The name of the app.
        Status:
          $ref: '#/components/schemas/AppStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
      description: The app's details.
    AppInstanceType:
      type: string
      enum:
        - system
        - ml.t3.micro
        - ml.t3.small
        - ml.t3.medium
        - ml.t3.large
        - ml.t3.xlarge
        - ml.t3.2xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.8xlarge
        - ml.m5.12xlarge
        - ml.m5.16xlarge
        - ml.m5.24xlarge
        - ml.c5.large
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.12xlarge
        - ml.c5.18xlarge
        - ml.c5.24xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
    AppList:
      type: array
      items:
        $ref: '#/components/schemas/AppDetails'
    AppSortKey:
      type: string
      enum:
        - CreationTime
    ImageUri:
      type: string
      pattern: .*
      maxLength: 255
    ContainerEntrypoint:
      type: array
      items:
        $ref: '#/components/schemas/ContainerEntrypointString'
      minItems: 1
      maxItems: 100
    ContainerArguments:
      type: array
      items:
        $ref: '#/components/schemas/ContainerArgument'
      minItems: 1
      maxItems: 100
    AppSpecification:
      type: object
      required:
        - ImageUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The container image to be run by the processing job.
        ContainerEntrypoint:
          $ref: '#/components/schemas/ContainerEntrypoint'
          description: The entrypoint for a container used to run a processing job.
        ContainerArguments:
          $ref: '#/components/schemas/ContainerArguments'
          description: The arguments for a container used to run a processing job.
      description: Configuration to run a processing job in a specified container image.
    AssemblyType:
      type: string
      enum:
        - None
        - Line
    ExperimentEntityName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 82
    TrialComponentArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial-component/.*'
      maxLength: 256
    TrialArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment-trial/.*'
      maxLength: 256
    AttributeName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 256
    AttributeNames:
      type: array
      items:
        $ref: '#/components/schemas/AttributeName'
      maxItems: 16
    AuthMode:
      type: string
      enum:
        - SSO
        - IAM
    CandidateName:
      type: string
      minLength: 1
      maxLength: 64
    FinalAutoMLJobObjectiveMetric:
      type: object
      required:
        - MetricName
        - Value
      properties:
        Type:
          $ref: '#/components/schemas/AutoMLJobObjectiveType'
          description: The metric type used.
        MetricName:
          $ref: '#/components/schemas/AutoMLMetricEnum'
          description: The name of the metric.
        Value:
          $ref: '#/components/schemas/MetricValue'
          description: The value of the metric.
      description: The candidate result from a job.
    ObjectiveStatus:
      type: string
      enum:
        - Succeeded
        - Pending
        - Failed
    CandidateSteps:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLCandidateStep'
    CandidateStatus:
      type: string
      enum:
        - Completed
        - InProgress
        - Failed
        - Stopped
        - Stopping
    AutoMLContainerDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLContainerDefinition'
      maxItems: 5
    Timestamp:
      type: string
      format: date-time
    AutoMLFailureReason:
      type: string
      maxLength: 1024
    AutoMLCandidate:
      type: object
      required:
        - CandidateName
        - ObjectiveStatus
        - CandidateSteps
        - CandidateStatus
        - CreationTime
        - LastModifiedTime
      properties:
        CandidateName:
          $ref: '#/components/schemas/CandidateName'
          description: The candidate name.
        FinalAutoMLJobObjectiveMetric:
          $ref: '#/components/schemas/FinalAutoMLJobObjectiveMetric'
        ObjectiveStatus:
          $ref: '#/components/schemas/ObjectiveStatus'
          description: The objective status.
        CandidateSteps:
          $ref: '#/components/schemas/CandidateSteps'
          description: The candidate's steps.
        CandidateStatus:
          $ref: '#/components/schemas/CandidateStatus'
          description: The candidate's status.
        InferenceContainers:
          $ref: '#/components/schemas/AutoMLContainerDefinitions'
          description: The inference containers.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end time.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last modified time.
        FailureReason:
          $ref: '#/components/schemas/AutoMLFailureReason'
          description: The failure reason.
      description: 'An AutoPilot job will return recommendations, or candidates. Each candidate has futher details about the steps involed, and the status.'
    CandidateStepType:
      type: string
      enum:
        - 'AWS::SageMaker::TrainingJob'
        - 'AWS::SageMaker::TransformJob'
        - 'AWS::SageMaker::ProcessingJob'
    CandidateStepArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*/.*'
      minLength: 1
      maxLength: 256
    CandidateStepName:
      type: string
      minLength: 1
      maxLength: 64
    AutoMLCandidateStep:
      type: object
      required:
        - CandidateStepType
        - CandidateStepArn
        - CandidateStepName
      properties:
        CandidateStepType:
          $ref: '#/components/schemas/CandidateStepType'
          description: 'Whether the Candidate is at the transform, training, or processing step.'
        CandidateStepArn:
          $ref: '#/components/schemas/CandidateStepArn'
          description: The ARN for the Candidate's step.
        CandidateStepName:
          $ref: '#/components/schemas/CandidateStepName'
          description: The name for the Candidate's step.
      description: 'Information about the steps for a Candidate, and what step it is working on.'
    AutoMLCandidates:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLCandidate'
    AutoMLDataSource:
      type: object
      required:
        - S3DataSource
      properties:
        S3DataSource:
          $ref: '#/components/schemas/AutoMLS3DataSource'
          description: The Amazon S3 location of the data.
      description: The data source for the AutoPilot job.
    CompressionType:
      type: string
      enum:
        - None
        - Gzip
    TargetAttributeName:
      type: string
      minLength: 1
    AutoMLChannel:
      type: object
      required:
        - DataSource
        - TargetAttributeName
      properties:
        DataSource:
          $ref: '#/components/schemas/AutoMLDataSource'
          description: The data source.
        CompressionType:
          $ref: '#/components/schemas/CompressionType'
          description: You can use Gzip or None. The default value is None.
        TargetAttributeName:
          $ref: '#/components/schemas/TargetAttributeName'
          description: 'The name of the target variable in supervised learning, a.k.a. ''y''.'
      description: Similar to Channel. A channel is a named input source that training algorithms can consume. Refer to Channel for detailed descriptions.
    Image:
      type: string
      pattern: '[\S]+'
      maxLength: 255
    Url:
      type: string
      pattern: '^(https|s3)://([^/]+)/?(.*)$'
      maxLength: 1024
    EnvironmentMap:
      type: object
      maxProperties: 16
      additionalProperties:
        $ref: '#/components/schemas/EnvironmentValue'
    AutoMLContainerDefinition:
      type: object
      required:
        - Image
        - ModelDataUrl
      properties:
        Image:
          $ref: '#/components/schemas/Image'
          description: The ECR path of the container. Refer to ContainerDefinition for more details.
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: The location of the model artifacts. Refer to ContainerDefinition for more details.
        Environment:
          $ref: '#/components/schemas/EnvironmentMap'
          description: Environment variables to set in the container. Refer to ContainerDefinition for more details.
      description: A list of container definitions that describe the different containers that make up one AutoML candidate. Refer to ContainerDefinition for more details.
    AutoMLS3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: '#/components/schemas/AutoMLS3DataType'
          description: The data type.
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The URL to the Amazon S3 data source.
      description: The Amazon S3 data source.
    AutoMLInputDataConfig:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLChannel'
      minItems: 1
      maxItems: 20
    AutoMLJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:automl-job/.*'
      minLength: 1
      maxLength: 256
    CandidateDefinitionNotebookLocation:
      type: string
      minLength: 1
    DataExplorationNotebookLocation:
      type: string
      minLength: 1
    AutoMLJobArtifacts:
      type: object
      properties:
        CandidateDefinitionNotebookLocation:
          $ref: '#/components/schemas/CandidateDefinitionNotebookLocation'
          description: The URL to the notebook location.
        DataExplorationNotebookLocation:
          $ref: '#/components/schemas/DataExplorationNotebookLocation'
          description: The URL to the notebook location.
      description: Artifacts that are generation during a job.
    MaxCandidates:
      type: integer
      minimum: 1
    MaxRuntimePerTrainingJobInSeconds:
      type: integer
      minimum: 1
    MaxAutoMLJobRuntimeInSeconds:
      type: integer
      minimum: 1
    AutoMLJobCompletionCriteria:
      type: object
      properties:
        MaxCandidates:
          $ref: '#/components/schemas/MaxCandidates'
          description: The maximum number of times a training job is allowed to run.
        MaxRuntimePerTrainingJobInSeconds:
          $ref: '#/components/schemas/MaxRuntimePerTrainingJobInSeconds'
          description: 'The maximum time, in seconds, a job is allowed to run.'
        MaxAutoMLJobRuntimeInSeconds:
          $ref: '#/components/schemas/MaxAutoMLJobRuntimeInSeconds'
          description: 'The maximum time, in seconds, an AutoML job is allowed to wait for a trial to complete. It must be equal to or greater than MaxRuntimePerTrainingJobInSeconds.'
      description: 'How long a job is allowed to run, or how many candidates a job is allowed to generate.'
    AutoMLSecurityConfig:
      type: object
      properties:
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The key used to encrypt stored data.
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: Whether to use traffic encryption between the container layers.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: VPC configuration.
      description: Security options.
    AutoMLJobConfig:
      type: object
      properties:
        CompletionCriteria:
          $ref: '#/components/schemas/AutoMLJobCompletionCriteria'
          description: 'How long a job is allowed to run, or how many candidates a job is allowed to generate.'
        SecurityConfig:
          $ref: '#/components/schemas/AutoMLSecurityConfig'
          description: Security configuration for traffic encryption or Amazon VPC settings.
      description: A collection of settings used for a job.
    AutoMLJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 32
    AutoMLMetricEnum:
      type: string
      enum:
        - Accuracy
        - MSE
        - F1
        - F1macro
    AutoMLJobObjective:
      type: object
      required:
        - MetricName
      properties:
        MetricName:
          $ref: '#/components/schemas/AutoMLMetricEnum'
          description: The name of the metric.
      description: Applies a metric to minimize or maximize for the job's objective.
    AutoMLJobObjectiveType:
      type: string
      enum:
        - Maximize
        - Minimize
    AutoMLJobSecondaryStatus:
      type: string
      enum:
        - Starting
        - AnalyzingData
        - FeatureEngineering
        - ModelTuning
        - MaxCandidatesReached
        - Failed
        - Stopped
        - MaxAutoMLJobRuntimeReached
        - Stopping
        - CandidateDefinitionsGenerated
    AutoMLJobStatus:
      type: string
      enum:
        - Completed
        - InProgress
        - Failed
        - Stopped
        - Stopping
    AutoMLJobSummary:
      type: object
      required:
        - AutoMLJobName
        - AutoMLJobArn
        - AutoMLJobStatus
        - AutoMLJobSecondaryStatus
        - CreationTime
        - LastModifiedTime
      properties:
        AutoMLJobName:
          $ref: '#/components/schemas/AutoMLJobName'
          description: The name of the object you are requesting.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The ARN of the job.
        AutoMLJobStatus:
          $ref: '#/components/schemas/AutoMLJobStatus'
          description: The job's status.
        AutoMLJobSecondaryStatus:
          $ref: '#/components/schemas/AutoMLJobSecondaryStatus'
          description: The job's secondary status.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the job was created.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end time.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the job was last modified.
        FailureReason:
          $ref: '#/components/schemas/AutoMLFailureReason'
          description: The failure reason.
      description: Provides a summary about a job.
    AutoMLJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AutoMLJobSummary'
    AutoMLMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    AutoMLNameContains:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      maxLength: 63
    KmsKeyId:
      type: string
      pattern: .*
      maxLength: 2048
    S3Uri:
      type: string
      pattern: '^(https|s3)://([^/]+)/?(.*)$'
      maxLength: 1024
    AutoMLOutputDataConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The AWS KMS encryption key ID.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 output path. Must be 128 characters or less.
      description: The output data configuration.
    AutoMLS3DataType:
      type: string
      enum:
        - ManifestFile
        - S3Prefix
    VpcConfig:
      type: object
      required:
        - SecurityGroupIds
        - Subnets
      properties:
        SecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIds'
          description: 'The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the <code>Subnets</code> field.'
        Subnets:
          $ref: '#/components/schemas/Subnets'
          description: 'The ID of the subnets in the VPC to which you want to connect your training job or model. For information about the availability of specific instance types, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/instance-types-az.html">Supported Instance Types and Availability Zones</a>.'
      description: 'Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. '
    AutoMLSortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    AutoMLSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    AwsManagedHumanLoopRequestSource:
      type: string
      enum:
        - AWS/Rekognition/DetectModerationLabels/Image/V3
        - AWS/Textract/AnalyzeDocument/Forms/V1
    BatchStrategy:
      type: string
      enum:
        - MultiRecord
        - SingleRecord
    BillableTimeInSeconds:
      type: integer
      minimum: 1
    BooleanOperator:
      type: string
      enum:
        - And
        - Or
    Branch:
      type: string
      pattern: '[^ ~^:?*\[]+'
      minLength: 1
      maxLength: 1024
    CandidateSortBy:
      type: string
      enum:
        - CreationTime
        - Status
        - FinalObjectiveMetricValue
    CsvContentTypes:
      type: array
      items:
        $ref: '#/components/schemas/CsvContentType'
      minItems: 1
      maxItems: 10
    JsonContentTypes:
      type: array
      items:
        $ref: '#/components/schemas/JsonContentType'
      minItems: 1
      maxItems: 10
    CaptureContentTypeHeader:
      type: object
      properties:
        CsvContentTypes:
          $ref: '#/components/schemas/CsvContentTypes'
          description: <p/>
        JsonContentTypes:
          $ref: '#/components/schemas/JsonContentTypes'
          description: <p/>
      description: <p/>
    CaptureMode:
      type: string
      enum:
        - Input
        - Output
    CaptureOption:
      type: object
      required:
        - CaptureMode
      properties:
        CaptureMode:
          $ref: '#/components/schemas/CaptureMode'
          description: <p/>
      description: <p/>
    CaptureOptionList:
      type: array
      items:
        $ref: '#/components/schemas/CaptureOption'
      minItems: 1
      maxItems: 2
    CaptureStatus:
      type: string
      enum:
        - Started
        - Stopped
    ParameterKey:
      type: string
      pattern: .*
      maxLength: 256
    ParameterValues:
      type: array
      items:
        $ref: '#/components/schemas/ParameterValue'
      minItems: 1
      maxItems: 20
    CategoricalParameterRange:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/ParameterKey'
          description: The name of the categorical hyperparameter to tune.
        Values:
          $ref: '#/components/schemas/ParameterValues'
          description: A list of the categories for the hyperparameter.
      description: A list of categorical hyperparameters to tune.
    CategoricalParameterRangeSpecification:
      type: object
      required:
        - Values
      properties:
        Values:
          $ref: '#/components/schemas/ParameterValues'
          description: The allowed categories for the hyperparameter.
      description: Defines the possible values for a categorical hyperparameter.
    CategoricalParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/CategoricalParameterRange'
      minItems: 0
      maxItems: 20
    Cents:
      type: integer
      minimum: 0
      maximum: 99
    CertifyForMarketplace:
      type: boolean
    ChannelName:
      type: string
      pattern: '[A-Za-z0-9\.\-_]+'
      minLength: 1
      maxLength: 64
    DataSource:
      type: object
      properties:
        S3DataSource:
          $ref: '#/components/schemas/S3DataSource'
          description: The S3 location of the data source that is associated with a channel.
        FileSystemDataSource:
          $ref: '#/components/schemas/FileSystemDataSource'
          description: The file system that is associated with a channel.
      description: Describes the location of the channel data.
    ContentType:
      type: string
      pattern: .*
      maxLength: 256
    RecordWrapper:
      type: string
      enum:
        - None
        - RecordIO
    ShuffleConfig:
      type: object
      required:
        - Seed
      properties:
        Seed:
          $ref: '#/components/schemas/Seed'
          description: Determines the shuffling order in <code>ShuffleConfig</code> value.
      description: '<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, the results of the S3 key prefix matches are shuffled. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, when <code>ShuffleConfig</code> is specified shuffling is done at the start of every epoch. With large datasets, this ensures that the order of the training data is different for each epoch, and it helps reduce bias and possible overfitting. In a multi-node training job when <code>ShuffleConfig</code> is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>'
    Channel:
      type: object
      required:
        - ChannelName
        - DataSource
      properties:
        ChannelName:
          $ref: '#/components/schemas/ChannelName'
          description: 'The name of the channel. '
        DataSource:
          $ref: '#/components/schemas/DataSource'
          description: The location of the channel data.
        ContentType:
          $ref: '#/components/schemas/ContentType'
          description: The MIME type of the data.
        CompressionType:
          $ref: '#/components/schemas/CompressionType'
          description: 'If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in Pipe input mode. In File mode, leave this field unset or set it to None.'
        RecordWrapperType:
          $ref: '#/components/schemas/RecordWrapper'
          description: '<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format. In this case, Amazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don''t need to set this attribute. For more information, see <a href="https://mxnet.apache.org/api/architecture/note_data_loading#data-format">Create a Dataset Using RecordIO</a>. </p> <p>In File mode, leave this field unset or set it to None.</p>'
        InputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>(Optional) The input mode to use for the data channel in a training job. If you don''t set a value for <code>InputMode</code>, Amazon SageMaker uses the value set for <code>TrainingInputMode</code>. Use this parameter to override the <code>TrainingInputMode</code> setting in a <a>AlgorithmSpecification</a> request when you have a channel that needs a different input mode from the training job''s general setting. To download the data from Amazon Simple Storage Service (Amazon S3) to the provisioned ML storage volume, and mount the directory to a Docker volume, use <code>File</code> input mode. To stream data directly from Amazon S3 to the container, choose <code>Pipe</code> input mode.</p> <p>To use a model for incremental training, choose <code>File</code> input model.</p>'
        ShuffleConfig:
          $ref: '#/components/schemas/ShuffleConfig'
          description: '<p>A configuration for a shuffle option for input data in a channel. If you use <code>S3Prefix</code> for <code>S3DataType</code>, this shuffles the results of the S3 key prefix matches. If you use <code>ManifestFile</code>, the order of the S3 object references in the <code>ManifestFile</code> is shuffled. If you use <code>AugmentedManifestFile</code>, the order of the JSON lines in the <code>AugmentedManifestFile</code> is shuffled. The shuffling order is determined using the <code>Seed</code> value.</p> <p>For Pipe input mode, shuffling is done at the start of every epoch. With large datasets this ensures that the order of the training data is different for each epoch, it helps reduce bias and possible overfitting. In a multi-node training job when ShuffleConfig is combined with <code>S3DataDistributionType</code> of <code>ShardedByS3Key</code>, the data is shuffled across nodes so that the content sent to a particular node on the first epoch might be sent to a different node on the second epoch.</p>'
      description: 'A channel is a named input source that training algorithms can consume. '
    ContentTypes:
      type: array
      items:
        $ref: '#/components/schemas/ContentType'
    CompressionTypes:
      type: array
      items:
        $ref: '#/components/schemas/CompressionType'
    InputModes:
      type: array
      items:
        $ref: '#/components/schemas/TrainingInputMode'
      minItems: 1
    ChannelSpecification:
      type: object
      required:
        - Name
        - SupportedContentTypes
        - SupportedInputModes
      properties:
        Name:
          $ref: '#/components/schemas/ChannelName'
          description: The name of the channel.
        Description:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the channel.
        IsRequired:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether the channel is required by the algorithm.
        SupportedContentTypes:
          $ref: '#/components/schemas/ContentTypes'
          description: The supported MIME types for the data.
        SupportedCompressionTypes:
          $ref: '#/components/schemas/CompressionTypes'
          description: 'The allowed compression types, if data compression is used.'
        SupportedInputModes:
          $ref: '#/components/schemas/InputModes'
          description: '<p>The allowed input mode, either FILE or PIPE.</p> <p>In FILE mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode.</p> <p>In PIPE mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.</p>'
      description: 'Defines a named input source, called a channel, to be used by an algorithm.'
    ChannelSpecifications:
      type: array
      items:
        $ref: '#/components/schemas/ChannelSpecification'
      minItems: 1
      maxItems: 8
    DirectoryPath:
      type: string
      pattern: .*
      maxLength: 4096
    CheckpointConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'Identifies the S3 path where you want Amazon SageMaker to store checkpoints. For example, <code>s3://bucket-name/key-name-prefix</code>.'
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: '(Optional) The local directory where checkpoints are written. The default directory is <code>/opt/ml/checkpoints/</code>. '
      description: 'Contains information about the output location for managed spot training checkpoint data. '
    Cidr:
      type: string
      pattern: '(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$)|(^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))$)'
      minLength: 4
      maxLength: 64
    Cidrs:
      type: array
      items:
        $ref: '#/components/schemas/Cidr'
    CodeRepositoryArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:code-repository/.*'
      minLength: 1
      maxLength: 2048
    CodeRepositoryContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 1024
    CodeRepositoryNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    CodeRepositorySortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - LastModifiedTime
    CodeRepositorySortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    LastModifiedTime:
      type: string
      format: date-time
    GitConfig:
      type: object
      required:
        - RepositoryUrl
      properties:
        RepositoryUrl:
          $ref: '#/components/schemas/GitConfigUrl'
          description: The URL where the Git repository is located.
        Branch:
          $ref: '#/components/schemas/Branch'
          description: The default branch for the Git repository.
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
      description: Specifies configuration details for a Git repository in your AWS account.
    CodeRepositorySummary:
      type: object
      required:
        - CodeRepositoryName
        - CodeRepositoryArn
        - CreationTime
        - LastModifiedTime
      properties:
        CodeRepositoryName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the Git repository.
        CodeRepositoryArn:
          $ref: '#/components/schemas/CodeRepositoryArn'
          description: The Amazon Resource Name (ARN) of the Git repository.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The date and time that the Git repository was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The date and time that the Git repository was last modified.
        GitConfig:
          $ref: '#/components/schemas/GitConfig'
          description: 'Configuration details for the Git repository, including the URL where it is located and the ARN of the AWS Secrets Manager secret that contains the credentials used to access the repository.'
      description: Specifies summary information about a Git repository.
    CodeRepositorySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CodeRepositorySummary'
    CognitoClientId:
      type: string
      pattern: '[\w+]+'
      minLength: 1
      maxLength: 128
    CognitoUserPool:
      type: string
      pattern: '[\w-]+_[0-9a-zA-Z]+'
      minLength: 1
      maxLength: 55
    CognitoUserGroup:
      type: string
      pattern: '[\p{L}\p{M}\p{S}\p{N}\p{P}]+'
      minLength: 1
      maxLength: 128
    CognitoMemberDefinition:
      type: object
      required:
        - UserPool
        - UserGroup
        - ClientId
      properties:
        UserPool:
          $ref: '#/components/schemas/CognitoUserPool'
          description: An identifier for a user pool. The user pool must be in the same region as the service that you are calling.
        UserGroup:
          $ref: '#/components/schemas/CognitoUserGroup'
          description: An identifier for a user group.
        ClientId:
          $ref: '#/components/schemas/CognitoClientId'
          description: An identifier for an application client. You must create the app client ID using Amazon Cognito.
      description: Identifies a Amazon Cognito user group. A user group can be used in on or more work teams.
    CollectionName:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    CollectionParameters:
      type: object
      minProperties: 0
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    CollectionConfiguration:
      type: object
      properties:
        CollectionName:
          $ref: '#/components/schemas/CollectionName'
          description: The name of the tensor collection. The name must be unique relative to other rule configuration names.
        CollectionParameters:
          $ref: '#/components/schemas/CollectionParameters'
          description: 'Parameter values for the tensor collection. The allowed parameters are <code>"name"</code>, <code>"include_regex"</code>, <code>"reduction_config"</code>, <code>"save_config"</code>, <code>"tensor_names"</code>, and <code>"save_histogram"</code>.'
      description: Configuration information for tensor collections.
    CollectionConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CollectionConfiguration'
      minItems: 0
      maxItems: 20
    ConfigValue:
      type: string
      pattern: .*
      maxLength: 256
    CompilationJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:compilation-job/.*'
      maxLength: 256
    CompilationJobStatus:
      type: string
      enum:
        - INPROGRESS
        - COMPLETED
        - FAILED
        - STARTING
        - STOPPING
        - STOPPED
    CompilationJobSummary:
      type: object
      required:
        - CompilationJobName
        - CompilationJobArn
        - CreationTime
        - CompilationTargetDevice
        - CompilationJobStatus
      properties:
        CompilationJobName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model compilation job that you want a summary for.
        CompilationJobArn:
          $ref: '#/components/schemas/CompilationJobArn'
          description: The Amazon Resource Name (ARN) of the model compilation job.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The time when the model compilation job was created.
        CompilationStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the model compilation job started.
        CompilationEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the model compilation job completed.
        CompilationTargetDevice:
          $ref: '#/components/schemas/TargetDevice'
          description: The type of device that the model will run on after compilation has completed.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The time when the model compilation job was last modified.
        CompilationJobStatus:
          $ref: '#/components/schemas/CompilationJobStatus'
          description: The status of the model compilation job.
      description: A summary of a model compilation job.
    CompilationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/CompilationJobSummary'
    TargetDevice:
      type: string
      enum:
        - lambda
        - ml_m4
        - ml_m5
        - ml_c4
        - ml_c5
        - ml_p2
        - ml_p3
        - ml_inf1
        - jetson_tx1
        - jetson_tx2
        - jetson_nano
        - jetson_xavier
        - rasp3b
        - imx8qm
        - deeplens
        - rk3399
        - rk3288
        - aisage
        - sbe_c
        - qcs605
        - qcs603
        - amba_cv22
    ConfigKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    ContainerArgument:
      type: string
      pattern: .*
      maxLength: 256
    ContainerHostname:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    ContainerMode:
      type: string
      enum:
        - SingleModel
        - MultiModel
    ContainerDefinition:
      type: object
      properties:
        ContainerHostname:
          $ref: '#/components/schemas/ContainerHostname'
          description: '<p>This parameter is ignored for models that contain only a <code>PrimaryContainer</code>.</p> <p>When a <code>ContainerDefinition</code> is part of an inference pipeline, the value of the parameter uniquely identifies the container for the purposes of logging and metrics. For information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/inference-pipeline-logs-metrics.html">Use Logs and Metrics to Monitor an Inference Pipeline</a>. If you don''t specify a value for this parameter for a <code>ContainerDefinition</code> that is part of an inference pipeline, a unique name is automatically assigned based on the position of the <code>ContainerDefinition</code> in the pipeline. If you specify a value for the <code>ContainerHostName</code> for any <code>ContainerDefinition</code> that is part of an inference pipeline, you must specify a value for the <code>ContainerHostName</code> parameter of every <code>ContainerDefinition</code> in that pipeline.</p>'
        Image:
          $ref: '#/components/schemas/Image'
          description: 'The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored. If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a> '
        Mode:
          $ref: '#/components/schemas/ContainerMode'
          description: Whether the container hosts a single model or multiple models.
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: '<p>The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). The S3 path is required for Amazon SageMaker built-in algorithms, but not if you use your own algorithms. For more information on built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Common Parameters</a>. </p> <p>If you provide a value for this parameter, Amazon SageMaker uses AWS Security Token Service to download model artifacts from the S3 path you provide. AWS STS is activated in your IAM user account by default. If you previously deactivated AWS STS for a region, you need to reactivate AWS STS for that region. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and Deactivating AWS STS in an AWS Region</a> in the <i>AWS Identity and Access Management User Guide</i>.</p> <important> <p>If you use a built-in algorithm to create a model, Amazon SageMaker requires that you provide a S3 path to the model artifacts in <code>ModelDataUrl</code>.</p> </important>'
        Environment:
          $ref: '#/components/schemas/EnvironmentMap'
          description: 'The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map. '
        ModelPackageName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name or Amazon Resource Name (ARN) of the model package to use to create the model.
      description: 'Describes the container, as part of model definition.'
    ContainerDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/ContainerDefinition'
      maxItems: 5
    ContainerEntrypointString:
      type: string
      pattern: .*
      maxLength: 256
    ContentClassifier:
      type: string
      enum:
        - FreeOfPersonallyIdentifiableInformation
        - FreeOfAdultContent
    ContentClassifiers:
      type: array
      items:
        $ref: '#/components/schemas/ContentClassifier'
      maxItems: 256
    ParameterValue:
      type: string
      pattern: .*
      maxLength: 256
    HyperParameterScalingType:
      type: string
      enum:
        - Auto
        - Linear
        - Logarithmic
        - ReverseLogarithmic
    ContinuousParameterRange:
      type: object
      required:
        - Name
        - MinValue
        - MaxValue
      properties:
        Name:
          $ref: '#/components/schemas/ParameterKey'
          description: The name of the continuous hyperparameter to tune.
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum value for the hyperparameter. The tuning job uses floating-point values between this value and <code>MaxValue</code>for tuning.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum value for the hyperparameter. The tuning job uses floating-point values between <code>MinValue</code> value and this value for tuning.
        ScalingType:
          $ref: '#/components/schemas/HyperParameterScalingType'
          description: '<p>The scale that hyperparameter tuning uses to search the hyperparameter range. For information about choosing a hyperparameter scale, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type">Hyperparameter Scaling</a>. One of the following values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon SageMaker hyperparameter tuning chooses the best scale for the hyperparameter.</p> </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.</p> <p>Logarithmic scaling works only for ranges that have only values greater than 0.</p> </dd> <dt>ReverseLogarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a reverse logarithmic scale.</p> <p>Reverse logarithmic scaling works only for ranges that are entirely within the range 0&lt;=x&lt;1.0.</p> </dd> </dl>'
      description: A list of continuous hyperparameters to tune.
    ContinuousParameterRangeSpecification:
      type: object
      required:
        - MinValue
        - MaxValue
      properties:
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum floating-point value allowed.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum floating-point value allowed.
      description: Defines the possible values for a continuous hyperparameter.
    ContinuousParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/ContinuousParameterRange'
      minItems: 0
      maxItems: 20
    TrainingSpecification:
      type: object
      required:
        - TrainingImage
        - SupportedTrainingInstanceTypes
        - TrainingChannels
      properties:
        TrainingImage:
          $ref: '#/components/schemas/Image'
          description: The Amazon ECR registry path of the Docker image that contains the training algorithm.
        TrainingImageDigest:
          $ref: '#/components/schemas/ImageDigest'
          description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
        SupportedHyperParameters:
          $ref: '#/components/schemas/HyperParameterSpecifications'
          description: 'A list of the <code>HyperParameterSpecification</code> objects, that define the supported hyperparameters. This is required if the algorithm supports automatic model tuning.&gt;'
        SupportedTrainingInstanceTypes:
          $ref: '#/components/schemas/TrainingInstanceTypes'
          description: A list of the instance types that this algorithm can use for training.
        SupportsDistributedTraining:
          $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the algorithm supports distributed training. If set to false, buyers can''t request more than one instance during training.'
        MetricDefinitions:
          $ref: '#/components/schemas/MetricDefinitionList'
          description: 'A list of <code>MetricDefinition</code> objects, which are used for parsing metrics generated by the algorithm.'
        TrainingChannels:
          $ref: '#/components/schemas/ChannelSpecifications'
          description: 'A list of <code>ChannelSpecification</code> objects, which specify the input sources to be used by the algorithm.'
        SupportedTuningJobObjectiveMetrics:
          $ref: '#/components/schemas/HyperParameterTuningJobObjectives'
          description: A list of the metrics that the algorithm emits that can be used as the objective metric in a hyperparameter tuning job.
      description: Defines how the algorithm is used for a training job.
    InferenceSpecification:
      type: object
      required:
        - Containers
        - SupportedTransformInstanceTypes
        - SupportedRealtimeInferenceInstanceTypes
        - SupportedContentTypes
        - SupportedResponseMIMETypes
      properties:
        Containers:
          $ref: '#/components/schemas/ModelPackageContainerDefinitionList'
          description: The Amazon ECR registry path of the Docker image that contains the inference code.
        SupportedTransformInstanceTypes:
          $ref: '#/components/schemas/TransformInstanceTypes'
          description: A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
        SupportedRealtimeInferenceInstanceTypes:
          $ref: '#/components/schemas/RealtimeInferenceInstanceTypes'
          description: A list of the instance types that are used to generate inferences in real-time.
        SupportedContentTypes:
          $ref: '#/components/schemas/ContentTypes'
          description: The supported MIME types for the input data.
        SupportedResponseMIMETypes:
          $ref: '#/components/schemas/ResponseMIMETypes'
          description: The supported MIME types for the output data.
      description: Defines how to perform inference generation after a training job is run.
    ResourceSpec:
      type: object
      properties:
        EnvironmentArn:
          $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the environment.
        InstanceType:
          $ref: '#/components/schemas/AppInstanceType'
          description: The instance type.
      description: The instance type and quantity.
    ProblemType:
      type: string
      enum:
        - BinaryClassification
        - MulticlassClassification
        - Regression
    GenerateCandidateDefinitionsOnly:
      type: boolean
    InputConfig:
      type: object
      required:
        - S3Uri
        - DataInputConfig
        - Framework
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).'
        DataInputConfig:
          $ref: '#/components/schemas/DataInputConfig'
          description: '<p>Specifies the name and shape of the expected data inputs for your trained model with a JSON dictionary form. The data inputs are <a>InputConfig$Framework</a> specific. </p> <ul> <li> <p> <code>TensorFlow</code>: You must specify the name and shape (NHWC format) of the expected data inputs using a dictionary format for your trained model. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"input":[1,1024,1024,3]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input\":[1,1024,1024,3]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"data1": [1,28,28,1], "data2":[1,28,28,1]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"data1\": [1,28,28,1], \"data2\":[1,28,28,1]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>KERAS</code>: You must specify the name and shape (NCHW format) of expected data inputs using a dictionary format for your trained model. Note that while Keras model artifacts should be uploaded in NHWC (channel-last) format, <code>DataInputConfig</code> should be specified in NCHW (channel-first) format. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"input_1":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input_1\":[1,3,224,224]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"input_1": [1,3,224,224], "input_2":[1,3,224,224]} </code> </p> </li> <li> <p>If using the CLI, <code>{\"input_1\": [1,3,224,224], \"input_2\":[1,3,224,224]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>MXNET/ONNX</code>: You must specify the name and shape (NCHW format) of the expected data inputs in order using a dictionary format for your trained model. The dictionary formats required for the console and CLI are different.</p> <ul> <li> <p>Examples for one input:</p> <ul> <li> <p>If using the console, <code>{"data":[1,3,1024,1024]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"data\":[1,3,1024,1024]}</code> </p> </li> </ul> </li> <li> <p>Examples for two inputs:</p> <ul> <li> <p>If using the console, <code>{"var1": [1,1,28,28], "var2":[1,1,28,28]} </code> </p> </li> <li> <p>If using the CLI, <code>{\"var1\": [1,1,28,28], \"var2\":[1,1,28,28]}</code> </p> </li> </ul> </li> </ul> </li> <li> <p> <code>PyTorch</code>: You can either specify the name and shape (NCHW format) of expected data inputs in order using a dictionary format for your trained model or you can specify the shape only using a list format. The dictionary formats required for the console and CLI are different. The list formats for the console and CLI are the same.</p> <ul> <li> <p>Examples for one input in dictionary format:</p> <ul> <li> <p>If using the console, <code>{"input0":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input0\":[1,3,224,224]}</code> </p> </li> </ul> </li> <li> <p>Example for one input in list format: <code>[[1,3,224,224]]</code> </p> </li> <li> <p>Examples for two inputs in dictionary format:</p> <ul> <li> <p>If using the console, <code>{"input0":[1,3,224,224], "input1":[1,3,224,224]}</code> </p> </li> <li> <p>If using the CLI, <code>{\"input0\":[1,3,224,224], \"input1\":[1,3,224,224]} </code> </p> </li> </ul> </li> <li> <p>Example for two inputs in list format: <code>[[1,3,224,224], [1,3,224,224]]</code> </p> </li> </ul> </li> <li> <p> <code>XGBOOST</code>: input data name and shape are not needed.</p> </li> </ul>'
        Framework:
          $ref: '#/components/schemas/Framework'
          description: 'Identifies the framework in which the model was trained. For example: TENSORFLOW.'
      description: 'Contains information about the location of input model artifacts, the name and shape of the expected data inputs, and the framework in which the model was trained.'
    OutputConfig:
      type: object
      required:
        - S3OutputLocation
        - TargetDevice
      properties:
        S3OutputLocation:
          $ref: '#/components/schemas/S3Uri'
          description: 'Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, s3://bucket-name/key-name-prefix.'
        TargetDevice:
          $ref: '#/components/schemas/TargetDevice'
          description: 'Identifies the device that you want to run your model on after it has been compiled. For example: ml_c5.'
      description: Contains information about the output location for the compiled model and the device (target) that the model runs on.
    StoppingCondition:
      type: object
      properties:
        MaxRuntimeInSeconds:
          $ref: '#/components/schemas/MaxRuntimeInSeconds'
          description: 'The maximum length of time, in seconds, that the training or compilation job can run. If job does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. The maximum value is 28 days.'
        MaxWaitTimeInSeconds:
          $ref: '#/components/schemas/MaxWaitTimeInSeconds'
          description: 'The maximum length of time, in seconds, how long you are willing to wait for a managed spot training job to complete. It is the amount of time spent waiting for Spot capacity plus the amount of time the training job runs. It must be equal to or greater than <code>MaxRuntimeInSeconds</code>. '
      description: '<p>Specifies a limit to how long a model training or compilation job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the time limit, Amazon SageMaker ends the training or compilation job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p> <p>The training algorithms provided by Amazon SageMaker automatically save the intermediate results of a model training job when possible. This attempt to save artifacts is only a best effort case as model might not be in a state from which it can be saved. For example, if training has just started, the model might not be ready to save. When saved, this intermediate data is a valid model artifact. You can use it to create a model with <code>CreateModel</code>.</p> <note> <p>The Neural Topic Model (NTM) currently does not support saving intermediate model artifacts. When training NTMs, make sure that the maximum runtime is sufficient for the training job to complete.</p> </note>'
    DomainName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    UserSettings:
      type: object
      properties:
        ExecutionRole:
          $ref: '#/components/schemas/RoleArn'
          description: The execution role for the user.
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroupIds'
          description: The security groups.
        SharingSettings:
          $ref: '#/components/schemas/SharingSettings'
          description: The sharing settings.
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
        TensorBoardAppSettings:
          $ref: '#/components/schemas/TensorBoardAppSettings'
          description: The TensorBoard app settings.
      description: A collection of settings.
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      minItems: 1
      maxItems: 16
    VpcId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    DomainArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:domain/.*'
      maxLength: 256
    String1024:
      type: string
      maxLength: 1024
    EndpointConfigName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    ProductionVariantList:
      type: array
      items:
        $ref: '#/components/schemas/ProductionVariant'
      minItems: 1
      maxItems: 10
    DataCaptureConfig:
      type: object
      required:
        - InitialSamplingPercentage
        - DestinationS3Uri
        - CaptureOptions
      properties:
        EnableCapture:
          $ref: '#/components/schemas/EnableCapture'
          description: <p/>
        InitialSamplingPercentage:
          $ref: '#/components/schemas/SamplingPercentage'
          description: <p/>
        DestinationS3Uri:
          $ref: '#/components/schemas/DestinationS3Uri'
          description: <p/>
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: <p/>
        CaptureOptions:
          $ref: '#/components/schemas/CaptureOptionList'
          description: <p/>
        CaptureContentTypeHeader:
          $ref: '#/components/schemas/CaptureContentTypeHeader'
          description: <p/>
      description: <p/>
    EndpointConfigArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint-config/.*'
      minLength: 20
      maxLength: 2048
    EndpointName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    EndpointArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:endpoint/.*'
      minLength: 20
      maxLength: 2048
    ExperimentDescription:
      type: string
      pattern: .*
      maxLength: 3072
    ExperimentArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:experiment/.*'
      maxLength: 256
    FlowDefinitionName:
      type: string
      pattern: '^[a-z0-9](-*[a-z0-9])*'
      minLength: 1
      maxLength: 63
    HumanLoopActivationConfig:
      type: object
      required:
        - HumanLoopRequestSource
        - HumanLoopActivationConditionsConfig
      properties:
        HumanLoopRequestSource:
          $ref: '#/components/schemas/HumanLoopRequestSource'
          description: Container for configuring the source of human task requests.
        HumanLoopActivationConditionsConfig:
          $ref: '#/components/schemas/HumanLoopActivationConditionsConfig'
          description: Container structure for defining under what conditions SageMaker creates a human loop.
      description: 'Provides information about how and under what conditions SageMaker creates a human loop. If <code>HumanLoopActivationConfig</code> is not given, then all requests go to humans.'
    HumanLoopConfig:
      type: object
      required:
        - WorkteamArn
        - HumanTaskUiArn
        - TaskTitle
        - TaskDescription
        - TaskCount
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: Amazon Resource Name (ARN) of a team of workers.
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: The Amazon Resource Name (ARN) of the human task user interface.
        TaskTitle:
          $ref: '#/components/schemas/FlowDefinitionTaskTitle'
          description: A title for the human worker task.
        TaskDescription:
          $ref: '#/components/schemas/FlowDefinitionTaskDescription'
          description: A description for the human worker task.
        TaskCount:
          $ref: '#/components/schemas/FlowDefinitionTaskCount'
          description: 'The number of distinct workers who will perform the same task on each object. For example, if <code>TaskCount</code> is set to <code>3</code> for an image classification labeling job, three workers will classify each input image. Increasing <code>TaskCount</code> can improve label accuracy.'
        TaskAvailabilityLifetimeInSeconds:
          $ref: '#/components/schemas/FlowDefinitionTaskAvailabilityLifetimeInSeconds'
          description: The length of time that a task remains available for labeling by human workers.
        TaskTimeLimitInSeconds:
          $ref: '#/components/schemas/FlowDefinitionTaskTimeLimitInSeconds'
          description: The amount of time that a worker has to complete a task.
        TaskKeywords:
          $ref: '#/components/schemas/FlowDefinitionTaskKeywords'
          description: Keywords used to describe the task so that workers can discover the task.
        PublicWorkforceTaskPrice:
          $ref: '#/components/schemas/PublicWorkforceTaskPrice'
      description: Describes the work to be performed by human workers.
    FlowDefinitionOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 path where the object containing human output will be made available.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Key Management Service (KMS) key ID for server-side encryption.
      description: Contains information about where human output will be stored.
    FlowDefinitionArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:flow-definition/.*'
      maxLength: 1024
    HumanTaskUiName:
      type: string
      pattern: '^[a-z0-9](-*[a-z0-9])*'
      minLength: 1
      maxLength: 63
    UiTemplate:
      type: object
      required:
        - Content
      properties:
        Content:
          $ref: '#/components/schemas/TemplateContent'
          description: The content of the Liquid template for the worker user interface.
      description: The Liquid template for the worker user interface.
    HumanTaskUiArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:human-task-ui/.*'
      maxLength: 1024
    HyperParameterTuningJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 32
    HyperParameterTuningJobConfig:
      type: object
      required:
        - Strategy
        - ResourceLimits
      properties:
        Strategy:
          $ref: '#/components/schemas/HyperParameterTuningJobStrategyType'
          description: 'Specifies how hyperparameter tuning chooses the combinations of hyperparameter values to use for the training job it launches. To use the Bayesian search strategy, set this to <code>Bayesian</code>. To randomly search, set it to <code>Random</code>. For information about search strategies, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-how-it-works.html">How Hyperparameter Tuning Works</a>.'
        HyperParameterTuningJobObjective:
          $ref: '#/components/schemas/HyperParameterTuningJobObjective'
          description: The <a>HyperParameterTuningJobObjective</a> object that specifies the objective metric for this tuning job.
        ResourceLimits:
          $ref: '#/components/schemas/ResourceLimits'
          description: The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs for this tuning job.
        ParameterRanges:
          $ref: '#/components/schemas/ParameterRanges'
          description: The <a>ParameterRanges</a> object that specifies the ranges of hyperparameters that this tuning job searches.
        TrainingJobEarlyStoppingType:
          $ref: '#/components/schemas/TrainingJobEarlyStoppingType'
          description: '<p>Specifies whether to use early stopping for training jobs launched by the hyperparameter tuning job. This can be one of the following values (the default value is <code>OFF</code>):</p> <dl> <dt>OFF</dt> <dd> <p>Training jobs launched by the hyperparameter tuning job do not use early stopping.</p> </dd> <dt>AUTO</dt> <dd> <p>Amazon SageMaker stops training jobs launched by the hyperparameter tuning job when they are unlikely to perform better than previously completed training jobs. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-early-stopping.html">Stop Training Jobs Early</a>.</p> </dd> </dl>'
        TuningJobCompletionCriteria:
          $ref: '#/components/schemas/TuningJobCompletionCriteria'
          description: The tuning job's completion criteria.
      description: Configures a hyperparameter tuning job.
    HyperParameterTrainingJobDefinition:
      type: object
      required:
        - AlgorithmSpecification
        - RoleArn
        - OutputDataConfig
        - ResourceConfig
        - StoppingCondition
      properties:
        DefinitionName:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitionName'
          description: The job definition name.
        TuningObjective:
          $ref: '#/components/schemas/HyperParameterTuningJobObjective'
        HyperParameterRanges:
          $ref: '#/components/schemas/ParameterRanges'
        StaticHyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: Specifies the values of hyperparameters that do not change for the tuning job.
        AlgorithmSpecification:
          $ref: '#/components/schemas/HyperParameterAlgorithmSpecification'
          description: The <a>HyperParameterAlgorithmSpecification</a> object that specifies the resource algorithm to use for the training jobs that the tuning job launches.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role associated with the training jobs that the tuning job launches.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: An array of <a>Channel</a> objects that specify the input for the training jobs that the tuning job launches.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'The <a>VpcConfig</a> object that specifies the VPC that you want the training jobs that this hyperparameter tuning job launches to connect to. Control access to and from your training container by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: Specifies the path to the Amazon S3 bucket where you store model artifacts from the training jobs that the tuning job launches.
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: '<p>The resources, including the compute instances and storage volumes, to use for the training jobs that the tuning job launches.</p> <p>Storage volumes store model artifacts and incremental states. Training algorithms might also use storage volumes for scratch space. If you want Amazon SageMaker to use the storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: 'Specifies a limit to how long a model hyperparameter training job can run. It also specifies how long you are willing to wait for a managed spot training job to complete. When the job reaches the a limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.'
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'Isolates the training container. No inbound or outbound network calls can be made, except for calls between peers within a training cluster for distributed training. If network isolation is used for training jobs that are configured to use a VPC, Amazon SageMaker downloads and uploads customer data and model artifacts through the specified VPC, but the training container does not have network access.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: A Boolean indicating whether managed spot training is enabled (<code>True</code>) or not (<code>False</code>).
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
      description: Defines the training jobs launched by a hyperparameter tuning job.
    HyperParameterTrainingJobDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTrainingJobDefinition'
      minItems: 1
      maxItems: 10
    HyperParameterTuningJobWarmStartConfig:
      type: object
      required:
        - ParentHyperParameterTuningJobs
        - WarmStartType
      properties:
        ParentHyperParameterTuningJobs:
          $ref: '#/components/schemas/ParentHyperParameterTuningJobs'
          description: '<p>An array of hyperparameter tuning jobs that are used as the starting point for the new hyperparameter tuning job. For more information about warm starting a hyperparameter tuning job, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-warm-start.html">Using a Previous Hyperparameter Tuning Job as a Starting Point</a>.</p> <p>Hyperparameter tuning jobs created before October 1, 2018 cannot be used as parent jobs for warm start tuning jobs.</p>'
        WarmStartType:
          $ref: '#/components/schemas/HyperParameterTuningJobWarmStartType'
          description: '<p>Specifies one of the following:</p> <dl> <dt>IDENTICAL_DATA_AND_ALGORITHM</dt> <dd> <p>The new hyperparameter tuning job uses the same input data and training image as the parent tuning jobs. You can change the hyperparameter ranges to search and the maximum number of training jobs that the hyperparameter tuning job launches. You cannot use a new version of the training algorithm, unless the changes in the new version do not affect the algorithm itself. For example, changes that improve logging or adding support for a different data format are allowed. You can also change hyperparameters from tunable to static, and from static to tunable, but the total number of static plus tunable hyperparameters must remain the same as it is in all parent jobs. The objective metric for the new tuning job must be the same as for all parent jobs.</p> </dd> <dt>TRANSFER_LEARNING</dt> <dd> <p>The new hyperparameter tuning job can include input data, hyperparameter ranges, maximum number of concurrent training jobs, and maximum number of training jobs that are different than those of its parent hyperparameter tuning jobs. The training image can also be a different version from the version used in the parent hyperparameter tuning job. You can also change hyperparameters from tunable to static, and from static to tunable, but the total number of static plus tunable hyperparameters must remain the same as it is in all parent jobs. The objective metric for the new tuning job must be the same as for all parent jobs.</p> </dd> </dl>'
      description: '<p>Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.</p> <p>All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.</p> <note> <p>All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.</p> </note>'
    HyperParameterTuningJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:hyper-parameter-tuning-job/.*'
      maxLength: 256
    LabelingJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 63
    LabelAttributeName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 127
    LabelingJobInputConfig:
      type: object
      required:
        - DataSource
      properties:
        DataSource:
          $ref: '#/components/schemas/LabelingJobDataSource'
          description: The location of the input data.
        DataAttributes:
          $ref: '#/components/schemas/LabelingJobDataAttributes'
          description: Attributes of the data specified by the customer.
      description: Input configuration information for a labeling job.
    LabelingJobOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 location to write output data.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The AWS Key Management Service ID of the key used to encrypt the output data, if any.</p> <p>If you use a KMS key ID or an alias of your master key, the Amazon SageMaker execution role must include permissions to call <code>kms:Encrypt</code>. If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. Amazon SageMaker uses server-side encryption with KMS-managed keys for <code>LabelingJobOutputConfig</code>. If you use a bucket policy with an <code>s3:PutObject</code> permission that only allows objects with server-side encryption, set the condition key of <code>s3:x-amz-server-side-encryption</code> to <code>"aws:kms"</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateLabelingJob</code> request. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      description: Output configuration information for a labeling job.
    LabelingJobStoppingConditions:
      type: object
      properties:
        MaxHumanLabeledObjectCount:
          $ref: '#/components/schemas/MaxHumanLabeledObjectCount'
          description: The maximum number of objects that can be labeled by human workers.
        MaxPercentageOfInputDatasetLabeled:
          $ref: '#/components/schemas/MaxPercentageOfInputDatasetLabeled'
          description: The maximum number of input data objects that should be labeled.
      description: '<p>A set of conditions for stopping a labeling job. If any of the conditions are met, the job is automatically stopped. You can use these conditions to control the cost of data labeling.</p> <note> <p>Labeling jobs fail after 30 days with an appropriate client error message.</p> </note>'
    LabelingJobAlgorithmsConfig:
      type: object
      required:
        - LabelingJobAlgorithmSpecificationArn
      properties:
        LabelingJobAlgorithmSpecificationArn:
          $ref: '#/components/schemas/LabelingJobAlgorithmSpecificationArn'
          description: '<p>Specifies the Amazon Resource Name (ARN) of the algorithm used for auto-labeling. You must select one of the following ARNs:</p> <ul> <li> <p> <i>Image classification</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/image-classification</code> </p> </li> <li> <p> <i>Text classification</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/text-classification</code> </p> </li> <li> <p> <i>Object detection</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/object-detection</code> </p> </li> <li> <p> <i>Semantic Segmentation</i> </p> <p> <code>arn:aws:sagemaker:<i>region</i>:027400017018:labeling-job-algorithm-specification/semantic-segmentation</code> </p> </li> </ul>'
        InitialActiveLearningModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: 'At the end of an auto-label job Amazon SageMaker Ground Truth sends the Amazon Resource Nam (ARN) of the final model used for auto-labeling. You can use this model as the starting point for subsequent similar jobs by providing the ARN of the model here. '
        LabelingJobResourceConfig:
          $ref: '#/components/schemas/LabelingJobResourceConfig'
          description: Provides configuration information for a labeling job.
      description: Provides configuration information for auto-labeling of your data objects. A <code>LabelingJobAlgorithmsConfig</code> object must be supplied in order to use auto-labeling.
    HumanTaskConfig:
      type: object
      required:
        - WorkteamArn
        - UiConfig
        - PreHumanTaskLambdaArn
        - TaskTitle
        - TaskDescription
        - NumberOfHumanWorkersPerDataObject
        - TaskTimeLimitInSeconds
        - AnnotationConsolidationConfig
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team assigned to complete the tasks.
        UiConfig:
          $ref: '#/components/schemas/UiConfig'
          description: Information about the user interface that workers use to complete the labeling task.
        PreHumanTaskLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: '<p>The Amazon Resource Name (ARN) of a Lambda function that is run before a data object is sent to a human worker. Use this function to provide input to a custom labeling job.</p> <p>For the built-in bounding box, image classification, semantic segmentation, and text classification task types, Amazon SageMaker Ground Truth provides the following Lambda functions:</p> <p> <b>US East (Northern Virginia) (us-east-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-1:432418664414:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>US East (Ohio) (us-east-2):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-east-2:266458841044:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>US West (Oregon) (us-west-2):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:us-west-2:081040173940:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Canada (Central) (ca-central-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ca-central-1:918755190332:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>EU (Ireland) (eu-west-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-1:568282634449:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>EU (London) (eu-west-2):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-west-2:487402164563:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>EU Frankfurt (eu-central-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:eu-central-1:203001061592:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Asia Pacific (Tokyo) (ap-northeast-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-1:477331159723:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Asia Pacific (Seoul) (ap-northeast-2):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-northeast-2:845288260483:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Asia Pacific (Mumbai) (ap-south-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-south-1:565803892007:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Asia Pacific (Singapore) (ap-southeast-1):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-1:377565633583:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul> <p> <b>Asia Pacific (Sydney) (ap-southeast-2):</b> </p> <ul> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-BoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-ImageMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-SemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-TextMultiClass</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-NamedEntityRecognition</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-VerificationBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-VerificationSemanticSegmentation</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-AdjustmentBoundingBox</code> </p> </li> <li> <p> <code>arn:aws:lambda:ap-southeast-2:454466003867:function:PRE-AdjustmentSemanticSegmentation</code> </p> </li> </ul>'
        TaskKeywords:
          $ref: '#/components/schemas/TaskKeywords'
          description: Keywords used to describe the task so that workers on Amazon Mechanical Turk can discover the task.
        TaskTitle:
          $ref: '#/components/schemas/TaskTitle'
          description: A title for the task for your human workers.
        TaskDescription:
          $ref: '#/components/schemas/TaskDescription'
          description: A description of the task for your human workers.
        NumberOfHumanWorkersPerDataObject:
          $ref: '#/components/schemas/NumberOfHumanWorkersPerDataObject'
          description: 'The number of human workers that will label an object. '
        TaskTimeLimitInSeconds:
          $ref: '#/components/schemas/TaskTimeLimitInSeconds'
          description: The amount of time that a worker has to complete a task.
        TaskAvailabilityLifetimeInSeconds:
          $ref: '#/components/schemas/TaskAvailabilityLifetimeInSeconds'
          description: 'The length of time that a task remains available for labeling by human workers. <b>If you choose the Amazon Mechanical Turk workforce, the maximum is 12 hours (43200)</b>. The default value is 864000 seconds (1 day). For private and vendor workforces, the maximum is as listed.'
        MaxConcurrentTaskCount:
          $ref: '#/components/schemas/MaxConcurrentTaskCount'
          description: Defines the maximum number of data objects that can be labeled by human workers at the same time. Also referred to as batch size. Each object may have more than one worker at one time. The default value is 1000 objects.
        AnnotationConsolidationConfig:
          $ref: '#/components/schemas/AnnotationConsolidationConfig'
          description: Configures how labels are consolidated across human workers.
        PublicWorkforceTaskPrice:
          $ref: '#/components/schemas/PublicWorkforceTaskPrice'
          description: The price that you pay for each task performed by an Amazon Mechanical Turk worker.
      description: Information required for human workers to complete a labeling task.
    LabelingJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:labeling-job/.*'
      maxLength: 2048
    ModelName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    ModelArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model/.*'
      minLength: 20
      maxLength: 2048
    ModelPackageValidationSpecification:
      type: object
      required:
        - ValidationRole
        - ValidationProfiles
      properties:
        ValidationRole:
          $ref: '#/components/schemas/RoleArn'
          description: The IAM roles to be used for the validation of the model package.
        ValidationProfiles:
          $ref: '#/components/schemas/ModelPackageValidationProfiles'
          description: 'An array of <code>ModelPackageValidationProfile</code> objects, each of which specifies a batch transform job that Amazon SageMaker runs to validate your model package.'
      description: Specifies batch transform jobs that Amazon SageMaker runs to validate your model package.
    SourceAlgorithmSpecification:
      type: object
      required:
        - SourceAlgorithms
      properties:
        SourceAlgorithms:
          $ref: '#/components/schemas/SourceAlgorithmList'
          description: A list of the algorithms that were used to create a model package.
      description: A list of algorithms that were used to create a model package.
    ModelPackageArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:model-package/.*'
      minLength: 1
      maxLength: 2048
    MonitoringScheduleName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
      minLength: 1
      maxLength: 63
    MonitoringScheduleConfig:
      type: object
      required:
        - MonitoringJobDefinition
      properties:
        ScheduleConfig:
          $ref: '#/components/schemas/ScheduleConfig'
          description: Configures the monitoring schedule.
        MonitoringJobDefinition:
          $ref: '#/components/schemas/MonitoringJobDefinition'
          description: Defines the monitoring job.
      description: Configures the monitoring schedule and defines the monitoring job.
    MonitoringScheduleArn:
      type: string
      pattern: .*
      maxLength: 256
    NotebookInstanceName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    InstanceType:
      type: string
      enum:
        - ml.t2.medium
        - ml.t2.large
        - ml.t2.xlarge
        - ml.t2.2xlarge
        - ml.t3.medium
        - ml.t3.large
        - ml.t3.xlarge
        - ml.t3.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.c5d.xlarge
        - ml.c5d.2xlarge
        - ml.c5d.4xlarge
        - ml.c5d.9xlarge
        - ml.c5d.18xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
    SubnetId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
    NotebookInstanceLifecycleConfigName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    DirectInternetAccess:
      type: string
      enum:
        - Enabled
        - Disabled
    NotebookInstanceVolumeSizeInGB:
      type: integer
      minimum: 5
      maximum: 16384
    NotebookInstanceAcceleratorTypes:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceAcceleratorType'
    RootAccess:
      type: string
      enum:
        - Enabled
        - Disabled
    NotebookInstanceLifecycleConfigList:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceLifecycleHook'
      maxItems: 1
    NotebookInstanceLifecycleConfigArn:
      type: string
      maxLength: 256
    NotebookInstanceArn:
      type: string
      maxLength: 256
    SessionExpirationDurationInSeconds:
      type: integer
      minimum: 1800
      maximum: 43200
    PresignedDomainUrl:
      type: string
    NotebookInstanceUrl:
      type: string
    ProcessingInputs:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingInput'
      minItems: 0
      maxItems: 10
    ProcessingOutputConfig:
      type: object
      required:
        - Outputs
      properties:
        Outputs:
          $ref: '#/components/schemas/ProcessingOutputs'
          description: Output configuration information for a processing job.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs.'
      description: The output configuration for the processing job.
    ProcessingJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 63
    ProcessingResources:
      type: object
      required:
        - ClusterConfig
      properties:
        ClusterConfig:
          $ref: '#/components/schemas/ProcessingClusterConfig'
          description: The configuration for the resources in a cluster used to run the processing job.
      description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.'
    ProcessingStoppingCondition:
      type: object
      required:
        - MaxRuntimeInSeconds
      properties:
        MaxRuntimeInSeconds:
          $ref: '#/components/schemas/ProcessingMaxRuntimeInSeconds'
          description: Specifies the maximum runtime in seconds.
      description: Specifies a time limit for how long the processing job is allowed to run.
    ProcessingEnvironmentMap:
      type: object
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ProcessingEnvironmentValue'
    NetworkConfig:
      type: object
      properties:
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
      description: 'Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.'
    ExperimentConfig:
      type: object
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        TrialComponentDisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: Display name for the trial component.
      description: Configuration for the experiment.
    ProcessingJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*'
      maxLength: 256
    TrainingJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 63
    HyperParameters:
      type: object
      minProperties: 0
      maxProperties: 100
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    InputDataConfig:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
      minItems: 1
      maxItems: 20
    OutputDataConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// KMS Key Alias</p> <p> <code>"alias/ExampleAlias"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key Alias</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"</code> </p> </li> </ul> <p>If you use a KMS key ID or an alias of your master key, the Amazon SageMaker execution role must include permissions to call <code>kms:Encrypt</code>. If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. Amazon SageMaker uses server-side encryption with KMS-managed keys for <code>OutputDataConfig</code>. If you use a bucket policy with an <code>s3:PutObject</code> permission that only allows objects with server-side encryption, set the condition key of <code>s3:x-amz-server-side-encryption</code> to <code>"aws:kms"</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <code>CreateTrainingJob</code>, <code>CreateTransformJob</code>, or <code>CreateHyperParameterTuningJob</code> requests. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: 'Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. '
      description: Provides information about how to store model training results (model artifacts).
    ResourceConfig:
      type: object
      required:
        - InstanceType
        - InstanceCount
        - VolumeSizeInGB
      properties:
        InstanceType:
          $ref: '#/components/schemas/TrainingInstanceType'
          description: 'The ML compute instance type. '
        InstanceCount:
          $ref: '#/components/schemas/TrainingInstanceCount'
          description: 'The number of ML compute instances to use. For distributed training, provide a value greater than 1. '
        VolumeSizeInGB:
          $ref: '#/components/schemas/VolumeSizeInGB'
          description: '<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note> <note> <p>Certain Nitro-based instances include local storage with a fixed total size, dependent on the instance type. When using these instances for training, Amazon SageMaker mounts the local instance storage instead of Amazon EBS gp2 storage. You can''t request a <code>VolumeSizeInGB</code> greater than the total size of the local instance storage.</p> <p>For a list of instance types that support local instance storage, including the total size per instance type, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> </note>'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The AWS KMS key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job.</p> <note> <p>Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can''t request a <code>VolumeKmsKeyId</code> when using an instance type with local storage.</p> <p>For a list of instance types that support local instance storage, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes">Instance Store Volumes</a>.</p> <p>For more information about local instance storage encryption, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html">SSD Instance Store Volumes</a>.</p> </note> <p>The <code>VolumeKmsKeyId</code> can be in any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
      description: 'Describes the resources, including ML compute instances and ML storage volumes, to use for model training. '
    DebugHookConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: Path to local storage location for tensors. Defaults to <code>/opt/ml/output/tensors/</code>.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for tensors.
        HookParameters:
          $ref: '#/components/schemas/HookParameters'
          description: Configuration information for the debug hook parameters.
        CollectionConfigurations:
          $ref: '#/components/schemas/CollectionConfigurations'
          description: Configuration information for tensor collections.
      description: 'Configuration information for the debug hook parameters, collection configuration, and storage paths.'
    DebugRuleConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/DebugRuleConfiguration'
      minItems: 0
      maxItems: 20
    TensorBoardOutputConfig:
      type: object
      required:
        - S3OutputPath
      properties:
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: Path to local storage location for tensorBoard output. Defaults to <code>/opt/ml/output/tensorboard</code>.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for TensorBoard output.
      description: Configuration of storage locations for TensorBoard output.
    TrainingJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:training-job/.*'
      maxLength: 256
    TransformJobName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 63
    MaxConcurrentTransforms:
      type: integer
      minimum: 0
    MaxPayloadInMB:
      type: integer
      minimum: 0
    TransformEnvironmentMap:
      type: object
      maxProperties: 16
      additionalProperties:
        $ref: '#/components/schemas/TransformEnvironmentValue'
    TransformInput:
      type: object
      required:
        - DataSource
      properties:
        DataSource:
          $ref: '#/components/schemas/TransformDataSource'
          description: 'Describes the location of the channel data, which is, the S3 location of the input data that the model can consume.'
        ContentType:
          $ref: '#/components/schemas/ContentType'
          description: The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
        CompressionType:
          $ref: '#/components/schemas/CompressionType'
          description: 'If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is <code>None</code>.'
        SplitType:
          $ref: '#/components/schemas/SplitType'
          description: '<p>The method to use to split the transform job''s data files into smaller batches. Splitting is necessary when the total size of each object is too large to fit in a single request. You can also use data splitting to improve performance by processing multiple concurrent mini-batches. The default value for <code>SplitType</code> is <code>None</code>, which indicates that input data files are not split, and request payloads contain the entire contents of an input object. Set the value of this parameter to <code>Line</code> to split records on a newline character boundary. <code>SplitType</code> also supports a number of record-oriented binary data formats.</p> <p>When splitting is enabled, the size of a mini-batch depends on the values of the <code>BatchStrategy</code> and <code>MaxPayloadInMB</code> parameters. When the value of <code>BatchStrategy</code> is <code>MultiRecord</code>, Amazon SageMaker sends the maximum number of records in each request, up to the <code>MaxPayloadInMB</code> limit. If the value of <code>BatchStrategy</code> is <code>SingleRecord</code>, Amazon SageMaker sends individual records in each request.</p> <note> <p>Some data formats represent a record as a binary payload wrapped with extra padding bytes. When splitting is applied to a binary data format, padding is removed if the value of <code>BatchStrategy</code> is set to <code>SingleRecord</code>. Padding is not removed if the value of <code>BatchStrategy</code> is set to <code>MultiRecord</code>.</p> <p>For more information about <code>RecordIO</code>, see <a href="https://mxnet.apache.org/api/faq/recordio">Create a Dataset Using RecordIO</a> in the MXNet documentation. For more information about <code>TFRecord</code>, see <a href="https://www.tensorflow.org/guide/datasets#consuming_tfrecord_data">Consuming TFRecord data</a> in the TensorFlow documentation.</p> </note>'
      description: Describes the input source of a transform job and the way the transform job consumes it.
    TransformOutput:
      type: object
      required:
        - S3OutputPath
      properties:
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job. For example, <code>s3://bucket-name/key-name-prefix</code>.</p> <p>For every S3 object used as input for the transform job, batch transform stores the transformed data with an .<code>out</code> suffix in a corresponding subfolder in the location in the output prefix. For example, for the input data stored at <code>s3://bucket-name/input-name-prefix/dataset01/data.csv</code>, batch transform stores the transformed data at <code>s3://bucket-name/output-name-prefix/input-name-prefix/data.csv.out</code>. Batch transform doesn''t upload partially processed objects. For an input S3 object that contains multiple records, it creates an .<code>out</code> file only if the transform job succeeds on the entire file. When the input contains multiple S3 objects, the batch transform job processes the listed S3 objects and uploads only the output for successfully processed objects. If any object fails in the transform job batch transform marks the job as failed to prompt investigation.</p>'
        Accept:
          $ref: '#/components/schemas/Accept'
          description: The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
        AssembleWith:
          $ref: '#/components/schemas/AssemblyType'
          description: 'Defines how to assemble the results of the transform job as a single S3 object. Choose a format that is most convenient to you. To concatenate the results in binary format, specify <code>None</code>. To add a newline character at the end of every transformed record, specify <code>Line</code>.'
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following formats: </p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias name ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul> <p>If you don''t provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role''s account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the <i>Amazon Simple Storage Service Developer Guide.</i> </p> <p>The KMS key policy must grant permission to the IAM role that you specify in your <a>CreateModel</a> request. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>'
      description: Describes the results of a transform job.
    TransformResources:
      type: object
      required:
        - InstanceType
        - InstanceCount
      properties:
        InstanceType:
          $ref: '#/components/schemas/TransformInstanceType'
          description: 'The ML compute instance type for the transform job. If you are using built-in algorithms to transform moderately sized datasets, we recommend using ml.m4.xlarge or <code>ml.m5.large</code> instance types.'
        InstanceCount:
          $ref: '#/components/schemas/TransformInstanceCount'
          description: 'The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is <code>1</code>.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job. The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code> </p> </li> <li> <p>Alias name: <code>alias/ExampleAlias</code> </p> </li> <li> <p>Alias name ARN: <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code> </p> </li> </ul>'
      description: 'Describes the resources, including ML instance types and ML instance count, to use for transform job.'
    DataProcessing:
      type: object
      properties:
        InputFilter:
          $ref: '#/components/schemas/JsonPath'
          description: '<p>A <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html#data-processing-operators">JSONPath</a> expression used to select a portion of the input data to pass to the algorithm. Use the <code>InputFilter</code> parameter to exclude fields, such as an ID column, from the input. If you want Amazon SageMaker to pass the entire input dataset to the algorithm, accept the default value <code>$</code>.</p> <p>Examples: <code>"$"</code>, <code>"$[1:]"</code>, <code>"$.features"</code> </p>'
        OutputFilter:
          $ref: '#/components/schemas/JsonPath'
          description: '<p>A <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html#data-processing-operators">JSONPath</a> expression used to select a portion of the joined dataset to save in the output file for a batch transform job. If you want Amazon SageMaker to store the entire input dataset in the output file, leave the default value, <code>$</code>. If you specify indexes that aren''t within the dimension size of the joined dataset, you get an error.</p> <p>Examples: <code>"$"</code>, <code>"$[0,5:]"</code>, <code>"$[''id'',''SageMakerOutput'']"</code> </p>'
        JoinSource:
          $ref: '#/components/schemas/JoinSource'
          description: '<p>Specifies the source of the data to join with the transformed data. The valid values are <code>None</code> and <code>Input</code>. The default value is <code>None</code>, which specifies not to join the input with the transformed data. If you want the batch transform job to join the original input data with the transformed data, set <code>JoinSource</code> to <code>Input</code>. </p> <p>For JSON or JSONLines objects, such as a JSON array, Amazon SageMaker adds the transformed data to the input JSON object in an attribute called <code>SageMakerOutput</code>. The joined result for JSON must be a key-value pair object. If the input is not a key-value pair object, Amazon SageMaker creates a new JSON file. In the new JSON file, and the input data is stored under the <code>SageMakerInput</code> key and the results are stored in <code>SageMakerOutput</code>.</p> <p>For CSV files, Amazon SageMaker combines the transformed data with the input data at the end of the input data and stores it in the output file. The joined data has the joined input data followed by the transformed data and the output is a CSV file. </p>'
      description: 'The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.'
    TransformJobArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:transform-job/.*'
      maxLength: 256
    TrialComponentStatus:
      type: object
      properties:
        PrimaryStatus:
          $ref: '#/components/schemas/TrialComponentPrimaryStatus'
          description: The status of the trial component.
        Message:
          $ref: '#/components/schemas/TrialComponentStatusMessage'
          description: 'If the component failed, a message describing why.'
      description: The status of the trial component.
    TrialComponentParameters:
      type: object
      maxProperties: 150
      additionalProperties:
        $ref: '#/components/schemas/TrialComponentParameterValue'
    TrialComponentArtifacts:
      type: object
      maxProperties: 30
      additionalProperties:
        $ref: '#/components/schemas/TrialComponentArtifact'
    SingleSignOnUserIdentifier:
      type: string
      pattern: UserName
    String256:
      type: string
      maxLength: 256
    UserProfileArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*'
      maxLength: 256
    WorkteamName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 63
    MemberDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/MemberDefinition'
      minItems: 1
      maxItems: 10
    String200:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 200
    NotificationConfiguration:
      type: object
      properties:
        NotificationTopicArn:
          $ref: '#/components/schemas/NotificationTopicArn'
          description: The ARN for the SNS topic to which notifications should be published.
      description: Configures SNS notifications of available or expiring work items for work teams.
    WorkteamArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workteam/.*'
      maxLength: 256
    CsvContentType:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*'
      minLength: 1
    EnableCapture:
      type: boolean
    SamplingPercentage:
      type: integer
      minimum: 0
      maximum: 100
    DestinationS3Uri:
      type: string
      pattern: '^(https|s3)://([^/])/?(.*)$'
      maxLength: 512
    DataCaptureConfigSummary:
      type: object
      required:
        - EnableCapture
        - CaptureStatus
        - CurrentSamplingPercentage
        - DestinationS3Uri
        - KmsKeyId
      properties:
        EnableCapture:
          $ref: '#/components/schemas/EnableCapture'
          description: <p/>
        CaptureStatus:
          $ref: '#/components/schemas/CaptureStatus'
          description: <p/>
        CurrentSamplingPercentage:
          $ref: '#/components/schemas/SamplingPercentage'
          description: <p/>
        DestinationS3Uri:
          $ref: '#/components/schemas/DestinationS3Uri'
          description: <p/>
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: <p/>
      description: <p/>
    DataInputConfig:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 1024
    JsonPath:
      type: string
      minLength: 0
      maxLength: 63
    JoinSource:
      type: string
      enum:
        - Input
        - None
    S3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: '#/components/schemas/S3DataType'
          description: '<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects that match the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p> <p>If you choose <code>AugmentedManifestFile</code>, S3Uri identifies an object that is an augmented manifest file in JSON lines format. This file contains the data you want to use for model training. <code>AugmentedManifestFile</code> can only be used if the Channel''s input mode is <code>Pipe</code>.</p>'
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>[ {"prefix": "s3://customer_bucket/some/prefix/"},</code> </p> <p> <code>"relative/path/to/custdata-1",</code> </p> <p> <code>"relative/path/custdata-2",</code> </p> <p> <code>...</code> </p> <p> <code>"relative/path/custdata-N"</code> </p> <p> <code>]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-2</code> </p> <p> <code>...</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-N</code> </p> <p>The complete set of <code>s3uris</code> in this manifest is the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>'
        S3DataDistributionType:
          $ref: '#/components/schemas/S3DataDistribution'
          description: '<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don''t choose more ML compute instances for training than available S3 objects. If you do, some nodes won''t get any data and you will pay for nodes that aren''t getting any training data. This applies in both File and Pipe modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>'
        AttributeNames:
          $ref: '#/components/schemas/AttributeNames'
          description: A list of one or more attribute names to use that are found in a specified augmented manifest file.
      description: Describes the S3 data source.
    FileSystemDataSource:
      type: object
      required:
        - FileSystemId
        - FileSystemAccessMode
        - FileSystemType
        - DirectoryPath
      properties:
        FileSystemId:
          $ref: '#/components/schemas/FileSystemId'
          description: The file system id.
        FileSystemAccessMode:
          $ref: '#/components/schemas/FileSystemAccessMode'
          description: The access mode of the mount of the directory associated with the channel. A directory can be mounted either in <code>ro</code> (read-only) or <code>rw</code> (read-write) mode.
        FileSystemType:
          $ref: '#/components/schemas/FileSystemType'
          description: 'The file system type. '
        DirectoryPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: The full path to the directory to associate with the channel.
      description: Specifies a file system data source for a channel.
    HookParameters:
      type: object
      minProperties: 0
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    RuleConfigurationName:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 256
    ProcessingInstanceType:
      type: string
      enum:
        - ml.t3.medium
        - ml.t3.large
        - ml.t3.xlarge
        - ml.t3.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.r5.large
        - ml.r5.xlarge
        - ml.r5.2xlarge
        - ml.r5.4xlarge
        - ml.r5.8xlarge
        - ml.r5.12xlarge
        - ml.r5.16xlarge
        - ml.r5.24xlarge
    OptionalVolumeSizeInGB:
      type: integer
      minimum: 0
    RuleParameters:
      type: object
      minProperties: 0
      maxProperties: 20
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    DebugRuleConfiguration:
      type: object
      required:
        - RuleConfigurationName
        - RuleEvaluatorImage
      properties:
        RuleConfigurationName:
          $ref: '#/components/schemas/RuleConfigurationName'
          description: The name of the rule configuration. It must be unique relative to other rule configuration names.
        LocalPath:
          $ref: '#/components/schemas/DirectoryPath'
          description: Path to local storage location for output of rules. Defaults to <code>/opt/ml/processing/output/rule/</code>.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: Path to Amazon S3 storage location for rules.
        RuleEvaluatorImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: The Amazon Elastic Container (ECR) Image for the managed rule evaluation.
        InstanceType:
          $ref: '#/components/schemas/ProcessingInstanceType'
          description: The instance type to deploy for a training job.
        VolumeSizeInGB:
          $ref: '#/components/schemas/OptionalVolumeSizeInGB'
          description: 'The size, in GB, of the ML storage volume attached to the processing instance.'
        RuleParameters:
          $ref: '#/components/schemas/RuleParameters'
          description: ' Runtime configuration for rule container.'
      description: Configuration information for debugging rules.
    RuleEvaluationStatus:
      type: string
      enum:
        - InProgress
        - NoIssuesFound
        - IssuesFound
        - Error
        - Stopping
        - Stopped
    StatusDetails:
      type: string
      pattern: .*
      maxLength: 1024
    DebugRuleEvaluationStatus:
      type: object
      properties:
        RuleConfigurationName:
          $ref: '#/components/schemas/RuleConfigurationName'
          description: The name of the rule configuration
        RuleEvaluationJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the rule evaluation job.
        RuleEvaluationStatus:
          $ref: '#/components/schemas/RuleEvaluationStatus'
          description: Status of the rule evaluation.
        StatusDetails:
          $ref: '#/components/schemas/StatusDetails'
          description: Details from the rule evaluation.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp when the rule evaluation status was last modified.
      description: Information about the status of the rule evaluation.
    DebugRuleEvaluationStatuses:
      type: array
      items:
        $ref: '#/components/schemas/DebugRuleEvaluationStatus'
      minItems: 0
      maxItems: 20
    RetentionPolicy:
      type: object
      properties:
        HomeEfsFileSystem:
          $ref: '#/components/schemas/RetentionType'
          description: The home Amazon Elastic File System (EFS).
      description: The retention policy.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    Success:
      type: boolean
    DeployedImage:
      type: object
      properties:
        SpecifiedImage:
          $ref: '#/components/schemas/Image'
          description: The image path you specified when you created the model.
        ResolvedImage:
          $ref: '#/components/schemas/Image'
          description: The specific digest path of the image hosted in this <code>ProductionVariant</code>.
        ResolutionTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The date and time when the image path for the model resolved to the <code>ResolvedImage</code> '
      description: '<p>Gets the Amazon EC2 Container Registry path of the docker image of the model that is hosted in this <a>ProductionVariant</a>.</p> <p>If you used the <code>registry/repository[:tag]</code> form to specify the image path of the primary container when you created the model hosted in this <code>ProductionVariant</code>, the path resolves to a path of the form <code>registry/repository[@digest]</code>. A digest is a hash value that identifies a specific version of an image. For information about Amazon ECR paths, see <a href="https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html">Pulling an Image</a> in the <i>Amazon ECR User Guide</i>.</p>'
    DeployedImages:
      type: array
      items:
        $ref: '#/components/schemas/DeployedImage'
    ProductId:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*$'
      maxLength: 256
    FailureReason:
      type: string
      maxLength: 1024
    ResolvedAttributes:
      type: object
      properties:
        AutoMLJobObjective:
          $ref: '#/components/schemas/AutoMLJobObjective'
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
          description: The problem type.
        CompletionCriteria:
          $ref: '#/components/schemas/AutoMLJobCompletionCriteria'
      description: The resolved attributes.
    ModelArtifacts:
      type: object
      required:
        - S3ModelArtifacts
      properties:
        S3ModelArtifacts:
          $ref: '#/components/schemas/S3Uri'
          description: 'The path of the S3 object that contains the model artifacts. For example, <code>s3://bucket-name/keynameprefix/model.tar.gz</code>.'
      description: 'Provides information about the location that is configured for storing model artifacts. '
    ResourceId:
      type: string
      maxLength: 32
    DomainStatus:
      type: string
      enum:
        - Deleting
        - Failed
        - InService
        - Pending
    ProductionVariantSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ProductionVariantSummary'
      minItems: 1
    EndpointStatus:
      type: string
      enum:
        - OutOfService
        - Creating
        - Updating
        - SystemUpdating
        - RollingBack
        - InService
        - Deleting
        - Failed
    ExperimentSource:
      type: object
      required:
        - SourceArn
      properties:
        SourceArn:
          $ref: '#/components/schemas/ExperimentSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The source type.
      description: The source of the experiment.
    UserContext:
      type: object
      properties:
        UserProfileArn:
          $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the user's profile.
        UserProfileName:
          $ref: '#/components/schemas/String'
          description: The name of the user's profile.
        DomainId:
          $ref: '#/components/schemas/String'
          description: The domain associated with the user.
      description: 'Information about the user who created or modified an experiment, trial, or trial component.'
    FlowDefinitionStatus:
      type: string
      enum:
        - Initializing
        - Active
        - Failed
        - Deleting
        - Deleted
    UiTemplateInfo:
      type: object
      properties:
        Url:
          $ref: '#/components/schemas/TemplateUrl'
          description: The URL for the user interface template.
        ContentSha256:
          $ref: '#/components/schemas/TemplateContentSha256'
          description: The SHA 256 hash that you used to create the request signature.
      description: Container for user interface template information.
    HyperParameterTuningJobStatus:
      type: string
      enum:
        - Completed
        - InProgress
        - Failed
        - Stopped
        - Stopping
    TrainingJobStatusCounters:
      type: object
      properties:
        Completed:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of completed training jobs launched by the hyperparameter tuning job.
        InProgress:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of in-progress training jobs launched by a hyperparameter tuning job.
        RetryableError:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: 'The number of training jobs that failed, but can be retried. A failed training job can be retried only if it failed because an internal service error occurred.'
        NonRetryableError:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of training jobs that failed and can't be retried. A failed training job can't be retried if it failed because a client error occurred.
        Stopped:
          $ref: '#/components/schemas/TrainingJobStatusCounter'
          description: The number of training jobs launched by a hyperparameter tuning job that were manually stopped.
      description: 'The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.'
    ObjectiveStatusCounters:
      type: object
      properties:
        Succeeded:
          $ref: '#/components/schemas/ObjectiveStatusCounter'
          description: The number of training jobs whose final objective metric was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.
        Pending:
          $ref: '#/components/schemas/ObjectiveStatusCounter'
          description: The number of training jobs that are in progress and pending evaluation of their final objective metric.
        Failed:
          $ref: '#/components/schemas/ObjectiveStatusCounter'
          description: The number of training jobs whose final objective metric was not evaluated and used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.
      description: 'Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.'
    HyperParameterTrainingJobSummary:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - CreationTime
        - TrainingJobStatus
        - TunedHyperParameters
      properties:
        TrainingJobDefinitionName:
          $ref: '#/components/schemas/HyperParameterTrainingJobDefinitionName'
          description: The training job definition name.
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        TuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The HyperParameter tuning job that launched the training job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the training job was created.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the training job started.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Specifies the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: The status of the training job.
        TunedHyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: A list of the hyperparameters for which you specified ranges to search.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'The reason that the training job failed. '
        FinalHyperParameterTuningJobObjectiveMetric:
          $ref: '#/components/schemas/FinalHyperParameterTuningJobObjectiveMetric'
          description: The <a>FinalHyperParameterTuningJobObjectiveMetric</a> object that specifies the value of the objective metric of the tuning job that launched this training job.
        ObjectiveStatus:
          $ref: '#/components/schemas/ObjectiveStatus'
          description: '<p>The status of the objective metric for the training job:</p> <ul> <li> <p>Succeeded: The final objective metric for the training job was evaluated by the hyperparameter tuning job and used in the hyperparameter tuning process.</p> </li> </ul> <ul> <li> <p>Pending: The training job is in progress and evaluation of its final objective metric is pending.</p> </li> </ul> <ul> <li> <p>Failed: The final objective metric for the training job was not evaluated, and was not used in the hyperparameter tuning process. This typically occurs when the training job failed or did not emit an objective metric.</p> </li> </ul>'
      description: Specifies summary information about a training job.
    LabelingJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    LabelCounters:
      type: object
      properties:
        TotalLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects labeled.
        HumanLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects labeled by a human worker.
        MachineLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects labeled by automated data labeling.
        FailedNonRetryableError:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects that could not be labeled due to an error.
        Unlabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of objects not yet labeled.
      description: Provides a breakdown of the number of objects labeled.
    JobReferenceCode:
      type: string
      pattern: .+
      minLength: 1
    LabelingJobOutput:
      type: object
      required:
        - OutputDatasetS3Uri
      properties:
        OutputDatasetS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'The Amazon S3 bucket location of the manifest file for labeled data. '
        FinalActiveLearningModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: 'The Amazon Resource Name (ARN) for the most recent Amazon SageMaker model trained as part of automated data labeling. '
      description: 'Specifies the location of the output produced by the labeling job. '
    ModelPackageStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Completed
        - Failed
        - Deleting
    ModelPackageStatusDetails:
      type: object
      required:
        - ValidationStatuses
      properties:
        ValidationStatuses:
          $ref: '#/components/schemas/ModelPackageStatusItemList'
          description: The validation status of the model package.
        ImageScanStatuses:
          $ref: '#/components/schemas/ModelPackageStatusItemList'
          description: The status of the scan of the Docker image container for the model package.
      description: Specifies the validation and image scan statuses of the model package.
    ScheduleStatus:
      type: string
      enum:
        - Pending
        - Failed
        - Scheduled
        - Stopped
    MonitoringExecutionSummary:
      type: object
      required:
        - MonitoringScheduleName
        - ScheduledTime
        - CreationTime
        - LastModifiedTime
        - MonitoringExecutionStatus
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule.
        ScheduledTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time the monitoring job was scheduled.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the monitoring job was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates the last time the monitoring job was modified.
        MonitoringExecutionStatus:
          $ref: '#/components/schemas/ExecutionStatus'
          description: The status of the monitoring job.
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the monitoring job.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of teh endpoint used to run the monitoring job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'Contains the reason a monitoring job failed, if it failed.'
      description: Summary of information about the last monitoring job to run.
    NotebookInstanceStatus:
      type: string
      enum:
        - Pending
        - InService
        - Stopping
        - Stopped
        - Failed
        - Deleting
        - Updating
    NetworkInterfaceId:
      type: string
    ProcessingJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    ExitMessage:
      type: string
      pattern: '[\S\s]*'
      maxLength: 1024
    SubscribedWorkteam:
      type: object
      required:
        - WorkteamArn
      properties:
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the vendor that you have subscribed.
        MarketplaceTitle:
          $ref: '#/components/schemas/String200'
          description: The title of the service provided by the vendor in the Amazon Marketplace.
        SellerName:
          $ref: '#/components/schemas/String'
          description: The name of the vendor in the Amazon Marketplace.
        MarketplaceDescription:
          $ref: '#/components/schemas/String200'
          description: The description of the vendor from the Amazon Marketplace.
        ListingId:
          $ref: '#/components/schemas/String'
          description: <p/>
      description: Describes a work team of a vendor that does the a labelling job.
    TrainingJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    SecondaryStatus:
      type: string
      enum:
        - Starting
        - LaunchingMLInstances
        - PreparingTrainingStack
        - Downloading
        - DownloadingTrainingImage
        - Training
        - Uploading
        - Stopping
        - Stopped
        - MaxRuntimeExceeded
        - Completed
        - Failed
        - Interrupted
        - MaxWaitTimeExceeded
    SecondaryStatusTransitions:
      type: array
      items:
        $ref: '#/components/schemas/SecondaryStatusTransition'
    FinalMetricDataList:
      type: array
      items:
        $ref: '#/components/schemas/MetricData'
      minItems: 0
      maxItems: 40
    TrainingTimeInSeconds:
      type: integer
      minimum: 1
    TransformJobStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
        - Stopping
        - Stopped
    TrialComponentSource:
      type: object
      required:
        - SourceArn
      properties:
        SourceArn:
          $ref: '#/components/schemas/TrialComponentSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The source job type.
      description: The source of the trial component.
    TrialComponentMetricSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentMetricSummary'
    TrialSource:
      type: object
      required:
        - SourceArn
      properties:
        SourceArn:
          $ref: '#/components/schemas/TrialSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        SourceType:
          $ref: '#/components/schemas/SourceType'
          description: The source job type.
      description: The source of the trial.
    EfsUid:
      type: string
      pattern: \d+
      maxLength: 10
    UserProfileStatus:
      type: string
      enum:
        - Deleting
        - Failed
        - InService
        - Pending
    WorkforceName:
      type: string
      pattern: '^[a-zA-Z0-9]([a-zA-Z0-9\-])*$'
      minLength: 1
      maxLength: 63
    Workforce:
      type: object
      required:
        - WorkforceName
        - WorkforceArn
      properties:
        WorkforceName:
          $ref: '#/components/schemas/WorkforceName'
          description: 'The name of the private workforce whose access you want to restrict. <code>WorkforceName</code> is automatically set to <code>default</code> when a workforce is created and cannot be modified. '
        WorkforceArn:
          $ref: '#/components/schemas/WorkforceArn'
          description: The Amazon Resource Name (ARN) of the private workforce.
        LastUpdatedDate:
          $ref: '#/components/schemas/Timestamp'
          description: 'The most recent date that was used to successfully add one or more IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>) to a private workforce''s allow list.'
        SourceIpConfig:
          $ref: '#/components/schemas/SourceIpConfig'
          description: 'A list of one to four IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>) to be added to the workforce allow list.'
      description: 'A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each AWS Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html">Create a Private Workforce</a>.'
    Workteam:
      type: object
      required:
        - WorkteamName
        - MemberDefinitions
        - WorkteamArn
        - Description
      properties:
        WorkteamName:
          $ref: '#/components/schemas/WorkteamName'
          description: The name of the work team.
        MemberDefinitions:
          $ref: '#/components/schemas/MemberDefinitions'
          description: The Amazon Cognito user groups that make up the work team.
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) that identifies the work team.
        ProductListingIds:
          $ref: '#/components/schemas/ProductListings'
          description: The Amazon Marketplace identifier for a vendor's work team.
        Description:
          $ref: '#/components/schemas/String200'
          description: A description of the work team.
        SubDomain:
          $ref: '#/components/schemas/String'
          description: The URI of the labeling job's user interface. Workers open this URI to start labeling your data objects.
        CreateDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the work team was created (timestamp).
        LastUpdatedDate:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the work team was last updated (timestamp).
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
          description: Configures SNS notifications of available or expiring work items for work teams.
      description: Provides details about a labeling work team.
    VariantName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      maxLength: 63
    VariantWeight:
      type: number
      format: float
      minimum: 0
    TaskCount:
      type: integer
      minimum: 1
    DesiredWeightAndCapacity:
      type: object
      required:
        - VariantName
      properties:
        VariantName:
          $ref: '#/components/schemas/VariantName'
          description: The name of the variant to update.
        DesiredWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: The variant's weight.
        DesiredInstanceCount:
          $ref: '#/components/schemas/TaskCount'
          description: The variant's capacity.
      description: Specifies weight and capacity values for a production variant.
    DesiredWeightAndCapacityList:
      type: array
      items:
        $ref: '#/components/schemas/DesiredWeightAndCapacity'
      minItems: 1
    DetailedModelPackageStatus:
      type: string
      enum:
        - NotStarted
        - InProgress
        - Completed
        - Failed
    DisassociateAdditionalCodeRepositories:
      type: boolean
    DisassociateDefaultCodeRepository:
      type: boolean
    DisassociateNotebookInstanceAcceleratorTypes:
      type: boolean
    DisassociateNotebookInstanceLifecycleConfig:
      type: boolean
    Dollars:
      type: integer
      minimum: 0
      maximum: 2
    DomainDetails:
      type: object
      properties:
        DomainArn:
          $ref: '#/components/schemas/DomainArn'
          description: The domain's Amazon Resource Name (ARN).
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        DomainName:
          $ref: '#/components/schemas/DomainName'
          description: The domain name.
        Status:
          $ref: '#/components/schemas/DomainStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
        Url:
          $ref: '#/components/schemas/String1024'
          description: The domain's URL.
      description: The domain's details.
    DomainList:
      type: array
      items:
        $ref: '#/components/schemas/DomainDetails'
    DoubleParameterValue:
      type: number
      format: double
    EndpointConfigNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    EndpointConfigSortKey:
      type: string
      enum:
        - Name
        - CreationTime
    EndpointConfigSummary:
      type: object
      required:
        - EndpointConfigName
        - EndpointConfigArn
        - CreationTime
      properties:
        EndpointConfigName:
          $ref: '#/components/schemas/EndpointConfigName'
          description: The name of the endpoint configuration.
        EndpointConfigArn:
          $ref: '#/components/schemas/EndpointConfigArn'
          description: The Amazon Resource Name (ARN) of the endpoint configuration.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint configuration was created.
      description: Provides summary information for an endpoint configuration.
    EndpointConfigSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EndpointConfigSummary'
    ProcessingLocalPath:
      type: string
      pattern: .*
      maxLength: 256
    ProcessingS3InputMode:
      type: string
      enum:
        - Pipe
        - File
    ProcessingS3DataDistributionType:
      type: string
      enum:
        - FullyReplicated
        - ShardedByS3Key
    EndpointInput:
      type: object
      required:
        - EndpointName
        - LocalPath
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: An endpoint in customer's account which has enabled <code>DataCaptureConfig</code> enabled.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: Path to the filesystem where the endpoint data is available to the container.
        S3InputMode:
          $ref: '#/components/schemas/ProcessingS3InputMode'
          description: Whether the <code>Pipe</code> or <code>File</code> is used as the input mode for transfering data for the monitoring job. <code>Pipe</code> mode is recommended for large datasets. <code>File</code> mode is useful for small files that fit in memory. Defaults to <code>File</code>.
        S3DataDistributionType:
          $ref: '#/components/schemas/ProcessingS3DataDistributionType'
          description: 'Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to <code>FullyReplicated</code> '
      description: Input object for the endpoint
    EndpointNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    EndpointSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    EndpointSummary:
      type: object
      required:
        - EndpointName
        - EndpointArn
        - CreationTime
        - LastModifiedTime
        - EndpointStatus
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint.
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the endpoint was last modified.
        EndpointStatus:
          $ref: '#/components/schemas/EndpointStatus'
          description: '<p>The status of the endpoint.</p> <ul> <li> <p> <code>OutOfService</code>: Endpoint is not available to take incoming requests.</p> </li> <li> <p> <code>Creating</code>: <a>CreateEndpoint</a> is executing.</p> </li> <li> <p> <code>Updating</code>: <a>UpdateEndpoint</a> or <a>UpdateEndpointWeightsAndCapacities</a> is executing.</p> </li> <li> <p> <code>SystemUpdating</code>: Endpoint is undergoing maintenance and cannot be updated or deleted or re-scaled until it has completed. This maintenance operation does not change any customer-specified values such as VPC config, KMS encryption, model, instance type, or instance count.</p> </li> <li> <p> <code>RollingBack</code>: Endpoint fails to scale up or down or change its variant weight and is in the process of rolling back to its previous configuration. Once the rollback completes, endpoint returns to an <code>InService</code> status. This transitional status only applies to an endpoint that has autoscaling enabled and is undergoing variant weight or capacity changes as part of an <a>UpdateEndpointWeightsAndCapacities</a> call or when the <a>UpdateEndpointWeightsAndCapacities</a> operation is called explicitly.</p> </li> <li> <p> <code>InService</code>: Endpoint is available to process incoming requests.</p> </li> <li> <p> <code>Deleting</code>: <a>DeleteEndpoint</a> is executing.</p> </li> <li> <p> <code>Failed</code>: Endpoint could not be created, updated, or re-scaled. Use <a>DescribeEndpointOutput$FailureReason</a> for information about the failure. <a>DeleteEndpoint</a> is the only operation that can be performed on a failed endpoint.</p> </li> </ul> <p>To get a list of endpoints with a specified status, use the <a>ListEndpointsInput$StatusEquals</a> filter.</p>'
      description: Provides summary information for an endpoint.
    EndpointSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EndpointSummary'
    EnvironmentArn:
      type: string
      pattern: '^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:environment/[a-z0-9](-*[a-z0-9]){0,62}$'
      maxLength: 256
    EnvironmentKey:
      type: string
      pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
      maxLength: 1024
    EnvironmentValue:
      type: string
      pattern: '[\S\s]*'
      maxLength: 1024
    ExecutionStatus:
      type: string
      enum:
        - Pending
        - Completed
        - CompletedWithViolations
        - InProgress
        - Failed
        - Stopping
        - Stopped
    Experiment:
      type: object
      properties:
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        Source:
          $ref: '#/components/schemas/ExperimentSource'
        Description:
          $ref: '#/components/schemas/ExperimentDescription'
          description: The description of the experiment.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags that are associated with the experiment. You can use <a>Search</a> API to search on the tags.
      description: A summary of the properties of an experiment as returned by the <a>Search</a> API.
    ExperimentSourceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*'
      maxLength: 256
    SourceType:
      type: string
      maxLength: 128
    ExperimentSummary:
      type: object
      properties:
        ExperimentArn:
          $ref: '#/components/schemas/ExperimentArn'
          description: The Amazon Resource Name (ARN) of the experiment.
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the experiment as displayed. If <code>DisplayName</code> isn''t specified, <code>ExperimentName</code> is displayed.'
        ExperimentSource:
          $ref: '#/components/schemas/ExperimentSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the experiment was last modified.
      description: 'A summary of the properties of an experiment. To get the complete set of properties, call the <a>DescribeExperiment</a> API and provide the <code>ExperimentName</code>.'
    ExperimentSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ExperimentSummary'
    FileSystemAccessMode:
      type: string
      enum:
        - rw
        - ro
    FileSystemId:
      type: string
      pattern: .*
      minLength: 11
    FileSystemType:
      type: string
      enum:
        - EFS
        - FSxLustre
    ResourcePropertyName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    Operator:
      type: string
      enum:
        - Equals
        - NotEquals
        - GreaterThan
        - GreaterThanOrEqualTo
        - LessThan
        - LessThanOrEqualTo
        - Contains
        - Exists
        - NotExists
    FilterValue:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 1024
    Filter:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: 'A property name. For example, <code>TrainingJobName</code>. For the list of valid property names returned in a search result for each supported resource, see <a>TrainingJob</a> properties. You must specify a valid property name for the resource.'
        Operator:
          $ref: '#/components/schemas/Operator'
          description: '<p>A Boolean binary operator that is used to evaluate the filter. The operator field contains one of the following values:</p> <dl> <dt>Equals</dt> <dd> <p>The specified resource in <code>Name</code> equals the specified <code>Value</code>.</p> </dd> <dt>NotEquals</dt> <dd> <p>The specified resource in <code>Name</code> does not equal the specified <code>Value</code>.</p> </dd> <dt>GreaterThan</dt> <dd> <p>The specified resource in <code>Name</code> is greater than the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>GreaterThanOrEqualTo</dt> <dd> <p>The specified resource in <code>Name</code> is greater than or equal to the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>LessThan</dt> <dd> <p>The specified resource in <code>Name</code> is less than the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>LessThanOrEqualTo</dt> <dd> <p>The specified resource in <code>Name</code> is less than or equal to the specified <code>Value</code>. Not supported for text-based properties.</p> </dd> <dt>Contains</dt> <dd> <p>Only supported for text-based properties. The word-list of the property contains the specified <code>Value</code>. A <code>SearchExpression</code> can include only one <code>Contains</code> operator.</p> </dd> </dl> <p>If you have specified a filter <code>Value</code>, the default is <code>Equals</code>.</p>'
        Value:
          $ref: '#/components/schemas/FilterValue'
          description: 'A value used with <code>Resource</code> and <code>Operator</code> to determine if objects satisfy the filter''s condition. For numerical properties, <code>Value</code> must be an integer or floating-point decimal. For timestamp properties, <code>Value</code> must be an ISO 8601 date-time string of the following format: <code>YYYY-mm-dd''T''HH:MM:SS</code>.'
      description: '<p>A conditional statement for a search expression that includes a resource property, a Boolean operator, and a value.</p> <p>If you don''t specify an <code>Operator</code> and a <code>Value</code>, the filter searches for only the specified property. For example, defining a <code>Filter</code> for the <code>FailureReason</code> for the <code>TrainingJob</code> <code>Resource</code> searches for training job objects that have a value in the <code>FailureReason</code> field.</p> <p>If you specify a <code>Value</code>, but not an <code>Operator</code>, Amazon SageMaker uses the equals operator as the default.</p> <p>In search, there are several property types:</p> <dl> <dt>Metrics</dt> <dd> <p>To define a metric filter, enter a value using the form <code>"Metrics.&lt;name&gt;"</code>, where <code>&lt;name&gt;</code> is a metric name. For example, the following filter searches for training jobs with an <code>"accuracy"</code> metric greater than <code>"0.9"</code>:</p> <p> <code>{</code> </p> <p> <code>"Name": "Metrics.accuracy",</code> </p> <p> <code>"Operator": "GREATER_THAN",</code> </p> <p> <code>"Value": "0.9"</code> </p> <p> <code>}</code> </p> </dd> <dt>HyperParameters</dt> <dd> <p>To define a hyperparameter filter, enter a value with the form <code>"HyperParameters.&lt;name&gt;"</code>. Decimal hyperparameter values are treated as a decimal in a comparison if the specified <code>Value</code> is also a decimal value. If the specified <code>Value</code> is an integer, the decimal hyperparameter values are treated as integers. For example, the following filter is satisfied by training jobs with a <code>"learning_rate"</code> hyperparameter that is less than <code>"0.5"</code>:</p> <p> <code> {</code> </p> <p> <code> "Name": "HyperParameters.learning_rate",</code> </p> <p> <code> "Operator": "LESS_THAN",</code> </p> <p> <code> "Value": "0.5"</code> </p> <p> <code> }</code> </p> </dd> <dt>Tags</dt> <dd> <p>To define a tag filter, enter a value with the form <code>"Tags.&lt;key&gt;"</code>.</p> </dd> </dl>'
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
      minItems: 1
      maxItems: 20
    MetricValue:
      type: number
      format: float
    HyperParameterTuningJobObjectiveType:
      type: string
      enum:
        - Maximize
        - Minimize
    MetricName:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    FinalHyperParameterTuningJobObjectiveMetric:
      type: object
      required:
        - MetricName
        - Value
      properties:
        Type:
          $ref: '#/components/schemas/HyperParameterTuningJobObjectiveType'
          description: Whether to minimize or maximize the objective metric. Valid values are Minimize and Maximize.
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the objective metric.
        Value:
          $ref: '#/components/schemas/MetricValue'
          description: The value of the objective metric.
      description: Shows the final value for the objective metric for a training job that was launched by a hyperparameter tuning job. You define the objective metric in the <code>HyperParameterTuningJobObjective</code> parameter of <a>HyperParameterTuningJobConfig</a>.
    MetricData:
      type: object
      properties:
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        Value:
          $ref: '#/components/schemas/Float'
          description: The value of the metric.
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the algorithm emitted the metric.
      description: 'The name, value, and date and time of a metric that was emitted to Amazon CloudWatch.'
    Float:
      type: number
      format: float
    FlowDefinitionSummary:
      type: object
      required:
        - FlowDefinitionName
        - FlowDefinitionArn
        - FlowDefinitionStatus
        - CreationTime
      properties:
        FlowDefinitionName:
          $ref: '#/components/schemas/FlowDefinitionName'
          description: The name of the flow definition.
        FlowDefinitionArn:
          $ref: '#/components/schemas/FlowDefinitionArn'
          description: The Amazon Resource Name (ARN) of the flow definition.
        FlowDefinitionStatus:
          $ref: '#/components/schemas/FlowDefinitionStatus'
          description: 'The status of the flow definition. Valid values:'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp when SageMaker created the flow definition.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: The reason why the flow definition creation failed. A failure reason is returned only when the flow definition status is <code>Failed</code>.
      description: Contains summary information about the flow definition.
    FlowDefinitionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FlowDefinitionSummary'
    FlowDefinitionTaskAvailabilityLifetimeInSeconds:
      type: integer
      minimum: 1
      maximum: 864000
    FlowDefinitionTaskCount:
      type: integer
      minimum: 1
      maximum: 3
    FlowDefinitionTaskDescription:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    FlowDefinitionTaskKeyword:
      type: string
      pattern: '^[A-Za-z0-9]+( [A-Za-z0-9]+)*$'
      minLength: 1
      maxLength: 30
    FlowDefinitionTaskKeywords:
      type: array
      items:
        $ref: '#/components/schemas/FlowDefinitionTaskKeyword'
      minItems: 1
      maxItems: 5
    FlowDefinitionTaskTimeLimitInSeconds:
      type: integer
      minimum: 30
      maximum: 28800
    FlowDefinitionTaskTitle:
      type: string
      pattern: '^[\t\n\r -\uD7FF\uE000-\uFFFD]*$'
      minLength: 1
      maxLength: 128
    Framework:
      type: string
      enum:
        - TENSORFLOW
        - KERAS
        - MXNET
        - ONNX
        - PYTORCH
        - XGBOOST
    ResourceType:
      type: string
      enum:
        - TrainingJob
        - Experiment
        - ExperimentTrial
        - ExperimentTrialComponent
    SuggestionQuery:
      type: object
      properties:
        PropertyNameQuery:
          $ref: '#/components/schemas/PropertyNameQuery'
          description: Defines a property name hint. Only property names that begin with the specified hint are included in the response.
      description: Specified in the <a>GetSearchSuggestions</a> request. Limits the property names that are included in the response.
    PropertyNameSuggestionList:
      type: array
      items:
        $ref: '#/components/schemas/PropertyNameSuggestion'
    GitConfigUrl:
      type: string
      pattern: '^https://([^/]+)/?(.*)$'
    SecretArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:secretsmanager:[a-z0-9\-]*:[0-9]{12}:secret:.*'
      minLength: 1
      maxLength: 2048
    GitConfigForUpdate:
      type: object
      properties:
        SecretArn:
          $ref: '#/components/schemas/SecretArn'
          description: '<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of <code>AWSCURRENT</code> and must be in the following format:</p> <p> <code>{"username": <i>UserName</i>, "password": <i>Password</i>}</code> </p>'
      description: Specifies configuration details for a Git repository when the repository is updated.
    HumanLoopActivationConditions:
      type: string
      maxLength: 10240
    HumanLoopActivationConditionsConfig:
      type: object
      required:
        - HumanLoopActivationConditions
      properties:
        HumanLoopActivationConditions:
          $ref: '#/components/schemas/HumanLoopActivationConditions'
          description: 'JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. The set of conditions is different for Rekognition and Textract.'
      description: Defines under what conditions SageMaker creates a human loop. Used within .
    HumanLoopRequestSource:
      type: object
      required:
        - AwsManagedHumanLoopRequestSource
      properties:
        AwsManagedHumanLoopRequestSource:
          $ref: '#/components/schemas/AwsManagedHumanLoopRequestSource'
          description: 'Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. The default field settings and JSON parsing rules are different based on the integration source. Valid values:'
      description: Container for configuring the source of human task requests.
    PublicWorkforceTaskPrice:
      type: object
      properties:
        AmountInUsd:
          $ref: '#/components/schemas/USD'
          description: Defines the amount of money paid to an Amazon Mechanical Turk worker in United States dollars.
      description: '<p>Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. </p> <p>Use one of the following prices for bounding box tasks. Prices are in US dollars and should be based on the complexity of the task; the longer it takes in your initial testing, the more you should offer.</p> <ul> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for image classification, text classification, and custom tasks. Prices are in US dollars.</p> <ul> <li> <p>0.012</p> </li> <li> <p>0.024</p> </li> <li> <p>0.036</p> </li> <li> <p>0.048</p> </li> <li> <p>0.060</p> </li> <li> <p>0.072</p> </li> <li> <p>0.120</p> </li> <li> <p>0.240</p> </li> <li> <p>0.360</p> </li> <li> <p>0.480</p> </li> <li> <p>0.600</p> </li> <li> <p>0.720</p> </li> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for semantic segmentation tasks. Prices are in US dollars.</p> <ul> <li> <p>0.840</p> </li> <li> <p>0.960</p> </li> <li> <p>1.080</p> </li> <li> <p>1.200</p> </li> </ul> <p>Use one of the following prices for Textract AnalyzeDocument Important Form Key Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>2.400 </p> </li> <li> <p>2.280 </p> </li> <li> <p>2.160 </p> </li> <li> <p>2.040 </p> </li> <li> <p>1.920 </p> </li> <li> <p>1.800 </p> </li> <li> <p>1.680 </p> </li> <li> <p>1.560 </p> </li> <li> <p>1.440 </p> </li> <li> <p>1.320 </p> </li> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Rekognition DetectModerationLabels Amazon Augmented AI review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul> <p>Use one of the following prices for Amazon Augmented AI custom human review tasks. Prices are in US dollars.</p> <ul> <li> <p>1.200 </p> </li> <li> <p>1.080 </p> </li> <li> <p>0.960 </p> </li> <li> <p>0.840 </p> </li> <li> <p>0.720 </p> </li> <li> <p>0.600 </p> </li> <li> <p>0.480 </p> </li> <li> <p>0.360 </p> </li> <li> <p>0.240 </p> </li> <li> <p>0.120 </p> </li> <li> <p>0.072 </p> </li> <li> <p>0.060 </p> </li> <li> <p>0.048 </p> </li> <li> <p>0.036 </p> </li> <li> <p>0.024 </p> </li> <li> <p>0.012 </p> </li> </ul>'
    UiConfig:
      type: object
      required:
        - UiTemplateS3Uri
      properties:
        UiTemplateS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: 'The Amazon S3 bucket location of the UI template. For more information about the contents of a UI template, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-custom-templates-step2.html"> Creating Your Custom Labeling Task Template</a>.'
      description: 'Provided configuration information for the worker UI for a labeling job. '
    TaskKeywords:
      type: array
      items:
        $ref: '#/components/schemas/TaskKeyword'
      minItems: 1
      maxItems: 5
    TaskTitle:
      type: string
      pattern: '^[\t\n\r -\uD7FF\uE000-\uFFFD]*$'
      minLength: 1
      maxLength: 128
    TaskDescription:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    NumberOfHumanWorkersPerDataObject:
      type: integer
      minimum: 1
      maximum: 9
    TaskTimeLimitInSeconds:
      type: integer
      minimum: 30
      maximum: 28800
    TaskAvailabilityLifetimeInSeconds:
      type: integer
      minimum: 60
      maximum: 864000
    MaxConcurrentTaskCount:
      type: integer
      minimum: 1
      maximum: 1000
    HumanTaskUiSummary:
      type: object
      required:
        - HumanTaskUiName
        - HumanTaskUiArn
        - CreationTime
      properties:
        HumanTaskUiName:
          $ref: '#/components/schemas/HumanTaskUiName'
          description: The name of the human task user interface.
        HumanTaskUiArn:
          $ref: '#/components/schemas/HumanTaskUiArn'
          description: The Amazon Resource Name (ARN) of the human task user interface.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp when SageMaker created the human task user interface.
      description: Container for human task user interface information.
    HumanTaskUiSummaries:
      type: array
      items:
        $ref: '#/components/schemas/HumanTaskUiSummary'
    HyperParameterAlgorithmSpecification:
      type: object
      required:
        - TrainingInputMode
      properties:
        TrainingImage:
          $ref: '#/components/schemas/AlgorithmImage'
          description: ' The registry path of the Docker image that contains the training algorithm. For information about Docker registry paths for built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Algorithms Provided by Amazon SageMaker: Common Parameters</a>. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>.'
        TrainingInputMode:
          $ref: '#/components/schemas/TrainingInputMode'
          description: '<p>The input mode that the algorithm supports: File or Pipe. In File input mode, Amazon SageMaker downloads the training data from Amazon S3 to the storage volume that is attached to the training instance and mounts the directory to the Docker volume for the training container. In Pipe input mode, Amazon SageMaker streams data directly from Amazon S3 to the container. </p> <p>If you specify File mode, make sure that you provision the storage volume that is attached to the training instance with enough capacity to accommodate the training data downloaded from Amazon S3, the model artifacts, and intermediate information.</p> <p/> <p>For more information about input modes, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. </p>'
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: 'The name of the resource algorithm to use for the hyperparameter tuning job. If you specify a value for this parameter, do not specify a value for <code>TrainingImage</code>.'
        MetricDefinitions:
          $ref: '#/components/schemas/MetricDefinitionList'
          description: An array of <a>MetricDefinition</a> objects that specify the metrics that the algorithm emits.
      description: Specifies which training algorithm to use for training jobs that a hyperparameter tuning job launches and the metrics to monitor.
    ParameterName:
      type: string
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 256
    ParameterType:
      type: string
      enum:
        - Integer
        - Continuous
        - Categorical
        - FreeText
    ParameterRange:
      type: object
      properties:
        IntegerParameterRangeSpecification:
          $ref: '#/components/schemas/IntegerParameterRangeSpecification'
          description: A <code>IntegerParameterRangeSpecification</code> object that defines the possible values for an integer hyperparameter.
        ContinuousParameterRangeSpecification:
          $ref: '#/components/schemas/ContinuousParameterRangeSpecification'
          description: A <code>ContinuousParameterRangeSpecification</code> object that defines the possible values for a continuous hyperparameter.
        CategoricalParameterRangeSpecification:
          $ref: '#/components/schemas/CategoricalParameterRangeSpecification'
          description: A <code>CategoricalParameterRangeSpecification</code> object that defines the possible values for a categorical hyperparameter.
      description: 'Defines the possible values for categorical, continuous, and integer hyperparameters to be used by an algorithm.'
    HyperParameterSpecification:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: '#/components/schemas/ParameterName'
          description: The name of this hyperparameter. The name must be unique.
        Description:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the hyperparameter.
        Type:
          $ref: '#/components/schemas/ParameterType'
          description: 'The type of this hyperparameter. The valid types are <code>Integer</code>, <code>Continuous</code>, <code>Categorical</code>, and <code>FreeText</code>.'
        Range:
          $ref: '#/components/schemas/ParameterRange'
          description: The allowed range for this hyperparameter.
        IsTunable:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether this hyperparameter is tunable in a hyperparameter tuning job.
        IsRequired:
          $ref: '#/components/schemas/Boolean'
          description: Indicates whether this hyperparameter is required.
        DefaultValue:
          $ref: '#/components/schemas/ParameterValue'
          description: 'The default value for this hyperparameter. If a default value is specified, a hyperparameter cannot be required.'
      description: Defines a hyperparameter to be used by an algorithm.
    HyperParameterSpecifications:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterSpecification'
      minItems: 0
      maxItems: 100
    HyperParameterTrainingJobDefinitionName:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*'
      minLength: 1
      maxLength: 64
    HyperParameterTuningJobObjective:
      type: object
      required:
        - Type
        - MetricName
      properties:
        Type:
          $ref: '#/components/schemas/HyperParameterTuningJobObjectiveType'
          description: Whether to minimize or maximize the objective metric.
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric to use for the objective metric.
      description: 'Defines the objective metric for a hyperparameter tuning job. Hyperparameter tuning uses the value of this metric to evaluate the training jobs it launches, and returns the training job that results in either the highest or lowest value for this metric, depending on the value you specify for the <code>Type</code> parameter.'
    ParameterRanges:
      type: object
      properties:
        IntegerParameterRanges:
          $ref: '#/components/schemas/IntegerParameterRanges'
          description: The array of <a>IntegerParameterRange</a> objects that specify ranges of integer hyperparameters that a hyperparameter tuning job searches.
        ContinuousParameterRanges:
          $ref: '#/components/schemas/ContinuousParameterRanges'
          description: The array of <a>ContinuousParameterRange</a> objects that specify ranges of continuous hyperparameters that a hyperparameter tuning job searches.
        CategoricalParameterRanges:
          $ref: '#/components/schemas/CategoricalParameterRanges'
          description: The array of <a>CategoricalParameterRange</a> objects that specify ranges of categorical hyperparameters that a hyperparameter tuning job searches.
      description: '<p>Specifies ranges of integer, continuous, and categorical hyperparameters that a hyperparameter tuning job searches. The hyperparameter tuning job launches training jobs with hyperparameter values within these ranges to find the combination of values that result in the training job with the best performance as measured by the objective metric of the hyperparameter tuning job.</p> <note> <p>You can specify a maximum of 20 hyperparameters that a hyperparameter tuning job can search over. Every possible value of a categorical parameter range counts against this limit.</p> </note>'
    HyperParameterTrainingJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTrainingJobSummary'
    HyperParameterTuningJobStrategyType:
      type: string
      enum:
        - Bayesian
        - Random
      description: 'The strategy hyperparameter tuning uses to find the best combination of hyperparameters for your model. Currently, the only supported value is <code>Bayesian</code>.'
    ResourceLimits:
      type: object
      required:
        - MaxNumberOfTrainingJobs
        - MaxParallelTrainingJobs
      properties:
        MaxNumberOfTrainingJobs:
          $ref: '#/components/schemas/MaxNumberOfTrainingJobs'
          description: The maximum number of training jobs that a hyperparameter tuning job can launch.
        MaxParallelTrainingJobs:
          $ref: '#/components/schemas/MaxParallelTrainingJobs'
          description: The maximum number of concurrent training jobs that a hyperparameter tuning job can launch.
      description: Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch.
    TrainingJobEarlyStoppingType:
      type: string
      enum:
        - 'Off'
        - Auto
    TuningJobCompletionCriteria:
      type: object
      required:
        - TargetObjectiveMetricValue
      properties:
        TargetObjectiveMetricValue:
          $ref: '#/components/schemas/TargetObjectiveMetricValue'
          description: The objective metric's value.
      description: The job completion criteria.
    HyperParameterTuningJobObjectives:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTuningJobObjective'
    HyperParameterTuningJobSortByOptions:
      type: string
      enum:
        - Name
        - Status
        - CreationTime
    HyperParameterTuningJobSummary:
      type: object
      required:
        - HyperParameterTuningJobName
        - HyperParameterTuningJobArn
        - HyperParameterTuningJobStatus
        - Strategy
        - CreationTime
        - TrainingJobStatusCounters
        - ObjectiveStatusCounters
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the tuning job.
        HyperParameterTuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the tuning job.
        HyperParameterTuningJobStatus:
          $ref: '#/components/schemas/HyperParameterTuningJobStatus'
          description: The status of the tuning job.
        Strategy:
          $ref: '#/components/schemas/HyperParameterTuningJobStrategyType'
          description: 'Specifies the search strategy hyperparameter tuning uses to choose which hyperparameters to use for each iteration. Currently, the only valid value is Bayesian.'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job was created.
        HyperParameterTuningEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job ended.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the tuning job was modified.
        TrainingJobStatusCounters:
          $ref: '#/components/schemas/TrainingJobStatusCounters'
          description: 'The <a>TrainingJobStatusCounters</a> object that specifies the numbers of training jobs, categorized by status, that this tuning job launched.'
        ObjectiveStatusCounters:
          $ref: '#/components/schemas/ObjectiveStatusCounters'
          description: 'The <a>ObjectiveStatusCounters</a> object that specifies the numbers of training jobs, categorized by objective metric status, that this tuning job launched.'
        ResourceLimits:
          $ref: '#/components/schemas/ResourceLimits'
          description: The <a>ResourceLimits</a> object that specifies the maximum number of training jobs and parallel training jobs allowed for this tuning job.
      description: Provides summary information about a hyperparameter tuning job.
    HyperParameterTuningJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/HyperParameterTuningJobSummary'
    ParentHyperParameterTuningJobs:
      type: array
      items:
        $ref: '#/components/schemas/ParentHyperParameterTuningJob'
      minItems: 1
      maxItems: 5
    HyperParameterTuningJobWarmStartType:
      type: string
      enum:
        - IdenticalDataAndAlgorithm
        - TransferLearning
    ImageDigest:
      type: string
      pattern: '^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$'
      maxLength: 72
    ModelPackageContainerDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageContainerDefinition'
      minItems: 1
      maxItems: 1
    TransformInstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/TransformInstanceType'
      minItems: 1
    RealtimeInferenceInstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/ProductionVariantInstanceType'
    ResponseMIMETypes:
      type: array
      items:
        $ref: '#/components/schemas/ResponseMIMEType'
    IntegerParameterRange:
      type: object
      required:
        - Name
        - MinValue
        - MaxValue
      properties:
        Name:
          $ref: '#/components/schemas/ParameterKey'
          description: The name of the hyperparameter to search.
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum value of the hyperparameter to search.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum value of the hyperparameter to search.
        ScalingType:
          $ref: '#/components/schemas/HyperParameterScalingType'
          description: '<p>The scale that hyperparameter tuning uses to search the hyperparameter range. For information about choosing a hyperparameter scale, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type">Hyperparameter Scaling</a>. One of the following values:</p> <dl> <dt>Auto</dt> <dd> <p>Amazon SageMaker hyperparameter tuning chooses the best scale for the hyperparameter.</p> </dd> <dt>Linear</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a linear scale.</p> </dd> <dt>Logarithmic</dt> <dd> <p>Hyperparameter tuning searches the values in the hyperparameter range by using a logarithmic scale.</p> <p>Logarithmic scaling works only for ranges that have only values greater than 0.</p> </dd> </dl>'
      description: 'For a hyperparameter of the integer type, specifies the range that a hyperparameter tuning job searches.'
    IntegerParameterRangeSpecification:
      type: object
      required:
        - MinValue
        - MaxValue
      properties:
        MinValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The minimum integer value allowed.
        MaxValue:
          $ref: '#/components/schemas/ParameterValue'
          description: The maximum integer value allowed.
      description: Defines the possible values for an integer hyperparameter.
    IntegerParameterRanges:
      type: array
      items:
        $ref: '#/components/schemas/IntegerParameterRange'
      minItems: 0
      maxItems: 20
    JobReferenceCodeContains:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 255
    JsonContentType:
      type: string
      pattern: '^[a-zA-Z0-9](-*[a-zA-Z0-9])*\/[a-zA-Z0-9](-*[a-zA-Z0-9.])*'
      minLength: 1
    JupyterServerAppSettings:
      type: object
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and quantity.
      description: Jupyter server's app settings.
    KernelGatewayAppSettings:
      type: object
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and quantity.
      description: The kernel gateway app settings.
    LabelCounter:
      type: integer
      minimum: 0
    LabelCountersForWorkteam:
      type: object
      properties:
        HumanLabeled:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of data objects labeled by a human worker.
        PendingHuman:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of data objects that need to be labeled by a human worker.
        Total:
          $ref: '#/components/schemas/LabelCounter'
          description: The total number of tasks in the labeling job.
      description: Provides counts for human-labeled tasks in the labeling job.
    LabelingJobAlgorithmSpecificationArn:
      type: string
      pattern: 'arn:.*'
      maxLength: 2048
    LabelingJobResourceConfig:
      type: object
      properties:
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: '<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job. The <code>VolumeKmsKeyId</code> can be any of the following formats:</p> <ul> <li> <p>// KMS Key ID</p> <p> <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> <li> <p>// Amazon Resource Name (ARN) of a KMS Key</p> <p> <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code> </p> </li> </ul>'
      description: Provides configuration information for labeling jobs.
    LabelingJobDataAttributes:
      type: object
      properties:
        ContentClassifiers:
          $ref: '#/components/schemas/ContentClassifiers'
          description: Declares that your content is free of personally identifiable information or adult content. Amazon SageMaker may restrict the Amazon Mechanical Turk workers that can view your task based on this information.
      description: Attributes of the data specified by the customer. Use these to describe the data to be labeled.
    LabelingJobS3DataSource:
      type: object
      required:
        - ManifestS3Uri
      properties:
        ManifestS3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 location of the manifest file that describes the input data objects.
      description: The Amazon S3 location of the input data objects.
    LabelingJobDataSource:
      type: object
      required:
        - S3DataSource
      properties:
        S3DataSource:
          $ref: '#/components/schemas/LabelingJobS3DataSource'
          description: The Amazon S3 location of the input data objects.
      description: Provides information about the location of input data.
    LabelingJobForWorkteamSummary:
      type: object
      required:
        - JobReferenceCode
        - WorkRequesterAccountId
        - CreationTime
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job that the work team is assigned to.
        JobReferenceCode:
          $ref: '#/components/schemas/JobReferenceCode'
          description: A unique identifier for a labeling job. You can use this to refer to a specific labeling job.
        WorkRequesterAccountId:
          $ref: '#/components/schemas/AccountId'
          description: <p/>
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the labeling job was created.
        LabelCounters:
          $ref: '#/components/schemas/LabelCountersForWorkteam'
          description: Provides information about the progress of a labeling job.
        NumberOfHumanWorkersPerDataObject:
          $ref: '#/components/schemas/NumberOfHumanWorkersPerDataObject'
          description: The configured number of workers per data object.
      description: Provides summary information for a work team.
    LabelingJobForWorkteamSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LabelingJobForWorkteamSummary'
    MaxHumanLabeledObjectCount:
      type: integer
      minimum: 1
    MaxPercentageOfInputDatasetLabeled:
      type: integer
      minimum: 1
      maximum: 100
    LabelingJobSummary:
      type: object
      required:
        - LabelingJobName
        - LabelingJobArn
        - CreationTime
        - LastModifiedTime
        - LabelingJobStatus
        - LabelCounters
        - WorkteamArn
        - PreHumanTaskLambdaArn
      properties:
        LabelingJobName:
          $ref: '#/components/schemas/LabelingJobName'
          description: The name of the labeling job.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) assigned to the labeling job when it was created.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the job was created (timestamp).
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The date and time that the job was last modified (timestamp).
        LabelingJobStatus:
          $ref: '#/components/schemas/LabelingJobStatus'
          description: 'The current status of the labeling job. '
        LabelCounters:
          $ref: '#/components/schemas/LabelCounters'
          description: Counts showing the progress of the labeling job.
        WorkteamArn:
          $ref: '#/components/schemas/WorkteamArn'
          description: The Amazon Resource Name (ARN) of the work team assigned to the job.
        PreHumanTaskLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: The Amazon Resource Name (ARN) of a Lambda function. The function is run before each data object is sent to a worker.
        AnnotationConsolidationLambdaArn:
          $ref: '#/components/schemas/LambdaFunctionArn'
          description: 'The Amazon Resource Name (ARN) of the Lambda function used to consolidate the annotations from individual workers into a label for a data object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-annotation-consolidation.html">Annotation Consolidation</a>.'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the <code>LabelingJobStatus</code> field is <code>Failed</code>, this field contains a description of the error.'
        LabelingJobOutput:
          $ref: '#/components/schemas/LabelingJobOutput'
          description: The location of the output produced by the labeling job.
        InputConfig:
          $ref: '#/components/schemas/LabelingJobInputConfig'
          description: Input configuration for the labeling job.
      description: Provides summary information about a labeling job.
    LabelingJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LabelingJobSummary'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NameContains:
      type: string
      pattern: '[a-zA-Z0-9\-]+'
      maxLength: 63
    NextToken:
      type: string
      pattern: .*
      maxLength: 8192
    SortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    ListCompilationJobsSortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    OrderKey:
      type: string
      enum:
        - Ascending
        - Descending
    PaginationToken:
      type: string
      pattern: .*
      maxLength: 8192
    SortExperimentsBy:
      type: string
      enum:
        - Name
        - CreationTime
    ListLabelingJobsForWorkteamSortByOptions:
      type: string
      enum:
        - CreationTime
    SortBy:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    ModelPackageSortBy:
      type: string
      enum:
        - Name
        - CreationTime
    ModelPackageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageSummary'
    ModelSortKey:
      type: string
      enum:
        - Name
        - CreationTime
    ModelNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    ModelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ModelSummary'
    MonitoringExecutionSortKey:
      type: string
      enum:
        - CreationTime
        - ScheduledTime
        - Status
    MonitoringExecutionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringExecutionSummary'
    MonitoringScheduleSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    MonitoringScheduleSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringScheduleSummary'
    NotebookInstanceLifecycleConfigSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - LastModifiedTime
    NotebookInstanceLifecycleConfigSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    NotebookInstanceLifecycleConfigNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    NotebookInstanceLifecycleConfigSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceLifecycleConfigSummary'
    NotebookInstanceSortKey:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
    NotebookInstanceSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    NotebookInstanceNameContains:
      type: string
      pattern: '[a-zA-Z0-9-]+'
      maxLength: 63
    NotebookInstanceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/NotebookInstanceSummary'
    ProcessingJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingJobSummary'
    SubscribedWorkteams:
      type: array
      items:
        $ref: '#/components/schemas/SubscribedWorkteam'
    ListTagsMaxResults:
      type: integer
      minimum: 50
    TrainingJobSortByOptions:
      type: string
      enum:
        - Name
        - CreationTime
        - Status
        - FinalObjectiveMetricValue
    TrainingJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrainingJobSummary'
    TransformJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TransformJobSummary'
    TrialComponentKey256:
      type: string
      pattern: .*
      maxLength: 256
    ListTrialComponentKey256:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentKey256'
    SortTrialComponentsBy:
      type: string
      enum:
        - Name
        - CreationTime
    TrialComponentSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentSummary'
    SortTrialsBy:
      type: string
      enum:
        - Name
        - CreationTime
    TrialSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialSummary'
    UserProfileSortKey:
      type: string
      enum:
        - CreationTime
        - LastModifiedTime
    UserProfileList:
      type: array
      items:
        $ref: '#/components/schemas/UserProfileDetails'
    ListWorkteamsSortByOptions:
      type: string
      enum:
        - Name
        - CreateDate
    Workteams:
      type: array
      items:
        $ref: '#/components/schemas/Workteam'
    MaxNumberOfTrainingJobs:
      type: integer
      minimum: 1
    MaxParallelTrainingJobs:
      type: integer
      minimum: 1
    MaxRuntimeInSeconds:
      type: integer
      minimum: 1
    MaxWaitTimeInSeconds:
      type: integer
      minimum: 1
    MediaType:
      type: string
      pattern: '^[\w]+\/[\w+]+$'
      maxLength: 64
    MemberDefinition:
      type: object
      properties:
        CognitoMemberDefinition:
          $ref: '#/components/schemas/CognitoMemberDefinition'
          description: The Amazon Cognito user group that is part of the work team.
      description: Defines the Amazon Cognito user group that is part of a work team.
    MetricRegex:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 500
    MetricDefinition:
      type: object
      required:
        - Name
        - Regex
      properties:
        Name:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        Regex:
          $ref: '#/components/schemas/MetricRegex'
          description: 'A regular expression that searches the output of a training job and gets the value of the metric. For more information about using regular expressions to define metrics, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html">Defining Objective Metrics</a>.'
      description: Specifies a metric that the training algorithm writes to <code>stderr</code> or <code>stdout</code> . Amazon SageMakerhyperparameter tuning captures all defined metrics. You specify one metric that a hyperparameter tuning job uses as its objective metric to choose the best training job.
    ModelPackageContainerDefinition:
      type: object
      required:
        - Image
      properties:
        ContainerHostname:
          $ref: '#/components/schemas/ContainerHostname'
          description: The DNS host name for the Docker container.
        Image:
          $ref: '#/components/schemas/Image'
          description: '<p>The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.</p> <p>If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code> image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon SageMaker</a>.</p>'
        ImageDigest:
          $ref: '#/components/schemas/ImageDigest'
          description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: 'The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single <code>gzip</code> compressed tar archive (<code>.tar.gz</code> suffix).'
        ProductId:
          $ref: '#/components/schemas/ProductId'
          description: The AWS Marketplace product ID of the model package.
      description: Describes the Docker container for the model package.
    ModelPackageStatusItemList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageStatusItem'
    ModelPackageStatusItem:
      type: object
      required:
        - Name
        - Status
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model package for which the overall status is being reported.
        Status:
          $ref: '#/components/schemas/DetailedModelPackageStatus'
          description: The current status.
        FailureReason:
          $ref: '#/components/schemas/String'
          description: 'if the overall status is <code>Failed</code>, the reason for the failure.'
      description: Represents the overall status of a model package.
    ModelPackageSummary:
      type: object
      required:
        - ModelPackageName
        - ModelPackageArn
        - CreationTime
        - ModelPackageStatus
      properties:
        ModelPackageName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the model package.
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
          description: The Amazon Resource Name (ARN) of the model package.
        ModelPackageDescription:
          $ref: '#/components/schemas/EntityDescription'
          description: A brief description of the model package.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that shows when the model package was created.
        ModelPackageStatus:
          $ref: '#/components/schemas/ModelPackageStatus'
          description: The overall status of the model package.
      description: Provides summary information about a model package.
    ModelPackageValidationProfile:
      type: object
      required:
        - ProfileName
        - TransformJobDefinition
      properties:
        ProfileName:
          $ref: '#/components/schemas/EntityName'
          description: The name of the profile for the model package.
        TransformJobDefinition:
          $ref: '#/components/schemas/TransformJobDefinition'
          description: The <code>TransformJobDefinition</code> object that describes the transform job used for the validation of the model package.
      description: '<p>Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.</p> <p>The data provided in the validation profile is made available to your buyers on AWS Marketplace.</p>'
    ModelPackageValidationProfiles:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackageValidationProfile'
      minItems: 1
      maxItems: 1
    ModelSummary:
      type: object
      required:
        - ModelName
        - ModelArn
        - CreationTime
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model that you want a summary for.
        ModelArn:
          $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the model was created.
      description: Provides summary information about a model.
    MonitoringContainerArguments:
      type: array
      items:
        $ref: '#/components/schemas/ContainerArgument'
      minItems: 1
      maxItems: 50
    MonitoringAppSpecification:
      type: object
      required:
        - ImageUri
      properties:
        ImageUri:
          $ref: '#/components/schemas/ImageUri'
          description: The container image to be run by the monitoring job.
        ContainerEntrypoint:
          $ref: '#/components/schemas/ContainerEntrypoint'
          description: Specifies the entrypoint for a container used to run the monitoring job.
        ContainerArguments:
          $ref: '#/components/schemas/MonitoringContainerArguments'
          description: An array of arguments for the container used to run the monitoring job.
        RecordPreprocessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers.
        PostAnalyticsProcessorSourceUri:
          $ref: '#/components/schemas/S3Uri'
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
      description: Container image configuration object for the monitoring job.
    MonitoringConstraintsResource:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 URI for the constraints resource.
      description: The constraints resource for a monitoring job.
    MonitoringStatisticsResource:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 URI for the statistics resource.
      description: The statistics resource for a monitoring job.
    MonitoringBaselineConfig:
      type: object
      properties:
        ConstraintsResource:
          $ref: '#/components/schemas/MonitoringConstraintsResource'
          description: The baseline constraint file in Amazon S3 that the current monitoring job should validated against.
        StatisticsResource:
          $ref: '#/components/schemas/MonitoringStatisticsResource'
          description: The baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
      description: Configuration for monitoring constraints and monitoring statistics. These baseline resources are compared against the results of the current job from the series of jobs scheduled to collect data periodically.
    ProcessingInstanceCount:
      type: integer
      minimum: 1
      maximum: 100
    ProcessingVolumeSizeInGB:
      type: integer
      minimum: 1
      maximum: 16384
    MonitoringClusterConfig:
      type: object
      required:
        - InstanceCount
        - InstanceType
        - VolumeSizeInGB
      properties:
        InstanceCount:
          $ref: '#/components/schemas/ProcessingInstanceCount'
          description: 'The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.'
        InstanceType:
          $ref: '#/components/schemas/ProcessingInstanceType'
          description: The ML compute instance type for the processing job.
        VolumeSizeInGB:
          $ref: '#/components/schemas/ProcessingVolumeSizeInGB'
          description: 'The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
      description: Configuration for the cluster used to run model monitoring jobs.
    ProcessingEnvironmentValue:
      type: string
      pattern: '[\S\s]*'
      maxLength: 256
    MonitoringEnvironmentMap:
      type: object
      maxProperties: 50
      additionalProperties:
        $ref: '#/components/schemas/ProcessingEnvironmentValue'
    MonitoringInput:
      type: object
      required:
        - EndpointInput
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
          description: The endpoint for a monitoring job.
      description: The inputs for a monitoring job.
    MonitoringInputs:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringInput'
      minItems: 1
      maxItems: 1
    MonitoringOutputConfig:
      type: object
      required:
        - MonitoringOutputs
      properties:
        MonitoringOutputs:
          $ref: '#/components/schemas/MonitoringOutputs'
          description: Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
      description: The output configuration for monitoring jobs.
    MonitoringResources:
      type: object
      required:
        - ClusterConfig
      properties:
        ClusterConfig:
          $ref: '#/components/schemas/MonitoringClusterConfig'
          description: The configuration for the cluster resources used to run the processing job.
      description: Identifies the resources to deploy for a monitoring job.
    MonitoringStoppingCondition:
      type: object
      required:
        - MaxRuntimeInSeconds
      properties:
        MaxRuntimeInSeconds:
          $ref: '#/components/schemas/MonitoringMaxRuntimeInSeconds'
          description: The maximum runtime allowed in seconds.
      description: A time limit for how long the monitoring job is allowed to run before stopping.
    MonitoringJobDefinition:
      type: object
      required:
        - MonitoringInputs
        - MonitoringOutputConfig
        - MonitoringResources
        - MonitoringAppSpecification
        - RoleArn
      properties:
        BaselineConfig:
          $ref: '#/components/schemas/MonitoringBaselineConfig'
          description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics
        MonitoringInputs:
          $ref: '#/components/schemas/MonitoringInputs'
          description: The array of inputs for the monitoring job. Currently we support monitoring an Amazon SageMaker Endpoint.
        MonitoringOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
          description: The array of outputs from the monitoring job to be uploaded to Amazon Simple Storage Service (Amazon S3).
        MonitoringResources:
          $ref: '#/components/schemas/MonitoringResources'
          description: 'Identifies the resources, ML compute instances, and ML storage volumes to deploy for a monitoring job. In distributed processing, you specify more than one instance.'
        MonitoringAppSpecification:
          $ref: '#/components/schemas/MonitoringAppSpecification'
          description: Configures the monitoring job to run a specified Docker container image.
        StoppingCondition:
          $ref: '#/components/schemas/MonitoringStoppingCondition'
          description: Specifies a time limit for how long the monitoring job is allowed to run.
        Environment:
          $ref: '#/components/schemas/MonitoringEnvironmentMap'
          description: Sets the environment variables in the Docker container.
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Specifies networking options for an monitoring job.
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
      description: Defines the monitoring job.
    MonitoringMaxRuntimeInSeconds:
      type: integer
      minimum: 1
      maximum: 86400
    MonitoringS3Output:
      type: object
      required:
        - S3Uri
        - LocalPath
      properties:
        S3Uri:
          $ref: '#/components/schemas/MonitoringS3Uri'
          description: A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
        S3UploadMode:
          $ref: '#/components/schemas/ProcessingS3UploadMode'
          description: Whether to upload the results of the monitoring job continuously or after the job completes.
      description: Information about where and how you want to store the results of a monitoring job.
    MonitoringOutput:
      type: object
      required:
        - S3Output
      properties:
        S3Output:
          $ref: '#/components/schemas/MonitoringS3Output'
          description: The Amazon S3 storage location where the results of a monitoring job are saved.
      description: The output object for a monitoring job.
    MonitoringOutputs:
      type: array
      items:
        $ref: '#/components/schemas/MonitoringOutput'
      minItems: 1
      maxItems: 1
    MonitoringS3Uri:
      type: string
      pattern: '^(https|s3)://([^/]+)/?(.*)$'
      maxLength: 512
    ProcessingS3UploadMode:
      type: string
      enum:
        - Continuous
        - EndOfJob
    ScheduleConfig:
      type: object
      required:
        - ScheduleExpression
      properties:
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
          description: '<p>A cron expression that describes details about the monitoring schedule.</p> <p>Currently the only supported cron expressions are:</p> <ul> <li> <p>If you want to set the job to start every hour, please use the following:</p> <p> <code>Hourly: cron(0 * ? * * *)</code> </p> </li> <li> <p>If you want to start the job daily:</p> <p> <code>cron(0 [00-23] ? * * *)</code> </p> </li> </ul> <p>For example, the following are valid cron expressions:</p> <ul> <li> <p>Daily at noon UTC: <code>cron(0 12 ? * * *)</code> </p> </li> <li> <p>Daily at midnight UTC: <code>cron(0 0 ? * * *)</code> </p> </li> </ul> <p>To support running every 6, 12 hours, the following are also supported:</p> <p> <code>cron(0 [00-23]/[01-24] ? * * *)</code> </p> <p>For example, the following are valid cron expressions:</p> <ul> <li> <p>Every 12 hours, starting at 5pm UTC: <code>cron(0 17/12 ? * * *)</code> </p> </li> <li> <p>Every two hours starting at midnight: <code>cron(0 0/2 ? * * *)</code> </p> </li> </ul> <note> <ul> <li> <p>Even though the cron expression is set to start at 5PM UTC, note that there could be a delay of 0-20 minutes from the actual requested time to run the execution. </p> </li> <li> <p>We recommend that if you would like a daily schedule, you do not provide this parameter. Amazon SageMaker will pick a time for running every day.</p> </li> </ul> </note>'
      description: Configuration details about the monitoring schedule.
    MonitoringScheduleSummary:
      type: object
      required:
        - MonitoringScheduleName
        - MonitoringScheduleArn
        - CreationTime
        - LastModifiedTime
        - MonitoringScheduleStatus
      properties:
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
          description: The name of the monitoring schedule.
        MonitoringScheduleArn:
          $ref: '#/components/schemas/MonitoringScheduleArn'
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The creation time of the monitoring schedule.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time the monitoring schedule was modified.
        MonitoringScheduleStatus:
          $ref: '#/components/schemas/ScheduleStatus'
          description: The status of the monitoring schedule.
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint using the monitoring schedule.
      description: Summarizes the monitoring schedule.
    NestedFilters:
      type: object
      required:
        - NestedPropertyName
        - Filters
      properties:
        NestedPropertyName:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: 'The name of the property to use in the nested filters. The value must match a listed property name, such as <code>InputDataConfig</code>.'
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: 'A list of filters. Each filter acts on a property. Filters must contain at least one <code>Filters</code> value. For example, a <code>NestedFilters</code> call might include a filter on the <code>PropertyName</code> parameter of the <code>InputDataConfig</code> property: <code>InputDataConfig.DataSource.S3DataSource.S3Uri</code>.'
      description: '<p>Defines a list of <code>NestedFilters</code> objects. To satisfy the conditions specified in the <code>NestedFilters</code> call, a resource must satisfy the conditions of all of the filters.</p> <p>For example, you could define a <code>NestedFilters</code> using the training job''s <code>InputDataConfig</code> property to filter on <code>Channel</code> objects. </p> <p>A <code>NestedFilters</code> object contains multiple filters. For example, to find all training jobs whose name contains <code>train</code> and that have <code>cat/data</code> in their <code>S3Uri</code> (specified in <code>InputDataConfig</code>), you need to create a <code>NestedFilters</code> object that specifies the <code>InputDataConfig</code> property with the following <code>Filter</code> objects:</p> <ul> <li> <p> <code>''{Name:"InputDataConfig.ChannelName", "Operator":"EQUALS", "Value":"train"}'',</code> </p> </li> <li> <p> <code>''{Name:"InputDataConfig.DataSource.S3DataSource.S3Uri", "Operator":"CONTAINS", "Value":"cat/data"}''</code> </p> </li> </ul>'
    NestedFiltersList:
      type: array
      items:
        $ref: '#/components/schemas/NestedFilters'
      minItems: 1
      maxItems: 20
    NotebookInstanceAcceleratorType:
      type: string
      enum:
        - ml.eia1.medium
        - ml.eia1.large
        - ml.eia1.xlarge
        - ml.eia2.medium
        - ml.eia2.large
        - ml.eia2.xlarge
    NotebookInstanceLifecycleConfigContent:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 16384
    NotebookInstanceLifecycleHook:
      type: object
      properties:
        Content:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigContent'
          description: A base64-encoded string that contains a shell script for a notebook instance lifecycle configuration.
      description: '<p>Contains the notebook instance lifecycle configuration script.</p> <p>Each lifecycle configuration script has a limit of 16384 characters.</p> <p>The value of the <code>$PATH</code> environment variable that is available to both scripts is <code>/sbin:bin:/usr/sbin:/usr/bin</code>.</p> <p>View CloudWatch Logs for notebook instance lifecycle configurations in log group <code>/aws/sagemaker/NotebookInstances</code> in log stream <code>[notebook-instance-name]/[LifecycleConfigHook]</code>.</p> <p>Lifecycle configuration scripts cannot run for longer than 5 minutes. If a script runs for longer than 5 minutes, it fails and the notebook instance is not created or started.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
    NotebookInstanceLifecycleConfigSummary:
      type: object
      required:
        - NotebookInstanceLifecycleConfigName
        - NotebookInstanceLifecycleConfigArn
      properties:
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: The name of the lifecycle configuration.
        NotebookInstanceLifecycleConfigArn:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigArn'
          description: The Amazon Resource Name (ARN) of the lifecycle configuration.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that tells when the lifecycle configuration was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A timestamp that tells when the lifecycle configuration was last modified.
      description: Provides a summary of a notebook instance lifecycle configuration.
    NotebookInstanceSummary:
      type: object
      required:
        - NotebookInstanceName
        - NotebookInstanceArn
      properties:
        NotebookInstanceName:
          $ref: '#/components/schemas/NotebookInstanceName'
          description: The name of the notebook instance that you want a summary for.
        NotebookInstanceArn:
          $ref: '#/components/schemas/NotebookInstanceArn'
          description: The Amazon Resource Name (ARN) of the notebook instance.
        NotebookInstanceStatus:
          $ref: '#/components/schemas/NotebookInstanceStatus'
          description: The status of the notebook instance.
        Url:
          $ref: '#/components/schemas/NotebookInstanceUrl'
          description: 'The URL that you use to connect to the Jupyter instance running in your notebook instance. '
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
          description: The type of ML compute instance that the notebook instance is running on.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: A timestamp that shows when the notebook instance was created.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: A timestamp that shows when the notebook instance was last modified.
        NotebookInstanceLifecycleConfigName:
          $ref: '#/components/schemas/NotebookInstanceLifecycleConfigName'
          description: '<p>The name of a notebook instance lifecycle configuration associated with this notebook instance.</p> <p>For information about notebook instance lifestyle configurations, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html">Step 2.1: (Optional) Customize a Notebook Instance</a>.</p>'
        DefaultCodeRepository:
          $ref: '#/components/schemas/CodeRepositoryNameOrUrl'
          description: 'The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
        AdditionalCodeRepositories:
          $ref: '#/components/schemas/AdditionalCodeRepositoryNamesOrUrls'
          description: 'An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">AWS CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git Repositories with Amazon SageMaker Notebook Instances</a>.'
      description: Provides summary information for an Amazon SageMaker notebook instance.
    NotebookOutputOption:
      type: string
      enum:
        - Allowed
        - Disabled
    NotificationTopicArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sns:[a-z0-9\-]*:[0-9]{12}:[a-zA-Z0-9_.-]*'
    ObjectiveStatusCounter:
      type: integer
      minimum: 0
    OptionalDouble:
      type: number
      format: double
    OptionalInteger:
      type: integer
    Parent:
      type: object
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment.
      description: The trial that a trial component is associated with and the experiment the trial is part of. A component might not be associated with a trial. A component can be associated with multiple trials.
    ParentHyperParameterTuningJob:
      type: object
      properties:
        HyperParameterTuningJobName:
          $ref: '#/components/schemas/HyperParameterTuningJobName'
          description: The name of the hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.
      description: A previously completed or stopped hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.
    Parents:
      type: array
      items:
        $ref: '#/components/schemas/Parent'
    ProcessingClusterConfig:
      type: object
      required:
        - InstanceCount
        - InstanceType
        - VolumeSizeInGB
      properties:
        InstanceCount:
          $ref: '#/components/schemas/ProcessingInstanceCount'
          description: 'The number of ML compute instances to use in the processing job. For distributed processing jobs, specify a value greater than 1. The default value is 1.'
        InstanceType:
          $ref: '#/components/schemas/ProcessingInstanceType'
          description: The ML compute instance type for the processing job.
        VolumeSizeInGB:
          $ref: '#/components/schemas/ProcessingVolumeSizeInGB'
          description: The size of the ML storage volume in gigabytes that you want to provision. You must specify sufficient ML storage for your scenario.
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: 'The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the processing job. '
      description: Configuration for the cluster used to run a processing job.
    ProcessingEnvironmentKey:
      type: string
      pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
      maxLength: 256
    ProcessingS3Input:
      type: object
      required:
        - S3Uri
        - LocalPath
        - S3DataType
        - S3InputMode
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: The URI for the Amazon S3 storage where you want Amazon SageMaker to download the artifacts needed to run a processing job.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: The local path to the Amazon S3 bucket where you want Amazon SageMaker to download the inputs to run a processing job. <code>LocalPath</code> is an absolute path to the input data.
        S3DataType:
          $ref: '#/components/schemas/ProcessingS3DataType'
          description: 'Whether you use an <code>S3Prefix</code> or a <code>ManifestFile</code> for the data type. If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for the processing job. If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for the processing job.'
        S3InputMode:
          $ref: '#/components/schemas/ProcessingS3InputMode'
          description: 'Wether to use <code>File</code> or <code>Pipe</code> input mode. In <code>File</code> mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode. In <code>Pipe</code> mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.'
        S3DataDistributionType:
          $ref: '#/components/schemas/ProcessingS3DataDistributionType'
          description: Whether the data stored in Amazon S3 is <code>FullyReplicated</code> or <code>ShardedByS3Key</code>.
        S3CompressionType:
          $ref: '#/components/schemas/ProcessingS3CompressionType'
          description: Whether to use <code>Gzip</code> compresion for Amazon S3 storage.
      description: Information about where and how you want to obtain the inputs for an processing job.
    ProcessingInput:
      type: object
      required:
        - InputName
        - S3Input
      properties:
        InputName:
          $ref: '#/components/schemas/String'
          description: The name of the inputs for the processing job.
        S3Input:
          $ref: '#/components/schemas/ProcessingS3Input'
          description: 'The S3 inputs for the processing job. '
      description: The inputs for a processing job.
    ProcessingJobSummary:
      type: object
      required:
        - ProcessingJobName
        - ProcessingJobArn
        - CreationTime
        - ProcessingJobStatus
      properties:
        ProcessingJobName:
          $ref: '#/components/schemas/ProcessingJobName'
          description: The name of the processing job.
        ProcessingJobArn:
          $ref: '#/components/schemas/ProcessingJobArn'
          description: The Amazon Resource Name (ARN) of the processing job..
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job was created.
        ProcessingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time at which the processing job completed.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates the last time the processing job was modified.
        ProcessingJobStatus:
          $ref: '#/components/schemas/ProcessingJobStatus'
          description: The status of the processing job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'A string, up to one KB in size, that contains the reason a processing job failed, if it failed.'
        ExitMessage:
          $ref: '#/components/schemas/ExitMessage'
          description: 'An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.'
      description: Summary of information about a processing job.
    ProcessingMaxRuntimeInSeconds:
      type: integer
      minimum: 1
      maximum: 604800
    ProcessingS3Output:
      type: object
      required:
        - S3Uri
        - LocalPath
        - S3UploadMode
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: A URI that identifies the Amazon S3 bucket where you want Amazon SageMaker to save the results of a processing job.
        LocalPath:
          $ref: '#/components/schemas/ProcessingLocalPath'
          description: The local path to the Amazon S3 bucket where you want Amazon SageMaker to save the results of an processing job. <code>LocalPath</code> is an absolute path to the input data.
        S3UploadMode:
          $ref: '#/components/schemas/ProcessingS3UploadMode'
          description: Whether to upload the results of the processing job continuously or after the job completes.
      description: Information about where and how you want to store the results of an processing job.
    ProcessingOutput:
      type: object
      required:
        - OutputName
        - S3Output
      properties:
        OutputName:
          $ref: '#/components/schemas/String'
          description: The name for the processing job output.
        S3Output:
          $ref: '#/components/schemas/ProcessingS3Output'
          description: Configuration for processing job outputs in Amazon S3.
      description: Describes the results of a processing job.
    ProcessingOutputs:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingOutput'
      minItems: 0
      maxItems: 10
    ProcessingS3CompressionType:
      type: string
      enum:
        - None
        - Gzip
    ProcessingS3DataType:
      type: string
      enum:
        - ManifestFile
        - S3Prefix
    ProductListings:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ProductionVariantInstanceType:
      type: string
      enum:
        - ml.t2.medium
        - ml.t2.large
        - ml.t2.xlarge
        - ml.t2.2xlarge
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.m5d.large
        - ml.m5d.xlarge
        - ml.m5d.2xlarge
        - ml.m5d.4xlarge
        - ml.m5d.12xlarge
        - ml.m5d.24xlarge
        - ml.c4.large
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.large
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.c5d.large
        - ml.c5d.xlarge
        - ml.c5d.2xlarge
        - ml.c5d.4xlarge
        - ml.c5d.9xlarge
        - ml.c5d.18xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
        - ml.r5.large
        - ml.r5.xlarge
        - ml.r5.2xlarge
        - ml.r5.4xlarge
        - ml.r5.12xlarge
        - ml.r5.24xlarge
        - ml.r5d.large
        - ml.r5d.xlarge
        - ml.r5d.2xlarge
        - ml.r5d.4xlarge
        - ml.r5d.12xlarge
        - ml.r5d.24xlarge
        - ml.inf1.xlarge
        - ml.inf1.2xlarge
        - ml.inf1.6xlarge
        - ml.inf1.24xlarge
    ProductionVariantAcceleratorType:
      type: string
      enum:
        - ml.eia1.medium
        - ml.eia1.large
        - ml.eia1.xlarge
        - ml.eia2.medium
        - ml.eia2.large
        - ml.eia2.xlarge
    ProductionVariant:
      type: object
      required:
        - VariantName
        - ModelName
        - InitialInstanceCount
        - InstanceType
      properties:
        VariantName:
          $ref: '#/components/schemas/VariantName'
          description: The name of the production variant.
        ModelName:
          $ref: '#/components/schemas/ModelName'
          description: The name of the model that you want to host. This is the name that you specified when creating the model.
        InitialInstanceCount:
          $ref: '#/components/schemas/TaskCount'
          description: Number of instances to launch initially.
        InstanceType:
          $ref: '#/components/schemas/ProductionVariantInstanceType'
          description: The ML compute instance type.
        InitialVariantWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: 'Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code> values across all ProductionVariants. If unspecified, it defaults to 1.0. '
        AcceleratorType:
          $ref: '#/components/schemas/ProductionVariantAcceleratorType'
          description: 'The size of the Elastic Inference (EI) instance to use for the production variant. EI instances provide on-demand GPU computing for inference. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic Inference in Amazon SageMaker</a>.'
      description: 'Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. '
    ProductionVariantSummary:
      type: object
      required:
        - VariantName
      properties:
        VariantName:
          $ref: '#/components/schemas/VariantName'
          description: The name of the variant.
        DeployedImages:
          $ref: '#/components/schemas/DeployedImages'
          description: An array of <code>DeployedImage</code> objects that specify the Amazon EC2 Container Registry paths of the inference images deployed on instances of this <code>ProductionVariant</code>.
        CurrentWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: The weight associated with the variant.
        DesiredWeight:
          $ref: '#/components/schemas/VariantWeight'
          description: 'The requested weight, as specified in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
        CurrentInstanceCount:
          $ref: '#/components/schemas/TaskCount'
          description: The number of instances associated with the variant.
        DesiredInstanceCount:
          $ref: '#/components/schemas/TaskCount'
          description: 'The number of instances requested in the <code>UpdateEndpointWeightsAndCapacities</code> request. '
      description: 'Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. '
    PropertyNameHint:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 100
    PropertyNameQuery:
      type: object
      required:
        - PropertyNameHint
      properties:
        PropertyNameHint:
          $ref: '#/components/schemas/PropertyNameHint'
          description: Text that begins a property's name.
      description: Part of the <code>SuggestionQuery</code> type. Specifies a hint for retrieving property names that begin with the specified text.
    PropertyNameSuggestion:
      type: object
      properties:
        PropertyName:
          $ref: '#/components/schemas/ResourcePropertyName'
          description: A suggested property name based on what you entered in the search textbox in the Amazon SageMaker console.
      description: A property name returned from a <code>GetSearchSuggestions</code> call that specifies a value in the <code>PropertyNameQuery</code> field.
    USD:
      type: object
      properties:
        Dollars:
          $ref: '#/components/schemas/Dollars'
          description: The whole number of dollars in the amount.
        Cents:
          $ref: '#/components/schemas/Cents'
          description: 'The fractional portion, in cents, of the amount. '
        TenthFractionsOfACent:
          $ref: '#/components/schemas/TenthFractionsOfACent'
          description: 'Fractions of a cent, in tenths.'
      description: Represents an amount of money in United States dollars/
    RenderableTask:
      type: object
      required:
        - Input
      properties:
        Input:
          $ref: '#/components/schemas/TaskInput'
          description: 'A JSON object that contains values for the variables defined in the template. It is made available to the template under the substitution variable <code>task.input</code>. For example, if you define a variable <code>task.input.text</code> in your template, you can supply the variable in the JSON object as <code>"text": "sample text"</code>.'
      description: Contains input values for a task.
    RenderingErrorList:
      type: array
      items:
        $ref: '#/components/schemas/RenderingError'
    TaskInput:
      type: string
      pattern: '[\S\s]+'
      minLength: 2
      maxLength: 128000
    RenderingError:
      type: object
      required:
        - Code
        - Message
      properties:
        Code:
          $ref: '#/components/schemas/String'
          description: A unique identifier for a specific class of errors.
        Message:
          $ref: '#/components/schemas/String'
          description: A human-readable message describing the error.
      description: A description of an error that occurred while rendering the template.
    TrainingInstanceType:
      type: string
      enum:
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.g4dn.xlarge
        - ml.g4dn.2xlarge
        - ml.g4dn.4xlarge
        - ml.g4dn.8xlarge
        - ml.g4dn.12xlarge
        - ml.g4dn.16xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.p3dn.24xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
    TrainingInstanceCount:
      type: integer
      minimum: 1
    VolumeSizeInGB:
      type: integer
      minimum: 1
    ResponseMIMEType:
      type: string
      pattern: '^[-\w]+\/.+$'
      maxLength: 1024
    RetentionType:
      type: string
      enum:
        - Retain
        - Delete
    S3DataDistribution:
      type: string
      enum:
        - FullyReplicated
        - ShardedByS3Key
    S3DataType:
      type: string
      enum:
        - ManifestFile
        - S3Prefix
        - AugmentedManifestFile
    ScheduleExpression:
      type: string
      minLength: 1
      maxLength: 256
    SearchExpressionList:
      type: array
      items:
        $ref: '#/components/schemas/SearchExpression'
      minItems: 1
      maxItems: 20
    SearchExpression:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/FilterList'
          description: A list of filter objects.
        NestedFilters:
          $ref: '#/components/schemas/NestedFiltersList'
          description: A list of nested filter objects.
        SubExpressions:
          $ref: '#/components/schemas/SearchExpressionList'
          description: A list of search expression objects.
        Operator:
          $ref: '#/components/schemas/BooleanOperator'
          description: 'A Boolean operator used to evaluate the search expression. If you want every conditional statement in all lists to be satisfied for the entire search expression to be true, specify <code>And</code>. If only a single conditional statement needs to be true for the entire search expression to be true, specify <code>Or</code>. The default value is <code>And</code>.'
      description: '<p>A multi-expression that searches for the specified resource or resources in a search. All resource objects that satisfy the expression''s condition are included in the search results. You must specify at least one subexpression, filter, or nested filter. A <code>SearchExpression</code> can contain up to twenty elements.</p> <p>A <code>SearchExpression</code> contains the following components:</p> <ul> <li> <p>A list of <code>Filter</code> objects. Each filter defines a simple Boolean expression comprised of a resource property name, Boolean operator, and value. A <code>SearchExpression</code> can include only one <code>Contains</code> operator.</p> </li> <li> <p>A list of <code>NestedFilter</code> objects. Each nested filter defines a list of Boolean expressions using a list of resource properties. A nested filter is satisfied if a single object in the list satisfies all Boolean expressions.</p> </li> <li> <p>A list of <code>SearchExpression</code> objects. A search expression object can be nested in a list of search expression objects.</p> </li> <li> <p>A Boolean operator: <code>And</code> or <code>Or</code>.</p> </li> </ul>'
    TrainingJob:
      type: object
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        TuningJobArn:
          $ref: '#/components/schemas/HyperParameterTuningJobArn'
          description: The Amazon Resource Name (ARN) of the associated hyperparameter tuning job if the training job was launched by a hyperparameter tuning job.
        LabelingJobArn:
          $ref: '#/components/schemas/LabelingJobArn'
          description: The Amazon Resource Name (ARN) of the labeling job.
        AutoMLJobArn:
          $ref: '#/components/schemas/AutoMLJobArn'
          description: The Amazon Resource Name (ARN) of the job.
        ModelArtifacts:
          $ref: '#/components/schemas/ModelArtifacts'
          description: Information about the Amazon S3 location that is configured for storing model artifacts.
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: '<p>The status of the training job.</p> <p>Training job statuses are:</p> <ul> <li> <p> <code>InProgress</code> - The training is in progress.</p> </li> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> <li> <p> <code>Failed</code> - The training job has failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeTrainingJobResponse</code> call.</p> </li> <li> <p> <code>Stopping</code> - The training job is stopping.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> <p>For more detailed information, see <code>SecondaryStatus</code>. </p>'
        SecondaryStatus:
          $ref: '#/components/schemas/SecondaryStatus'
          description: '<p> Provides detailed information about the state of the training job. For detailed information about the secondary status of the training job, see <code>StatusMessage</code> under <a>SecondaryStatusTransition</a>.</p> <p>Amazon SageMaker provides primary statuses and secondary statuses that apply to each of them:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <important> <p>Valid values for <code>SecondaryStatus</code> are subject to change. </p> </important> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the training job failed, the reason it failed.'
        HyperParameters:
          $ref: '#/components/schemas/HyperParameters'
          description: Algorithm-specific parameters.
        AlgorithmSpecification:
          $ref: '#/components/schemas/AlgorithmSpecification'
          description: 'Information about the algorithm used for training, and algorithm metadata.'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
          description: The AWS Identity and Access Management (IAM) role configured for the training job.
        InputDataConfig:
          $ref: '#/components/schemas/InputDataConfig'
          description: An array of <code>Channel</code> objects that describes each data input channel.
        OutputDataConfig:
          $ref: '#/components/schemas/OutputDataConfig'
          description: The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts.
        ResourceConfig:
          $ref: '#/components/schemas/ResourceConfig'
          description: 'Resources, including ML compute instances and ML storage volumes, that are configured for model training.'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
          description: 'A <a>VpcConfig</a> object that specifies the VPC that this training job has access to. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>.'
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
          description: '<p>Specifies a limit to how long a model training job can run. When the job reaches the time limit, Amazon SageMaker ends the training job. Use this API to cap model training costs.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms can use this 120-second window to save the model artifacts, so the results of training are not lost. </p>'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the training job was created.
        TrainingStartTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates the time when the training job starts on training instances. You are billed for the time interval between this time and the value of <code>TrainingEndTime</code>. The start time in CloudWatch Logs might be later than this time. The difference is due to the time it takes to download the training data and to the size of the training container.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates the time when the training job ends on training instances. You are billed for the time interval between the value of <code>TrainingStartTime</code> and this time. For successful jobs and stopped jobs, this is the time after model artifacts are uploaded. For failed jobs, this is the time when Amazon SageMaker detects a job failure.'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that indicates when the status of the training job was last modified.
        SecondaryStatusTransitions:
          $ref: '#/components/schemas/SecondaryStatusTransitions'
          description: A history of all of the secondary statuses that the training job has transitioned through.
        FinalMetricDataList:
          $ref: '#/components/schemas/FinalMetricDataList'
          description: A list of final metric values that are set when the training job completes. Used only if the training job was configured to use metrics.
        EnableNetworkIsolation:
          $ref: '#/components/schemas/Boolean'
          description: 'If the <code>TrainingJob</code> was created with network isolation, the value is set to <code>true</code>. If network isolation is enabled, nodes can''t communicate beyond the VPC they run in.'
        EnableInterContainerTrafficEncryption:
          $ref: '#/components/schemas/Boolean'
          description: 'To encrypt all communications between ML compute instances in distributed training, choose <code>True</code>. Encryption provides greater security for distributed training, but training might take longer. How long it takes depends on the amount of communication between compute instances, especially if you use a deep learning algorithm in distributed training.'
        EnableManagedSpotTraining:
          $ref: '#/components/schemas/Boolean'
          description: 'When true, enables managed spot training using Amazon EC2 Spot instances to run training jobs instead of on-demand instances. For more information, see <a>model-managed-spot-training</a>.'
        CheckpointConfig:
          $ref: '#/components/schemas/CheckpointConfig'
        TrainingTimeInSeconds:
          $ref: '#/components/schemas/TrainingTimeInSeconds'
          description: The training time in seconds.
        BillableTimeInSeconds:
          $ref: '#/components/schemas/BillableTimeInSeconds'
          description: The billable time in seconds.
        DebugHookConfig:
          $ref: '#/components/schemas/DebugHookConfig'
        ExperimentConfig:
          $ref: '#/components/schemas/ExperimentConfig'
        DebugRuleConfigurations:
          $ref: '#/components/schemas/DebugRuleConfigurations'
          description: Information about the debug rule configuration.
        TensorBoardOutputConfig:
          $ref: '#/components/schemas/TensorBoardOutputConfig'
        DebugRuleEvaluationStatuses:
          $ref: '#/components/schemas/DebugRuleEvaluationStatuses'
          description: Information about the evaluation status of the rules for the training job.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
      description: Contains information about a training job.
    Trial:
      type: object
      properties:
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        ExperimentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the experiment the trial is part of.
        Source:
          $ref: '#/components/schemas/TrialSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Who last modified the trial.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags that are associated with the trial. You can use <a>Search</a> API to search on the tags.
        TrialComponentSummaries:
          $ref: '#/components/schemas/TrialComponentSimpleSummaries'
          description: 'A list of the components associated with the trial. For each component, a summary of the component''s properties is included.'
      description: A summary of the properties of a trial as returned by the <a>Search</a> API.
    TrialComponent:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
        Source:
          $ref: '#/components/schemas/TrialComponentSource'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
        Parameters:
          $ref: '#/components/schemas/TrialComponentParameters'
          description: The hyperparameters of the component.
        InputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The input artifacts of the component.
        OutputArtifacts:
          $ref: '#/components/schemas/TrialComponentArtifacts'
          description: The output artifacts of the component.
        Metrics:
          $ref: '#/components/schemas/TrialComponentMetricSummaries'
          description: The metrics for the component.
        SourceDetail:
          $ref: '#/components/schemas/TrialComponentSourceDetail'
          description: The source of the trial component.&gt;
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The list of tags that are associated with the component. You can use <a>Search</a> API to search on the tags.
        Parents:
          $ref: '#/components/schemas/Parents'
          description: An array of the parents of the component. A parent is a trial the component is associated with and the experiment the trial is part of. A component might not have any parents.
      description: A summary of the properties of a trial component as returned by the <a>Search</a> API.
    SearchRecord:
      type: object
      properties:
        TrainingJob:
          $ref: '#/components/schemas/TrainingJob'
          description: A <code>TrainingJob</code> object that is returned as part of a <code>Search</code> request.
        Experiment:
          $ref: '#/components/schemas/Experiment'
          description: A summary of the properties of an experiment.
        Trial:
          $ref: '#/components/schemas/Trial'
          description: A summary of the properties of a trial.
        TrialComponent:
          $ref: '#/components/schemas/TrialComponent'
          description: A summary of the properties of a trial component.
      description: An individual search result record that contains a single resource object.
    SearchSortOrder:
      type: string
      enum:
        - Ascending
        - Descending
    SearchResultsList:
      type: array
      items:
        $ref: '#/components/schemas/SearchRecord'
    StatusMessage:
      type: string
    SecondaryStatusTransition:
      type: object
      required:
        - Status
        - StartTime
      properties:
        Status:
          $ref: '#/components/schemas/SecondaryStatus'
          description: '<p>Contains a secondary status information from a training job.</p> <p>Status might be one of the following secondary statuses:</p> <dl> <dt>InProgress</dt> <dd> <ul> <li> <p> <code>Starting</code> - Starting the training job.</p> </li> <li> <p> <code>Downloading</code> - An optional stage for algorithms that support <code>File</code> training input mode. It indicates that data is being downloaded to the ML storage volumes.</p> </li> <li> <p> <code>Training</code> - Training is in progress.</p> </li> <li> <p> <code>Uploading</code> - Training is complete and the model artifacts are being uploaded to the S3 location.</p> </li> </ul> </dd> <dt>Completed</dt> <dd> <ul> <li> <p> <code>Completed</code> - The training job has completed.</p> </li> </ul> </dd> <dt>Failed</dt> <dd> <ul> <li> <p> <code>Failed</code> - The training job has failed. The reason for the failure is returned in the <code>FailureReason</code> field of <code>DescribeTrainingJobResponse</code>.</p> </li> </ul> </dd> <dt>Stopped</dt> <dd> <ul> <li> <p> <code>MaxRuntimeExceeded</code> - The job stopped because it exceeded the maximum allowed runtime.</p> </li> <li> <p> <code>Stopped</code> - The training job has stopped.</p> </li> </ul> </dd> <dt>Stopping</dt> <dd> <ul> <li> <p> <code>Stopping</code> - Stopping the training job.</p> </li> </ul> </dd> </dl> <p>We no longer support the following secondary statuses:</p> <ul> <li> <p> <code>LaunchingMLInstances</code> </p> </li> <li> <p> <code>PreparingTrainingStack</code> </p> </li> <li> <p> <code>DownloadingTrainingImage</code> </p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the training job transitioned to the current secondary status state.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the training job transitioned out of this secondary status state into another secondary status state or when the training job has ended.
        StatusMessage:
          $ref: '#/components/schemas/StatusMessage'
          description: '<p>A detailed description of the progress within a secondary status. </p> <p>Amazon SageMaker provides secondary statuses and status messages that apply to each of them:</p> <dl> <dt>Starting</dt> <dd> <ul> <li> <p>Starting the training job.</p> </li> <li> <p>Launching requested ML instances.</p> </li> <li> <p>Insufficient capacity error from EC2 while launching instances, retrying!</p> </li> <li> <p>Launched instance was unhealthy, replacing it!</p> </li> <li> <p>Preparing the instances for training.</p> </li> </ul> </dd> <dt>Training</dt> <dd> <ul> <li> <p>Downloading the training image.</p> </li> <li> <p>Training image download completed. Training in progress.</p> </li> </ul> </dd> </dl> <important> <p>Status messages are subject to change. Therefore, we recommend not including them in code that programmatically initiates actions. For examples, don''t use status messages in if statements.</p> </important> <p>To have an overview of your training job''s progress, view <code>TrainingJobStatus</code> and <code>SecondaryStatus</code> in <a>DescribeTrainingJob</a>, and <code>StatusMessage</code> together. For example, at the start of a training job, you might see the following:</p> <ul> <li> <p> <code>TrainingJobStatus</code> - InProgress</p> </li> <li> <p> <code>SecondaryStatus</code> - Training</p> </li> <li> <p> <code>StatusMessage</code> - Downloading the training image</p> </li> </ul>'
      description: '<p>An array element of <a>DescribeTrainingJobResponse$SecondaryStatusTransitions</a>. It provides additional details about a status that the training job has transitioned through. A training job can be in one of several states, for example, starting, downloading, training, or uploading. Within each state, there are a number of intermediate states. For example, within the starting state, Amazon SageMaker could be starting the training job or launching the ML instances. These transitional states are referred to as the job''s secondary status. </p> <p/>'
    SecurityGroupId:
      type: string
      pattern: '[-0-9a-zA-Z]+'
      maxLength: 32
    Seed:
      type: integer
    SharingSettings:
      type: object
      properties:
        NotebookOutputOption:
          $ref: '#/components/schemas/NotebookOutputOption'
          description: The notebook output option.
        S3OutputPath:
          $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 output path.
        S3KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
          description: The AWS Key Management Service encryption key ID.
      description: The sharing settings.
    SourceAlgorithm:
      type: object
      required:
        - AlgorithmName
      properties:
        ModelDataUrl:
          $ref: '#/components/schemas/Url'
          description: 'The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single <code>gzip</code> compressed tar archive (<code>.tar.gz</code> suffix).'
        AlgorithmName:
          $ref: '#/components/schemas/ArnOrName'
          description: The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
      description: Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
    SourceAlgorithmList:
      type: array
      items:
        $ref: '#/components/schemas/SourceAlgorithm'
      minItems: 1
      maxItems: 1
    SourceIpConfig:
      type: object
      required:
        - Cidrs
      properties:
        Cidrs:
          $ref: '#/components/schemas/Cidrs'
          description: '<p>A list of one to four <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">Classless Inter-Domain Routing</a> (CIDR) values.</p> <p>Maximum: Four CIDR values</p> <note> <p>The following Length Constraints apply to individual CIDR values in the CIDR value list.</p> </note>'
      description: 'A list of IP address ranges (<a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. For more information, see .'
    SplitType:
      type: string
      enum:
        - None
        - Line
        - RecordIO
        - TFRecord
    StringParameterValue:
      type: string
      pattern: .*
      maxLength: 256
    TagKey:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The tag key.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The tag value.
      description: 'Describes a tag. '
    TargetObjectiveMetricValue:
      type: number
      format: float
    TaskKeyword:
      type: string
      pattern: '^[A-Za-z0-9]+( [A-Za-z0-9]+)*$'
      minLength: 1
      maxLength: 30
    TemplateContent:
      type: string
      pattern: '[\S\s]+'
      minLength: 1
      maxLength: 128000
    TemplateContentSha256:
      type: string
      minLength: 1
      maxLength: 128000
    TemplateUrl:
      type: string
      minLength: 1
      maxLength: 2048
    TensorBoardAppSettings:
      type: object
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and quantity.
      description: The TensorBoard app settings.
    TenthFractionsOfACent:
      type: integer
      minimum: 0
      maximum: 9
    TrainingInstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/TrainingInstanceType'
    TrainingJobStatusCounter:
      type: integer
      minimum: 0
    TrainingJobSummary:
      type: object
      required:
        - TrainingJobName
        - TrainingJobArn
        - CreationTime
        - TrainingJobStatus
      properties:
        TrainingJobName:
          $ref: '#/components/schemas/TrainingJobName'
          description: The name of the training job that you want a summary for.
        TrainingJobArn:
          $ref: '#/components/schemas/TrainingJobArn'
          description: The Amazon Resource Name (ARN) of the training job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the training job was created.
        TrainingEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that shows when the training job ended. This field is set only if the training job has one of the terminal statuses (<code>Completed</code>, <code>Failed</code>, or <code>Stopped</code>). '
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: ' Timestamp when the training job was last modified. '
        TrainingJobStatus:
          $ref: '#/components/schemas/TrainingJobStatus'
          description: The status of the training job.
      description: Provides summary information about a training job.
    TransformS3DataSource:
      type: object
      required:
        - S3DataType
        - S3Uri
      properties:
        S3DataType:
          $ref: '#/components/schemas/S3DataType'
          description: '<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for batch transform. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for batch transform. </p> <p>The following values are compatible: <code>ManifestFile</code>, <code>S3Prefix</code> </p> <p>The following value is not compatible: <code>AugmentedManifestFile</code> </p>'
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
          description: '<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example:</p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[ {"prefix": "s3://customer_bucket/some/prefix/"},</code> </p> <p> <code>"relative/path/to/custdata-1",</code> </p> <p> <code>"relative/path/custdata-2",</code> </p> <p> <code>...</code> </p> <p> <code>"relative/path/custdata-N"</code> </p> <p> <code>]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-2</code> </p> <p> <code>...</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-N</code> </p> <p> The complete set of <code>S3Uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>S3Uris</code> points to must be readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf.</p> </li> </ul>'
      description: Describes the S3 data source.
    TransformDataSource:
      type: object
      required:
        - S3DataSource
      properties:
        S3DataSource:
          $ref: '#/components/schemas/TransformS3DataSource'
          description: The S3 location of the data source that is associated with a channel.
      description: Describes the location of the channel data.
    TransformEnvironmentKey:
      type: string
      pattern: '[a-zA-Z_][a-zA-Z0-9_]*'
      maxLength: 1024
    TransformEnvironmentValue:
      type: string
      pattern: '[\S\s]*'
      maxLength: 10240
    TransformInstanceCount:
      type: integer
      minimum: 1
    TransformInstanceType:
      type: string
      enum:
        - ml.m4.xlarge
        - ml.m4.2xlarge
        - ml.m4.4xlarge
        - ml.m4.10xlarge
        - ml.m4.16xlarge
        - ml.c4.xlarge
        - ml.c4.2xlarge
        - ml.c4.4xlarge
        - ml.c4.8xlarge
        - ml.p2.xlarge
        - ml.p2.8xlarge
        - ml.p2.16xlarge
        - ml.p3.2xlarge
        - ml.p3.8xlarge
        - ml.p3.16xlarge
        - ml.c5.xlarge
        - ml.c5.2xlarge
        - ml.c5.4xlarge
        - ml.c5.9xlarge
        - ml.c5.18xlarge
        - ml.m5.large
        - ml.m5.xlarge
        - ml.m5.2xlarge
        - ml.m5.4xlarge
        - ml.m5.12xlarge
        - ml.m5.24xlarge
    TransformJobSummary:
      type: object
      required:
        - TransformJobName
        - TransformJobArn
        - CreationTime
        - TransformJobStatus
      properties:
        TransformJobName:
          $ref: '#/components/schemas/TransformJobName'
          description: The name of the transform job.
        TransformJobArn:
          $ref: '#/components/schemas/TransformJobArn'
          description: The Amazon Resource Name (ARN) of the transform job.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: A timestamp that shows when the transform Job was created.
        TransformEndTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'Indicates when the transform job ends on compute instances. For successful jobs and stopped jobs, this is the exact time recorded after the results are uploaded. For failed jobs, this is when Amazon SageMaker detected that the job failed.'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: Indicates when the transform job was last modified.
        TransformJobStatus:
          $ref: '#/components/schemas/TransformJobStatus'
          description: The status of the transform job.
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
          description: 'If the transform job failed, the reason it failed.'
      description: Provides a summary of a transform job. Multiple <code>TransformJobSummary</code> objects are returned as a list after in response to a <a>ListTransformJobs</a> call.
    TrialComponentSimpleSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrialComponentSimpleSummary'
    TrialComponentSourceDetail:
      type: object
      properties:
        SourceArn:
          $ref: '#/components/schemas/TrialComponentSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        TrainingJob:
          $ref: '#/components/schemas/TrainingJob'
      description: Detailed information about the source of a trial component.
    TrialComponentArtifactValue:
      type: string
      pattern: .*
      maxLength: 2048
    TrialComponentArtifact:
      type: object
      required:
        - Value
      properties:
        MediaType:
          $ref: '#/components/schemas/MediaType'
          description: 'The media type of the artifact, which indicates the type of data in the artifact file. The media type consists of a <i>type</i> and a <i>subtype</i> concatenated with a slash (/) character, for example, text/csv, image/jpeg, and s3/uri. The type specifies the category of the media. The subtype specifies the kind of data.'
        Value:
          $ref: '#/components/schemas/TrialComponentArtifactValue'
          description: The location of the artifact.
      description: '<p>Represents an input or output artifact of a trial component. You specify <code>TrialComponentArtifact</code> as part of the <code>InputArtifacts</code> and <code>OutputArtifacts</code> parameters in the <a>CreateTrialComponent</a> request.</p> <p>Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types. Examples of output artifacts are metrics, snapshots, logs, and images.</p>'
    TrialComponentKey64:
      type: string
      pattern: .*
      maxLength: 64
    TrialComponentMetricSummary:
      type: object
      properties:
        MetricName:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        SourceArn:
          $ref: '#/components/schemas/TrialComponentSourceArn'
          description: The Amazon Resource Name (ARN) of the source.
        TimeStamp:
          $ref: '#/components/schemas/Timestamp'
          description: When the metric was last updated.
        Max:
          $ref: '#/components/schemas/OptionalDouble'
          description: The maximum value of the metric.
        Min:
          $ref: '#/components/schemas/OptionalDouble'
          description: The minimum value of the metric.
        Last:
          $ref: '#/components/schemas/OptionalDouble'
          description: The most recent value of the metric.
        Count:
          $ref: '#/components/schemas/OptionalInteger'
          description: The number of samples used to generate the metric.
        Avg:
          $ref: '#/components/schemas/OptionalDouble'
          description: The average value of the metric.
        StdDev:
          $ref: '#/components/schemas/OptionalDouble'
          description: The standard deviation of the metric.
      description: A summary of the metrics of a trial component.
    TrialComponentSourceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*'
      maxLength: 256
    TrialComponentParameterValue:
      type: object
      properties:
        StringValue:
          $ref: '#/components/schemas/StringParameterValue'
          description: 'The string value of a categorical hyperparameter. If you specify a value for this parameter, you can''t specify the <code>NumberValue</code> parameter.'
        NumberValue:
          $ref: '#/components/schemas/DoubleParameterValue'
          description: 'The numeric value of a numeric hyperparameter. If you specify a value for this parameter, you can''t specify the <code>StringValue</code> parameter.'
      description: <p>The value of a hyperparameter. Only one of <code>NumberValue</code> or <code>StringValue</code> can be specified.</p> <p>This object is specified in the <a>CreateTrialComponent</a> request.</p>
    TrialComponentPrimaryStatus:
      type: string
      enum:
        - InProgress
        - Completed
        - Failed
    TrialComponentSimpleSummary:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The Amazon Resource Name (ARN) of the trial component.
        TrialComponentSource:
          $ref: '#/components/schemas/TrialComponentSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
      description: A short summary of a trial component.
    TrialComponentStatusMessage:
      type: string
      pattern: .*
      maxLength: 1024
    TrialComponentSummary:
      type: object
      properties:
        TrialComponentName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial component.
        TrialComponentArn:
          $ref: '#/components/schemas/TrialComponentArn'
          description: The ARN of the trial component.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the component as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialComponentName</code> is displayed.'
        TrialComponentSource:
          $ref: '#/components/schemas/TrialComponentSource'
        Status:
          $ref: '#/components/schemas/TrialComponentStatus'
          description: '<p>The status of the component. States include:</p> <ul> <li> <p>InProgress</p> </li> <li> <p>Completed</p> </li> <li> <p>Failed</p> </li> </ul>'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component started.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component ended.
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was created.
        CreatedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who created the component.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the component was last modified.
        LastModifiedBy:
          $ref: '#/components/schemas/UserContext'
          description: Who last modified the component.
      description: 'A summary of the properties of a trial component. To get all the properties, call the <a>DescribeTrialComponent</a> API and provide the <code>TrialComponentName</code>.'
    TrialSourceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:.*'
      maxLength: 256
    TrialSummary:
      type: object
      properties:
        TrialArn:
          $ref: '#/components/schemas/TrialArn'
          description: The Amazon Resource Name (ARN) of the trial.
        TrialName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: The name of the trial.
        DisplayName:
          $ref: '#/components/schemas/ExperimentEntityName'
          description: 'The name of the trial as displayed. If <code>DisplayName</code> isn''t specified, <code>TrialName</code> is displayed.'
        TrialSource:
          $ref: '#/components/schemas/TrialSource'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was created.
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
          description: When the trial was last modified.
      description: 'A summary of the properties of a trial. To get the complete set of properties, call the <a>DescribeTrial</a> API and provide the <code>TrialName</code>.'
    VariantPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/VariantProperty'
      minItems: 0
      maxItems: 3
    UserProfileDetails:
      type: object
      properties:
        DomainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        UserProfileName:
          $ref: '#/components/schemas/UserProfileName'
          description: The user profile name.
        Status:
          $ref: '#/components/schemas/UserProfileStatus'
          description: The status.
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
          description: The creation time.
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
          description: The last modified time.
      description: The user profile details.
    VariantPropertyType:
      type: string
      enum:
        - DesiredInstanceCount
        - DesiredWeight
        - DataCaptureConfig
    VariantProperty:
      type: object
      required:
        - VariantPropertyType
      properties:
        VariantPropertyType:
          $ref: '#/components/schemas/VariantPropertyType'
          description: '<p>The type of variant property. The supported values are:</p> <ul> <li> <p> <code>DesiredInstanceCount</code>: Overrides the existing variant instance counts using the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_ProductionVariant.html#SageMaker-Type-ProductionVariant-InitialInstanceCount">InitialInstanceCount</a> values in the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html#SageMaker-CreateEndpointConfig-request-ProductionVariants">ProductionVariants</a>.</p> </li> <li> <p> <code>DesiredWeight</code>: Overrides the existing variant weights using the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_ProductionVariant.html#SageMaker-Type-ProductionVariant-InitialVariantWeight">InitialVariantWeight</a> values in the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html#SageMaker-CreateEndpointConfig-request-ProductionVariants">ProductionVariants</a>.</p> </li> <li> <p> <code>DataCaptureConfig</code>: (Not currently supported.)</p> </li> </ul>'
      description: '<p>Specifies a production variant property type for an Endpoint.</p> <p>If you are updating an endpoint with the <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_UpdateEndpoint.html#SageMaker-UpdateEndpoint-request-RetainAllVariantProperties">RetainAllVariantProperties</a> option set to <code>true</code>, the <code>VariantProperty</code> objects listed in <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/API_UpdateEndpoint.html#SageMaker-UpdateEndpoint-request-ExcludeRetainedVariantProperties">ExcludeRetainedVariantProperties</a> override the existing variant properties of the endpoint.</p>'
    VpcSecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      minItems: 1
      maxItems: 5
    WorkforceArn:
      type: string
      pattern: 'arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:workforce/.*'
      maxLength: 256
security:
  - hmac: []
