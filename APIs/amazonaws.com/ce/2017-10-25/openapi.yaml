openapi: 3.0.0
info:
  version: '2017-10-25'
  x-release: v4
  title: AWS Cost Explorer Service
  description: '<p>The Cost Explorer API enables you to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data, such as the number of daily write operations for Amazon DynamoDB database tables in your production environment. </p> <p>Service Endpoint</p> <p>The Cost Explorer API provides the following endpoint:</p> <ul> <li> <p> <code>https://ce.us-east-1.amazonaws.com</code> </p> </li> </ul> <p>For information about costs associated with the Cost Explorer API, see <a href="https://aws.amazon.com/aws-cost-management/pricing/">AWS Cost Management Pricing</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ce
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ce-2017-10-25.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/ce/'
servers:
  - url: 'http://ce.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Cost Explorer multi-region endpoint
  - url: 'https://ce.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Cost Explorer multi-region endpoint
  - url: 'http://ce.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Cost Explorer endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://ce.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Cost Explorer endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=AWSInsightsIndexService.CreateCostCategoryDefinition':
    post:
      operationId: CreateCostCategoryDefinition
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>Creates a new Cost Category with the requested name and rules.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCostCategoryDefinitionResponse'
        '480':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCostCategoryDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.CreateCostCategoryDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.DeleteCostCategoryDefinition':
    post:
      operationId: DeleteCostCategoryDefinition
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>Deletes a Cost Category. Expenses from this month going forward will no longer be categorized with this Cost Category.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCostCategoryDefinitionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCostCategoryDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.DeleteCostCategoryDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.DescribeCostCategoryDefinition':
    post:
      operationId: DescribeCostCategoryDefinition
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>Returns the name, ARN, rules, definition, and effective dates of a Cost Category that''s defined in the account.</p> <p>You have the option to use <code>EffectiveOn</code> to return a Cost Category that is active on a specific date. If there is no <code>EffectiveOn</code> specified, you’ll see a Cost Category that is effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCostCategoryDefinitionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCostCategoryDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.DescribeCostCategoryDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsage':
    post:
      operationId: GetCostAndUsage
      description: 'Retrieves cost and usage metrics for your account. You can specify which cost and usage-related metric, such as <code>BlendedCosts</code> or <code>UsageQuantity</code>, that you want the request to return. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html">GetDimensionValues</a> operation. Master accounts in an organization in AWS Organizations have access to all member accounts.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostAndUsageResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: BillExpirationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
        '482':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: RequestChangedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCostAndUsageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetCostAndUsage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetCostAndUsageWithResources':
    post:
      operationId: GetCostAndUsageWithResources
      description: '<p>Retrieves cost and usage metrics with resources for your account. You can specify which cost and usage-related metric, such as <code>BlendedCosts</code> or <code>UsageQuantity</code>, that you want the request to return. You can also filter and group your data by various dimensions, such as <code>SERVICE</code> or <code>AZ</code>, in a specific time range. For a complete list of valid dimensions, see the <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetDimensionValues.html">GetDimensionValues</a> operation. Master accounts in an organization in AWS Organizations have access to all member accounts. This API is currently available for the Amazon Elastic Compute Cloud – Compute service only.</p> <note> <p>This is an opt-in only feature. You can enable this feature from the Cost Explorer Settings page. For information on how to access the Settings page, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-access.html">Controlling Access for Cost Explorer</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostAndUsageWithResourcesResponse'
        '480':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: BillExpirationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: RequestChangedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCostAndUsageWithResourcesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetCostAndUsageWithResources
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetCostForecast':
    post:
      operationId: GetCostForecast
      description: 'Retrieves a forecast for how much Amazon Web Services predicts that you will spend over the forecast time period that you select, based on your past costs. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCostForecastResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCostForecastRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetCostForecast
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetDimensionValues':
    post:
      operationId: GetDimensionValues
      description: 'Retrieves all available filter values for a specified filter over a period of time. You can search the dimension values for an arbitrary string. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDimensionValuesResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: BillExpirationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
        '482':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: RequestChangedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDimensionValuesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetDimensionValues
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetReservationCoverage':
    post:
      operationId: GetReservationCoverage
      description: '<p>Retrieves the reservation coverage for your account. This enables you to see how much of your Amazon Elastic Compute Cloud, Amazon ElastiCache, Amazon Relational Database Service, or Amazon Redshift usage is covered by a reservation. An organization''s master account can see the coverage of the associated member accounts. For any time period, you can filter data about reservation usage by the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li> <li> <p>TAG</p> </li> <li> <p>TENANCY</p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationCoverageResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReservationCoverageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetReservationCoverage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetReservationPurchaseRecommendation':
    post:
      operationId: GetReservationPurchaseRecommendation
      description: '<p>Gets recommendations for which reservations to purchase. These recommendations could help you reduce your costs. Reservations provide a discounted hourly rate (up to 75%) compared to On-Demand pricing.</p> <p>AWS generates your recommendations by identifying your On-Demand usage during a specific time period and collecting your usage into categories that are eligible for a reservation. After AWS has these categories, it simulates every combination of reservations in each category of usage to identify the best number of each type of RI to purchase to maximize your estimated savings. </p> <p>For example, AWS automatically aggregates your Amazon EC2 Linux, shared tenancy, and c4 family usage in the US West (Oregon) Region and recommends that you buy size-flexible regional reservations to apply to the c4 family usage. AWS recommends the smallest size instance in an instance family. This makes it easier to purchase a size-flexible RI. AWS also shows the equal number of normalized units so that you can purchase any instance size that you want. For this example, your RI recommendation would be for <code>c4.large</code> because that is the smallest size instance in the c4 instance family.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationPurchaseRecommendationResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReservationPurchaseRecommendationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetReservationPurchaseRecommendation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetReservationUtilization':
    post:
      operationId: GetReservationUtilization
      description: 'Retrieves the reservation utilization for your account. Master accounts in an organization have access to member accounts. You can filter data by dimensions in a time period. You can use <code>GetDimensionValues</code> to determine the possible dimension values. Currently, you can group only by <code>SUBSCRIPTION_ID</code>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationUtilizationResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReservationUtilizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetReservationUtilization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetRightsizingRecommendation':
    post:
      operationId: GetRightsizingRecommendation
      description: '<p>Creates recommendations that helps you save cost by identifying idle and underutilized Amazon EC2 instances.</p> <p>Recommendations are generated to either downsize or terminate instances, along with providing savings detail and metrics. For details on calculation and function, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/ce-what-is.html">Optimizing Your Cost with Rightsizing Recommendations</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRightsizingRecommendationResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRightsizingRecommendationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetRightsizingRecommendation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansCoverage':
    post:
      operationId: GetSavingsPlansCoverage
      description: '<p>Retrieves the Savings Plans covered for your account. This enables you to see how much of your cost is covered by a Savings Plan. An organization’s master account can see the coverage of the associated member accounts. For any time period, you can filter data for Savings Plans usage with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code> </p> </li> <li> <p> <code>INSTANCE_FAMILY</code> </p> </li> </ul> <p>To determine valid values for a dimension, use the <code>GetDimensionValues</code> operation.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansCoverageResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansCoverageRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetSavingsPlansCoverage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation':
    post:
      operationId: GetSavingsPlansPurchaseRecommendation
      description: 'Retrieves your request parameters, Savings Plan Recommendations Summary and Details.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansPurchaseRecommendationResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansPurchaseRecommendationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilization':
    post:
      operationId: GetSavingsPlansUtilization
      description: <p>Retrieves the Savings Plans utilization for your account across date ranges with daily or monthly granularity. Master accounts in an organization have access to member accounts. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p>You cannot group by any dimension values for <code>GetSavingsPlansUtilization</code>.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansUtilizationResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansUtilizationRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetSavingsPlansUtilization
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetSavingsPlansUtilizationDetails':
    post:
      operationId: GetSavingsPlansUtilizationDetails
      description: '<p>Retrieves attribute data along with aggregate utilization and savings data for a given time period. This doesn''t support granular or grouped data (daily/monthly) in response. You can''t retrieve data by dates in a single response similar to <code>GetSavingsPlanUtilization</code>, but you have the option to make multiple calls to <code>GetSavingsPlanUtilizationDetails</code> by providing individual dates. You can use <code>GetDimensionValues</code> in <code>SAVINGS_PLANS</code> to determine the possible dimension values.</p> <note> <p> <code>GetSavingsPlanUtilizationDetails</code> internally groups data by <code>SavingsPlansArn</code>.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSavingsPlansUtilizationDetailsResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '482':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSavingsPlansUtilizationDetailsRequest'
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetSavingsPlansUtilizationDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetTags':
    post:
      operationId: GetTags
      description: 'Queries for available tag keys and tag values for a specified period. You can search the tag values for an arbitrary string. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagsResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: BillExpirationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillExpirationException'
        '482':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '483':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '484':
          description: RequestChangedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestChangedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.GetUsageForecast':
    post:
      operationId: GetUsageForecast
      description: 'Retrieves a forecast for how much Amazon Web Services predicts that you will use over the forecast time period that you select, based on your past usage. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsageForecastResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '481':
          description: DataUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataUnavailableException'
        '482':
          description: UnresolvableUsageUnitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnresolvableUsageUnitException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsageForecastRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.GetUsageForecast
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.ListCostCategoryDefinitions':
    post:
      operationId: ListCostCategoryDefinitions
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>Returns the name, ARN and effective dates of all Cost Categories defined in the account. You have the option to use <code>EffectiveOn</code> to return a list of Cost Categories that were active on a specific date. If there is no <code>EffectiveOn</code> specified, you’ll see Cost Categories that are effective on the current date. If Cost Category is still effective, <code>EffectiveEnd</code> is omitted in the response. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCostCategoryDefinitionsResponse'
        '480':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCostCategoryDefinitionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.ListCostCategoryDefinitions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSInsightsIndexService.UpdateCostCategoryDefinition':
    post:
      operationId: UpdateCostCategoryDefinition
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>Updates an existing Cost Category. Changes made to the Cost Category rules will be used to categorize the current month’s expenses and future expenses. This won’t change categorization for the previous months.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCostCategoryDefinitionResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCostCategoryDefinitionRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSInsightsIndexService.UpdateCostCategoryDefinition
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: ' The unique identifier for your newly created Cost Category. '
        EffectiveStart:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The Cost Category''s effective start date. '
    CreateCostCategoryDefinitionRequest:
      type: object
      required:
        - Name
        - RuleVersion
        - Rules
      title: CreateCostCategoryDefinitionRequest
      properties:
        Name:
          $ref: '#/components/schemas/CostCategoryName'
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          $ref: '#/components/schemas/CostCategoryRulesList'
          description: '<p> <code>CreateCostCategoryDefinition</code> supports dimensions, Tags, and nested expressions. Currently the only dimensions supported is <code>LINKED_ACCOUNT</code>.</p> <p>Root level <code>OR</code> is not supported. We recommend you create a separate rule instead.</p> <p>Rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value. </p>'
    ServiceQuotaExceededException: {}
    LimitExceededException: {}
    DeleteCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: ' The unique identifier for your Cost Category. '
        EffectiveEnd:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The effective end date of the Cost Category as a result of deleting it. No costs after this date will be categorized by the deleted Cost Category. '
    DeleteCostCategoryDefinitionRequest:
      type: object
      required:
        - CostCategoryArn
      title: DeleteCostCategoryDefinitionRequest
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: ' The unique identifier for your Cost Category. '
    ResourceNotFoundException: {}
    DescribeCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategory:
          $ref: '#/components/schemas/CostCategory'
    DescribeCostCategoryDefinitionRequest:
      type: object
      required:
        - CostCategoryArn
      title: DescribeCostCategoryDefinitionRequest
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: ' The unique identifier for your Cost Category. '
        EffectiveOn:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The date when the Cost Category was effective. '
    GetCostAndUsageResponse:
      type: object
      properties:
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token for the next set of retrievable results. AWS provides the token when the response from a previous call has more results than the maximum page size.
        GroupDefinitions:
          $ref: '#/components/schemas/GroupDefinitions'
          description: The groups that are specified by the <code>Filter</code> or <code>GroupBy</code> parameters in the request.
        ResultsByTime:
          $ref: '#/components/schemas/ResultsByTime'
          description: The time period that is covered by the results in the response.
    GetCostAndUsageRequest:
      type: object
      required:
        - TimePeriod
      title: GetCostAndUsageRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'Sets the start and end dates for retrieving AWS costs. The start date is inclusive, but the end date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>, then the cost and usage data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>.'
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: 'Sets the AWS cost granularity to <code>MONTHLY</code> or <code>DAILY</code>, or <code>HOURLY</code>. If <code>Granularity</code> isn''t set, the response object doesn''t include the <code>Granularity</code>, either <code>MONTHLY</code> or <code>DAILY</code>, or <code>HOURLY</code>. '
        Filter:
          $ref: '#/components/schemas/Expression'
          description: 'Filters AWS costs by different dimensions. For example, you can specify <code>SERVICE</code> and <code>LINKED_ACCOUNT</code> and get the costs that are associated with that account''s usage of that service. You can nest <code>Expression</code> objects to define any combination of dimension filters. For more information, see <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a>. '
        Metrics:
          $ref: '#/components/schemas/MetricNames'
          description: '<p>Which metrics are returned in the query. For more information about blended and unblended rates, see <a href="https://aws.amazon.com/premiumsupport/knowledge-center/blended-rates-intro/">Why does the "blended" annotation appear on some line items in my bill?</a>. </p> <p>Valid values are <code>AmortizedCost</code>, <code>BlendedCost</code>, <code>NetAmortizedCost</code>, <code>NetUnblendedCost</code>, <code>NormalizedUsageAmount</code>, <code>UnblendedCost</code>, and <code>UsageQuantity</code>. </p> <note> <p>If you return the <code>UsageQuantity</code> metric, the service aggregates all usage numbers without taking into account the units. For example, if you aggregate <code>usageQuantity</code> across all of Amazon EC2, the results aren''t meaningful because Amazon EC2 compute hours and data transfer are measured in different units (for example, hours vs. GB). To get more meaningful <code>UsageQuantity</code> metrics, filter by <code>UsageType</code> or <code>UsageTypeGroups</code>. </p> </note> <p> <code>Metrics</code> is required for <code>GetCostAndUsage</code> requests.</p>'
        GroupBy:
          $ref: '#/components/schemas/GroupDefinitions'
          description: '<p>You can group AWS costs using up to two different groups, either dimensions, tag keys, or both.</p> <p>When you group by tag key, you get all tag values, including empty strings.</p> <p>Valid values are <code>AZ</code>, <code>INSTANCE_TYPE</code>, <code>LEGAL_ENTITY_NAME</code>, <code>LINKED_ACCOUNT</code>, <code>OPERATION</code>, <code>PLATFORM</code>, <code>PURCHASE_TYPE</code>, <code>SERVICE</code>, <code>TAGS</code>, <code>TENANCY</code>, <code>RECORD_TYPE</code>, and <code>USAGE_TYPE</code>.</p>'
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    BillExpirationException: {}
    DataUnavailableException: {}
    InvalidNextTokenException: {}
    RequestChangedException: {}
    GetCostAndUsageWithResourcesResponse:
      type: object
      properties:
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token for the next set of retrievable results. AWS provides the token when the response from a previous call has more results than the maximum page size.
        GroupDefinitions:
          $ref: '#/components/schemas/GroupDefinitions'
          description: The groups that are specified by the <code>Filter</code> or <code>GroupBy</code> parameters in the request.
        ResultsByTime:
          $ref: '#/components/schemas/ResultsByTime'
          description: The time period that is covered by the results in the response.
    GetCostAndUsageWithResourcesRequest:
      type: object
      required:
        - TimePeriod
      title: GetCostAndUsageWithResourcesRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'Sets the start and end dates for retrieving Amazon Web Services costs. The range must be within the last 14 days (the start date cannot be earlier than 14 days ago). The start date is inclusive, but the end date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>, then the cost and usage data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>.'
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: 'Sets the AWS cost granularity to <code>MONTHLY</code>, <code>DAILY</code>, or <code>HOURLY</code>. If <code>Granularity</code> isn''t set, the response object doesn''t include the <code>Granularity</code>, <code>MONTHLY</code>, <code>DAILY</code>, or <code>HOURLY</code>. '
        Filter:
          $ref: '#/components/schemas/Expression'
          description: '<p>Filters Amazon Web Services costs by different dimensions. For example, you can specify <code>SERVICE</code> and <code>LINKED_ACCOUNT</code> and get the costs that are associated with that account''s usage of that service. You can nest <code>Expression</code> objects to define any combination of dimension filters. For more information, see <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a>. </p> <p>The <code>GetCostAndUsageWithResources</code> operation requires that you either group by or filter by a <code>ResourceId</code>.</p>'
        Metrics:
          $ref: '#/components/schemas/MetricNames'
          description: '<p>Which metrics are returned in the query. For more information about blended and unblended rates, see <a href="https://aws.amazon.com/premiumsupport/knowledge-center/blended-rates-intro/">Why does the "blended" annotation appear on some line items in my bill?</a>. </p> <p>Valid values are <code>AmortizedCost</code>, <code>BlendedCost</code>, <code>NetAmortizedCost</code>, <code>NetUnblendedCost</code>, <code>NormalizedUsageAmount</code>, <code>UnblendedCost</code>, and <code>UsageQuantity</code>. </p> <note> <p>If you return the <code>UsageQuantity</code> metric, the service aggregates all usage numbers without taking the units into account. For example, if you aggregate <code>usageQuantity</code> across all of Amazon EC2, the results aren''t meaningful because Amazon EC2 compute hours and data transfer are measured in different units (for example, hours vs. GB). To get more meaningful <code>UsageQuantity</code> metrics, filter by <code>UsageType</code> or <code>UsageTypeGroups</code>. </p> </note> <p> <code>Metrics</code> is required for <code>GetCostAndUsageWithResources</code> requests.</p>'
        GroupBy:
          $ref: '#/components/schemas/GroupDefinitions'
          description: 'You can group Amazon Web Services costs using up to two different groups: either dimensions, tag keys, or both.'
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetCostForecastResponse:
      type: object
      properties:
        Total:
          $ref: '#/components/schemas/MetricValue'
          description: 'How much you are forecasted to spend over the forecast period, in <code>USD</code>.'
        ForecastResultsByTime:
          $ref: '#/components/schemas/ForecastResultsByTime'
          description: 'The forecasts for your query, in order. For <code>DAILY</code> forecasts, this is a list of days. For <code>MONTHLY</code> forecasts, this is a list of months.'
    GetCostForecastRequest:
      type: object
      required:
        - TimePeriod
        - Metric
        - Granularity
      title: GetCostForecastRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: The period of time that you want the forecast to cover.
        Metric:
          $ref: '#/components/schemas/Metric'
          description: '<p>Which metric Cost Explorer uses to create your forecast. For more information about blended and unblended rates, see <a href="https://aws.amazon.com/premiumsupport/knowledge-center/blended-rates-intro/">Why does the "blended" annotation appear on some line items in my bill?</a>. </p> <p>Valid values for a <code>GetCostForecast</code> call are the following:</p> <ul> <li> <p>AMORTIZED_COST</p> </li> <li> <p>BLENDED_COST</p> </li> <li> <p>NET_AMORTIZED_COST</p> </li> <li> <p>NET_UNBLENDED_COST</p> </li> <li> <p>UNBLENDED_COST</p> </li> </ul>'
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: <p>How granular you want the forecast to be. You can get 3 months of <code>DAILY</code> forecasts or 12 months of <code>MONTHLY</code> forecasts.</p> <p>The <code>GetCostForecast</code> operation supports only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>
        Filter:
          $ref: '#/components/schemas/Expression'
          description: The filters that you want to use to filter your forecast. Cost Explorer API supports all of the Cost Explorer filters.
        PredictionIntervalLevel:
          $ref: '#/components/schemas/PredictionIntervalLevel'
          description: 'Cost Explorer always returns the mean forecast as a single point. You can request a prediction interval around the mean by specifying a confidence level. The higher the confidence level, the more confident Cost Explorer is about the actual value falling in the prediction interval. Higher confidence levels result in wider prediction intervals.'
    GetDimensionValuesResponse:
      type: object
      required:
        - DimensionValues
        - ReturnSize
        - TotalSize
      properties:
        DimensionValues:
          $ref: '#/components/schemas/DimensionValuesWithAttributesList'
          description: '<p>The filters that you used to filter your request. Some dimensions are available only for a specific context.</p> <p>If you set the context to <code>COST_AND_USAGE</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>DATABASE_ENGINE - The Amazon Relational Database Service database. Examples are Aurora or MySQL.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LEGAL_ENTITY_NAME - The name of the organization that sells you AWS services, such as Amazon Web Services.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the AWS ID of the member account.</p> </li> <li> <p>OPERATING_SYSTEM - The operating system. Examples are Windows or Linux.</p> </li> <li> <p>OPERATION - The action performed. Examples include <code>RunInstance</code> and <code>CreateBucket</code>.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>PURCHASE_TYPE - The reservation type of the purchase to which this usage is related. Examples include On-Demand Instances and Standard Reserved Instances.</p> </li> <li> <p>SERVICE - The AWS service such as Amazon DynamoDB.</p> </li> <li> <p>USAGE_TYPE - The type of usage. An example is DataTransfer-In-Bytes. The response for the <code>GetDimensionValues</code> operation includes a unit attribute. Examples include GB and Hrs.</p> </li> <li> <p>USAGE_TYPE_GROUP - The grouping of common usage types. An example is Amazon EC2: CloudWatch – Alarms. The response for this operation includes a unit attribute.</p> </li> <li> <p>RECORD_TYPE - The different types of charges such as RI fees, usage costs, tax refunds, and credits.</p> </li> <li> <p>RESOURCE_ID - The unique identifier of the resource. ResourceId is an opt-in feature only available for last 14 days for EC2-Compute Service.</p> </li> </ul> <p>If you set the context to <code>RESERVATIONS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>CACHE_ENGINE - The Amazon ElastiCache operating system. Examples are Windows or Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational Database Service deployments. Valid values are <code>SingleAZ</code> and <code>MultiAZ</code>.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the AWS ID of the member account.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>REGION - The AWS Region.</p> </li> <li> <p>SCOPE (Utilization only) - The scope of a Reserved Instance (RI). Values are regional or a single Availability Zone.</p> </li> <li> <p>TAG (Coverage only) - The tags that are associated with a Reserved Instance (RI).</p> </li> <li> <p>TENANCY - The tenancy of a resource. Examples are shared or dedicated.</p> </li> </ul> <p>If you set the context to <code>SAVINGS_PLANS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>SAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance or Compute)</p> </li> <li> <p>PAYMENT_OPTION - Payment option for the given Savings Plans (for example, All Upfront)</p> </li> <li> <p>REGION - The AWS Region.</p> </li> <li> <p>INSTANCE_TYPE_FAMILY - The family of instances (For example, <code>m5</code>)</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the AWS ID of the member account.</p> </li> <li> <p>SAVINGS_PLAN_ARN - The unique identifier for your Savings Plan</p> </li> </ul>'
        ReturnSize:
          $ref: '#/components/schemas/PageSize'
          description: The number of results that AWS returned at one time.
        TotalSize:
          $ref: '#/components/schemas/PageSize'
          description: The total number of search results.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token for the next set of retrievable results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetDimensionValuesRequest:
      type: object
      required:
        - TimePeriod
        - Dimension
      title: GetDimensionValuesRequest
      properties:
        SearchString:
          $ref: '#/components/schemas/SearchString'
          description: The value that you want to search the filter values for.
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'The start and end dates for retrieving the dimension values. The start date is inclusive, but the end date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>, then the cost and usage data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>.'
        Dimension:
          $ref: '#/components/schemas/Dimension'
          description: 'The name of the dimension. Each <code>Dimension</code> is available for a different <code>Context</code>. For more information, see <code>Context</code>. '
        Context:
          $ref: '#/components/schemas/Context'
          description: '<p>The context for the call to <code>GetDimensionValues</code>. This can be <code>RESERVATIONS</code> or <code>COST_AND_USAGE</code>. The default value is <code>COST_AND_USAGE</code>. If the context is set to <code>RESERVATIONS</code>, the resulting dimension values can be used in the <code>GetReservationUtilization</code> operation. If the context is set to <code>COST_AND_USAGE</code>, the resulting dimension values can be used in the <code>GetCostAndUsage</code> operation.</p> <p>If you set the context to <code>COST_AND_USAGE</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>DATABASE_ENGINE - The Amazon Relational Database Service database. Examples are Aurora or MySQL.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LEGAL_ENTITY_NAME - The name of the organization that sells you AWS services, such as Amazon Web Services.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the AWS ID of the member account.</p> </li> <li> <p>OPERATING_SYSTEM - The operating system. Examples are Windows or Linux.</p> </li> <li> <p>OPERATION - The action performed. Examples include <code>RunInstance</code> and <code>CreateBucket</code>.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>PURCHASE_TYPE - The reservation type of the purchase to which this usage is related. Examples include On-Demand Instances and Standard Reserved Instances.</p> </li> <li> <p>SERVICE - The AWS service such as Amazon DynamoDB.</p> </li> <li> <p>USAGE_TYPE - The type of usage. An example is DataTransfer-In-Bytes. The response for the <code>GetDimensionValues</code> operation includes a unit attribute. Examples include GB and Hrs.</p> </li> <li> <p>USAGE_TYPE_GROUP - The grouping of common usage types. An example is Amazon EC2: CloudWatch – Alarms. The response for this operation includes a unit attribute.</p> </li> <li> <p>RECORD_TYPE - The different types of charges such as RI fees, usage costs, tax refunds, and credits.</p> </li> <li> <p>RESOURCE_ID - The unique identifier of the resource. ResourceId is an opt-in feature only available for last 14 days for EC2-Compute Service.</p> </li> </ul> <p>If you set the context to <code>RESERVATIONS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>AZ - The Availability Zone. An example is <code>us-east-1a</code>.</p> </li> <li> <p>CACHE_ENGINE - The Amazon ElastiCache operating system. Examples are Windows or Linux.</p> </li> <li> <p>DEPLOYMENT_OPTION - The scope of Amazon Relational Database Service deployments. Valid values are <code>SingleAZ</code> and <code>MultiAZ</code>.</p> </li> <li> <p>INSTANCE_TYPE - The type of Amazon EC2 instance. An example is <code>m4.xlarge</code>.</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the AWS ID of the member account.</p> </li> <li> <p>PLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.</p> </li> <li> <p>REGION - The AWS Region.</p> </li> <li> <p>SCOPE (Utilization only) - The scope of a Reserved Instance (RI). Values are regional or a single Availability Zone.</p> </li> <li> <p>TAG (Coverage only) - The tags that are associated with a Reserved Instance (RI).</p> </li> <li> <p>TENANCY - The tenancy of a resource. Examples are shared or dedicated.</p> </li> </ul> <p>If you set the context to <code>SAVINGS_PLANS</code>, you can use the following dimensions for searching:</p> <ul> <li> <p>SAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance or Compute)</p> </li> <li> <p>PAYMENT_OPTION - Payment option for the given Savings Plans (for example, All Upfront)</p> </li> <li> <p>REGION - The AWS Region.</p> </li> <li> <p>INSTANCE_TYPE_FAMILY - The family of instances (For example, <code>m5</code>)</p> </li> <li> <p>LINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the AWS ID of the member account.</p> </li> <li> <p>SAVINGS_PLAN_ARN - The unique identifier for your Savings Plan</p> </li> </ul>'
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetReservationCoverageResponse:
      type: object
      required:
        - CoveragesByTime
      properties:
        CoveragesByTime:
          $ref: '#/components/schemas/CoveragesByTime'
          description: The amount of time that your reservations covered.
        Total:
          $ref: '#/components/schemas/Coverage'
          description: The total amount of instance usage that a reservation covered.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token for the next set of retrievable results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetReservationCoverageRequest:
      type: object
      required:
        - TimePeriod
      title: GetReservationCoverageRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'The start and end dates of the period that you want to retrieve data about reservation coverage for. You can retrieve data for a maximum of 13 months: the last 12 months and the current month. The start date is inclusive, but the end date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>, then the cost and usage data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>. '
        GroupBy:
          $ref: '#/components/schemas/GroupDefinitions'
          description: '<p>You can group the data by the following attributes:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>TENANCY</p> </li> </ul>'
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: '<p>The granularity of the AWS cost data for the reservation. Valid values are <code>MONTHLY</code> and <code>DAILY</code>.</p> <p>If <code>GroupBy</code> is set, <code>Granularity</code> can''t be set. If <code>Granularity</code> isn''t set, the response object doesn''t include <code>Granularity</code>, either <code>MONTHLY</code> or <code>DAILY</code>.</p> <p>The <code>GetReservationCoverage</code> operation supports only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>'
        Filter:
          $ref: '#/components/schemas/Expression'
          description: '<p>Filters utilization data by dimensions. You can filter by the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DATABASE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li> <li> <p>TAG</p> </li> <li> <p>TENANCY</p> </li> </ul> <p> <code>GetReservationCoverage</code> uses the same <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a> object as the other operations, but only <code>AND</code> is supported among each dimension. You can nest only one level deep. If there are multiple values for a dimension, they are OR''d together.</p> <p>If you don''t provide a <code>SERVICE</code> filter, Cost Explorer defaults to EC2.</p>'
        Metrics:
          $ref: '#/components/schemas/MetricNames'
          description: '<p>The measurement that you want your reservation coverage reported in.</p> <p>Valid values are <code>Hour</code>, <code>Unit</code>, and <code>Cost</code>. You can use multiple values in a request.</p>'
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. AWS provides the token when the response from a previous call has more results than the maximum page size.
      description: You can use the following request parameters to query for how much of your instance usage a reservation covered.
    GetReservationPurchaseRecommendationResponse:
      type: object
      properties:
        Metadata:
          $ref: '#/components/schemas/ReservationPurchaseRecommendationMetadata'
          description: 'Information about this specific recommendation call, such as the time stamp for when Cost Explorer generated this recommendation.'
        Recommendations:
          $ref: '#/components/schemas/ReservationPurchaseRecommendations'
          description: Recommendations for reservations to purchase.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The pagination token for the next set of retrievable results.
    GetReservationPurchaseRecommendationRequest:
      type: object
      required:
        - Service
      title: GetReservationPurchaseRecommendationRequest
      properties:
        AccountId:
          $ref: '#/components/schemas/GenericString'
          description: 'The account ID that is associated with the recommendation. '
        Service:
          $ref: '#/components/schemas/GenericString'
          description: The specific service that you want recommendations for.
        AccountScope:
          $ref: '#/components/schemas/AccountScope'
          description: <p>The account scope that you want recommendations for. <code>PAYER</code> means that AWS includes the master account and any member accounts when it calculates its recommendations. <code>LINKED</code> means that AWS includes only member accounts when it calculates its recommendations.</p> <p>Valid values are <code>PAYER</code> and <code>LINKED</code>.</p>
        LookbackPeriodInDays:
          $ref: '#/components/schemas/LookbackPeriodInDays'
          description: The number of previous days that you want AWS to consider when it calculates your recommendations.
        TermInYears:
          $ref: '#/components/schemas/TermInYears'
          description: The reservation term that you want recommendations for.
        PaymentOption:
          $ref: '#/components/schemas/PaymentOption'
          description: The reservation purchase option that you want recommendations for.
        ServiceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: 'The hardware specifications for the service instances that you want recommendations for, such as standard or convertible Amazon EC2 instances.'
        PageSize:
          $ref: '#/components/schemas/NonNegativeInteger'
          description: The number of recommendations that you want returned in a single response object.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The pagination token that indicates the next set of results that you want to retrieve.
    GetReservationUtilizationResponse:
      type: object
      required:
        - UtilizationsByTime
      properties:
        UtilizationsByTime:
          $ref: '#/components/schemas/UtilizationsByTime'
          description: The amount of time that you used your RIs.
        Total:
          $ref: '#/components/schemas/ReservationAggregates'
          description: The total amount of time that you used your RIs.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token for the next set of retrievable results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetReservationUtilizationRequest:
      type: object
      required:
        - TimePeriod
      title: GetReservationUtilizationRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'Sets the start and end dates for retrieving RI utilization. The start date is inclusive, but the end date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>, then the cost and usage data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>. '
        GroupBy:
          $ref: '#/components/schemas/GroupDefinitions'
          description: Groups only by <code>SUBSCRIPTION_ID</code>. Metadata is included.
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: '<p>If <code>GroupBy</code> is set, <code>Granularity</code> can''t be set. If <code>Granularity</code> isn''t set, the response object doesn''t include <code>Granularity</code>, either <code>MONTHLY</code> or <code>DAILY</code>. If both <code>GroupBy</code> and <code>Granularity</code> aren''t set, <code>GetReservationUtilization</code> defaults to <code>DAILY</code>.</p> <p>The <code>GetReservationUtilization</code> operation supports only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>'
        Filter:
          $ref: '#/components/schemas/Expression'
          description: '<p>Filters utilization data by dimensions. You can filter by the following dimensions:</p> <ul> <li> <p>AZ</p> </li> <li> <p>CACHE_ENGINE</p> </li> <li> <p>DEPLOYMENT_OPTION</p> </li> <li> <p>INSTANCE_TYPE</p> </li> <li> <p>LINKED_ACCOUNT</p> </li> <li> <p>OPERATING_SYSTEM</p> </li> <li> <p>PLATFORM</p> </li> <li> <p>REGION</p> </li> <li> <p>SERVICE</p> </li> <li> <p>SCOPE</p> </li> <li> <p>TENANCY</p> </li> </ul> <p> <code>GetReservationUtilization</code> uses the same <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a> object as the other operations, but only <code>AND</code> is supported among each dimension, and nesting is supported up to only one level deep. If there are multiple values for a dimension, they are OR''d together.</p>'
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetRightsizingRecommendationResponse:
      type: object
      properties:
        Metadata:
          $ref: '#/components/schemas/RightsizingRecommendationMetadata'
          description: Information regarding this specific recommendation set.
        Summary:
          $ref: '#/components/schemas/RightsizingRecommendationSummary'
          description: Summary of this recommendation set.
        RightsizingRecommendations:
          $ref: '#/components/schemas/RightsizingRecommendationList'
          description: Recommendations to rightsize resources.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results.
    GetRightsizingRecommendationRequest:
      type: object
      required:
        - Service
      title: GetRightsizingRecommendationRequest
      properties:
        Filter:
          $ref: '#/components/schemas/Expression'
        Service:
          $ref: '#/components/schemas/GenericString'
          description: The specific service that you want recommendations for. The only valid value for <code>GetRightsizingRecommendation</code> is "<code>AmazonEC2</code>".
        PageSize:
          $ref: '#/components/schemas/NonNegativeInteger'
          description: The number of recommendations that you want returned in a single response object.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The pagination token that indicates the next set of results that you want to retrieve.
    GetSavingsPlansCoverageResponse:
      type: object
      required:
        - SavingsPlansCoverages
      properties:
        SavingsPlansCoverages:
          $ref: '#/components/schemas/SavingsPlansCoverages'
          description: The amount of spend that your Savings Plans covered.
        NextToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.
    GetSavingsPlansCoverageRequest:
      type: object
      required:
        - TimePeriod
      title: GetSavingsPlansCoverageRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'The time period that you want the usage and costs for. The <code>Start</code> date must be within 13 months. The <code>End</code> date must be after the <code>Start</code> date, and before the current date. Future dates can''t be used as an <code>End</code> date.'
        GroupBy:
          $ref: '#/components/schemas/GroupDefinitions'
          description: 'You can group the data using the attributes <code>INSTANCE_FAMILY</code>, <code>REGION</code>, or <code>SERVICE</code>.'
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: <p>The granularity of the Amazon Web Services cost data for your Savings Plans. <code>Granularity</code> can't be set if <code>GroupBy</code> is set.</p> <p>The <code>GetSavingsPlansCoverage</code> operation supports only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>
        Filter:
          $ref: '#/components/schemas/Expression'
          description: '<p>Filters Savings Plans coverage data by dimensions. You can filter data for Savings Plans usage with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>SERVICE</code> </p> </li> <li> <p> <code>INSTANCE_FAMILY</code> </p> </li> </ul> <p> <code>GetSavingsPlansCoverage</code> uses the same <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a> object as the other operations, but only <code>AND</code> is supported among each dimension. If there are multiple values for a dimension, they are OR''d together.</p>'
        Metrics:
          $ref: '#/components/schemas/MetricNames'
          description: The measurement that you want your Savings Plans coverage reported in. The only valid value is <code>SpendCoveredBySavingsPlans</code>.
        NextToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The number of items to be returned in a response. The default is <code>20</code>, with a minimum value of <code>1</code>.'
    GetSavingsPlansPurchaseRecommendationResponse:
      type: object
      properties:
        Metadata:
          $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationMetadata'
          description: Information regarding this specific recommendation set.
        SavingsPlansPurchaseRecommendation:
          $ref: '#/components/schemas/SavingsPlansPurchaseRecommendation'
          description: 'Contains your request parameters, Savings Plan Recommendations Summary, and Details.'
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token for the next set of retrievable results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetSavingsPlansPurchaseRecommendationRequest:
      type: object
      required:
        - SavingsPlansType
        - TermInYears
        - PaymentOption
        - LookbackPeriodInDays
      title: GetSavingsPlansPurchaseRecommendationRequest
      properties:
        SavingsPlansType:
          $ref: '#/components/schemas/SupportedSavingsPlansType'
          description: The Savings Plans recommendation type requested.
        TermInYears:
          $ref: '#/components/schemas/TermInYears'
          description: The savings plan recommendation term used to generated these recommendations.
        PaymentOption:
          $ref: '#/components/schemas/PaymentOption'
          description: The payment option used to generate these recommendations.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.
        PageSize:
          $ref: '#/components/schemas/NonNegativeInteger'
          description: The number of recommendations that you want returned in a single response object.
        LookbackPeriodInDays:
          $ref: '#/components/schemas/LookbackPeriodInDays'
          description: The lookback period used to generate the recommendation.
    GetSavingsPlansUtilizationResponse:
      type: object
      required:
        - Total
      properties:
        SavingsPlansUtilizationsByTime:
          $ref: '#/components/schemas/SavingsPlansUtilizationsByTime'
          description: The amount of cost/commitment you used your Savings Plans. This allows you to specify date ranges.
        Total:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates'
          description: 'The total amount of cost/commitment that you used your Savings Plans, regardless of date ranges.'
    GetSavingsPlansUtilizationRequest:
      type: object
      required:
        - TimePeriod
      title: GetSavingsPlansUtilizationRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'The time period that you want the usage and costs for. The <code>Start</code> date must be within 13 months. The <code>End</code> date must be after the <code>Start</code> date, and before the current date. Future dates can''t be used as an <code>End</code> date.'
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: <p>The granularity of the Amazon Web Services utillization data for your Savings Plans.</p> <p>The <code>GetSavingsPlansUtilization</code> operation supports only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>
        Filter:
          $ref: '#/components/schemas/Expression'
          description: '<p>Filters Savings Plans utilization coverage data for active Savings Plans dimensions. You can filter data with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>SAVINGS_PLAN_ARN</code> </p> </li> <li> <p> <code>SAVINGS_PLANS_TYPE</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>PAYMENT_OPTION</code> </p> </li> <li> <p> <code>INSTANCE_TYPE_FAMILY</code> </p> </li> </ul> <p> <code>GetSavingsPlansUtilization</code> uses the same <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a> object as the other operations, but only <code>AND</code> is supported among each dimension.</p>'
    GetSavingsPlansUtilizationDetailsResponse:
      type: object
      required:
        - SavingsPlansUtilizationDetails
        - TimePeriod
      properties:
        SavingsPlansUtilizationDetails:
          $ref: '#/components/schemas/SavingsPlansUtilizationDetails'
          description: Retrieves a single daily or monthly Savings Plans utilization rate and details for your account.
        Total:
          $ref: '#/components/schemas/SavingsPlansUtilizationAggregates'
          description: 'The total Savings Plans utilization, regardless of time period.'
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        NextToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.
    GetSavingsPlansUtilizationDetailsRequest:
      type: object
      required:
        - TimePeriod
      title: GetSavingsPlansUtilizationDetailsRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'The time period that you want the usage and costs for. The <code>Start</code> date must be within 13 months. The <code>End</code> date must be after the <code>Start</code> date, and before the current date. Future dates can''t be used as an <code>End</code> date.'
        Filter:
          $ref: '#/components/schemas/Expression'
          description: '<p>Filters Savings Plans utilization coverage data for active Savings Plans dimensions. You can filter data with the following dimensions:</p> <ul> <li> <p> <code>LINKED_ACCOUNT</code> </p> </li> <li> <p> <code>SAVINGS_PLAN_ARN</code> </p> </li> <li> <p> <code>REGION</code> </p> </li> <li> <p> <code>PAYMENT_OPTION</code> </p> </li> <li> <p> <code>INSTANCE_TYPE_FAMILY</code> </p> </li> </ul> <p> <code>GetSavingsPlansUtilizationDetails</code> uses the same <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a> object as the other operations, but only <code>AND</code> is supported among each dimension.</p>'
        NextToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
          description: 'The number of items to be returned in a response. The default is <code>20</code>, with a minimum value of <code>1</code>.'
    GetTagsResponse:
      type: object
      required:
        - Tags
        - ReturnSize
        - TotalSize
      properties:
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token for the next set of retrievable results. AWS provides the token when the response from a previous call has more results than the maximum page size.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags that match your request.
        ReturnSize:
          $ref: '#/components/schemas/PageSize'
          description: The number of query results that AWS returns at a time.
        TotalSize:
          $ref: '#/components/schemas/PageSize'
          description: The total number of query results.
    GetTagsRequest:
      type: object
      required:
        - TimePeriod
      title: GetTagsRequest
      properties:
        SearchString:
          $ref: '#/components/schemas/SearchString'
          description: The value that you want to search for.
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'The start and end dates for retrieving the dimension values. The start date is inclusive, but the end date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>, then the cost and usage data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>.'
        TagKey:
          $ref: '#/components/schemas/TagKey'
          description: The key of the tag that you want to return values for.
        NextPageToken:
          $ref: '#/components/schemas/NextPageToken'
          description: The token to retrieve the next set of results. AWS provides the token when the response from a previous call has more results than the maximum page size.
    GetUsageForecastResponse:
      type: object
      properties:
        Total:
          $ref: '#/components/schemas/MetricValue'
          description: How much you're forecasted to use over the forecast period.
        ForecastResultsByTime:
          $ref: '#/components/schemas/ForecastResultsByTime'
          description: 'The forecasts for your query, in order. For <code>DAILY</code> forecasts, this is a list of days. For <code>MONTHLY</code> forecasts, this is a list of months.'
    GetUsageForecastRequest:
      type: object
      required:
        - TimePeriod
        - Metric
        - Granularity
      title: GetUsageForecastRequest
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: 'The start and end dates of the period that you want to retrieve usage forecast for. The start date is inclusive, but the end date is exclusive. For example, if <code>start</code> is <code>2017-01-01</code> and <code>end</code> is <code>2017-05-01</code>, then the cost and usage data is retrieved from <code>2017-01-01</code> up to and including <code>2017-04-30</code> but not including <code>2017-05-01</code>.'
        Metric:
          $ref: '#/components/schemas/Metric'
          description: '<p>Which metric Cost Explorer uses to create your forecast.</p> <p>Valid values for a <code>GetUsageForecast</code> call are the following:</p> <ul> <li> <p>USAGE_QUANTITY</p> </li> <li> <p>NORMALIZED_USAGE_AMOUNT</p> </li> </ul>'
        Granularity:
          $ref: '#/components/schemas/Granularity'
          description: <p>How granular you want the forecast to be. You can get 3 months of <code>DAILY</code> forecasts or 12 months of <code>MONTHLY</code> forecasts.</p> <p>The <code>GetUsageForecast</code> operation supports only <code>DAILY</code> and <code>MONTHLY</code> granularities.</p>
        Filter:
          $ref: '#/components/schemas/Expression'
          description: The filters that you want to use to filter your forecast. Cost Explorer API supports all of the Cost Explorer filters.
        PredictionIntervalLevel:
          $ref: '#/components/schemas/PredictionIntervalLevel'
          description: 'Cost Explorer always returns the mean forecast as a single point. You can request a prediction interval around the mean by specifying a confidence level. The higher the confidence level, the more confident Cost Explorer is about the actual value falling in the prediction interval. Higher confidence levels result in wider prediction intervals.'
    UnresolvableUsageUnitException: {}
    ListCostCategoryDefinitionsResponse:
      type: object
      properties:
        CostCategoryReferences:
          $ref: '#/components/schemas/CostCategoryReferencesList'
          description: ' A reference to a Cost Category containing enough information to identify the Cost Category. '
        NextToken:
          $ref: '#/components/schemas/NextPageToken'
          description: ' The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size. '
    ListCostCategoryDefinitionsRequest:
      type: object
      title: ListCostCategoryDefinitionsRequest
      properties:
        EffectiveOn:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The date when the Cost Category was effective. '
        NextToken:
          $ref: '#/components/schemas/NextPageToken'
          description: <p> The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size. </p> <p>You can use this information to retrieve the full Cost Category information using <code>DescribeCostCategory</code>.</p>
    UpdateCostCategoryDefinitionResponse:
      type: object
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: ' The unique identifier for your Cost Category. '
        EffectiveStart:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The Cost Category''s effective start date. '
    UpdateCostCategoryDefinitionRequest:
      type: object
      required:
        - CostCategoryArn
        - RuleVersion
        - Rules
      title: UpdateCostCategoryDefinitionRequest
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: The unique identifier for your Cost Category.
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          $ref: '#/components/schemas/CostCategoryRulesList'
          description: '<p> <code>UpdateCostCategoryDefinition</code> supports dimensions, Tags, and nested expressions. Currently the only dimensions supported is <code>LINKED_ACCOUNT</code>.</p> <p>Root level <code>OR</code> is not supported. We recommend you create a separate rule instead.</p> <p>Rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value. </p>'
    AccountScope:
      type: string
      enum:
        - PAYER
        - LINKED
    AmortizedRecurringFee:
      type: string
    AmortizedUpfrontFee:
      type: string
    Arn:
      type: string
      pattern: 'arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+'
      minLength: 20
      maxLength: 2048
    AttributeType:
      type: string
    AttributeValue:
      type: string
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    Context:
      type: string
      enum:
        - COST_AND_USAGE
        - RESERVATIONS
        - SAVINGS_PLANS
    ZonedDateTime:
      type: string
      pattern: '^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$'
      description: The time period that you want the usage and costs for.
      minLength: 20
      maxLength: 25
    CostCategoryName:
      type: string
      description: The unique name of the Cost Category.
      minLength: 1
      maxLength: 255
      x-pattern: '^\(\?! \)[\p\{L\}\p\{N\}\p\{Z\}-_]*$'
    CostCategoryRuleVersion:
      type: string
      enum:
        - CostCategoryExpression.v1
      description: The rule schema version in this particular Cost Category.
    CostCategoryRulesList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategoryRule'
      minItems: 1
      maxItems: 500
    CostCategory:
      type: object
      required:
        - CostCategoryArn
        - EffectiveStart
        - Name
        - RuleVersion
        - Rules
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: ' The unique identifier for your Cost Category. '
        EffectiveStart:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The Cost Category''s effective start date.'
        EffectiveEnd:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The Cost Category''s effective end date.'
        Name:
          $ref: '#/components/schemas/CostCategoryName'
        RuleVersion:
          $ref: '#/components/schemas/CostCategoryRuleVersion'
        Rules:
          $ref: '#/components/schemas/CostCategoryRulesList'
          description: ' Rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value. '
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>The structure of Cost Categories. This includes detailed metadata and the set of rules for the <code>CostCategory</code> object.</p>'
    CostCategoryReference:
      type: object
      properties:
        CostCategoryArn:
          $ref: '#/components/schemas/Arn'
          description: ' The unique identifier for your Cost Category Reference. '
        Name:
          $ref: '#/components/schemas/CostCategoryName'
        EffectiveStart:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The Cost Category''s effective start date.'
        EffectiveEnd:
          $ref: '#/components/schemas/ZonedDateTime'
          description: ' The Cost Category''s effective end date.'
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>A reference to a Cost Category containing only enough information to identify the Cost Category.</p> <p>You can use this information to retrieve the full Cost Category information using <code>DescribeCostCategory</code>.</p>'
    CostCategoryReferencesList:
      type: array
      items:
        $ref: '#/components/schemas/CostCategoryReference'
    CostCategoryValue:
      type: string
      description: 'The value a line item will be categorized as, if it matches the rule.'
      minLength: 1
      maxLength: 255
      x-pattern: '^\(\?! \)[\p\{L\}\p\{N\}\p\{Z\}-_]*$'
    Expression:
      type: object
      properties:
        Or:
          $ref: '#/components/schemas/Expressions'
          description: Return results that match either <code>Dimension</code> object.
        And:
          $ref: '#/components/schemas/Expressions'
          description: Return results that match both <code>Dimension</code> objects.
        Not:
          $ref: '#/components/schemas/Expression'
          description: Return results that don't match a <code>Dimension</code> object.
        Dimensions:
          $ref: '#/components/schemas/DimensionValues'
          description: The specific <code>Dimension</code> to use for <code>Expression</code>.
        Tags:
          $ref: '#/components/schemas/TagValues'
          description: The specific <code>Tag</code> to use for <code>Expression</code>.
        CostCategories:
          $ref: '#/components/schemas/CostCategoryValues'
          description: '<p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> <p>The specific <code>CostCategory</code> used for <code>Expression</code>.</p>'
      description: '<p>Use <code>Expression</code> to filter by cost or by usage. There are two patterns: </p> <ul> <li> <p>Simple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. The <code>Expression</code> for that looks like this:</p> <p> <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", “us-west-1” ] } }</code> </p> <p>The list of dimension values are OR''d together to retrieve cost or usage data. You can create <code>Expression</code> and <code>DimensionValues</code> objects using either <code>with*</code> methods or <code>set*</code> methods in multiple lines. </p> </li> <li> <p>Compound dimension values with logical operations - You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. This allows you to filter on more advanced options. For example, you can filter on <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>. The <code>Expression</code> for that looks like this:</p> <p> <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error.</p> </note> <p> <code> { "And": [ ... ], "DimensionValues": { "Dimension": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> </li> </ul> <note> <p>For <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT is not supported. OR is not supported between different dimensions, or dimensions and tags. NOT operators aren''t supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> </note>'
    CostCategoryRule:
      type: object
      required:
        - Value
        - Rule
      properties:
        Value:
          $ref: '#/components/schemas/CostCategoryValue'
        Rule:
          $ref: '#/components/schemas/Expression'
          description: '<p>An <a href="http://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html">Expression</a> object used to categorize costs. This supports dimensions, Tags, and nested expressions. Currently the only dimensions supported is <code>LINKED_ACCOUNT</code>.</p> <p>Root level <code>OR</code> is not supported. We recommend you create a separate rule instead.</p>'
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>Rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.</p>'
    Values:
      type: array
      items:
        $ref: '#/components/schemas/Value'
    CostCategoryValues:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/CostCategoryName'
        Values:
          $ref: '#/components/schemas/Values'
          description: The specific value of the Cost Category.
      description: '<important> <p> <i> <b>Cost Category is in public beta for AWS Billing and Cost Management and is subject to change. Your use of Cost Categories is subject to the Beta Service Participation terms of the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> (Section 1.10).</b> </i> </p> </important> <p>The values that are available for Cost Categories.</p>'
    CoverageHours:
      type: object
      properties:
        OnDemandHours:
          $ref: '#/components/schemas/OnDemandHours'
          description: The number of instance running hours that On-Demand Instances covered.
        ReservedHours:
          $ref: '#/components/schemas/ReservedHours'
          description: The number of instance running hours that reservations covered.
        TotalRunningHours:
          $ref: '#/components/schemas/TotalRunningHours'
          description: 'The total instance usage, in hours.'
        CoverageHoursPercentage:
          $ref: '#/components/schemas/CoverageHoursPercentage'
          description: The percentage of instance hours that a reservation covered.
      description: How long a running instance either used a reservation or was On-Demand.
    CoverageNormalizedUnits:
      type: object
      properties:
        OnDemandNormalizedUnits:
          $ref: '#/components/schemas/OnDemandNormalizedUnits'
          description: The number of normalized units that are covered by On-Demand Instances instead of a reservation.
        ReservedNormalizedUnits:
          $ref: '#/components/schemas/ReservedNormalizedUnits'
          description: The number of normalized units that a reservation covers.
        TotalRunningNormalizedUnits:
          $ref: '#/components/schemas/TotalRunningNormalizedUnits'
          description: The total number of normalized units that you used.
        CoverageNormalizedUnitsPercentage:
          $ref: '#/components/schemas/CoverageNormalizedUnitsPercentage'
          description: The percentage of your used instance normalized units that a reservation covers.
      description: '<p>The amount of instance usage, in normalized units. Normalized units enable you to see your EC2 usage for multiple sizes of instances in a uniform way. For example, suppose you run an xlarge instance and a 2xlarge instance. If you run both instances for the same amount of time, the 2xlarge instance uses twice as much of your reservation as the xlarge instance, even though both instances show only one instance-hour. Using normalized units instead of instance-hours, the xlarge instance used 8 normalized units, and the 2xlarge instance used 16 normalized units.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide for Linux Instances</i>.</p>'
    CoverageCost:
      type: object
      properties:
        OnDemandCost:
          $ref: '#/components/schemas/OnDemandCost'
          description: How much an On-Demand instance cost.
      description: How much it cost to run an instance.
    Coverage:
      type: object
      properties:
        CoverageHours:
          $ref: '#/components/schemas/CoverageHours'
          description: 'The amount of instance usage that the reservation covered, in hours.'
        CoverageNormalizedUnits:
          $ref: '#/components/schemas/CoverageNormalizedUnits'
          description: 'The amount of instance usage that the reservation covered, in normalized units.'
        CoverageCost:
          $ref: '#/components/schemas/CoverageCost'
          description: The amount of cost that the reservation covered.
      description: The amount of instance usage that a reservation covered.
    DateInterval:
      type: object
      required:
        - Start
        - End
      properties:
        Start:
          $ref: '#/components/schemas/YearMonthDay'
          description: 'The beginning of the time period that you want the usage and costs for. The start date is inclusive. For example, if <code>start</code> is <code>2017-01-01</code>, AWS retrieves cost and usage data starting at <code>2017-01-01</code> up to the end date.'
        End:
          $ref: '#/components/schemas/YearMonthDay'
          description: 'The end of the time period that you want the usage and costs for. The end date is exclusive. For example, if <code>end</code> is <code>2017-05-01</code>, AWS retrieves cost and usage data from the start date up to, but not including, <code>2017-05-01</code>.'
      description: 'The time period that you want the usage and costs for. '
    ReservationCoverageGroups:
      type: array
      items:
        $ref: '#/components/schemas/ReservationCoverageGroup'
    CoverageByTime:
      type: object
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: The period that this coverage was used over.
        Groups:
          $ref: '#/components/schemas/ReservationCoverageGroups'
          description: The groups of instances that the reservation covered.
        Total:
          $ref: '#/components/schemas/Coverage'
          description: 'The total reservation coverage, in hours.'
      description: 'Reservation coverage for a specified period, in hours.'
    OnDemandCost:
      type: string
    OnDemandHours:
      type: string
    ReservedHours:
      type: string
    TotalRunningHours:
      type: string
    CoverageHoursPercentage:
      type: string
    OnDemandNormalizedUnits:
      type: string
    ReservedNormalizedUnits:
      type: string
    TotalRunningNormalizedUnits:
      type: string
    CoverageNormalizedUnitsPercentage:
      type: string
    CoveragesByTime:
      type: array
      items:
        $ref: '#/components/schemas/CoverageByTime'
    GenericString:
      type: string
    TagValuesList:
      type: array
      items:
        $ref: '#/components/schemas/TagValues'
    ResourceDetails:
      type: object
      properties:
        EC2ResourceDetails:
          $ref: '#/components/schemas/EC2ResourceDetails'
          description: Details on the Amazon EC2 resource.
      description: Details on the resource.
    ResourceUtilization:
      type: object
      properties:
        EC2ResourceUtilization:
          $ref: '#/components/schemas/EC2ResourceUtilization'
          description: 'Utilization of current Amazon EC2 Instance '
      description: 'Resource utilization of current resource. '
    CurrentInstance:
      type: object
      properties:
        ResourceId:
          $ref: '#/components/schemas/GenericString'
          description: Resource ID of the current instance.
        Tags:
          $ref: '#/components/schemas/TagValuesList'
          description: Cost allocation resource tags applied to the instance.
        ResourceDetails:
          $ref: '#/components/schemas/ResourceDetails'
          description: ' Details about the resource and utilization.'
        ResourceUtilization:
          $ref: '#/components/schemas/ResourceUtilization'
          description: ' Utilization information of the current instance during the lookback period.'
        ReservationCoveredHoursInLookbackPeriod:
          $ref: '#/components/schemas/GenericString'
          description: ' Number of hours during the lookback period covered by reservations.'
        SavingsPlansCoveredHoursInLookbackPeriod:
          $ref: '#/components/schemas/GenericString'
          description: Number of hours during the lookback period covered by Savings Plans.
        OnDemandHoursInLookbackPeriod:
          $ref: '#/components/schemas/GenericString'
          description: ' Number of hours during the lookback period billed at On Demand rates.'
        TotalRunningHoursInLookbackPeriod:
          $ref: '#/components/schemas/GenericString'
          description: ' The total number of hours the instance ran during the lookback period.'
        MonthlyCost:
          $ref: '#/components/schemas/GenericString'
          description: ' Current On Demand cost of operating this instance on a monthly basis.'
        CurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: ' The currency code that Amazon Web Services used to calculate the costs for this instance.'
      description: Context about the current instance.
    YearMonthDay:
      type: string
      pattern: '(\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?'
    Dimension:
      type: string
      enum:
        - AZ
        - INSTANCE_TYPE
        - LINKED_ACCOUNT
        - OPERATION
        - PURCHASE_TYPE
        - REGION
        - SERVICE
        - USAGE_TYPE
        - USAGE_TYPE_GROUP
        - RECORD_TYPE
        - OPERATING_SYSTEM
        - TENANCY
        - SCOPE
        - PLATFORM
        - SUBSCRIPTION_ID
        - LEGAL_ENTITY_NAME
        - DEPLOYMENT_OPTION
        - DATABASE_ENGINE
        - CACHE_ENGINE
        - INSTANCE_TYPE_FAMILY
        - BILLING_ENTITY
        - RESERVATION_ID
        - RESOURCE_ID
        - RIGHTSIZING_TYPE
        - SAVINGS_PLANS_TYPE
        - SAVINGS_PLAN_ARN
        - PAYMENT_OPTION
    DimensionValues:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/Dimension'
          description: 'The names of the metadata types that you can use to filter and group your results. For example, <code>AZ</code> returns a list of Availability Zones.'
        Values:
          $ref: '#/components/schemas/Values'
          description: '<p>The metadata values that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values.</p> <p>Valid values for the <code>SERVICE</code> dimension are <code>Amazon Elastic Compute Cloud - Compute</code>, <code>Amazon Elasticsearch Service</code>, <code>Amazon ElastiCache</code>, <code>Amazon Redshift</code>, and <code>Amazon Relational Database Service</code>.</p>'
      description: The metadata that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values.
    Value:
      type: string
    DimensionValuesWithAttributes:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/Value'
          description: The value of a dimension with a specific attribute.
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: The attribute that applies to a specific <code>Dimension</code>.
      description: The metadata of a specific type that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values.
    DimensionValuesWithAttributesList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionValuesWithAttributes'
    GenericBoolean:
      type: boolean
    EC2InstanceDetails:
      type: object
      properties:
        Family:
          $ref: '#/components/schemas/GenericString'
          description: The instance family of the recommended reservation.
        InstanceType:
          $ref: '#/components/schemas/GenericString'
          description: The type of instance that AWS recommends.
        Region:
          $ref: '#/components/schemas/GenericString'
          description: The AWS Region of the recommended reservation.
        AvailabilityZone:
          $ref: '#/components/schemas/GenericString'
          description: The Availability Zone of the recommended reservation.
        Platform:
          $ref: '#/components/schemas/GenericString'
          description: 'The platform of the recommended reservation. The platform is the specific combination of operating system, license model, and software on an instance.'
        Tenancy:
          $ref: '#/components/schemas/GenericString'
          description: Whether the recommended reservation is dedicated or shared.
        CurrentGeneration:
          $ref: '#/components/schemas/GenericBoolean'
          description: 'Whether the recommendation is for a current-generation instance. '
        SizeFlexEligible:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommended reservation is size flexible.
      description: Details about the Amazon EC2 instances that AWS recommends that you purchase.
    EC2ResourceDetails:
      type: object
      properties:
        HourlyOnDemandRate:
          $ref: '#/components/schemas/GenericString'
          description: ' Hourly public On Demand rate for the instance type.'
        InstanceType:
          $ref: '#/components/schemas/GenericString'
          description: ' The type of Amazon Web Services instance.'
        Platform:
          $ref: '#/components/schemas/GenericString'
          description: ' The platform of the Amazon Web Services instance. The platform is the specific combination of operating system, license model, and software on an instance.'
        Region:
          $ref: '#/components/schemas/GenericString'
          description: ' The Amazon Web Services Region of the instance.'
        Sku:
          $ref: '#/components/schemas/GenericString'
          description: ' The SKU of the product.'
        Memory:
          $ref: '#/components/schemas/GenericString'
          description: ' Memory capacity of Amazon Web Services instance.'
        NetworkPerformance:
          $ref: '#/components/schemas/GenericString'
          description: ' Network performance capacity of the Amazon Web Services instance.'
        Storage:
          $ref: '#/components/schemas/GenericString'
          description: ' The disk storage of the Amazon Web Services instance (Not EBS storage).'
        Vcpu:
          $ref: '#/components/schemas/GenericString'
          description: ' Number of VCPU cores in the Amazon Web Services instance type.'
      description: ' Details on the Amazon EC2 Resource.'
    EC2ResourceUtilization:
      type: object
      properties:
        MaxCpuUtilizationPercentage:
          $ref: '#/components/schemas/GenericString'
          description: ' Maximum observed or expected CPU utilization of the instance.'
        MaxMemoryUtilizationPercentage:
          $ref: '#/components/schemas/GenericString'
          description: ' Maximum observed or expected memory utilization of the instance.'
        MaxStorageUtilizationPercentage:
          $ref: '#/components/schemas/GenericString'
          description: ' Maximum observed or expected storage utilization of the instance (does not measure EBS storage).'
      description: ' Utilization metrics of the instance. '
    OfferingClass:
      type: string
      enum:
        - STANDARD
        - CONVERTIBLE
    EC2Specification:
      type: object
      properties:
        OfferingClass:
          $ref: '#/components/schemas/OfferingClass'
          description: Whether you want a recommendation for standard or convertible reservations.
      description: The Amazon EC2 hardware specifications that you want AWS to provide recommendations for.
    ESInstanceDetails:
      type: object
      properties:
        InstanceClass:
          $ref: '#/components/schemas/GenericString'
          description: The class of instance that AWS recommends.
        InstanceSize:
          $ref: '#/components/schemas/GenericString'
          description: The size of instance that AWS recommends.
        Region:
          $ref: '#/components/schemas/GenericString'
          description: The AWS Region of the recommended reservation.
        CurrentGeneration:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommendation is for a current-generation instance.
        SizeFlexEligible:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommended reservation is size flexible.
      description: Details about the Amazon ES instances that AWS recommends that you purchase.
    ElastiCacheInstanceDetails:
      type: object
      properties:
        Family:
          $ref: '#/components/schemas/GenericString'
          description: The instance family of the recommended reservation.
        NodeType:
          $ref: '#/components/schemas/GenericString'
          description: The type of node that AWS recommends.
        Region:
          $ref: '#/components/schemas/GenericString'
          description: The AWS Region of the recommended reservation.
        ProductDescription:
          $ref: '#/components/schemas/GenericString'
          description: The description of the recommended reservation.
        CurrentGeneration:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommendation is for a current generation instance.
        SizeFlexEligible:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommended reservation is size flexible.
      description: Details about the Amazon ElastiCache instances that AWS recommends that you purchase.
    Entity:
      type: string
    Estimated:
      type: boolean
    Expressions:
      type: array
      items:
        $ref: '#/components/schemas/Expression'
    TagValues:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The key for the tag.
        Values:
          $ref: '#/components/schemas/Values'
          description: The specific value of the tag.
      description: The values that are available for a tag.
    ForecastResult:
      type: object
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: The period of time that the forecast covers.
        MeanValue:
          $ref: '#/components/schemas/GenericString'
          description: The mean value of the forecast.
        PredictionIntervalLowerBound:
          $ref: '#/components/schemas/GenericString'
          description: 'The lower limit for the prediction interval. '
        PredictionIntervalUpperBound:
          $ref: '#/components/schemas/GenericString'
          description: 'The upper limit for the prediction interval. '
      description: The forecast created for your query.
    ForecastResultsByTime:
      type: array
      items:
        $ref: '#/components/schemas/ForecastResult'
    Granularity:
      type: string
      enum:
        - DAILY
        - MONTHLY
        - HOURLY
    MetricNames:
      type: array
      items:
        $ref: '#/components/schemas/MetricName'
    GroupDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/GroupDefinition'
    NextPageToken:
      type: string
    ResultsByTime:
      type: array
      items:
        $ref: '#/components/schemas/ResultByTime'
    Metric:
      type: string
      enum:
        - BLENDED_COST
        - UNBLENDED_COST
        - AMORTIZED_COST
        - NET_UNBLENDED_COST
        - NET_AMORTIZED_COST
        - USAGE_QUANTITY
        - NORMALIZED_USAGE_AMOUNT
    PredictionIntervalLevel:
      type: integer
      minimum: 51
      maximum: 99
    MetricValue:
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/MetricAmount'
          description: The actual number that represents the metric.
        Unit:
          $ref: '#/components/schemas/MetricUnit'
          description: The unit that the metric is given in.
      description: The aggregated value for a metric.
    SearchString:
      type: string
    PageSize:
      type: integer
    LookbackPeriodInDays:
      type: string
      enum:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - SIXTY_DAYS
    TermInYears:
      type: string
      enum:
        - ONE_YEAR
        - THREE_YEARS
    PaymentOption:
      type: string
      enum:
        - NO_UPFRONT
        - PARTIAL_UPFRONT
        - ALL_UPFRONT
        - LIGHT_UTILIZATION
        - MEDIUM_UTILIZATION
        - HEAVY_UTILIZATION
    ServiceSpecification:
      type: object
      properties:
        EC2Specification:
          $ref: '#/components/schemas/EC2Specification'
          description: The Amazon EC2 hardware specifications that you want AWS to provide recommendations for.
      description: Hardware specifications for the service that you want recommendations for.
    NonNegativeInteger:
      type: integer
      minimum: 0
    ReservationPurchaseRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          $ref: '#/components/schemas/GenericString'
          description: The ID for this specific recommendation.
        GenerationTimestamp:
          $ref: '#/components/schemas/GenericString'
          description: The time stamp for when AWS made this recommendation.
      description: 'Information about this specific recommendation, such as the time stamp for when AWS made a specific recommendation.'
    ReservationPurchaseRecommendations:
      type: array
      items:
        $ref: '#/components/schemas/ReservationPurchaseRecommendation'
    UtilizationsByTime:
      type: array
      items:
        $ref: '#/components/schemas/UtilizationByTime'
    ReservationAggregates:
      type: object
      properties:
        UtilizationPercentage:
          $ref: '#/components/schemas/UtilizationPercentage'
          description: The percentage of reservation time that you used.
        UtilizationPercentageInUnits:
          $ref: '#/components/schemas/UtilizationPercentageInUnits'
          description: 'The percentage of Amazon EC2 reservation time that you used, converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.'
        PurchasedHours:
          $ref: '#/components/schemas/PurchasedHours'
          description: How many reservation hours that you purchased.
        PurchasedUnits:
          $ref: '#/components/schemas/PurchasedUnits'
          description: 'How many Amazon EC2 reservation hours that you purchased, converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.'
        TotalActualHours:
          $ref: '#/components/schemas/TotalActualHours'
          description: The total number of reservation hours that you used.
        TotalActualUnits:
          $ref: '#/components/schemas/TotalActualUnits'
          description: 'The total number of Amazon EC2 reservation hours that you used, converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.'
        UnusedHours:
          $ref: '#/components/schemas/UnusedHours'
          description: The number of reservation hours that you didn't use.
        UnusedUnits:
          $ref: '#/components/schemas/UnusedUnits'
          description: 'The number of Amazon EC2 reservation hours that you didn''t use, converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.'
        OnDemandCostOfRIHoursUsed:
          $ref: '#/components/schemas/OnDemandCostOfRIHoursUsed'
          description: How much your reservation would cost if charged On-Demand rates.
        NetRISavings:
          $ref: '#/components/schemas/NetRISavings'
          description: How much you saved due to purchasing and utilizing reservation. AWS calculates this by subtracting <code>TotalAmortizedFee</code> from <code>OnDemandCostOfRIHoursUsed</code>.
        TotalPotentialRISavings:
          $ref: '#/components/schemas/TotalPotentialRISavings'
          description: How much you could save if you use your entire reservation.
        AmortizedUpfrontFee:
          $ref: '#/components/schemas/AmortizedUpfrontFee'
          description: 'The upfront cost of your reservation, amortized over the reservation period.'
        AmortizedRecurringFee:
          $ref: '#/components/schemas/AmortizedRecurringFee'
          description: 'The monthly cost of your reservation, amortized over the reservation period.'
        TotalAmortizedFee:
          $ref: '#/components/schemas/TotalAmortizedFee'
          description: 'The total cost of your reservation, amortized over the reservation period.'
      description: The aggregated numbers for your reservation usage.
    RightsizingRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          $ref: '#/components/schemas/GenericString'
          description: ' The ID for this specific recommendation.'
        GenerationTimestamp:
          $ref: '#/components/schemas/GenericString'
          description: ' The time stamp for when Amazon Web Services made this recommendation.'
        LookbackPeriodInDays:
          $ref: '#/components/schemas/LookbackPeriodInDays'
          description: ' How many days of previous usage that Amazon Web Services considers when making this recommendation.'
      description: Metadata for this recommendation set.
    RightsizingRecommendationSummary:
      type: object
      properties:
        TotalRecommendationCount:
          $ref: '#/components/schemas/GenericString'
          description: ' Total number of instance recommendations.'
        EstimatedTotalMonthlySavingsAmount:
          $ref: '#/components/schemas/GenericString'
          description: ' Estimated total savings resulting from modifications, on a monthly basis.'
        SavingsCurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: ' The currency code that Amazon Web Services used to calculate the savings.'
        SavingsPercentage:
          $ref: '#/components/schemas/GenericString'
          description: ' Savings percentage based on the recommended modifications, relative to the total On Demand costs associated with these instances.'
      description: ' Summary of rightsizing recommendations '
    RightsizingRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/RightsizingRecommendation'
    MaxResults:
      type: integer
      minimum: 1
    SavingsPlansCoverages:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansCoverage'
    SupportedSavingsPlansType:
      type: string
      enum:
        - COMPUTE_SP
        - EC2_INSTANCE_SP
    SavingsPlansPurchaseRecommendationMetadata:
      type: object
      properties:
        RecommendationId:
          $ref: '#/components/schemas/GenericString'
          description: The unique identifier for the recommendation set.
        GenerationTimestamp:
          $ref: '#/components/schemas/GenericString'
          description: The timestamp showing when the recommendations were generated.
      description: Metadata about your Savings Plans Purchase Recommendations.
    SavingsPlansPurchaseRecommendation:
      type: object
      properties:
        SavingsPlansType:
          $ref: '#/components/schemas/SupportedSavingsPlansType'
          description: The requested Savings Plans recommendation type.
        TermInYears:
          $ref: '#/components/schemas/TermInYears'
          description: 'The Savings Plans recommendation term in years, used to generate the recommendation.'
        PaymentOption:
          $ref: '#/components/schemas/PaymentOption'
          description: The payment option used to generate the recommendation.
        LookbackPeriodInDays:
          $ref: '#/components/schemas/LookbackPeriodInDays'
          description: 'The lookback period in days, used to generate the recommendation.'
        SavingsPlansPurchaseRecommendationDetails:
          $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationDetailList'
          description: 'Details for the Savings Plans we recommend you to purchase to cover existing, Savings Plans eligible workloads.'
        SavingsPlansPurchaseRecommendationSummary:
          $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationSummary'
          description: 'Summary metrics for your Savings Plans Recommendations. '
      description: 'Contains your request parameters, Savings Plan Recommendations Summary, and Details.'
    SavingsPlansUtilizationDetails:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansUtilizationDetail'
    SavingsPlansUtilizationAggregates:
      type: object
      required:
        - Utilization
      properties:
        Utilization:
          $ref: '#/components/schemas/SavingsPlansUtilization'
          description: A ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.
        Savings:
          $ref: '#/components/schemas/SavingsPlansSavings'
          description: 'The amount saved by using existing Savings Plans. Savings returns both net savings from Savings Plans, as well as the <code>onDemandCostEquivalent</code> of the Savings Plans when considering the utilization rate.'
        AmortizedCommitment:
          $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
          description: The total amortized commitment for a Savings Plans. This includes the sum of the upfront and recurring Savings Plans fees.
      description: The aggregated utilization metrics for your Savings Plans usage.
    SavingsPlansUtilizationsByTime:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansUtilizationByTime'
    TagKey:
      type: string
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Entity'
    Keys:
      type: array
      items:
        $ref: '#/components/schemas/Key'
    Metrics:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetricValue'
    Group:
      type: object
      properties:
        Keys:
          $ref: '#/components/schemas/Keys'
          description: The keys that are included in this group.
        Metrics:
          $ref: '#/components/schemas/Metrics'
          description: The metrics that are included in this group.
      description: One level of grouped data in the results.
    GroupDefinitionType:
      type: string
      enum:
        - DIMENSION
        - TAG
        - COST_CATEGORY
    GroupDefinitionKey:
      type: string
    GroupDefinition:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/GroupDefinitionType'
          description: The string that represents the type of group.
        Key:
          $ref: '#/components/schemas/GroupDefinitionKey'
          description: The string that represents a key for a specified group.
      description: Represents a group when you specify a group by criteria or in the response to a query with a specific grouping.
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    RDSInstanceDetails:
      type: object
      properties:
        Family:
          $ref: '#/components/schemas/GenericString'
          description: The instance family of the recommended reservation.
        InstanceType:
          $ref: '#/components/schemas/GenericString'
          description: The type of instance that AWS recommends.
        Region:
          $ref: '#/components/schemas/GenericString'
          description: The AWS Region of the recommended reservation.
        DatabaseEngine:
          $ref: '#/components/schemas/GenericString'
          description: The database engine that the recommended reservation supports.
        DatabaseEdition:
          $ref: '#/components/schemas/GenericString'
          description: The database edition that the recommended reservation supports.
        DeploymentOption:
          $ref: '#/components/schemas/GenericString'
          description: Whether the recommendation is for a reservation in a single Availability Zone or a reservation with a backup in a second Availability Zone.
        LicenseModel:
          $ref: '#/components/schemas/GenericString'
          description: The license model that the recommended reservation supports.
        CurrentGeneration:
          $ref: '#/components/schemas/GenericBoolean'
          description: 'Whether the recommendation is for a current-generation instance. '
        SizeFlexEligible:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommended reservation is size flexible.
      description: Details about the Amazon RDS instances that AWS recommends that you purchase.
    RedshiftInstanceDetails:
      type: object
      properties:
        Family:
          $ref: '#/components/schemas/GenericString'
          description: The instance family of the recommended reservation.
        NodeType:
          $ref: '#/components/schemas/GenericString'
          description: The type of node that AWS recommends.
        Region:
          $ref: '#/components/schemas/GenericString'
          description: The AWS Region of the recommended reservation.
        CurrentGeneration:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommendation is for a current-generation instance.
        SizeFlexEligible:
          $ref: '#/components/schemas/GenericBoolean'
          description: Whether the recommended reservation is size flexible.
      description: Details about the Amazon Redshift instances that AWS recommends that you purchase.
    InstanceDetails:
      type: object
      properties:
        EC2InstanceDetails:
          $ref: '#/components/schemas/EC2InstanceDetails'
          description: The Amazon EC2 instances that AWS recommends that you purchase.
        RDSInstanceDetails:
          $ref: '#/components/schemas/RDSInstanceDetails'
          description: The Amazon RDS instances that AWS recommends that you purchase.
        RedshiftInstanceDetails:
          $ref: '#/components/schemas/RedshiftInstanceDetails'
          description: The Amazon Redshift instances that AWS recommends that you purchase.
        ElastiCacheInstanceDetails:
          $ref: '#/components/schemas/ElastiCacheInstanceDetails'
          description: The ElastiCache instances that AWS recommends that you purchase.
        ESInstanceDetails:
          $ref: '#/components/schemas/ESInstanceDetails'
          description: The Amazon ES instances that AWS recommends that you purchase.
      description: Details about the instances that AWS recommends that you purchase.
    Key:
      type: string
    MetricAmount:
      type: string
    MetricName:
      type: string
    MetricUnit:
      type: string
    TargetInstancesList:
      type: array
      items:
        $ref: '#/components/schemas/TargetInstance'
    ModifyRecommendationDetail:
      type: object
      properties:
        TargetInstances:
          $ref: '#/components/schemas/TargetInstancesList'
          description: Identifies whether this instance type is the Amazon Web Services default recommendation.
      description: ' Details on the modification recommendation.'
    NetRISavings:
      type: string
    OnDemandCostOfRIHoursUsed:
      type: string
    PurchasedHours:
      type: string
    PurchasedUnits:
      type: string
    UtilizationPercentage:
      type: string
    UtilizationPercentageInUnits:
      type: string
    TotalActualHours:
      type: string
    TotalActualUnits:
      type: string
    UnusedHours:
      type: string
    UnusedUnits:
      type: string
    TotalPotentialRISavings:
      type: string
    TotalAmortizedFee:
      type: string
    ReservationCoverageGroup:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: The attributes for this group of reservations.
        Coverage:
          $ref: '#/components/schemas/Coverage'
          description: How much instance usage this group of reservations covered.
      description: A group of reservations that share a set of attributes.
    ReservationGroupKey:
      type: string
    ReservationGroupValue:
      type: string
    ReservationPurchaseRecommendationDetails:
      type: array
      items:
        $ref: '#/components/schemas/ReservationPurchaseRecommendationDetail'
    ReservationPurchaseRecommendationSummary:
      type: object
      properties:
        TotalEstimatedMonthlySavingsAmount:
          $ref: '#/components/schemas/GenericString'
          description: The total amount that AWS estimates that this recommendation could save you in a month.
        TotalEstimatedMonthlySavingsPercentage:
          $ref: '#/components/schemas/GenericString'
          description: 'The total amount that AWS estimates that this recommendation could save you in a month, as a percentage of your costs.'
        CurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: The currency code used for this recommendation.
      description: 'A summary about this recommendation, such as the currency code, the amount that AWS estimates that you could save, and the total amount of reservation to purchase.'
    ReservationPurchaseRecommendation:
      type: object
      properties:
        AccountScope:
          $ref: '#/components/schemas/AccountScope'
          description: 'The account scope that AWS recommends that you purchase this instance for. For example, you can purchase this reservation for an entire organization in AWS Organizations.'
        LookbackPeriodInDays:
          $ref: '#/components/schemas/LookbackPeriodInDays'
          description: How many days of previous usage that AWS considers when making this recommendation.
        TermInYears:
          $ref: '#/components/schemas/TermInYears'
          description: 'The term of the reservation that you want recommendations for, in years.'
        PaymentOption:
          $ref: '#/components/schemas/PaymentOption'
          description: 'The payment option for the reservation. For example, <code>AllUpfront</code> or <code>NoUpfront</code>.'
        ServiceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: Hardware specifications for the service that you want recommendations for.
        RecommendationDetails:
          $ref: '#/components/schemas/ReservationPurchaseRecommendationDetails'
          description: Details about the recommended purchases.
        RecommendationSummary:
          $ref: '#/components/schemas/ReservationPurchaseRecommendationSummary'
          description: A summary about the recommended purchase.
      description: A specific reservation that AWS recommends for purchase.
    ReservationPurchaseRecommendationDetail:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/GenericString'
          description: The account that this RI recommendation is for.
        InstanceDetails:
          $ref: '#/components/schemas/InstanceDetails'
          description: Details about the instances that AWS recommends that you purchase.
        RecommendedNumberOfInstancesToPurchase:
          $ref: '#/components/schemas/GenericString'
          description: The number of instances that AWS recommends that you purchase.
        RecommendedNormalizedUnitsToPurchase:
          $ref: '#/components/schemas/GenericString'
          description: The number of normalized units that AWS recommends that you purchase.
        MinimumNumberOfInstancesUsedPerHour:
          $ref: '#/components/schemas/GenericString'
          description: The minimum number of instances that you used in an hour during the historical period. AWS uses this to calculate your recommended reservation purchases.
        MinimumNormalizedUnitsUsedPerHour:
          $ref: '#/components/schemas/GenericString'
          description: The minimum number of normalized units that you used in an hour during the historical period. AWS uses this to calculate your recommended reservation purchases.
        MaximumNumberOfInstancesUsedPerHour:
          $ref: '#/components/schemas/GenericString'
          description: The maximum number of instances that you used in an hour during the historical period. AWS uses this to calculate your recommended reservation purchases.
        MaximumNormalizedUnitsUsedPerHour:
          $ref: '#/components/schemas/GenericString'
          description: The maximum number of normalized units that you used in an hour during the historical period. AWS uses this to calculate your recommended reservation purchases.
        AverageNumberOfInstancesUsedPerHour:
          $ref: '#/components/schemas/GenericString'
          description: The average number of instances that you used in an hour during the historical period. AWS uses this to calculate your recommended reservation purchases.
        AverageNormalizedUnitsUsedPerHour:
          $ref: '#/components/schemas/GenericString'
          description: The average number of normalized units that you used in an hour during the historical period. AWS uses this to calculate your recommended reservation purchases.
        AverageUtilization:
          $ref: '#/components/schemas/GenericString'
          description: The average utilization of your instances. AWS uses this to calculate your recommended reservation purchases.
        EstimatedBreakEvenInMonths:
          $ref: '#/components/schemas/GenericString'
          description: 'How long AWS estimates that it takes for this instance to start saving you money, in months.'
        CurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: The currency code that AWS used to calculate the costs for this instance.
        EstimatedMonthlySavingsAmount:
          $ref: '#/components/schemas/GenericString'
          description: How much AWS estimates that this specific recommendation could save you in a month.
        EstimatedMonthlySavingsPercentage:
          $ref: '#/components/schemas/GenericString'
          description: 'How much AWS estimates that this specific recommendation could save you in a month, as a percentage of your overall costs.'
        EstimatedMonthlyOnDemandCost:
          $ref: '#/components/schemas/GenericString'
          description: How much AWS estimates that you spend on On-Demand Instances in a month.
        EstimatedReservationCostForLookbackPeriod:
          $ref: '#/components/schemas/GenericString'
          description: How much AWS estimates that you would have spent for all usage during the specified historical period if you had a reservation.
        UpfrontCost:
          $ref: '#/components/schemas/GenericString'
          description: How much purchasing this instance costs you upfront.
        RecurringStandardMonthlyCost:
          $ref: '#/components/schemas/GenericString'
          description: How much purchasing this instance costs you on a monthly basis.
      description: Details about your recommended reservation purchase.
    ReservationUtilizationGroup:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/ReservationGroupKey'
          description: The key for a specific reservation attribute.
        Value:
          $ref: '#/components/schemas/ReservationGroupValue'
          description: The value of a specific reservation attribute.
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: The attributes for this group of reservations.
        Utilization:
          $ref: '#/components/schemas/ReservationAggregates'
          description: How much you used this group of reservations.
      description: A group of reservations that share a set of attributes.
    ReservationUtilizationGroups:
      type: array
      items:
        $ref: '#/components/schemas/ReservationUtilizationGroup'
    ResultByTime:
      type: object
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: The time period that the result covers.
        Total:
          $ref: '#/components/schemas/Metrics'
          description: The total amount of cost or usage accrued during the time period.
        Groups:
          $ref: '#/components/schemas/Groups'
          description: The groups that this time period includes.
        Estimated:
          $ref: '#/components/schemas/Estimated'
          description: Whether the result is estimated.
      description: The result that is associated with a time period.
    RightsizingType:
      type: string
      enum:
        - TERMINATE
        - MODIFY
    TerminateRecommendationDetail:
      type: object
      properties:
        EstimatedMonthlySavings:
          $ref: '#/components/schemas/GenericString'
          description: ' Estimated savings resulting from modification, on a monthly basis.'
        CurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: ' The currency code that Amazon Web Services used to calculate the costs for this instance.'
      description: ' Details on termination recommendation. '
    RightsizingRecommendation:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/GenericString'
          description: The account that this recommendation is for.
        CurrentInstance:
          $ref: '#/components/schemas/CurrentInstance'
          description: ' Context regarding the current instance.'
        RightsizingType:
          $ref: '#/components/schemas/RightsizingType'
          description: Recommendation to either terminate or modify the resource.
        ModifyRecommendationDetail:
          $ref: '#/components/schemas/ModifyRecommendationDetail'
          description: ' Details for modification recommendations. '
        TerminateRecommendationDetail:
          $ref: '#/components/schemas/TerminateRecommendationDetail'
          description: Details for termination recommendations.
      description: Recommendations to rightsize resources.
    SavingsPlanArn:
      type: string
    SavingsPlansAmortizedCommitment:
      type: object
      properties:
        AmortizedRecurringCommitment:
          $ref: '#/components/schemas/GenericString'
          description: The amortized amount of your Savings Plans commitment that was purchased with either a <code>Partial</code> or a <code>NoUpfront</code>.
        AmortizedUpfrontCommitment:
          $ref: '#/components/schemas/GenericString'
          description: The amortized amount of your Savings Plans commitment that was purchased with an <code>Upfront</code> or <code>PartialUpfront</code> Savings Plans.
        TotalAmortizedCommitment:
          $ref: '#/components/schemas/GenericString'
          description: 'The total amortized amount of your Savings Plans commitment, regardless of your Savings Plans purchase method. '
      description: The amortized amount of Savings Plans purchased in a specific account during a specific time interval.
    SavingsPlansCoverageData:
      type: object
      properties:
        SpendCoveredBySavingsPlans:
          $ref: '#/components/schemas/GenericString'
          description: The amount of your Amazon Web Services usage that is covered by a Savings Plans.
        OnDemandCost:
          $ref: '#/components/schemas/GenericString'
          description: The cost of your Amazon Web Services usage at the public On-Demand rate.
        TotalCost:
          $ref: '#/components/schemas/GenericString'
          description: 'The total cost of your Amazon Web Services usage, regardless of your purchase option.'
        CoveragePercentage:
          $ref: '#/components/schemas/GenericString'
          description: 'The percentage of your existing Savings Planscovered usage, divided by all of your eligible Savings Plans usage in an account(or set of accounts).'
      description: 'Specific coverage percentage, On-Demand costs, and spend covered by Savings Plans, and total Savings Plans costs for an account.'
    SavingsPlansCoverage:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: The attribute that applies to a specific <code>Dimension</code>.
        Coverage:
          $ref: '#/components/schemas/SavingsPlansCoverageData'
          description: The amount of Savings Plans eligible usage that the Savings Plans covered.
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
      description: The amount of Savings Plans eligible usage that is covered by Savings Plans. All calculations consider the On-Demand equivalent of your Savings Plans usage.
    SavingsPlansDetails:
      type: object
      properties:
        Region:
          $ref: '#/components/schemas/GenericString'
          description: A collection of AWS resources in a geographic area. Each AWS Region is isolated and independent of the other Regions.
        InstanceFamily:
          $ref: '#/components/schemas/GenericString'
          description: A group of instance types that Savings Plans applies to.
        OfferingId:
          $ref: '#/components/schemas/GenericString'
          description: The unique ID used to distinguish Savings Plans from one another.
      description: Attribute details on a specific Savings Plan.
    SavingsPlansPurchaseRecommendationDetailList:
      type: array
      items:
        $ref: '#/components/schemas/SavingsPlansPurchaseRecommendationDetail'
    SavingsPlansPurchaseRecommendationSummary:
      type: object
      properties:
        EstimatedROI:
          $ref: '#/components/schemas/GenericString'
          description: The estimated return on investment based on the recommended Savings Plans and estimated savings.
        CurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: The currency code Amazon Web Services used to generate the recommendations and present potential savings.
        EstimatedTotalCost:
          $ref: '#/components/schemas/GenericString'
          description: 'The estimated total cost of the usage after purchasing the recommended Savings Plans. This is a sum of the cost of Savings Plans during this term, and the remaining On-Demand usage.'
        CurrentOnDemandSpend:
          $ref: '#/components/schemas/GenericString'
          description: The current total on demand spend of the applicable usage types over the lookback period.
        EstimatedSavingsAmount:
          $ref: '#/components/schemas/GenericString'
          description: 'The estimated total savings over the lookback period, based on the purchase of the recommended Savings Plans.'
        TotalRecommendationCount:
          $ref: '#/components/schemas/GenericString'
          description: The aggregate number of Savings Plans recommendations that exist for your account.
        DailyCommitmentToPurchase:
          $ref: '#/components/schemas/GenericString'
          description: The recommended Savings Plans cost on a daily (24 hourly) basis.
        HourlyCommitmentToPurchase:
          $ref: '#/components/schemas/GenericString'
          description: The recommended hourly commitment based on the recommendation parameters.
        EstimatedSavingsPercentage:
          $ref: '#/components/schemas/GenericString'
          description: 'The estimated savings relative to the total cost of On-Demand usage, over the lookback period. This is calculated as <code>estimatedSavingsAmount</code>/ <code>CurrentOnDemandSpend</code>*100.'
        EstimatedMonthlySavingsAmount:
          $ref: '#/components/schemas/GenericString'
          description: 'The estimated monthly savings amount, based on the recommended Savings Plans purchase.'
        EstimatedOnDemandCostWithCurrentCommitment:
          $ref: '#/components/schemas/GenericString'
          description: ' The estimated On-Demand costs you would expect with no additional commitment, based on your usage of the selected time period and the Savings Plans you own. '
      description: Summary metrics for your Savings Plans Purchase Recommendations.
    SavingsPlansPurchaseRecommendationDetail:
      type: object
      properties:
        SavingsPlansDetails:
          $ref: '#/components/schemas/SavingsPlansDetails'
          description: Details for your recommended Savings Plans.
        AccountId:
          $ref: '#/components/schemas/GenericString'
          description: The <code>AccountID</code> the recommendation is generated for.
        UpfrontCost:
          $ref: '#/components/schemas/GenericString'
          description: 'The upfront cost of the recommended Savings Plans, based on the selected payment option.'
        EstimatedROI:
          $ref: '#/components/schemas/GenericString'
          description: The estimated return on investment based on the recommended Savings Plans purchased. This is calculated as <code>estimatedSavingsAmount</code>/ <code>estimatedSPCost</code>*100.
        CurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: The currency code Amazon Web Services used to generate the recommendations and present potential savings.
        EstimatedSPCost:
          $ref: '#/components/schemas/GenericString'
          description: The cost of the recommended Savings Plans over the length of the lookback period.
        EstimatedOnDemandCost:
          $ref: '#/components/schemas/GenericString'
          description: 'The remaining On-Demand cost estimated to not be covered by the recommended Savings Plans, over the length of the lookback period.'
        EstimatedOnDemandCostWithCurrentCommitment:
          $ref: '#/components/schemas/GenericString'
          description: ' The estimated On-Demand costs you would expect with no additional commitment, based on your usage of the selected time period and the Savings Plans you own. '
        EstimatedSavingsAmount:
          $ref: '#/components/schemas/GenericString'
          description: The estimated savings amount based on the recommended Savings Plans over the length of the lookback period.
        EstimatedSavingsPercentage:
          $ref: '#/components/schemas/GenericString'
          description: The estimated savings percentage relative to the total cost of applicable On-Demand usage over the lookback period.
        HourlyCommitmentToPurchase:
          $ref: '#/components/schemas/GenericString'
          description: 'The recommended hourly commitment level for the Savings Plans type, and configuration based on the usage during the lookback period.'
        EstimatedAverageUtilization:
          $ref: '#/components/schemas/GenericString'
          description: The estimated utilization of the recommended Savings Plans.
        EstimatedMonthlySavingsAmount:
          $ref: '#/components/schemas/GenericString'
          description: 'The estimated monthly savings amount, based on the recommended Savings Plans.'
        CurrentMinimumHourlyOnDemandSpend:
          $ref: '#/components/schemas/GenericString'
          description: The lowest value of hourly On-Demand spend over the lookback period of the applicable usage type.
        CurrentMaximumHourlyOnDemandSpend:
          $ref: '#/components/schemas/GenericString'
          description: The highest value of hourly On-Demand spend over the lookback period of the applicable usage type.
        CurrentAverageHourlyOnDemandSpend:
          $ref: '#/components/schemas/GenericString'
          description: The average value of hourly On-Demand spend over the lookback period of the applicable usage type.
      description: Details for your recommended Savings Plans.
    SavingsPlansSavings:
      type: object
      properties:
        NetSavings:
          $ref: '#/components/schemas/GenericString'
          description: 'The savings amount that you are accumulating for the usage that is covered by a Savings Plans, when compared to the On-Demand equivalent of the same usage.'
        OnDemandCostEquivalent:
          $ref: '#/components/schemas/GenericString'
          description: How much the amount that the usage would have cost if it was accrued at the On-Demand rate.
      description: 'The amount of savings you''re accumulating, against the public On-Demand rate of the usage accrued in an account.'
    SavingsPlansUtilization:
      type: object
      properties:
        TotalCommitment:
          $ref: '#/components/schemas/GenericString'
          description: The total amount of Savings Plans commitment that's been purchased in an account (or set of accounts).
        UsedCommitment:
          $ref: '#/components/schemas/GenericString'
          description: The amount of your Savings Plans commitment that was consumed from Savings Plans eligible usage in a specific period.
        UnusedCommitment:
          $ref: '#/components/schemas/GenericString'
          description: The amount of your Savings Plans commitment that was not consumed from Savings Plans eligible usage in a specific period.
        UtilizationPercentage:
          $ref: '#/components/schemas/GenericString'
          description: The amount of <code>UsedCommitment</code> divided by the <code>TotalCommitment</code> for your Savings Plans.
      description: The measurement of how well you are using your existing Savings Plans.
    SavingsPlansUtilizationByTime:
      type: object
      required:
        - TimePeriod
        - Utilization
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
        Utilization:
          $ref: '#/components/schemas/SavingsPlansUtilization'
          description: A ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.
        Savings:
          $ref: '#/components/schemas/SavingsPlansSavings'
          description: The amount saved by using existing Savings Plans. Savings returns both net savings from Savings Plans as well as the <code>onDemandCostEquivalent</code> of the Savings Plans when considering the utilization rate.
        AmortizedCommitment:
          $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
          description: The total amortized commitment for a Savings Plans. This includes the sum of the upfront and recurring Savings Plans fees.
      description: 'The amount of Savings Plans utilization, in hours.'
    SavingsPlansUtilizationDetail:
      type: object
      properties:
        SavingsPlanArn:
          $ref: '#/components/schemas/SavingsPlanArn'
          description: The unique Amazon Resource Name (ARN) for a particular Savings Plan.
        Attributes:
          $ref: '#/components/schemas/Attributes'
          description: The attribute that applies to a specific <code>Dimension</code>.
        Utilization:
          $ref: '#/components/schemas/SavingsPlansUtilization'
          description: A ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.
        Savings:
          $ref: '#/components/schemas/SavingsPlansSavings'
          description: The amount saved by using existing Savings Plans. Savings returns both net savings from savings plans as well as the <code>onDemandCostEquivalent</code> of the Savings Plans when considering the utilization rate.
        AmortizedCommitment:
          $ref: '#/components/schemas/SavingsPlansAmortizedCommitment'
          description: The total amortized commitment for a Savings Plans. Includes the sum of the upfront and recurring Savings Plans fees.
      description: 'A single daily or monthly Savings Plans utilization rate, and details for your account. Master accounts in an organization have access to member accounts. You can use <code>GetDimensionValues</code> to determine the possible dimension values. '
    TargetInstance:
      type: object
      properties:
        EstimatedMonthlyCost:
          $ref: '#/components/schemas/GenericString'
          description: ' Expected cost to operate this instance type on a monthly basis.'
        EstimatedMonthlySavings:
          $ref: '#/components/schemas/GenericString'
          description: ' Estimated savings resulting from modification, on a monthly basis.'
        CurrencyCode:
          $ref: '#/components/schemas/GenericString'
          description: ' The currency code that Amazon Web Services used to calculate the costs for this instance.'
        DefaultTargetInstance:
          $ref: '#/components/schemas/GenericBoolean'
          description: ' Indicates whether or not this recommendation is the defaulted Amazon Web Services recommendation.'
        ResourceDetails:
          $ref: '#/components/schemas/ResourceDetails'
          description: ' Details on the target instance type. '
        ExpectedResourceUtilization:
          $ref: '#/components/schemas/ResourceUtilization'
          description: ' Expected utilization metrics for target instance type.'
      description: ' Details on recommended instance.'
    UtilizationByTime:
      type: object
      properties:
        TimePeriod:
          $ref: '#/components/schemas/DateInterval'
          description: The period of time that this utilization was used for.
        Groups:
          $ref: '#/components/schemas/ReservationUtilizationGroups'
          description: The groups that this utilization result uses.
        Total:
          $ref: '#/components/schemas/ReservationAggregates'
          description: The total number of reservation hours that were used.
      description: 'The amount of utilization, in hours.'
security:
  - hmac: []
