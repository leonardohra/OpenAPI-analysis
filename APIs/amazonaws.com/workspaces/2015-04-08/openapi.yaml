openapi: 3.0.0
info:
  version: '2015-04-08'
  x-release: v4
  title: Amazon WorkSpaces
  description: '<fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables you to provision virtual, cloud-based Microsoft Windows and Amazon Linux desktops for your users.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: workspaces
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workspaces-2015-04-08.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/workspaces/'
servers:
  - url: 'http://workspaces.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkSpaces multi-region endpoint
  - url: 'https://workspaces.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkSpaces multi-region endpoint
  - url: 'http://workspaces.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkSpaces endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://workspaces.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkSpaces endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  '/#X-Amz-Target=WorkspacesService.AssociateIpGroups':
    post:
      operationId: AssociateIpGroups
      description: Associates the specified IP access control group with the specified directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateIpGroupsResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateIpGroupsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.AssociateIpGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.AuthorizeIpRules':
    post:
      operationId: AuthorizeIpRules
      description: <p>Adds one or more rules to the specified IP access control group.</p> <p>This action gives users permission to access their WorkSpaces from the CIDR address ranges specified in the rules.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeIpRulesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeIpRulesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.AuthorizeIpRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.CopyWorkspaceImage':
    post:
      operationId: CopyWorkspaceImage
      description: Copies the specified image from the specified Region to the current Region.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyWorkspaceImageResult'
        '480':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '484':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyWorkspaceImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CopyWorkspaceImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.CreateIpGroup':
    post:
      operationId: CreateIpGroup
      description: '<p>Creates an IP access control group.</p> <p>An IP access control group provides you with the ability to control the IP addresses from which users are allowed to access their WorkSpaces. To specify the CIDR address ranges, add rules to your IP access control group and then associate the group with your directory. You can add rules when you create the group or at any time using <a>AuthorizeIpRules</a>.</p> <p>There is a default IP access control group associated with your directory. If you don''t associate an IP access control group with your directory, the default group is used. The default group includes a default rule that allows users to access their WorkSpaces from anywhere. You cannot modify the default IP access control group for your directory.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIpGroupResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '482':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '483':
          description: ResourceCreationFailedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCreationFailedException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CreateIpGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.CreateTags':
    post:
      operationId: CreateTags
      description: Creates the specified tags for the specified WorkSpaces resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTagsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CreateTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.CreateWorkspaces':
    post:
      operationId: CreateWorkspaces
      description: <p>Creates one or more WorkSpaces.</p> <p>This operation is asynchronous and returns before the WorkSpaces are created.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspacesResult'
        '480':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '481':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspacesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CreateWorkspaces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DeleteIpGroup':
    post:
      operationId: DeleteIpGroup
      description: <p>Deletes the specified IP access control group.</p> <p>You cannot delete an IP access control group that is associated with a directory.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIpGroupResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceAssociatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAssociatedException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteIpGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DeleteIpGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DeleteTags':
    post:
      operationId: DeleteTags
      description: Deletes the specified tags from the specified WorkSpaces resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTagsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DeleteTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DeleteWorkspaceImage':
    post:
      operationId: DeleteWorkspaceImage
      description: 'Deletes the specified image from your account. To delete an image, you must first delete any bundles that are associated with the image and un-share the image if it is shared with other accounts. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkspaceImageResult'
        '480':
          description: ResourceAssociatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAssociatedException'
        '481':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkspaceImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DeleteWorkspaceImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DeregisterWorkspaceDirectory':
    post:
      operationId: DeregisterWorkspaceDirectory
      description: 'Deregisters the specified directory. This operation is asynchronous and returns before the WorkSpace directory is deregistered. If any WorkSpaces are registered to this directory, you must remove them before you can deregister the directory.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterWorkspaceDirectoryResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '482':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
        '483':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '484':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterWorkspaceDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DeregisterWorkspaceDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeAccount':
    post:
      operationId: DescribeAccount
      description: Retrieves a list that describes the configuration of Bring Your Own License (BYOL) for the specified account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeAccount
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeAccountModifications':
    post:
      operationId: DescribeAccountModifications
      description: Retrieves a list that describes modifications to the configuration of Bring Your Own License (BYOL) for the specified account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountModificationsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountModificationsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeAccountModifications
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeClientProperties':
    post:
      operationId: DescribeClientProperties
      description: Retrieves a list that describes one or more specified Amazon WorkSpaces clients.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClientPropertiesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClientPropertiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeClientProperties
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeIpGroups':
    post:
      operationId: DescribeIpGroups
      description: Describes one or more of your IP access control groups.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeIpGroupsResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeIpGroupsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeIpGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeTags':
    post:
      operationId: DescribeTags
      description: Describes the specified tags for the specified WorkSpaces resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTagsResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTagsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeWorkspaceBundles':
    post:
      operationId: DescribeWorkspaceBundles
      description: '<p>Retrieves a list that describes the available WorkSpace bundles.</p> <p>You can filter the results using either bundle ID or owner, but not both.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceBundlesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkspaceBundlesRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceBundles
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeWorkspaceDirectories':
    post:
      operationId: DescribeWorkspaceDirectories
      description: Describes the available directories that are registered with Amazon WorkSpaces.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceDirectoriesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkspaceDirectoriesRequest'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceDirectories
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeWorkspaceImages':
    post:
      operationId: DescribeWorkspaceImages
      description: 'Retrieves a list that describes one or more specified images, if the image identifiers are provided. Otherwise, all images in the account are described. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceImagesResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkspaceImagesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceImages
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeWorkspaceSnapshots':
    post:
      operationId: DescribeWorkspaceSnapshots
      description: Describes the snapshots for the specified WorkSpace.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceSnapshotsResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkspaceSnapshotsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceSnapshots
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeWorkspaces':
    post:
      operationId: DescribeWorkspaces
      description: '<p>Describes the specified WorkSpaces.</p> <p>You can filter the results by using the bundle identifier, directory identifier, or owner, but you can specify only one filter at a time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspacesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkspacesRequest'
      parameters:
        - name: Limit
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DescribeWorkspacesConnectionStatus':
    post:
      operationId: DescribeWorkspacesConnectionStatus
      description: Describes the connection status of the specified WorkSpaces.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspacesConnectionStatusResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkspacesConnectionStatusRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspacesConnectionStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.DisassociateIpGroups':
    post:
      operationId: DisassociateIpGroups
      description: Disassociates the specified IP access control group from the specified directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateIpGroupsResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateIpGroupsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DisassociateIpGroups
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ImportWorkspaceImage':
    post:
      operationId: ImportWorkspaceImage
      description: 'Imports the specified Windows 7 or Windows 10 Bring Your Own License (BYOL) image into Amazon WorkSpaces. The image must be an already licensed EC2 image that is in your AWS account, and you must own the image. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportWorkspaceImageResult'
        '480':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '481':
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '485':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportWorkspaceImageRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ImportWorkspaceImage
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ListAvailableManagementCidrRanges':
    post:
      operationId: ListAvailableManagementCidrRanges
      description: '<p>Retrieves a list of IP address ranges, specified as IPv4 CIDR blocks, that you can use for the network management interface when you enable Bring Your Own License (BYOL). </p> <p>The management network interface is connected to a secure Amazon WorkSpaces management network. It is used for interactive streaming of the WorkSpace desktop to Amazon WorkSpaces clients, and to allow Amazon WorkSpaces to manage the WorkSpace.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAvailableManagementCidrRangesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAvailableManagementCidrRangesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ListAvailableManagementCidrRanges
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.MigrateWorkspace':
    post:
      operationId: MigrateWorkspace
      description: '<p>Migrates a WorkSpace from one operating system or bundle type to another, while retaining the data on the user volume.</p> <p>The migration process recreates the WorkSpace by using a new root volume from the target bundle image and the user volume from the last available snapshot of the original WorkSpace. During migration, the original <code>D:\Users\%USERNAME%</code> user profile folder is renamed to <code>D:\Users\%USERNAME%MMddyyTHHmmss%.NotMigrated</code>. A new <code>D:\Users\%USERNAME%\</code> folder is generated by the new OS. Certain files in the old user profile are moved to the new user profile.</p> <p>For available migration scenarios, details about what happens during migration, and best practices, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/migrate-workspaces.html">Migrate a WorkSpace</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateWorkspaceResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '483':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
        '484':
          description: OperationInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '485':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrateWorkspaceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.MigrateWorkspace
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ModifyAccount':
    post:
      operationId: ModifyAccount
      description: Modifies the configuration of Bring Your Own License (BYOL) for the specified account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyAccountResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '482':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '483':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAccountRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyAccount
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ModifyClientProperties':
    post:
      operationId: ModifyClientProperties
      description: Modifies the properties of the specified Amazon WorkSpaces clients.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyClientPropertiesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyClientPropertiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyClientProperties
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ModifySelfservicePermissions':
    post:
      operationId: ModifySelfservicePermissions
      description: 'Modifies the self-service WorkSpace management capabilities for your users. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/enable-user-self-service-workspace-management.html">Enable Self-Service WorkSpace Management Capabilities for Your Users</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifySelfservicePermissionsResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySelfservicePermissionsRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifySelfservicePermissions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ModifyWorkspaceAccessProperties':
    post:
      operationId: ModifyWorkspaceAccessProperties
      description: 'Specifies which devices and operating systems users can use to access their WorkSpaces. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html#control-device-access"> Control Device Access</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyWorkspaceAccessPropertiesResult'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyWorkspaceAccessPropertiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyWorkspaceAccessProperties
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ModifyWorkspaceCreationProperties':
    post:
      operationId: ModifyWorkspaceCreationProperties
      description: Modify the default properties used to create WorkSpaces.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyWorkspaceCreationPropertiesResult'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyWorkspaceCreationPropertiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyWorkspaceCreationProperties
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ModifyWorkspaceProperties':
    post:
      operationId: ModifyWorkspaceProperties
      description: Modifies the specified WorkSpace properties.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyWorkspacePropertiesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '482':
          description: OperationInProgressException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationInProgressException'
        '483':
          description: UnsupportedWorkspaceConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedWorkspaceConfigurationException'
        '484':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUnavailableException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyWorkspacePropertiesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyWorkspaceProperties
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.ModifyWorkspaceState':
    post:
      operationId: ModifyWorkspaceState
      description: '<p>Sets the state of the specified WorkSpace.</p> <p>To maintain a WorkSpace without being interrupted, set the WorkSpace state to <code>ADMIN_MAINTENANCE</code>. WorkSpaces in this state do not respond to requests to reboot, stop, start, rebuild, or restore. An AutoStop WorkSpace in this state is not stopped. Users cannot log into a WorkSpace in the <code>ADMIN_MAINTENANCE</code> state.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyWorkspaceStateResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyWorkspaceStateRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyWorkspaceState
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.RebootWorkspaces':
    post:
      operationId: RebootWorkspaces
      description: <p>Reboots the specified WorkSpaces.</p> <p>You cannot reboot a WorkSpace unless its state is <code>AVAILABLE</code> or <code>UNHEALTHY</code>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have rebooted.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootWorkspacesResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootWorkspacesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RebootWorkspaces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.RebuildWorkspaces':
    post:
      operationId: RebuildWorkspaces
      description: '<p>Rebuilds the specified WorkSpace.</p> <p>You cannot rebuild a WorkSpace unless its state is <code>AVAILABLE</code>, <code>ERROR</code>, <code>UNHEALTHY</code>, or <code>STOPPED</code>.</p> <p>Rebuilding a WorkSpace is a potentially destructive action that can result in the loss of data. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/reset-workspace.html">Rebuild a WorkSpace</a>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have been completely rebuilt.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebuildWorkspacesResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebuildWorkspacesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RebuildWorkspaces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.RegisterWorkspaceDirectory':
    post:
      operationId: RegisterWorkspaceDirectory
      description: 'Registers the specified directory. This operation is asynchronous and returns before the WorkSpace directory is registered. If this is the first time you are registering a directory, you will need to create the workspaces_DefaultRole role before you can register a directory. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role"> Creating the workspaces_DefaultRole Role</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterWorkspaceDirectoryResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '484':
          description: WorkspacesDefaultRoleNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesDefaultRoleNotFoundException'
        '485':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '486':
          description: UnsupportedNetworkConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedNetworkConfigurationException'
        '487':
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotSupportedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWorkspaceDirectoryRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RegisterWorkspaceDirectory
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.RestoreWorkspace':
    post:
      operationId: RestoreWorkspace
      description: '<p>Restores the specified WorkSpace to its last known healthy state.</p> <p>You cannot restore a WorkSpace unless its state is <code> AVAILABLE</code>, <code>ERROR</code>, <code>UNHEALTHY</code>, or <code>STOPPED</code>.</p> <p>Restoring a WorkSpace is a potentially destructive action that can result in the loss of data. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/restore-workspace.html">Restore a WorkSpace</a>.</p> <p>This operation is asynchronous and returns before the WorkSpace is completely restored.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreWorkspaceResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreWorkspaceRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RestoreWorkspace
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.RevokeIpRules':
    post:
      operationId: RevokeIpRules
      description: Removes one or more rules from the specified IP access control group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeIpRulesResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '483':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeIpRulesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RevokeIpRules
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.StartWorkspaces':
    post:
      operationId: StartWorkspaces
      description: <p>Starts the specified WorkSpaces.</p> <p>You cannot start a WorkSpace unless it has a running mode of <code>AutoStop</code> and a state of <code>STOPPED</code>.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartWorkspacesResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWorkspacesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.StartWorkspaces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.StopWorkspaces':
    post:
      operationId: StopWorkspaces
      description: '<p> Stops the specified WorkSpaces.</p> <p>You cannot stop a WorkSpace unless it has a running mode of <code>AutoStop</code> and a state of <code>AVAILABLE</code>, <code>IMPAIRED</code>, <code>UNHEALTHY</code>, or <code>ERROR</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopWorkspacesResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopWorkspacesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.StopWorkspaces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.TerminateWorkspaces':
    post:
      operationId: TerminateWorkspaces
      description: '<p>Terminates the specified WorkSpaces.</p> <p>Terminating a WorkSpace is a permanent action and cannot be undone. The user''s data is destroyed. If you need to archive any user data, contact Amazon Web Services before terminating the WorkSpace.</p> <p>You can terminate a WorkSpace that is in any state except <code>SUSPENDED</code>.</p> <p>This operation is asynchronous and returns before the WorkSpaces have been completely terminated.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateWorkspacesResult'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateWorkspacesRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.TerminateWorkspaces
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkspacesService.UpdateRulesOfIpGroup':
    post:
      operationId: UpdateRulesOfIpGroup
      description: Replaces the current rules of the specified IP access control group with the specified rules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRulesOfIpGroupResult'
        '480':
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValuesException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
        '484':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRulesOfIpGroupRequest'
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.UpdateRulesOfIpGroup
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateIpGroupsResult:
      type: object
      properties: {}
    AssociateIpGroupsRequest:
      type: object
      required:
        - DirectoryId
        - GroupIds
      title: AssociateIpGroupsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        GroupIds:
          $ref: '#/components/schemas/IpGroupIdList'
          description: The identifiers of one or more IP access control groups.
    InvalidParameterValuesException: {}
    ResourceNotFoundException: {}
    ResourceLimitExceededException: {}
    InvalidResourceStateException: {}
    AccessDeniedException: {}
    OperationNotSupportedException: {}
    AuthorizeIpRulesResult:
      type: object
      properties: {}
    AuthorizeIpRulesRequest:
      type: object
      required:
        - GroupId
        - UserRules
      title: AuthorizeIpRulesRequest
      properties:
        GroupId:
          $ref: '#/components/schemas/IpGroupId'
          description: The identifier of the group.
        UserRules:
          $ref: '#/components/schemas/IpRuleList'
          description: The rules to add to the group.
    CopyWorkspaceImageResult:
      type: object
      properties:
        ImageId:
          $ref: '#/components/schemas/WorkspaceImageId'
          description: The identifier of the image.
    CopyWorkspaceImageRequest:
      type: object
      required:
        - Name
        - SourceImageId
        - SourceRegion
      title: CopyWorkspaceImageRequest
      properties:
        Name:
          $ref: '#/components/schemas/WorkspaceImageName'
          description: The name of the image.
        Description:
          $ref: '#/components/schemas/WorkspaceImageDescription'
          description: A description of the image.
        SourceImageId:
          $ref: '#/components/schemas/WorkspaceImageId'
          description: The identifier of the source image.
        SourceRegion:
          $ref: '#/components/schemas/Region'
          description: The identifier of the source Region.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags for the image.
    ResourceAlreadyExistsException: {}
    ResourceUnavailableException: {}
    CreateIpGroupResult:
      type: object
      properties:
        GroupId:
          $ref: '#/components/schemas/IpGroupId'
          description: The identifier of the group.
    CreateIpGroupRequest:
      type: object
      required:
        - GroupName
      title: CreateIpGroupRequest
      properties:
        GroupName:
          $ref: '#/components/schemas/IpGroupName'
          description: The name of the group.
        GroupDesc:
          $ref: '#/components/schemas/IpGroupDesc'
          description: The description of the group.
        UserRules:
          $ref: '#/components/schemas/IpRuleList'
          description: The rules to add to the group.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags. Each WorkSpaces resource can have a maximum of 50 tags.
    ResourceCreationFailedException: {}
    CreateTagsResult:
      type: object
      properties: {}
    CreateTagsRequest:
      type: object
      required:
        - ResourceId
        - Tags
      title: CreateTagsRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces, registered directories, images, custom bundles, and IP access control groups.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: 'The tags. Each WorkSpaces resource can have a maximum of 50 tags. If you want to add new tags to a set of existing tags, you must submit all of the existing tags along with the new ones.'
    CreateWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: '#/components/schemas/FailedCreateWorkspaceRequests'
          description: Information about the WorkSpaces that could not be created.
        PendingRequests:
          $ref: '#/components/schemas/WorkspaceList'
          description: '<p>Information about the WorkSpaces that were created.</p> <p>Because this operation is asynchronous, the identifier returned is not immediately available for use with other operations. For example, if you call <a>DescribeWorkspaces</a> before the WorkSpace is created, the information returned can be incomplete.</p>'
    CreateWorkspacesRequest:
      type: object
      required:
        - Workspaces
      title: CreateWorkspacesRequest
      properties:
        Workspaces:
          $ref: '#/components/schemas/WorkspaceRequestList'
          description: The WorkSpaces to create. You can specify up to 25 WorkSpaces.
    DeleteIpGroupResult:
      type: object
      properties: {}
    DeleteIpGroupRequest:
      type: object
      required:
        - GroupId
      title: DeleteIpGroupRequest
      properties:
        GroupId:
          $ref: '#/components/schemas/IpGroupId'
          description: The identifier of the IP access control group.
    ResourceAssociatedException: {}
    DeleteTagsResult:
      type: object
      properties: {}
    DeleteTagsRequest:
      type: object
      required:
        - ResourceId
        - TagKeys
      title: DeleteTagsRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces, registered directories, images, custom bundles, and IP access control groups.'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
    DeleteWorkspaceImageResult:
      type: object
      properties: {}
    DeleteWorkspaceImageRequest:
      type: object
      required:
        - ImageId
      title: DeleteWorkspaceImageRequest
      properties:
        ImageId:
          $ref: '#/components/schemas/WorkspaceImageId'
          description: The identifier of the image.
    DeregisterWorkspaceDirectoryResult:
      type: object
      properties: {}
    DeregisterWorkspaceDirectoryRequest:
      type: object
      required:
        - DirectoryId
      title: DeregisterWorkspaceDirectoryRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'The identifier of the directory. If any WorkSpaces are registered to this directory, you must remove them before you deregister the directory, or you will receive an OperationNotSupportedException error.'
    DescribeAccountResult:
      type: object
      properties:
        DedicatedTenancySupport:
          $ref: '#/components/schemas/DedicatedTenancySupportResultEnum'
          description: The status of BYOL (whether BYOL is enabled or disabled).
        DedicatedTenancyManagementCidrRange:
          $ref: '#/components/schemas/DedicatedTenancyManagementCidrRange'
          description: '<p>The IP address range, specified as an IPv4 CIDR block, used for the management network interface.</p> <p>The management network interface is connected to a secure Amazon WorkSpaces management network. It is used for interactive streaming of the WorkSpace desktop to Amazon WorkSpaces clients, and to allow Amazon WorkSpaces to manage the WorkSpace.</p>'
    DescribeAccountRequest:
      type: object
      title: DescribeAccountRequest
      properties: {}
    DescribeAccountModificationsResult:
      type: object
      properties:
        AccountModifications:
          $ref: '#/components/schemas/AccountModificationList'
          description: The list of modifications to the configuration of BYOL.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if no more results are available.'
    DescribeAccountModificationsRequest:
      type: object
      title: DescribeAccountModificationsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results.'
    DescribeClientPropertiesResult:
      type: object
      properties:
        ClientPropertiesList:
          $ref: '#/components/schemas/ClientPropertiesList'
          description: Information about the specified Amazon WorkSpaces clients.
    DescribeClientPropertiesRequest:
      type: object
      required:
        - ResourceIds
      title: DescribeClientPropertiesRequest
      properties:
        ResourceIds:
          $ref: '#/components/schemas/ResourceIdList'
          description: 'The resource identifier, in the form of directory IDs.'
    DescribeIpGroupsResult:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/WorkspacesIpGroupsList'
          description: Information about the IP access control groups.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if no more results are available.'
    DescribeIpGroupsRequest:
      type: object
      title: DescribeIpGroupsRequest
      properties:
        GroupIds:
          $ref: '#/components/schemas/IpGroupIdList'
          description: The identifiers of one or more IP access control groups.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of items to return.
    DescribeTagsResult:
      type: object
      properties:
        TagList:
          $ref: '#/components/schemas/TagList'
          description: The tags.
    DescribeTagsRequest:
      type: object
      required:
        - ResourceId
      title: DescribeTagsRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces, registered directories, images, custom bundles, and IP access control groups.'
    DescribeWorkspaceBundlesResult:
      type: object
      properties:
        Bundles:
          $ref: '#/components/schemas/BundleList'
          description: Information about the bundles.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if there are no more results available. This token is valid for one day and must be used within that time frame.'
    DescribeWorkspaceBundlesRequest:
      type: object
      title: DescribeWorkspaceBundlesRequest
      properties:
        BundleIds:
          $ref: '#/components/schemas/BundleIdList'
          description: The identifiers of the bundles. You cannot combine this parameter with any other filter.
        Owner:
          $ref: '#/components/schemas/BundleOwner'
          description: <p>The owner of the bundles. You cannot combine this parameter with any other filter.</p> <p>Specify <code>AMAZON</code> to describe the bundles provided by AWS or null to describe the bundles that belong to your account.</p>
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: The token for the next set of results. (You received this token from a previous call.)
    DescribeWorkspaceDirectoriesResult:
      type: object
      properties:
        Directories:
          $ref: '#/components/schemas/DirectoryList'
          description: Information about the directories.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if no more results are available.'
    DescribeWorkspaceDirectoriesRequest:
      type: object
      title: DescribeWorkspaceDirectoriesRequest
      properties:
        DirectoryIds:
          $ref: '#/components/schemas/DirectoryIdList'
          description: 'The identifiers of the directories. If the value is null, all directories are retrieved.'
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of directories to return.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results.'
    DescribeWorkspaceImagesResult:
      type: object
      properties:
        Images:
          $ref: '#/components/schemas/WorkspaceImageList'
          description: Information about the images.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if no more results are available.'
    DescribeWorkspaceImagesRequest:
      type: object
      title: DescribeWorkspaceImagesRequest
      properties:
        ImageIds:
          $ref: '#/components/schemas/WorkspaceImageIdList'
          description: The identifier of the image.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results.'
        MaxResults:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of items to return.
    DescribeWorkspaceSnapshotsResult:
      type: object
      properties:
        RebuildSnapshots:
          $ref: '#/components/schemas/SnapshotList'
          description: Information about the snapshots that can be used to rebuild a WorkSpace. These snapshots include the user volume.
        RestoreSnapshots:
          $ref: '#/components/schemas/SnapshotList'
          description: Information about the snapshots that can be used to restore a WorkSpace. These snapshots include both the root volume and the user volume.
    DescribeWorkspaceSnapshotsRequest:
      type: object
      required:
        - WorkspaceId
      title: DescribeWorkspaceSnapshotsRequest
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
    DescribeWorkspacesResult:
      type: object
      properties:
        Workspaces:
          $ref: '#/components/schemas/WorkspaceList'
          description: '<p>Information about the WorkSpaces.</p> <p>Because <a>CreateWorkspaces</a> is an asynchronous operation, some of the returned information could be incomplete.</p>'
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if no more results are available.'
    DescribeWorkspacesRequest:
      type: object
      title: DescribeWorkspacesRequest
      properties:
        WorkspaceIds:
          $ref: '#/components/schemas/WorkspaceIdList'
          description: '<p>The identifiers of the WorkSpaces. You cannot combine this parameter with any other filter.</p> <p>Because the <a>CreateWorkspaces</a> operation is asynchronous, the identifier it returns is not immediately available. If you immediately call <a>DescribeWorkspaces</a> with this identifier, no information is returned.</p>'
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'The identifier of the directory. In addition, you can optionally specify a specific directory user (see <code>UserName</code>). You cannot combine this parameter with any other filter.'
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The name of the directory user. You must specify this parameter with <code>DirectoryId</code>.
        BundleId:
          $ref: '#/components/schemas/BundleId'
          description: The identifier of the bundle. All WorkSpaces that are created from this bundle are retrieved. You cannot combine this parameter with any other filter.
        Limit:
          $ref: '#/components/schemas/Limit'
          description: The maximum number of items to return.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results.'
    DescribeWorkspacesConnectionStatusResult:
      type: object
      properties:
        WorkspacesConnectionStatus:
          $ref: '#/components/schemas/WorkspaceConnectionStatusList'
          description: Information about the connection status of the WorkSpace.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if no more results are available.'
    DescribeWorkspacesConnectionStatusRequest:
      type: object
      title: DescribeWorkspacesConnectionStatusRequest
      properties:
        WorkspaceIds:
          $ref: '#/components/schemas/WorkspaceIdList'
          description: The identifiers of the WorkSpaces. You can specify up to 25 WorkSpaces.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results.'
    DisassociateIpGroupsResult:
      type: object
      properties: {}
    DisassociateIpGroupsRequest:
      type: object
      required:
        - DirectoryId
        - GroupIds
      title: DisassociateIpGroupsRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        GroupIds:
          $ref: '#/components/schemas/IpGroupIdList'
          description: The identifiers of one or more IP access control groups.
    ImportWorkspaceImageResult:
      type: object
      properties:
        ImageId:
          $ref: '#/components/schemas/WorkspaceImageId'
          description: The identifier of the WorkSpace image.
    ImportWorkspaceImageRequest:
      type: object
      required:
        - Ec2ImageId
        - IngestionProcess
        - ImageName
        - ImageDescription
      title: ImportWorkspaceImageRequest
      properties:
        Ec2ImageId:
          $ref: '#/components/schemas/Ec2ImageId'
          description: The identifier of the EC2 image.
        IngestionProcess:
          $ref: '#/components/schemas/WorkspaceImageIngestionProcess'
          description: The ingestion process to be used when importing the image.
        ImageName:
          $ref: '#/components/schemas/WorkspaceImageName'
          description: The name of the WorkSpace image.
        ImageDescription:
          $ref: '#/components/schemas/WorkspaceImageDescription'
          description: The description of the WorkSpace image.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags. Each WorkSpaces resource can have a maximum of 50 tags.
    ListAvailableManagementCidrRangesResult:
      type: object
      properties:
        ManagementCidrRanges:
          $ref: '#/components/schemas/DedicatedTenancyCidrRangeList'
          description: 'The list of available IP address ranges, specified as IPv4 CIDR blocks.'
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'The token to use to retrieve the next set of results, or null if no more results are available.'
    ListAvailableManagementCidrRangesRequest:
      type: object
      required:
        - ManagementCidrRangeConstraint
      title: ListAvailableManagementCidrRangesRequest
      properties:
        ManagementCidrRangeConstraint:
          $ref: '#/components/schemas/ManagementCidrRangeConstraint'
          description: 'The IP address range to search. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block).'
        MaxResults:
          $ref: '#/components/schemas/ManagementCidrRangeMaxResults'
          description: The maximum number of items to return.
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
          description: 'If you received a <code>NextToken</code> from a previous call that was paginated, provide this token to receive the next set of results.'
    MigrateWorkspaceResult:
      type: object
      properties:
        SourceWorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The original identifier of the WorkSpace that is being migrated.
        TargetWorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: 'The new identifier of the WorkSpace that is being migrated. If the migration does not succeed, the target WorkSpace ID will not be used, and the WorkSpace will still have the original WorkSpace ID.'
    MigrateWorkspaceRequest:
      type: object
      required:
        - SourceWorkspaceId
        - BundleId
      title: MigrateWorkspaceRequest
      properties:
        SourceWorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace to migrate from.
        BundleId:
          $ref: '#/components/schemas/BundleId'
          description: The identifier of the target bundle type to migrate the WorkSpace to.
    OperationInProgressException: {}
    ModifyAccountResult:
      type: object
      properties: {}
    ModifyAccountRequest:
      type: object
      title: ModifyAccountRequest
      properties:
        DedicatedTenancySupport:
          $ref: '#/components/schemas/DedicatedTenancySupportEnum'
          description: The status of BYOL.
        DedicatedTenancyManagementCidrRange:
          $ref: '#/components/schemas/DedicatedTenancyManagementCidrRange'
          description: 'The IP address range, specified as an IPv4 CIDR block, for the management network interface. Specify an IP address range that is compatible with your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size must be /16 (for example, 203.0.113.25/16). It must also be specified as available by the <code>ListAvailableManagementCidrRanges</code> operation.'
    ModifyClientPropertiesResult:
      type: object
      properties: {}
    ModifyClientPropertiesRequest:
      type: object
      required:
        - ResourceId
        - ClientProperties
      title: ModifyClientPropertiesRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The resource identifiers, in the form of directory IDs.'
        ClientProperties:
          $ref: '#/components/schemas/ClientProperties'
          description: Information about the Amazon WorkSpaces client.
    ModifySelfservicePermissionsResult:
      type: object
      properties: {}
    ModifySelfservicePermissionsRequest:
      type: object
      required:
        - ResourceId
        - SelfservicePermissions
      title: ModifySelfservicePermissionsRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        SelfservicePermissions:
          $ref: '#/components/schemas/SelfservicePermissions'
          description: The permissions to enable or disable self-service capabilities.
    ModifyWorkspaceAccessPropertiesResult:
      type: object
      properties: {}
    ModifyWorkspaceAccessPropertiesRequest:
      type: object
      required:
        - ResourceId
        - WorkspaceAccessProperties
      title: ModifyWorkspaceAccessPropertiesRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        WorkspaceAccessProperties:
          $ref: '#/components/schemas/WorkspaceAccessProperties'
          description: The device types and operating systems to enable or disable for access.
    ModifyWorkspaceCreationPropertiesResult:
      type: object
      properties: {}
    ModifyWorkspaceCreationPropertiesRequest:
      type: object
      required:
        - ResourceId
        - WorkspaceCreationProperties
      title: ModifyWorkspaceCreationPropertiesRequest
      properties:
        ResourceId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the directory.
        WorkspaceCreationProperties:
          $ref: '#/components/schemas/WorkspaceCreationProperties'
          description: The default properties for creating WorkSpaces.
    ModifyWorkspacePropertiesResult:
      type: object
      properties: {}
    ModifyWorkspacePropertiesRequest:
      type: object
      required:
        - WorkspaceId
        - WorkspaceProperties
      title: ModifyWorkspacePropertiesRequest
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
        WorkspaceProperties:
          $ref: '#/components/schemas/WorkspaceProperties'
          description: The properties of the WorkSpace.
    UnsupportedWorkspaceConfigurationException: {}
    ModifyWorkspaceStateResult:
      type: object
      properties: {}
    ModifyWorkspaceStateRequest:
      type: object
      required:
        - WorkspaceId
        - WorkspaceState
      title: ModifyWorkspaceStateRequest
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
        WorkspaceState:
          $ref: '#/components/schemas/TargetWorkspaceState'
          description: The WorkSpace state.
    RebootWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: '#/components/schemas/FailedRebootWorkspaceRequests'
          description: Information about the WorkSpaces that could not be rebooted.
    RebootWorkspacesRequest:
      type: object
      required:
        - RebootWorkspaceRequests
      title: RebootWorkspacesRequest
      properties:
        RebootWorkspaceRequests:
          $ref: '#/components/schemas/RebootWorkspaceRequests'
          description: The WorkSpaces to reboot. You can specify up to 25 WorkSpaces.
    RebuildWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: '#/components/schemas/FailedRebuildWorkspaceRequests'
          description: Information about the WorkSpace that could not be rebuilt.
    RebuildWorkspacesRequest:
      type: object
      required:
        - RebuildWorkspaceRequests
      title: RebuildWorkspacesRequest
      properties:
        RebuildWorkspaceRequests:
          $ref: '#/components/schemas/RebuildWorkspaceRequests'
          description: The WorkSpace to rebuild. You can specify a single WorkSpace.
    RegisterWorkspaceDirectoryResult:
      type: object
      properties: {}
    RegisterWorkspaceDirectoryRequest:
      type: object
      required:
        - DirectoryId
        - EnableWorkDocs
      title: RegisterWorkspaceDirectoryRequest
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: 'The identifier of the directory. You cannot register a directory if it does not have a status of Active. If the directory does not have a status of Active, you will receive an InvalidResourceStateException error. If you have already registered the maximum number of directories that you can register with Amazon WorkSpaces, you will receive a ResourceLimitExceededException error. Deregister directories that you are not using for WorkSpaces, and try again.'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: 'The identifiers of the subnets for your virtual private cloud (VPC). Make sure that the subnets are in supported Availability Zones. The subnets must also be in separate Availability Zones. If these conditions are not met, you will receive an OperationNotSupportedException error.'
        EnableWorkDocs:
          $ref: '#/components/schemas/BooleanObject'
          description: 'Indicates whether Amazon WorkDocs is enabled or disabled. If you have enabled this parameter and WorkDocs is not available in the Region, you will receive an OperationNotSupportedException error. Set <code>EnableWorkDocs</code> to disabled, and try again.'
        EnableSelfService:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether self-service capabilities are enabled or disabled.
        Tenancy:
          $ref: '#/components/schemas/Tenancy'
          description: 'Indicates whether your WorkSpace directory is dedicated or shared. To use Bring Your Own License (BYOL) images, this value must be set to <code>DEDICATED</code> and your AWS account must be enabled for BYOL. If your account has not been enabled for BYOL, you will receive an InvalidParameterValuesException error. For more information about BYOL images, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">Bring Your Own Windows Desktop Images</a>.'
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags associated with the directory.
    WorkspacesDefaultRoleNotFoundException: {}
    UnsupportedNetworkConfigurationException: {}
    RestoreWorkspaceResult:
      type: object
      properties: {}
    RestoreWorkspaceRequest:
      type: object
      required:
        - WorkspaceId
      title: RestoreWorkspaceRequest
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
    RevokeIpRulesResult:
      type: object
      properties: {}
    RevokeIpRulesRequest:
      type: object
      required:
        - GroupId
        - UserRules
      title: RevokeIpRulesRequest
      properties:
        GroupId:
          $ref: '#/components/schemas/IpGroupId'
          description: The identifier of the group.
        UserRules:
          $ref: '#/components/schemas/IpRevokedRuleList'
          description: The rules to remove from the group.
    StartWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: '#/components/schemas/FailedStartWorkspaceRequests'
          description: Information about the WorkSpaces that could not be started.
    StartWorkspacesRequest:
      type: object
      required:
        - StartWorkspaceRequests
      title: StartWorkspacesRequest
      properties:
        StartWorkspaceRequests:
          $ref: '#/components/schemas/StartWorkspaceRequests'
          description: The WorkSpaces to start. You can specify up to 25 WorkSpaces.
    StopWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: '#/components/schemas/FailedStopWorkspaceRequests'
          description: Information about the WorkSpaces that could not be stopped.
    StopWorkspacesRequest:
      type: object
      required:
        - StopWorkspaceRequests
      title: StopWorkspacesRequest
      properties:
        StopWorkspaceRequests:
          $ref: '#/components/schemas/StopWorkspaceRequests'
          description: The WorkSpaces to stop. You can specify up to 25 WorkSpaces.
    TerminateWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: '#/components/schemas/FailedTerminateWorkspaceRequests'
          description: Information about the WorkSpaces that could not be terminated.
    TerminateWorkspacesRequest:
      type: object
      required:
        - TerminateWorkspaceRequests
      title: TerminateWorkspacesRequest
      properties:
        TerminateWorkspaceRequests:
          $ref: '#/components/schemas/TerminateWorkspaceRequests'
          description: The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.
    UpdateRulesOfIpGroupResult:
      type: object
      properties: {}
    UpdateRulesOfIpGroupRequest:
      type: object
      required:
        - GroupId
        - UserRules
      title: UpdateRulesOfIpGroupRequest
      properties:
        GroupId:
          $ref: '#/components/schemas/IpGroupId'
          description: The identifier of the group.
        UserRules:
          $ref: '#/components/schemas/IpRuleList'
          description: One or more rules.
    ARN:
      type: string
      pattern: '^arn:aws:[A-Za-z0-9][A-za-z0-9_/.-]{0,62}:[A-za-z0-9_/.-]{0,63}:[A-za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.-]{0,127}$'
    AccessPropertyValue:
      type: string
      enum:
        - ALLOW
        - DENY
    DedicatedTenancyModificationStateEnum:
      type: string
      enum:
        - PENDING
        - COMPLETED
        - FAILED
    DedicatedTenancySupportResultEnum:
      type: string
      enum:
        - ENABLED
        - DISABLED
    DedicatedTenancyManagementCidrRange:
      type: string
      pattern: '(^([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.0\.0)(\/(16$))$'
    Timestamp:
      type: string
      format: date-time
    WorkspaceErrorCode:
      type: string
    Description:
      type: string
    AccountModification:
      type: object
      properties:
        ModificationState:
          $ref: '#/components/schemas/DedicatedTenancyModificationStateEnum'
          description: The state of the modification to the configuration of BYOL.
        DedicatedTenancySupport:
          $ref: '#/components/schemas/DedicatedTenancySupportResultEnum'
          description: The status of BYOL (whether BYOL is being enabled or disabled).
        DedicatedTenancyManagementCidrRange:
          $ref: '#/components/schemas/DedicatedTenancyManagementCidrRange'
          description: 'The IP address range, specified as an IPv4 CIDR block, for the management network interface used for the account.'
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the modification of the BYOL configuration was started.
        ErrorCode:
          $ref: '#/components/schemas/WorkspaceErrorCode'
          description: The error code that is returned if the configuration of BYOL cannot be modified.
        ErrorMessage:
          $ref: '#/components/schemas/Description'
          description: The text of the error message that is returned if the configuration of BYOL cannot be modified.
      description: 'Describes a modification to the configuration of Bring Your Own License (BYOL) for the specified account. '
    AccountModificationList:
      type: array
      items:
        $ref: '#/components/schemas/AccountModification'
    Alias:
      type: string
    DirectoryId:
      type: string
      pattern: '^d-[0-9a-f]{8,63}$'
      minLength: 10
      maxLength: 65
    IpGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/IpGroupId'
    IpGroupId:
      type: string
      pattern: 'wsipg-[0-9a-z]{8,63}$'
    IpRuleList:
      type: array
      items:
        $ref: '#/components/schemas/IpRuleItem'
    BooleanObject:
      type: boolean
    BundleId:
      type: string
      pattern: '^wsb-[0-9a-z]{8,63}$'
    BundleIdList:
      type: array
      items:
        $ref: '#/components/schemas/BundleId'
      minItems: 1
      maxItems: 25
    WorkspaceBundle:
      type: object
      properties:
        BundleId:
          $ref: '#/components/schemas/BundleId'
          description: The bundle identifier.
        Name:
          $ref: '#/components/schemas/NonEmptyString'
          description: The name of the bundle.
        Owner:
          $ref: '#/components/schemas/BundleOwner'
          description: 'The owner of the bundle. This is the account identifier of the owner, or <code>AMAZON</code> if the bundle is provided by AWS.'
        Description:
          $ref: '#/components/schemas/Description'
          description: A description.
        ImageId:
          $ref: '#/components/schemas/WorkspaceImageId'
          description: The image identifier of the bundle.
        RootStorage:
          $ref: '#/components/schemas/RootStorage'
          description: The size of the root volume.
        UserStorage:
          $ref: '#/components/schemas/UserStorage'
          description: The size of the user storage.
        ComputeType:
          $ref: '#/components/schemas/ComputeType'
          description: 'The compute type. For more information, see <a href="http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles">Amazon WorkSpaces Bundles</a>.'
        LastUpdatedTime:
          $ref: '#/components/schemas/Timestamp'
          description: The last time that the bundle was updated.
      description: Describes a WorkSpace bundle.
    BundleList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceBundle'
    BundleOwner:
      type: string
    ReconnectEnum:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ClientProperties:
      type: object
      properties:
        ReconnectEnabled:
          $ref: '#/components/schemas/ReconnectEnum'
          description: 'Specifies whether users can cache their credentials on the Amazon WorkSpaces client. When enabled, users can choose to reconnect to their WorkSpaces without re-entering their credentials. '
      description: Describes an Amazon WorkSpaces client.
    ClientPropertiesResult:
      type: object
      properties:
        ResourceId:
          $ref: '#/components/schemas/NonEmptyString'
          description: 'The resource identifier, in the form of a directory ID.'
        ClientProperties:
          $ref: '#/components/schemas/ClientProperties'
          description: Information about the Amazon WorkSpaces client.
      description: Information about the Amazon WorkSpaces client.
    ClientPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/ClientPropertiesResult'
    NonEmptyString:
      type: string
      minLength: 1
    Compute:
      type: string
      enum:
        - VALUE
        - STANDARD
        - PERFORMANCE
        - POWER
        - GRAPHICS
        - POWERPRO
        - GRAPHICSPRO
    ComputeType:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/Compute'
          description: The compute type.
      description: Describes the compute type.
    ComputerName:
      type: string
    ConnectionState:
      type: string
      enum:
        - CONNECTED
        - DISCONNECTED
        - UNKNOWN
    WorkspaceImageName:
      type: string
      pattern: '^[a-zA-Z0-9_./()\\-]+$'
      minLength: 1
      maxLength: 64
    WorkspaceImageDescription:
      type: string
      pattern: '^[a-zA-Z0-9_./() -]+$'
      minLength: 1
      maxLength: 256
    WorkspaceImageId:
      type: string
      pattern: 'wsi-[0-9a-z]{9,63}$'
    Region:
      type: string
      pattern: '^[-0-9a-z]{1,31}$'
      minLength: 1
      maxLength: 31
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    IpGroupName:
      type: string
    IpGroupDesc:
      type: string
    WorkspaceRequestList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceRequest'
      minItems: 1
      maxItems: 25
    FailedCreateWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedCreateWorkspaceRequest'
    WorkspaceList:
      type: array
      items:
        $ref: '#/components/schemas/Workspace'
    DedicatedTenancyCidrRangeList:
      type: array
      items:
        $ref: '#/components/schemas/DedicatedTenancyManagementCidrRange'
    DedicatedTenancySupportEnum:
      type: string
      enum:
        - ENABLED
    DefaultOu:
      type: string
    SecurityGroupId:
      type: string
      pattern: '^(sg-([0-9a-f]{8}|[0-9a-f]{17}))$'
      minLength: 11
      maxLength: 20
    DefaultWorkspaceCreationProperties:
      type: object
      properties:
        EnableWorkDocs:
          $ref: '#/components/schemas/BooleanObject'
          description: Specifies whether the directory is enabled for Amazon WorkDocs.
        EnableInternetAccess:
          $ref: '#/components/schemas/BooleanObject'
          description: 'Specifies whether to automatically assign an Elastic public IP address to WorkSpaces in this directory by default. If enabled, the Elastic public IP address allows outbound internet access from your WorkSpaces when you’re using an internet gateway in the Amazon VPC in which your WorkSpaces are located. If you''re using a Network Address Translation (NAT) gateway for outbound internet access from your VPC, or if your WorkSpaces are in public subnets and you manually assign them Elastic IP addresses, you should disable this setting. This setting applies to new WorkSpaces that you launch or to existing WorkSpaces that you rebuild. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/amazon-workspaces-vpc.html"> Configure a VPC for Amazon WorkSpaces</a>.'
        DefaultOu:
          $ref: '#/components/schemas/DefaultOu'
          description: The organizational unit (OU) in the directory for the WorkSpace machine accounts.
        CustomSecurityGroupId:
          $ref: '#/components/schemas/SecurityGroupId'
          description: The identifier of any security groups to apply to WorkSpaces when they are created.
        UserEnabledAsLocalAdministrator:
          $ref: '#/components/schemas/BooleanObject'
          description: Specifies whether WorkSpace users are local administrators on their WorkSpaces.
        EnableMaintenanceMode:
          $ref: '#/components/schemas/BooleanObject'
          description: 'Specifies whether maintenance mode is enabled for WorkSpaces. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html">WorkSpace Maintenance</a>.'
      description: 'Describes the default values that are used to create WorkSpaces. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html">Update Directory Details for Your WorkSpaces</a>.'
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    PaginationToken:
      type: string
      minLength: 1
      maxLength: 63
    ResourceIdList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
      minItems: 1
      maxItems: 25
    Limit:
      type: integer
      minimum: 1
      maximum: 25
    WorkspacesIpGroupsList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspacesIpGroup'
    DirectoryIdList:
      type: array
      items:
        $ref: '#/components/schemas/DirectoryId'
      minItems: 1
      maxItems: 25
    DirectoryList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceDirectory'
    WorkspaceImageIdList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceImageId'
      minItems: 1
      maxItems: 25
    WorkspaceImageList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceImage'
    WorkspaceId:
      type: string
      pattern: '^ws-[0-9a-z]{8,63}$'
    SnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/Snapshot'
    WorkspaceIdList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceId'
      minItems: 1
      maxItems: 25
    WorkspaceConnectionStatusList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceConnectionStatus'
    UserName:
      type: string
      minLength: 1
      maxLength: 63
    WorkspaceDirectory:
      type: object
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The directory identifier.
        Alias:
          $ref: '#/components/schemas/Alias'
          description: The directory alias.
        DirectoryName:
          $ref: '#/components/schemas/DirectoryName'
          description: The name of the directory.
        RegistrationCode:
          $ref: '#/components/schemas/RegistrationCode'
          description: The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
        SubnetIds:
          $ref: '#/components/schemas/SubnetIds'
          description: The identifiers of the subnets used with the directory.
        DnsIpAddresses:
          $ref: '#/components/schemas/DnsIpAddresses'
          description: The IP addresses of the DNS servers for the directory.
        CustomerUserName:
          $ref: '#/components/schemas/UserName'
          description: The user name for the service account.
        IamRoleId:
          $ref: '#/components/schemas/ARN'
          description: 'The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.'
        DirectoryType:
          $ref: '#/components/schemas/WorkspaceDirectoryType'
          description: The directory type.
        WorkspaceSecurityGroupId:
          $ref: '#/components/schemas/SecurityGroupId'
          description: The identifier of the security group that is assigned to new WorkSpaces.
        State:
          $ref: '#/components/schemas/WorkspaceDirectoryState'
          description: The state of the directory's registration with Amazon WorkSpaces.
        WorkspaceCreationProperties:
          $ref: '#/components/schemas/DefaultWorkspaceCreationProperties'
          description: The default creation properties for all WorkSpaces in the directory.
        ipGroupIds:
          $ref: '#/components/schemas/IpGroupIdList'
          description: The identifiers of the IP access control groups associated with the directory.
        WorkspaceAccessProperties:
          $ref: '#/components/schemas/WorkspaceAccessProperties'
          description: The devices and operating systems that users can use to access WorkSpaces.
        Tenancy:
          $ref: '#/components/schemas/Tenancy'
          description: 'Specifies whether the directory is dedicated or shared. To use Bring Your Own License (BYOL), this value must be set to <code>DEDICATED</code>. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">Bring Your Own Windows Desktop Images</a>.'
        SelfservicePermissions:
          $ref: '#/components/schemas/SelfservicePermissions'
          description: The default self-service permissions for WorkSpaces in the directory.
      description: Describes a directory that is used with Amazon WorkSpaces.
    DirectoryName:
      type: string
    IpAddress:
      type: string
    DnsIpAddresses:
      type: array
      items:
        $ref: '#/components/schemas/IpAddress'
    Ec2ImageId:
      type: string
      pattern: '^ami\-([a-f0-9]{8}|[a-f0-9]{17})$'
    ErrorType:
      type: string
    WorkspaceRequest:
      type: object
      required:
        - DirectoryId
        - UserName
        - BundleId
      properties:
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the AWS Directory Service directory for the WorkSpace. You can use <a>DescribeWorkspaceDirectories</a> to list the available directories.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The user name of the user for the WorkSpace. This user name must exist in the AWS Directory Service directory for the WorkSpace.
        BundleId:
          $ref: '#/components/schemas/BundleId'
          description: The identifier of the bundle for the WorkSpace. You can use <a>DescribeWorkspaceBundles</a> to list the available bundles.
        VolumeEncryptionKey:
          $ref: '#/components/schemas/VolumeEncryptionKey'
          description: The symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric CMKs.
        UserVolumeEncryptionEnabled:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether the data stored on the user volume is encrypted.
        RootVolumeEncryptionEnabled:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether the data stored on the root volume is encrypted.
        WorkspaceProperties:
          $ref: '#/components/schemas/WorkspaceProperties'
          description: The WorkSpace properties.
        Tags:
          $ref: '#/components/schemas/TagList'
          description: The tags for the WorkSpace.
      description: Describes the information used to create a WorkSpace.
    FailedCreateWorkspaceRequest:
      type: object
      properties:
        WorkspaceRequest:
          $ref: '#/components/schemas/WorkspaceRequest'
          description: Information about the WorkSpace.
        ErrorCode:
          $ref: '#/components/schemas/ErrorType'
          description: The error code that is returned if the WorkSpace cannot be created.
        ErrorMessage:
          $ref: '#/components/schemas/Description'
          description: The text of the error message that is returned if the WorkSpace cannot be created.
      description: Describes a WorkSpace that cannot be created.
    FailedWorkspaceChangeRequest:
      type: object
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
        ErrorCode:
          $ref: '#/components/schemas/ErrorType'
          description: The error code that is returned if the WorkSpace cannot be rebooted.
        ErrorMessage:
          $ref: '#/components/schemas/Description'
          description: The text of the error message that is returned if the WorkSpace cannot be rebooted.
      description: 'Describes a WorkSpace that could not be rebooted. (<a>RebootWorkspaces</a>), rebuilt (<a>RebuildWorkspaces</a>), restored (<a>RestoreWorkspace</a>), terminated (<a>TerminateWorkspaces</a>), started (<a>StartWorkspaces</a>), or stopped (<a>StopWorkspaces</a>).'
    FailedRebootWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedWorkspaceChangeRequest'
    FailedRebuildWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedWorkspaceChangeRequest'
    FailedStartWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedWorkspaceChangeRequest'
    FailedStopWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedWorkspaceChangeRequest'
    FailedTerminateWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedWorkspaceChangeRequest'
    WorkspaceImageIngestionProcess:
      type: string
      enum:
        - BYOL_REGULAR
        - BYOL_GRAPHICS
        - BYOL_GRAPHICSPRO
    IpRule:
      type: string
    IpRevokedRuleList:
      type: array
      items:
        $ref: '#/components/schemas/IpRule'
    IpRuleDesc:
      type: string
    IpRuleItem:
      type: object
      properties:
        ipRule:
          $ref: '#/components/schemas/IpRule'
          description: 'The IP address range, in CIDR notation.'
        ruleDesc:
          $ref: '#/components/schemas/IpRuleDesc'
          description: The description.
      description: Describes a rule for an IP access control group.
    ManagementCidrRangeConstraint:
      type: string
      pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$'
    ManagementCidrRangeMaxResults:
      type: integer
      minimum: 1
      maximum: 5
    ModificationResourceEnum:
      type: string
      enum:
        - ROOT_VOLUME
        - USER_VOLUME
        - COMPUTE_TYPE
    ModificationStateEnum:
      type: string
      enum:
        - UPDATE_INITIATED
        - UPDATE_IN_PROGRESS
    ModificationState:
      type: object
      properties:
        Resource:
          $ref: '#/components/schemas/ModificationResourceEnum'
          description: The resource.
        State:
          $ref: '#/components/schemas/ModificationStateEnum'
          description: The modification state.
      description: Describes a WorkSpace modification.
    ModificationStateList:
      type: array
      items:
        $ref: '#/components/schemas/ModificationState'
    SelfservicePermissions:
      type: object
      properties:
        RestartWorkspace:
          $ref: '#/components/schemas/ReconnectEnum'
          description: Specifies whether users can restart their WorkSpace.
        IncreaseVolumeSize:
          $ref: '#/components/schemas/ReconnectEnum'
          description: Specifies whether users can increase the volume size of the drives on their WorkSpace.
        ChangeComputeType:
          $ref: '#/components/schemas/ReconnectEnum'
          description: Specifies whether users can change the compute type (bundle) for their WorkSpace.
        SwitchRunningMode:
          $ref: '#/components/schemas/ReconnectEnum'
          description: Specifies whether users can switch the running mode of their WorkSpace.
        RebuildWorkspace:
          $ref: '#/components/schemas/ReconnectEnum'
          description: Specifies whether users can rebuild the operating system of a WorkSpace to its original state.
      description: 'Describes the self-service permissions for a directory. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/enable-user-self-service-workspace-management.html">Enable Self-Service WorkSpace Management Capabilities for Your Users</a>.'
    WorkspaceAccessProperties:
      type: object
      properties:
        DeviceTypeWindows:
          $ref: '#/components/schemas/AccessPropertyValue'
          description: 'Indicates whether users can use Windows clients to access their WorkSpaces. To restrict WorkSpaces access to trusted devices (also known as managed devices) with valid certificates, specify a value of <code>TRUST</code>. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/trusted-devices.html">Restrict WorkSpaces Access to Trusted Devices</a>. '
        DeviceTypeOsx:
          $ref: '#/components/schemas/AccessPropertyValue'
          description: 'Indicates whether users can use macOS clients to access their WorkSpaces. To restrict WorkSpaces access to trusted devices (also known as managed devices) with valid certificates, specify a value of <code>TRUST</code>. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/trusted-devices.html">Restrict WorkSpaces Access to Trusted Devices</a>. '
        DeviceTypeWeb:
          $ref: '#/components/schemas/AccessPropertyValue'
          description: Indicates whether users can access their WorkSpaces through a web browser.
        DeviceTypeIos:
          $ref: '#/components/schemas/AccessPropertyValue'
          description: Indicates whether users can use iOS devices to access their WorkSpaces.
        DeviceTypeAndroid:
          $ref: '#/components/schemas/AccessPropertyValue'
          description: Indicates whether users can use Android devices to access their WorkSpaces.
        DeviceTypeChromeOs:
          $ref: '#/components/schemas/AccessPropertyValue'
          description: Indicates whether users can use Chromebooks to access their WorkSpaces.
        DeviceTypeZeroClient:
          $ref: '#/components/schemas/AccessPropertyValue'
          description: Indicates whether users can use zero client devices to access their WorkSpaces.
      description: 'The device types and operating systems that can be used to access a WorkSpace. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-network-requirements.html">Amazon WorkSpaces Client Network Requirements</a>.'
    WorkspaceCreationProperties:
      type: object
      properties:
        EnableInternetAccess:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether internet access is enabled for your WorkSpaces.
        DefaultOu:
          $ref: '#/components/schemas/DefaultOu'
          description: The default organizational unit (OU) for your WorkSpace directories.
        CustomSecurityGroupId:
          $ref: '#/components/schemas/SecurityGroupId'
          description: The identifier of your custom security group.
        UserEnabledAsLocalAdministrator:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether users are local administrators of their WorkSpaces.
        EnableMaintenanceMode:
          $ref: '#/components/schemas/BooleanObject'
          description: 'Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html">WorkSpace Maintenance</a>. '
      description: 'Describes the default properties that are used for creating WorkSpaces. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html">Update Directory Details for Your WorkSpaces</a>. '
    WorkspaceProperties:
      type: object
      properties:
        RunningMode:
          $ref: '#/components/schemas/RunningMode'
          description: 'The running mode. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html">Manage the WorkSpace Running Mode</a>.'
        RunningModeAutoStopTimeoutInMinutes:
          $ref: '#/components/schemas/RunningModeAutoStopTimeoutInMinutes'
          description: The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
        RootVolumeSizeGib:
          $ref: '#/components/schemas/RootVolumeSizeGib'
          description: The size of the root volume.
        UserVolumeSizeGib:
          $ref: '#/components/schemas/UserVolumeSizeGib'
          description: The size of the user storage.
        ComputeTypeName:
          $ref: '#/components/schemas/Compute'
          description: 'The compute type. For more information, see <a href="http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles">Amazon WorkSpaces Bundles</a>.'
      description: Describes a WorkSpace.
    TargetWorkspaceState:
      type: string
      enum:
        - AVAILABLE
        - ADMIN_MAINTENANCE
    OperatingSystemType:
      type: string
      enum:
        - WINDOWS
        - LINUX
    OperatingSystem:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/OperatingSystemType'
          description: The operating system.
      description: The operating system that the image is running.
    RebootRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
      description: Describes the information used to reboot a WorkSpace.
    RebootWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/RebootRequest'
      minItems: 1
      maxItems: 25
    RebuildRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
      description: Describes the information used to rebuild a WorkSpace.
    RebuildWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/RebuildRequest'
      minItems: 1
      maxItems: 1
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 2
    Tenancy:
      type: string
      enum:
        - DEDICATED
        - SHARED
    RegistrationCode:
      type: string
      minLength: 1
      maxLength: 20
    RootStorage:
      type: object
      properties:
        Capacity:
          $ref: '#/components/schemas/NonEmptyString'
          description: The size of the root volume.
      description: Describes the root volume for a WorkSpace bundle.
    RootVolumeSizeGib:
      type: integer
    RunningMode:
      type: string
      enum:
        - AUTO_STOP
        - ALWAYS_ON
    RunningModeAutoStopTimeoutInMinutes:
      type: integer
    Snapshot:
      type: object
      properties:
        SnapshotTime:
          $ref: '#/components/schemas/Timestamp'
          description: The time when the snapshot was created.
      description: Describes a snapshot.
    StartRequest:
      type: object
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
      description: Information used to start a WorkSpace.
    StartWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/StartRequest'
      minItems: 1
      maxItems: 25
    StopRequest:
      type: object
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
      description: Describes the information used to stop a WorkSpace.
    StopWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/StopRequest'
      minItems: 1
      maxItems: 25
    SubnetId:
      type: string
      pattern: '^(subnet-([0-9a-f]{8}|[0-9a-f]{17}))$'
      minLength: 15
      maxLength: 24
    TagKey:
      type: string
      minLength: 1
      maxLength: 127
    TagValue:
      type: string
      maxLength: 255
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
          description: The key of the tag.
        Value:
          $ref: '#/components/schemas/TagValue'
          description: The value of the tag.
      description: Describes a tag.
    TerminateRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
      description: Describes the information used to terminate a WorkSpace.
    TerminateWorkspaceRequests:
      type: array
      items:
        $ref: '#/components/schemas/TerminateRequest'
      minItems: 1
      maxItems: 25
    UserStorage:
      type: object
      properties:
        Capacity:
          $ref: '#/components/schemas/NonEmptyString'
          description: The size of the user storage.
      description: Describes the user storage for a WorkSpace bundle.
    UserVolumeSizeGib:
      type: integer
    VolumeEncryptionKey:
      type: string
    WorkspaceState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - IMPAIRED
        - UNHEALTHY
        - REBOOTING
        - STARTING
        - REBUILDING
        - RESTORING
        - MAINTENANCE
        - ADMIN_MAINTENANCE
        - TERMINATING
        - TERMINATED
        - SUSPENDED
        - UPDATING
        - STOPPING
        - STOPPED
        - ERROR
    Workspace:
      type: object
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
        DirectoryId:
          $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the AWS Directory Service directory for the WorkSpace.
        UserName:
          $ref: '#/components/schemas/UserName'
          description: The user for the WorkSpace.
        IpAddress:
          $ref: '#/components/schemas/IpAddress'
          description: The IP address of the WorkSpace.
        State:
          $ref: '#/components/schemas/WorkspaceState'
          description: The operational state of the WorkSpace.
        BundleId:
          $ref: '#/components/schemas/BundleId'
          description: The identifier of the bundle used to create the WorkSpace.
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
          description: The identifier of the subnet for the WorkSpace.
        ErrorMessage:
          $ref: '#/components/schemas/Description'
          description: The text of the error message that is returned if the WorkSpace cannot be created.
        ErrorCode:
          $ref: '#/components/schemas/WorkspaceErrorCode'
          description: The error code that is returned if the WorkSpace cannot be created.
        ComputerName:
          $ref: '#/components/schemas/ComputerName'
          description: 'The name of the WorkSpace, as seen by the operating system.'
        VolumeEncryptionKey:
          $ref: '#/components/schemas/VolumeEncryptionKey'
          description: The symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric CMKs.
        UserVolumeEncryptionEnabled:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether the data stored on the user volume is encrypted.
        RootVolumeEncryptionEnabled:
          $ref: '#/components/schemas/BooleanObject'
          description: Indicates whether the data stored on the root volume is encrypted.
        WorkspaceProperties:
          $ref: '#/components/schemas/WorkspaceProperties'
          description: The properties of the WorkSpace.
        ModificationStates:
          $ref: '#/components/schemas/ModificationStateList'
          description: The modification states of the WorkSpace.
      description: Describes a WorkSpace.
    WorkspaceConnectionStatus:
      type: object
      properties:
        WorkspaceId:
          $ref: '#/components/schemas/WorkspaceId'
          description: The identifier of the WorkSpace.
        ConnectionState:
          $ref: '#/components/schemas/ConnectionState'
          description: The connection state of the WorkSpace. The connection state is unknown if the WorkSpace is stopped.
        ConnectionStateCheckTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the connection status check.
        LastKnownUserConnectionTimestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last known user connection.
      description: Describes the connection status of a WorkSpace.
    WorkspaceDirectoryType:
      type: string
      enum:
        - SIMPLE_AD
        - AD_CONNECTOR
    WorkspaceDirectoryState:
      type: string
      enum:
        - REGISTERING
        - REGISTERED
        - DEREGISTERING
        - DEREGISTERED
        - ERROR
    WorkspaceImageState:
      type: string
      enum:
        - AVAILABLE
        - PENDING
        - ERROR
    WorkspaceImageRequiredTenancy:
      type: string
      enum:
        - DEFAULT
        - DEDICATED
    WorkspaceImageErrorCode:
      type: string
    WorkspaceImage:
      type: object
      properties:
        ImageId:
          $ref: '#/components/schemas/WorkspaceImageId'
          description: The identifier of the image.
        Name:
          $ref: '#/components/schemas/WorkspaceImageName'
          description: The name of the image.
        Description:
          $ref: '#/components/schemas/WorkspaceImageDescription'
          description: The description of the image.
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
          description: 'The operating system that the image is running. '
        State:
          $ref: '#/components/schemas/WorkspaceImageState'
          description: The status of the image.
        RequiredTenancy:
          $ref: '#/components/schemas/WorkspaceImageRequiredTenancy'
          description: 'Specifies whether the image is running on dedicated hardware. When Bring Your Own License (BYOL) is enabled, this value is set to <code>DEDICATED</code>. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">Bring Your Own Windows Desktop Images</a>.'
        ErrorCode:
          $ref: '#/components/schemas/WorkspaceImageErrorCode'
          description: The error code that is returned for the image.
        ErrorMessage:
          $ref: '#/components/schemas/Description'
          description: The text of the error message that is returned for the image.
      description: Describes a WorkSpace image.
    WorkspacesIpGroup:
      type: object
      properties:
        groupId:
          $ref: '#/components/schemas/IpGroupId'
          description: The identifier of the group.
        groupName:
          $ref: '#/components/schemas/IpGroupName'
          description: The name of the group.
        groupDesc:
          $ref: '#/components/schemas/IpGroupDesc'
          description: The description of the group.
        userRules:
          $ref: '#/components/schemas/IpRuleList'
          description: The rules.
      description: Describes an IP access control group.
security:
  - hmac: []
