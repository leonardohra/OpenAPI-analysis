openapi: 3.0.0
info:
  version: '2016-04-12'
  x-release: v4
  title: AWS X-Ray
  description: AWS X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: xray
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/xray-2016-04-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/xray/'
servers:
  - url: 'http://xray.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS X-Ray multi-region endpoint
  - url: 'https://xray.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS X-Ray multi-region endpoint
  - url: 'http://xray.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS X-Ray endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://xray.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS X-Ray endpoint for China (Beijing) and China (Ningxia)
paths:
  /Traces:
    post:
      operationId: BatchGetTraces
      description: Retrieves a list of traces specified by ID. Each trace is a collection of segment documents that originates from a single request. Use <code>GetTraceSummaries</code> to get a list of trace IDs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetTracesResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TraceIds
              properties:
                TraceIds:
                  description: Specify the trace IDs of requests for which to retrieve segments.
                  type: array
                  items:
                    $ref: '#/components/schemas/TraceId'
                NextToken:
                  description: Pagination token.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateGroup:
    post:
      operationId: CreateGroup
      description: 'Creates a group resource with a name and a filter expression. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - GroupName
              properties:
                GroupName:
                  description: The case-sensitive name of the new group. Default is a reserved name and names must be unique.
                  type: string
                  minLength: 1
                  maxLength: 32
                FilterExpression:
                  description: The filter expression defining criteria by which to group traces.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /CreateSamplingRule:
    post:
      operationId: CreateSamplingRule
      description: 'Creates a rule to control sampling behavior for instrumented applications. Services retrieve rules with <a>GetSamplingRules</a>, and evaluate each rule in ascending order of <i>priority</i> for each request. If a rule matches, the service records a trace, borrowing it from the reservoir size. After 10 seconds, the service reports back to X-Ray with <a>GetSamplingTargets</a> to get updated versions of each in-use rule. The updated rule contains a trace quota that the service can use instead of borrowing from the reservoir.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSamplingRuleResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: RuleLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleLimitExceededException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SamplingRule
              properties:
                SamplingRule:
                  description: 'A sampling rule that services use to decide whether to instrument a request. Rule fields can match properties of the service, or properties of a request. The service can ignore rules that don''t match its properties.'
                  type: object
                  properties:
                    RuleName:
                      $ref: '#/components/schemas/RuleName'
                      description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
                    RuleARN:
                      $ref: '#/components/schemas/String'
                      description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
                    ResourceARN:
                      $ref: '#/components/schemas/ResourceARN'
                      description: Matches the ARN of the AWS resource on which the service runs.
                    Priority:
                      $ref: '#/components/schemas/Priority'
                      description: The priority of the sampling rule.
                    FixedRate:
                      $ref: '#/components/schemas/FixedRate'
                      description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
                    ReservoirSize:
                      $ref: '#/components/schemas/ReservoirSize'
                      description: 'A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.'
                    ServiceName:
                      $ref: '#/components/schemas/ServiceName'
                      description: Matches the <code>name</code> that the service uses to identify itself in segments.
                    ServiceType:
                      $ref: '#/components/schemas/ServiceType'
                      description: Matches the <code>origin</code> that the service uses to identify its type in segments.
                    Host:
                      $ref: '#/components/schemas/Host'
                      description: Matches the hostname from a request URL.
                    HTTPMethod:
                      $ref: '#/components/schemas/HTTPMethod'
                      description: Matches the HTTP method of a request.
                    URLPath:
                      $ref: '#/components/schemas/URLPath'
                      description: Matches the path from a request URL.
                    Version:
                      $ref: '#/components/schemas/Version'
                      description: The version of the sampling rule format (<code>1</code>).
                    Attributes:
                      $ref: '#/components/schemas/AttributeMap'
                      description: Matches attributes derived from the request.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteGroup:
    post:
      operationId: DeleteGroup
      description: Deletes a group resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  description: The case-sensitive name of the group.
                  type: string
                  minLength: 1
                  maxLength: 32
                GroupARN:
                  description: The ARN of the group that was generated on creation.
                  type: string
                  minLength: 1
                  maxLength: 400
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /DeleteSamplingRule:
    post:
      operationId: DeleteSamplingRule
      description: Deletes a sampling rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSamplingRuleResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RuleName:
                  description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
                  type: string
                RuleARN:
                  description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /EncryptionConfig:
    post:
      operationId: GetEncryptionConfig
      description: Retrieves the current encryption configuration for X-Ray data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEncryptionConfigResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetGroup:
    post:
      operationId: GetGroup
      description: Retrieves group resource details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  description: The case-sensitive name of the group.
                  type: string
                  minLength: 1
                  maxLength: 32
                GroupARN:
                  description: The ARN of the group that was generated on creation.
                  type: string
                  minLength: 1
                  maxLength: 400
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /Groups:
    post:
      operationId: GetGroups
      description: Retrieves all active group details.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: Pagination token.
                  type: string
                  minLength: 1
                  maxLength: 100
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /GetSamplingRules:
    post:
      operationId: GetSamplingRules
      description: Retrieves all sampling rules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSamplingRulesResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: Pagination token.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /SamplingStatisticSummaries:
    post:
      operationId: GetSamplingStatisticSummaries
      description: Retrieves information about recent sampling results for all sampling rules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSamplingStatisticSummariesResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: Pagination token.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /SamplingTargets:
    post:
      operationId: GetSamplingTargets
      description: 'Requests a sampling quota for rules that the service is using to sample requests. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSamplingTargetsResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SamplingStatisticsDocuments
              properties:
                SamplingStatisticsDocuments:
                  description: Information about rules that the service is using to sample requests.
                  type: array
                  items:
                    $ref: '#/components/schemas/SamplingStatisticsDocument'
                  maxItems: 25
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /ServiceGraph:
    post:
      operationId: GetServiceGraph
      description: 'Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result. Root services process incoming requests and make calls to downstream services. Root services are applications that use the <a href="https://docs.aws.amazon.com/xray/index.html">AWS X-Ray SDK</a>. Downstream services can be other applications, AWS resources, HTTP web APIs, or SQL databases.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceGraphResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StartTime
                - EndTime
              properties:
                StartTime:
                  description: The start of the time frame for which to generate a graph.
                  type: string
                  format: date-time
                EndTime:
                  description: The end of the timeframe for which to generate a graph.
                  type: string
                  format: date-time
                GroupName:
                  description: The name of a group to generate a graph based on.
                  type: string
                  minLength: 1
                  maxLength: 32
                GroupARN:
                  description: The ARN of a group to generate a graph based on.
                  type: string
                  minLength: 1
                  maxLength: 400
                NextToken:
                  description: Pagination token.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /TimeSeriesServiceStatistics:
    post:
      operationId: GetTimeSeriesServiceStatistics
      description: Get an aggregation of service statistics defined by a specific time range.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTimeSeriesServiceStatisticsResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StartTime
                - EndTime
              properties:
                StartTime:
                  description: The start of the time frame for which to aggregate statistics.
                  type: string
                  format: date-time
                EndTime:
                  description: The end of the time frame for which to aggregate statistics.
                  type: string
                  format: date-time
                GroupName:
                  description: The case-sensitive name of the group for which to pull statistics from.
                  type: string
                  minLength: 1
                  maxLength: 32
                GroupARN:
                  description: The ARN of the group for which to pull statistics from.
                  type: string
                  minLength: 1
                  maxLength: 400
                EntitySelectorExpression:
                  description: 'A filter expression defining entities that will be aggregated for statistics. Supports ID, service, and edge functions. If no selector expression is specified, edge statistics are returned. '
                  type: string
                  minLength: 1
                  maxLength: 500
                Period:
                  description: Aggregation period in seconds.
                  type: integer
                NextToken:
                  description: Pagination token.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /TraceGraph:
    post:
      operationId: GetTraceGraph
      description: Retrieves a service graph for one or more specific trace IDs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTraceGraphResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TraceIds
              properties:
                TraceIds:
                  description: Trace IDs of requests for which to generate a service graph.
                  type: array
                  items:
                    $ref: '#/components/schemas/TraceId'
                NextToken:
                  description: Pagination token.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /TraceSummaries:
    post:
      operationId: GetTraceSummaries
      description: '<p>Retrieves IDs and annotations for traces available for a specified time frame using an optional filter. To get the full traces, pass the trace IDs to <code>BatchGetTraces</code>.</p> <p>A filter expression can target traced requests that hit specific service nodes or edges, have errors, or come from a known user. For example, the following filter expression targets traces that pass through <code>api.example.com</code>:</p> <p> <code>service("api.example.com")</code> </p> <p>This filter expression finds traces that have an annotation named <code>account</code> with the value <code>12345</code>:</p> <p> <code>annotation.account = "12345"</code> </p> <p>For a full list of indexed fields and keywords that you can use in filter expressions, see <a href="https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html">Using Filter Expressions</a> in the <i>AWS X-Ray Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTraceSummariesResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StartTime
                - EndTime
              properties:
                StartTime:
                  description: The start of the time frame for which to retrieve traces.
                  type: string
                  format: date-time
                EndTime:
                  description: The end of the time frame for which to retrieve traces.
                  type: string
                  format: date-time
                TimeRangeType:
                  description: A parameter to indicate whether to query trace summaries by TraceId or Event time.
                  type: string
                  enum:
                    - TraceId
                    - Event
                Sampling:
                  description: Set to <code>true</code> to get summaries for only a subset of available traces.
                  type: boolean
                SamplingStrategy:
                  description: The name and value of a sampling rule to apply to a trace summary.
                  type: object
                  properties:
                    Name:
                      $ref: '#/components/schemas/SamplingStrategyName'
                      description: The name of a sampling rule.
                    Value:
                      $ref: '#/components/schemas/NullableDouble'
                      description: The value of a sampling rule.
                FilterExpression:
                  description: Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements.
                  type: string
                NextToken:
                  description: Specify the pagination token returned by a previous request to retrieve the next page of results.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /PutEncryptionConfig:
    post:
      operationId: PutEncryptionConfig
      description: Updates the encryption configuration for X-Ray data.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEncryptionConfigResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Type
              properties:
                KeyId:
                  description: '<p>An AWS KMS customer master key (CMK) in one of the following formats:</p> <ul> <li> <p> <b>Alias</b> - The name of the key. For example, <code>alias/MyKey</code>.</p> </li> <li> <p> <b>Key ID</b> - The KMS key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. AWS X-Ray does not support asymmetric CMKs.</p> </li> <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Use this format to specify a key in a different account.</p> </li> </ul> <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>'
                  type: string
                  minLength: 1
                  maxLength: 3000
                Type:
                  description: The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.
                  type: string
                  enum:
                    - NONE
                    - KMS
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /TelemetryRecords:
    post:
      operationId: PutTelemetryRecords
      description: Used by the AWS X-Ray daemon to upload telemetry.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTelemetryRecordsResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TelemetryRecords
              properties:
                TelemetryRecords:
                  description: <p/>
                  type: array
                  items:
                    $ref: '#/components/schemas/TelemetryRecord'
                EC2InstanceId:
                  description: <p/>
                  type: string
                  maxLength: 20
                Hostname:
                  description: <p/>
                  type: string
                  maxLength: 255
                ResourceARN:
                  description: <p/>
                  type: string
                  maxLength: 500
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /TraceSegments:
    post:
      operationId: PutTraceSegments
      description: '<p>Uploads segment documents to AWS X-Ray. The <a href="https://docs.aws.amazon.com/xray/index.html">X-Ray SDK</a> generates segment documents and sends them to the X-Ray daemon, which uploads them in batches. A segment document can be a completed segment, an in-progress segment, or an array of subsegments.</p> <p>Segments must include the following fields. For the full segment document schema, see <a href="https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html">AWS X-Ray Segment Documents</a> in the <i>AWS X-Ray Developer Guide</i>.</p> <p class="title"> <b>Required Segment Document Fields</b> </p> <ul> <li> <p> <code>name</code> - The name of the service that handled the request.</p> </li> <li> <p> <code>id</code> - A 64-bit identifier for the segment, unique among segments in the same trace, in 16 hexadecimal digits.</p> </li> <li> <p> <code>trace_id</code> - A unique identifier that connects all segments and subsegments originating from a single client request.</p> </li> <li> <p> <code>start_time</code> - Time the segment or subsegment was created, in floating point seconds in epoch time, accurate to milliseconds. For example, <code>1480615200.010</code> or <code>1.480615200010E9</code>.</p> </li> <li> <p> <code>end_time</code> - Time the segment or subsegment was closed. For example, <code>1480615200.090</code> or <code>1.480615200090E9</code>. Specify either an <code>end_time</code> or <code>in_progress</code>.</p> </li> <li> <p> <code>in_progress</code> - Set to <code>true</code> instead of specifying an <code>end_time</code> to record that a segment has been started, but is not complete. Send an in progress segment when your application receives a request that will take a long time to serve, to trace the fact that the request was received. When the response is sent, send the complete segment to overwrite the in-progress segment.</p> </li> </ul> <p>A <code>trace_id</code> consists of three numbers separated by hyphens. For example, 1-58406520-a006649127e371903a2de979. This includes:</p> <p class="title"> <b>Trace ID Format</b> </p> <ul> <li> <p>The version number, i.e. <code>1</code>.</p> </li> <li> <p>The time of the original request, in Unix epoch time, in 8 hexadecimal digits. For example, 10:00AM December 2nd, 2016 PST in epoch time is <code>1480615200</code> seconds, or <code>58406520</code> in hexadecimal.</p> </li> <li> <p>A 96-bit identifier for the trace, globally unique, in 24 hexadecimal digits.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTraceSegmentsResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TraceSegmentDocuments
              properties:
                TraceSegmentDocuments:
                  description: A string containing a JSON document defining one or more segments or subsegments.
                  type: array
                  items:
                    $ref: '#/components/schemas/TraceSegmentDocument'
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateGroup:
    post:
      operationId: UpdateGroup
      description: Updates a group resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  description: The case-sensitive name of the group.
                  type: string
                  minLength: 1
                  maxLength: 32
                GroupARN:
                  description: The ARN that was generated upon creation.
                  type: string
                  minLength: 1
                  maxLength: 400
                FilterExpression:
                  description: The updated filter expression defining criteria by which to group traces.
                  type: string
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /UpdateSamplingRule:
    post:
      operationId: UpdateSamplingRule
      description: Modifies a sampling rule's configuration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSamplingRuleResult'
        '480':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SamplingRuleUpdate
              properties:
                SamplingRuleUpdate:
                  description: A document specifying changes to a sampling rule's configuration.
                  type: object
                  properties:
                    RuleName:
                      $ref: '#/components/schemas/RuleName'
                      description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
                    RuleARN:
                      $ref: '#/components/schemas/String'
                      description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
                    ResourceARN:
                      $ref: '#/components/schemas/ResourceARN'
                      description: Matches the ARN of the AWS resource on which the service runs.
                    Priority:
                      $ref: '#/components/schemas/NullableInteger'
                      description: The priority of the sampling rule.
                    FixedRate:
                      $ref: '#/components/schemas/NullableDouble'
                      description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
                    ReservoirSize:
                      $ref: '#/components/schemas/NullableInteger'
                      description: 'A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.'
                    Host:
                      $ref: '#/components/schemas/Host'
                      description: Matches the hostname from a request URL.
                    ServiceName:
                      $ref: '#/components/schemas/ServiceName'
                      description: Matches the <code>name</code> that the service uses to identify itself in segments.
                    ServiceType:
                      $ref: '#/components/schemas/ServiceType'
                      description: Matches the <code>origin</code> that the service uses to identify its type in segments.
                    HTTPMethod:
                      $ref: '#/components/schemas/HTTPMethod'
                      description: Matches the HTTP method of a request.
                    URLPath:
                      $ref: '#/components/schemas/URLPath'
                      description: Matches the path from a request URL.
                    Attributes:
                      $ref: '#/components/schemas/AttributeMap'
                      description: Matches attributes derived from the request.
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchGetTracesResult:
      type: object
      properties:
        Traces:
          $ref: '#/components/schemas/TraceList'
          description: Full traces for the specified requests.
        UnprocessedTraceIds:
          $ref: '#/components/schemas/UnprocessedTraceIdList'
          description: Trace IDs of requests that haven't been processed.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    TraceId:
      type: string
      minLength: 1
      maxLength: 35
    InvalidRequestException: {}
    ThrottledException: {}
    CreateGroupResult:
      type: object
      properties:
        Group:
          $ref: '#/components/schemas/Group'
          description: 'The group that was created. Contains the name of the group that was created, the ARN of the group that was generated based on the group name, and the filter expression that was assigned to the group.'
    CreateSamplingRuleResult:
      type: object
      properties:
        SamplingRuleRecord:
          $ref: '#/components/schemas/SamplingRuleRecord'
          description: The saved rule definition and metadata.
    RuleName:
      type: string
      minLength: 1
      maxLength: 32
    String:
      type: string
    ResourceARN:
      type: string
      maxLength: 500
    Priority:
      type: integer
      minimum: 1
      maximum: 9999
    FixedRate:
      type: number
      format: double
      minimum: 0
      maximum: 1
    ReservoirSize:
      type: integer
      minimum: 0
    ServiceName:
      type: string
      maxLength: 64
    ServiceType:
      type: string
      maxLength: 64
    Host:
      type: string
      maxLength: 64
    HTTPMethod:
      type: string
      maxLength: 10
    URLPath:
      type: string
      maxLength: 128
    Version:
      type: integer
      minimum: 1
    AttributeMap:
      type: object
      maxProperties: 5
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    RuleLimitExceededException: {}
    DeleteGroupResult:
      type: object
      properties: {}
    DeleteSamplingRuleResult:
      type: object
      properties:
        SamplingRuleRecord:
          $ref: '#/components/schemas/SamplingRuleRecord'
          description: The deleted rule definition and metadata.
    GetEncryptionConfigResult:
      type: object
      properties:
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The encryption configuration document.
    GetGroupResult:
      type: object
      properties:
        Group:
          $ref: '#/components/schemas/Group'
          description: 'The group that was requested. Contains the name of the group, the ARN of the group, and the filter expression that assigned to the group.'
    GetGroupsResult:
      type: object
      properties:
        Groups:
          $ref: '#/components/schemas/GroupSummaryList'
          description: The collection of all active groups.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    GetSamplingRulesResult:
      type: object
      properties:
        SamplingRuleRecords:
          $ref: '#/components/schemas/SamplingRuleRecordList'
          description: Rule definitions and metadata.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    GetSamplingStatisticSummariesResult:
      type: object
      properties:
        SamplingStatisticSummaries:
          $ref: '#/components/schemas/SamplingStatisticSummaryList'
          description: Information about the number of requests instrumented for each sampling rule.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    GetSamplingTargetsResult:
      type: object
      properties:
        SamplingTargetDocuments:
          $ref: '#/components/schemas/SamplingTargetDocumentList'
          description: Updated rules that the service should use to sample requests.
        LastRuleModification:
          $ref: '#/components/schemas/Timestamp'
          description: 'The last time a user changed the sampling rule configuration. If the sampling rule configuration changed since the service last retrieved it, the service should call <a>GetSamplingRules</a> to get the latest version.'
        UnprocessedStatistics:
          $ref: '#/components/schemas/UnprocessedStatisticsList'
          description: Information about <a>SamplingStatisticsDocument</a> that X-Ray could not process.
    SamplingStatisticsDocument:
      type: object
      required:
        - RuleName
        - ClientID
        - Timestamp
        - RequestCount
        - SampledCount
      properties:
        RuleName:
          $ref: '#/components/schemas/RuleName'
          description: The name of the sampling rule.
        ClientID:
          $ref: '#/components/schemas/ClientID'
          description: A unique identifier for the service in hexadecimal.
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The current time.
        RequestCount:
          $ref: '#/components/schemas/RequestCount'
          description: The number of requests that matched the rule.
        SampledCount:
          $ref: '#/components/schemas/SampledCount'
          description: The number of requests recorded.
        BorrowCount:
          $ref: '#/components/schemas/BorrowCount'
          description: The number of requests recorded with borrowed reservoir quota.
      description: Request sampling results for a single rule from a service. Results are for the last 10 seconds unless the service has been assigned a longer reporting interval after a previous call to <a>GetSamplingTargets</a>.
    GetServiceGraphResult:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start of the time frame for which the graph was generated.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end of the time frame for which the graph was generated.
        Services:
          $ref: '#/components/schemas/ServiceList'
          description: The services that have processed a traced request during the specified time frame.
        ContainsOldGroupVersions:
          $ref: '#/components/schemas/Boolean'
          description: 'A flag indicating whether the group''s filter expression has been consistent, or if the returned service graph may show traces from an older version of the group''s filter expression.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    GetTimeSeriesServiceStatisticsResult:
      type: object
      properties:
        TimeSeriesServiceStatistics:
          $ref: '#/components/schemas/TimeSeriesServiceStatisticsList'
          description: The collection of statistics.
        ContainsOldGroupVersions:
          $ref: '#/components/schemas/Boolean'
          description: 'A flag indicating whether or not a group''s filter expression has been consistent, or if a returned aggregation may show statistics from an older version of the group''s filter expression.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    GetTraceGraphResult:
      type: object
      properties:
        Services:
          $ref: '#/components/schemas/ServiceList'
          description: The services that have processed one of the specified requests.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    GetTraceSummariesResult:
      type: object
      properties:
        TraceSummaries:
          $ref: '#/components/schemas/TraceSummaryList'
          description: Trace IDs and annotations for traces that were found in the specified time frame.
        ApproximateTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of this page of results.
        TracesProcessedCount:
          $ref: '#/components/schemas/NullableLong'
          description: 'The total number of traces processed, including traces that did not match the specified filter expression.'
        NextToken:
          $ref: '#/components/schemas/String'
          description: 'If the requested time frame contained more than one page of results, you can use this token to retrieve the next page. The first page contains the most most recent results, closest to the end of the time frame.'
    SamplingStrategyName:
      type: string
      enum:
        - PartialScan
        - FixedRate
    NullableDouble:
      type: number
      format: double
    PutEncryptionConfigResult:
      type: object
      properties:
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The new encryption configuration.
    PutTelemetryRecordsResult:
      type: object
      properties: {}
    TelemetryRecord:
      type: object
      required:
        - Timestamp
      properties:
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: <p/>
        SegmentsReceivedCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        SegmentsSentCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        SegmentsSpilloverCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        SegmentsRejectedCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        BackendConnectionErrors:
          $ref: '#/components/schemas/BackendConnectionErrors'
          description: <p/>
      description: <p/>
    PutTraceSegmentsResult:
      type: object
      properties:
        UnprocessedTraceSegments:
          $ref: '#/components/schemas/UnprocessedTraceSegmentList'
          description: Segments that failed processing.
    TraceSegmentDocument:
      type: string
    UpdateGroupResult:
      type: object
      properties:
        Group:
          $ref: '#/components/schemas/Group'
          description: 'The group that was updated. Contains the name of the group that was updated, the ARN of the group that was updated, and the updated filter expression assigned to the group.'
    UpdateSamplingRuleResult:
      type: object
      properties:
        SamplingRuleRecord:
          $ref: '#/components/schemas/SamplingRuleRecord'
          description: The updated rule definition and metadata.
    NullableInteger:
      type: integer
    AliasNames:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Alias:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The canonical name of the alias.
        Names:
          $ref: '#/components/schemas/AliasNames'
          description: 'A list of names for the alias, including the canonical name.'
        Type:
          $ref: '#/components/schemas/String'
          description: The type of the alias.
      description: An alias for an edge.
    AliasList:
      type: array
      items:
        $ref: '#/components/schemas/Alias'
    AnnotationKey:
      type: string
    NullableBoolean:
      type: boolean
    AnnotationValue:
      type: object
      properties:
        NumberValue:
          $ref: '#/components/schemas/NullableDouble'
          description: Value for a Number annotation.
        BooleanValue:
          $ref: '#/components/schemas/NullableBoolean'
          description: Value for a Boolean annotation.
        StringValue:
          $ref: '#/components/schemas/String'
          description: Value for a String annotation.
      description: 'Value of a segment annotation. Has one of three value types: Number, Boolean or String.'
    ValuesWithServiceIds:
      type: array
      items:
        $ref: '#/components/schemas/ValueWithServiceIds'
    Annotations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ValuesWithServiceIds'
    AttributeKey:
      type: string
      minLength: 1
      maxLength: 32
    AttributeValue:
      type: string
      minLength: 1
      maxLength: 32
    AvailabilityZoneDetail:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of a corresponding availability zone.
      description: A list of availability zones corresponding to the segments in a trace.
    BackendConnectionErrors:
      type: object
      properties:
        TimeoutCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        ConnectionRefusedCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        HTTPCode4XXCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        HTTPCode5XXCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        UnknownHostCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
        OtherCount:
          $ref: '#/components/schemas/NullableInteger'
          description: <p/>
      description: <p/>
    TraceIdList:
      type: array
      items:
        $ref: '#/components/schemas/TraceId'
    BatchGetTracesRequest:
      type: object
      required:
        - TraceIds
      title: BatchGetTracesRequest
      properties:
        TraceIds:
          $ref: '#/components/schemas/TraceIdList'
          description: Specify the trace IDs of requests for which to retrieve segments.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    TraceList:
      type: array
      items:
        $ref: '#/components/schemas/Trace'
    UnprocessedTraceIdList:
      type: array
      items:
        $ref: '#/components/schemas/TraceId'
    Boolean:
      type: boolean
    BorrowCount:
      type: integer
      minimum: 0
    ClientID:
      type: string
      minLength: 24
      maxLength: 24
    GroupName:
      type: string
      minLength: 1
      maxLength: 32
    FilterExpression:
      type: string
    CreateGroupRequest:
      type: object
      required:
        - GroupName
      title: CreateGroupRequest
      properties:
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: The case-sensitive name of the new group. Default is a reserved name and names must be unique.
        FilterExpression:
          $ref: '#/components/schemas/FilterExpression'
          description: The filter expression defining criteria by which to group traces.
    Group:
      type: object
      properties:
        GroupName:
          $ref: '#/components/schemas/String'
          description: The unique case-sensitive name of the group.
        GroupARN:
          $ref: '#/components/schemas/String'
          description: The ARN of the group generated based on the GroupName.
        FilterExpression:
          $ref: '#/components/schemas/String'
          description: The filter expression defining the parameters to include traces.
      description: Details and metadata for a group.
    SamplingRule:
      type: object
      required:
        - ResourceARN
        - Priority
        - FixedRate
        - ReservoirSize
        - ServiceName
        - ServiceType
        - Host
        - HTTPMethod
        - URLPath
        - Version
      properties:
        RuleName:
          $ref: '#/components/schemas/RuleName'
          description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
        RuleARN:
          $ref: '#/components/schemas/String'
          description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
        ResourceARN:
          $ref: '#/components/schemas/ResourceARN'
          description: Matches the ARN of the AWS resource on which the service runs.
        Priority:
          $ref: '#/components/schemas/Priority'
          description: The priority of the sampling rule.
        FixedRate:
          $ref: '#/components/schemas/FixedRate'
          description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
        ReservoirSize:
          $ref: '#/components/schemas/ReservoirSize'
          description: 'A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.'
        ServiceName:
          $ref: '#/components/schemas/ServiceName'
          description: Matches the <code>name</code> that the service uses to identify itself in segments.
        ServiceType:
          $ref: '#/components/schemas/ServiceType'
          description: Matches the <code>origin</code> that the service uses to identify its type in segments.
        Host:
          $ref: '#/components/schemas/Host'
          description: Matches the hostname from a request URL.
        HTTPMethod:
          $ref: '#/components/schemas/HTTPMethod'
          description: Matches the HTTP method of a request.
        URLPath:
          $ref: '#/components/schemas/URLPath'
          description: Matches the path from a request URL.
        Version:
          $ref: '#/components/schemas/Version'
          description: The version of the sampling rule format (<code>1</code>).
        Attributes:
          $ref: '#/components/schemas/AttributeMap'
          description: Matches attributes derived from the request.
      description: 'A sampling rule that services use to decide whether to instrument a request. Rule fields can match properties of the service, or properties of a request. The service can ignore rules that don''t match its properties.'
    CreateSamplingRuleRequest:
      type: object
      required:
        - SamplingRule
      title: CreateSamplingRuleRequest
      properties:
        SamplingRule:
          $ref: '#/components/schemas/SamplingRule'
          description: The rule definition.
    SamplingRuleRecord:
      type: object
      properties:
        SamplingRule:
          $ref: '#/components/schemas/SamplingRule'
          description: The sampling rule.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
          description: When the rule was created.
        ModifiedAt:
          $ref: '#/components/schemas/Timestamp'
          description: When the rule was last modified.
      description: A <a>SamplingRule</a> and its metadata.
    GroupARN:
      type: string
      minLength: 1
      maxLength: 400
    DeleteGroupRequest:
      type: object
      title: DeleteGroupRequest
      properties:
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: The case-sensitive name of the group.
        GroupARN:
          $ref: '#/components/schemas/GroupARN'
          description: The ARN of the group that was generated on creation.
    DeleteSamplingRuleRequest:
      type: object
      title: DeleteSamplingRuleRequest
      properties:
        RuleName:
          $ref: '#/components/schemas/String'
          description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
        RuleARN:
          $ref: '#/components/schemas/String'
          description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
    Double:
      type: number
      format: double
    EC2InstanceId:
      type: string
      maxLength: 20
    Timestamp:
      type: string
      format: date-time
    EdgeStatistics:
      type: object
      properties:
        OkCount:
          $ref: '#/components/schemas/NullableLong'
          description: The number of requests that completed with a 2xx Success status code.
        ErrorStatistics:
          $ref: '#/components/schemas/ErrorStatistics'
          description: Information about requests that failed with a 4xx Client Error status code.
        FaultStatistics:
          $ref: '#/components/schemas/FaultStatistics'
          description: Information about requests that failed with a 5xx Server Error status code.
        TotalCount:
          $ref: '#/components/schemas/NullableLong'
          description: The total number of completed requests.
        TotalResponseTime:
          $ref: '#/components/schemas/NullableDouble'
          description: The aggregate response time of completed requests.
      description: Response statistics for an edge.
    Histogram:
      type: array
      items:
        $ref: '#/components/schemas/HistogramEntry'
    Edge:
      type: object
      properties:
        ReferenceId:
          $ref: '#/components/schemas/NullableInteger'
          description: Identifier of the edge. Unique within a service map.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the first segment on the edge.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end time of the last segment on the edge.
        SummaryStatistics:
          $ref: '#/components/schemas/EdgeStatistics'
          description: Response statistics for segments on the edge.
        ResponseTimeHistogram:
          $ref: '#/components/schemas/Histogram'
          description: A histogram that maps the spread of client response times on an edge.
        Aliases:
          $ref: '#/components/schemas/AliasList'
          description: Aliases for the edge.
      description: Information about a connection between two services.
    EdgeList:
      type: array
      items:
        $ref: '#/components/schemas/Edge'
    NullableLong:
      type: integer
    ErrorStatistics:
      type: object
      properties:
        ThrottleCount:
          $ref: '#/components/schemas/NullableLong'
          description: The number of requests that failed with a 419 throttling status code.
        OtherCount:
          $ref: '#/components/schemas/NullableLong'
          description: The number of requests that failed with untracked 4xx Client Error status codes.
        TotalCount:
          $ref: '#/components/schemas/NullableLong'
          description: The total number of requests that failed with a 4xx Client Error status code.
      description: Information about requests that failed with a 4xx Client Error status code.
    FaultStatistics:
      type: object
      properties:
        OtherCount:
          $ref: '#/components/schemas/NullableLong'
          description: The number of requests that failed with untracked 5xx Server Error status codes.
        TotalCount:
          $ref: '#/components/schemas/NullableLong'
          description: The total number of requests that failed with a 5xx Server Error status code.
      description: Information about requests that failed with a 5xx Server Error status code.
    EncryptionStatus:
      type: string
      enum:
        - UPDATING
        - ACTIVE
    EncryptionType:
      type: string
      enum:
        - NONE
        - KMS
    EncryptionConfig:
      type: object
      properties:
        KeyId:
          $ref: '#/components/schemas/String'
          description: 'The ID of the customer master key (CMK) used for encryption, if applicable.'
        Status:
          $ref: '#/components/schemas/EncryptionStatus'
          description: 'The encryption status. While the status is <code>UPDATING</code>, X-Ray may encrypt data with a combination of the new and old settings.'
        Type:
          $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption. Set to <code>KMS</code> for encryption with CMKs. Set to <code>NONE</code> for default encryption.
      description: A configuration document that specifies encryption configuration settings.
    EncryptionKeyId:
      type: string
      minLength: 1
      maxLength: 3000
    EntitySelectorExpression:
      type: string
      minLength: 1
      maxLength: 500
    ErrorRootCauseServices:
      type: array
      items:
        $ref: '#/components/schemas/ErrorRootCauseService'
    ErrorRootCause:
      type: object
      properties:
        Services:
          $ref: '#/components/schemas/ErrorRootCauseServices'
          description: 'A list of services corresponding to an error. A service identifies a segment and it contains a name, account ID, type, and inferred flag.'
      description: The root cause of a trace summary error.
    RootCauseExceptions:
      type: array
      items:
        $ref: '#/components/schemas/RootCauseException'
    ErrorRootCauseEntity:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the entity.
        Exceptions:
          $ref: '#/components/schemas/RootCauseExceptions'
          description: The types and messages of the exceptions.
        Remote:
          $ref: '#/components/schemas/NullableBoolean'
          description: A flag that denotes a remote subsegment.
      description: A collection of segments and corresponding subsegments associated to a trace summary error.
    ErrorRootCauseEntityPath:
      type: array
      items:
        $ref: '#/components/schemas/ErrorRootCauseEntity'
    ServiceNames:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ErrorRootCauseService:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The service name.
        Names:
          $ref: '#/components/schemas/ServiceNames'
          description: A collection of associated service names.
        Type:
          $ref: '#/components/schemas/String'
          description: The type associated to the service.
        AccountId:
          $ref: '#/components/schemas/String'
          description: The account ID associated to the service.
        EntityPath:
          $ref: '#/components/schemas/ErrorRootCauseEntityPath'
          description: 'The path of root cause entities found on the service. '
        Inferred:
          $ref: '#/components/schemas/NullableBoolean'
          description: A Boolean value indicating if the service is inferred from the trace.
      description: A collection of fields identifying the services in a trace summary error.
    ErrorRootCauses:
      type: array
      items:
        $ref: '#/components/schemas/ErrorRootCause'
    FaultRootCauseServices:
      type: array
      items:
        $ref: '#/components/schemas/FaultRootCauseService'
    FaultRootCause:
      type: object
      properties:
        Services:
          $ref: '#/components/schemas/FaultRootCauseServices'
          description: 'A list of corresponding services. A service identifies a segment and it contains a name, account ID, type, and inferred flag.'
      description: The root cause information for a trace summary fault.
    FaultRootCauseEntity:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the entity.
        Exceptions:
          $ref: '#/components/schemas/RootCauseExceptions'
          description: The types and messages of the exceptions.
        Remote:
          $ref: '#/components/schemas/NullableBoolean'
          description: A flag that denotes a remote subsegment.
      description: A collection of segments and corresponding subsegments associated to a trace summary fault error.
    FaultRootCauseEntityPath:
      type: array
      items:
        $ref: '#/components/schemas/FaultRootCauseEntity'
    FaultRootCauseService:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The service name.
        Names:
          $ref: '#/components/schemas/ServiceNames'
          description: A collection of associated service names.
        Type:
          $ref: '#/components/schemas/String'
          description: The type associated to the service.
        AccountId:
          $ref: '#/components/schemas/String'
          description: The account ID associated to the service.
        EntityPath:
          $ref: '#/components/schemas/FaultRootCauseEntityPath'
          description: 'The path of root cause entities found on the service. '
        Inferred:
          $ref: '#/components/schemas/NullableBoolean'
          description: A Boolean value indicating if the service is inferred from the trace.
      description: A collection of fields identifying the services in a trace summary fault.
    FaultRootCauses:
      type: array
      items:
        $ref: '#/components/schemas/FaultRootCause'
    GetEncryptionConfigRequest:
      type: object
      title: GetEncryptionConfigRequest
      properties: {}
    GetGroupRequest:
      type: object
      title: GetGroupRequest
      properties:
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: The case-sensitive name of the group.
        GroupARN:
          $ref: '#/components/schemas/GroupARN'
          description: The ARN of the group that was generated on creation.
    GetGroupsNextToken:
      type: string
      minLength: 1
      maxLength: 100
    GetGroupsRequest:
      type: object
      title: GetGroupsRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/GetGroupsNextToken'
          description: Pagination token.
    GroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/GroupSummary'
    GetSamplingRulesRequest:
      type: object
      title: GetSamplingRulesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    SamplingRuleRecordList:
      type: array
      items:
        $ref: '#/components/schemas/SamplingRuleRecord'
    GetSamplingStatisticSummariesRequest:
      type: object
      title: GetSamplingStatisticSummariesRequest
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    SamplingStatisticSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SamplingStatisticSummary'
    SamplingStatisticsDocumentList:
      type: array
      items:
        $ref: '#/components/schemas/SamplingStatisticsDocument'
      maxItems: 25
    GetSamplingTargetsRequest:
      type: object
      required:
        - SamplingStatisticsDocuments
      title: GetSamplingTargetsRequest
      properties:
        SamplingStatisticsDocuments:
          $ref: '#/components/schemas/SamplingStatisticsDocumentList'
          description: Information about rules that the service is using to sample requests.
    SamplingTargetDocumentList:
      type: array
      items:
        $ref: '#/components/schemas/SamplingTargetDocument'
    UnprocessedStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedStatistics'
    GetServiceGraphRequest:
      type: object
      required:
        - StartTime
        - EndTime
      title: GetServiceGraphRequest
      properties:
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start of the time frame for which to generate a graph.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end of the timeframe for which to generate a graph.
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: The name of a group to generate a graph based on.
        GroupARN:
          $ref: '#/components/schemas/GroupARN'
          description: The ARN of a group to generate a graph based on.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    ServiceList:
      type: array
      items:
        $ref: '#/components/schemas/Service'
    GetTimeSeriesServiceStatisticsRequest:
      type: object
      required:
        - StartTime
        - EndTime
      title: GetTimeSeriesServiceStatisticsRequest
      properties:
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start of the time frame for which to aggregate statistics.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end of the time frame for which to aggregate statistics.
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: The case-sensitive name of the group for which to pull statistics from.
        GroupARN:
          $ref: '#/components/schemas/GroupARN'
          description: The ARN of the group for which to pull statistics from.
        EntitySelectorExpression:
          $ref: '#/components/schemas/EntitySelectorExpression'
          description: 'A filter expression defining entities that will be aggregated for statistics. Supports ID, service, and edge functions. If no selector expression is specified, edge statistics are returned. '
        Period:
          $ref: '#/components/schemas/NullableInteger'
          description: Aggregation period in seconds.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    TimeSeriesServiceStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/TimeSeriesServiceStatistics'
    GetTraceGraphRequest:
      type: object
      required:
        - TraceIds
      title: GetTraceGraphRequest
      properties:
        TraceIds:
          $ref: '#/components/schemas/TraceIdList'
          description: Trace IDs of requests for which to generate a service graph.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Pagination token.
    TimeRangeType:
      type: string
      enum:
        - TraceId
        - Event
    SamplingStrategy:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/SamplingStrategyName'
          description: The name of a sampling rule.
        Value:
          $ref: '#/components/schemas/NullableDouble'
          description: The value of a sampling rule.
      description: The name and value of a sampling rule to apply to a trace summary.
    GetTraceSummariesRequest:
      type: object
      required:
        - StartTime
        - EndTime
      title: GetTraceSummariesRequest
      properties:
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start of the time frame for which to retrieve traces.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end of the time frame for which to retrieve traces.
        TimeRangeType:
          $ref: '#/components/schemas/TimeRangeType'
          description: A parameter to indicate whether to query trace summaries by TraceId or Event time.
        Sampling:
          $ref: '#/components/schemas/NullableBoolean'
          description: Set to <code>true</code> to get summaries for only a subset of available traces.
        SamplingStrategy:
          $ref: '#/components/schemas/SamplingStrategy'
          description: A paramater to indicate whether to enable sampling on trace summaries. Input parameters are Name and Value.
        FilterExpression:
          $ref: '#/components/schemas/FilterExpression'
          description: Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements.
        NextToken:
          $ref: '#/components/schemas/String'
          description: Specify the pagination token returned by a previous request to retrieve the next page of results.
    TraceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TraceSummary'
    GroupSummary:
      type: object
      properties:
        GroupName:
          $ref: '#/components/schemas/String'
          description: The unique case-sensitive name of the group.
        GroupARN:
          $ref: '#/components/schemas/String'
          description: The ARN of the group generated based on the GroupName.
        FilterExpression:
          $ref: '#/components/schemas/String'
          description: The filter expression defining the parameters to include traces.
      description: Details for a group without metadata.
    HistogramEntry:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/Double'
          description: The value of the entry.
        Count:
          $ref: '#/components/schemas/Integer'
          description: The prevalence of the entry.
      description: 'An entry in a histogram for a statistic. A histogram maps the range of observed values on the X axis, and the prevalence of each value on the Y axis.'
    Integer:
      type: integer
    Hostname:
      type: string
      maxLength: 255
    Http:
      type: object
      properties:
        HttpURL:
          $ref: '#/components/schemas/String'
          description: The request URL.
        HttpStatus:
          $ref: '#/components/schemas/NullableInteger'
          description: The response status.
        HttpMethod:
          $ref: '#/components/schemas/String'
          description: The request method.
        UserAgent:
          $ref: '#/components/schemas/String'
          description: The request's user agent string.
        ClientIp:
          $ref: '#/components/schemas/String'
          description: The IP address of the requestor.
      description: Information about an HTTP request.
    InstanceIdDetail:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/String'
          description: The ID of a corresponding EC2 instance.
      description: 'A list of EC2 instance IDs corresponding to the segments in a trace. '
    PutEncryptionConfigRequest:
      type: object
      required:
        - Type
      title: PutEncryptionConfigRequest
      properties:
        KeyId:
          $ref: '#/components/schemas/EncryptionKeyId'
          description: '<p>An AWS KMS customer master key (CMK) in one of the following formats:</p> <ul> <li> <p> <b>Alias</b> - The name of the key. For example, <code>alias/MyKey</code>.</p> </li> <li> <p> <b>Key ID</b> - The KMS key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. AWS X-Ray does not support asymmetric CMKs.</p> </li> <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Use this format to specify a key in a different account.</p> </li> </ul> <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>'
        Type:
          $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.
    TelemetryRecordList:
      type: array
      items:
        $ref: '#/components/schemas/TelemetryRecord'
    PutTelemetryRecordsRequest:
      type: object
      required:
        - TelemetryRecords
      title: PutTelemetryRecordsRequest
      properties:
        TelemetryRecords:
          $ref: '#/components/schemas/TelemetryRecordList'
          description: <p/>
        EC2InstanceId:
          $ref: '#/components/schemas/EC2InstanceId'
          description: <p/>
        Hostname:
          $ref: '#/components/schemas/Hostname'
          description: <p/>
        ResourceARN:
          $ref: '#/components/schemas/ResourceARN'
          description: <p/>
    TraceSegmentDocumentList:
      type: array
      items:
        $ref: '#/components/schemas/TraceSegmentDocument'
    PutTraceSegmentsRequest:
      type: object
      required:
        - TraceSegmentDocuments
      title: PutTraceSegmentsRequest
      properties:
        TraceSegmentDocuments:
          $ref: '#/components/schemas/TraceSegmentDocumentList'
          description: A string containing a JSON document defining one or more segments or subsegments.
    UnprocessedTraceSegmentList:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedTraceSegment'
    RequestCount:
      type: integer
      minimum: 0
    ResourceARNDetail:
      type: object
      properties:
        ARN:
          $ref: '#/components/schemas/String'
          description: The ARN of a corresponding resource.
      description: A list of resources ARNs corresponding to the segments in a trace.
    ResponseTimeRootCauseServices:
      type: array
      items:
        $ref: '#/components/schemas/ResponseTimeRootCauseService'
    ResponseTimeRootCause:
      type: object
      properties:
        Services:
          $ref: '#/components/schemas/ResponseTimeRootCauseServices'
          description: 'A list of corresponding services. A service identifies a segment and contains a name, account ID, type, and inferred flag.'
      description: The root cause information for a response time warning.
    ResponseTimeRootCauseEntity:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the entity.
        Coverage:
          $ref: '#/components/schemas/NullableDouble'
          description: The types and messages of the exceptions.
        Remote:
          $ref: '#/components/schemas/NullableBoolean'
          description: A flag that denotes a remote subsegment.
      description: A collection of segments and corresponding subsegments associated to a response time warning.
    ResponseTimeRootCauseEntityPath:
      type: array
      items:
        $ref: '#/components/schemas/ResponseTimeRootCauseEntity'
    ResponseTimeRootCauseService:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The service name.
        Names:
          $ref: '#/components/schemas/ServiceNames'
          description: A collection of associated service names.
        Type:
          $ref: '#/components/schemas/String'
          description: The type associated to the service.
        AccountId:
          $ref: '#/components/schemas/String'
          description: The account ID associated to the service.
        EntityPath:
          $ref: '#/components/schemas/ResponseTimeRootCauseEntityPath'
          description: 'The path of root cause entities found on the service. '
        Inferred:
          $ref: '#/components/schemas/NullableBoolean'
          description: A Boolean value indicating if the service is inferred from the trace.
      description: A collection of fields identifying the service in a response time warning.
    ResponseTimeRootCauses:
      type: array
      items:
        $ref: '#/components/schemas/ResponseTimeRootCause'
    RootCauseException:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: The name of the exception.
        Message:
          $ref: '#/components/schemas/String'
          description: The message of the exception.
      description: The exception associated with a root cause.
    SampledCount:
      type: integer
      minimum: 0
    SamplingRuleUpdate:
      type: object
      properties:
        RuleName:
          $ref: '#/components/schemas/RuleName'
          description: 'The name of the sampling rule. Specify a rule by either name or ARN, but not both.'
        RuleARN:
          $ref: '#/components/schemas/String'
          description: 'The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.'
        ResourceARN:
          $ref: '#/components/schemas/ResourceARN'
          description: Matches the ARN of the AWS resource on which the service runs.
        Priority:
          $ref: '#/components/schemas/NullableInteger'
          description: The priority of the sampling rule.
        FixedRate:
          $ref: '#/components/schemas/NullableDouble'
          description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
        ReservoirSize:
          $ref: '#/components/schemas/NullableInteger'
          description: 'A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.'
        Host:
          $ref: '#/components/schemas/Host'
          description: Matches the hostname from a request URL.
        ServiceName:
          $ref: '#/components/schemas/ServiceName'
          description: Matches the <code>name</code> that the service uses to identify itself in segments.
        ServiceType:
          $ref: '#/components/schemas/ServiceType'
          description: Matches the <code>origin</code> that the service uses to identify its type in segments.
        HTTPMethod:
          $ref: '#/components/schemas/HTTPMethod'
          description: Matches the HTTP method of a request.
        URLPath:
          $ref: '#/components/schemas/URLPath'
          description: Matches the path from a request URL.
        Attributes:
          $ref: '#/components/schemas/AttributeMap'
          description: Matches attributes derived from the request.
      description: A document specifying changes to a sampling rule's configuration.
    SamplingStatisticSummary:
      type: object
      properties:
        RuleName:
          $ref: '#/components/schemas/String'
          description: The name of the sampling rule.
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the reporting window.
        RequestCount:
          $ref: '#/components/schemas/Integer'
          description: The number of requests that matched the rule.
        BorrowCount:
          $ref: '#/components/schemas/Integer'
          description: The number of requests recorded with borrowed reservoir quota.
        SampledCount:
          $ref: '#/components/schemas/Integer'
          description: The number of requests recorded.
      description: Aggregated request sampling data for a sampling rule across all services for a 10 second window.
    SamplingTargetDocument:
      type: object
      properties:
        RuleName:
          $ref: '#/components/schemas/String'
          description: The name of the sampling rule.
        FixedRate:
          $ref: '#/components/schemas/Double'
          description: 'The percentage of matching requests to instrument, after the reservoir is exhausted.'
        ReservoirQuota:
          $ref: '#/components/schemas/NullableInteger'
          description: The number of requests per second that X-Ray allocated this service.
        ReservoirQuotaTTL:
          $ref: '#/components/schemas/Timestamp'
          description: When the reservoir quota expires.
        Interval:
          $ref: '#/components/schemas/NullableInteger'
          description: The number of seconds for the service to wait before getting sampling targets again.
      description: 'Temporary changes to a sampling rule configuration. To meet the global sampling target for a rule, X-Ray calculates a new reservoir for each service based on the recent sampling results of all services that called <a>GetSamplingTargets</a>.'
    SegmentId:
      type: string
    SegmentDocument:
      type: string
      minLength: 1
    Segment:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/SegmentId'
          description: The segment's ID.
        Document:
          $ref: '#/components/schemas/SegmentDocument'
          description: The segment document.
      description: '<p>A segment from a trace that has been ingested by the X-Ray service. The segment can be compiled from documents uploaded with <a>PutTraceSegments</a>, or an <code>inferred</code> segment for a downstream service, generated from a subsegment sent by the service that called it.</p> <p>For the full segment document schema, see <a href="https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html">AWS X-Ray Segment Documents</a> in the <i>AWS X-Ray Developer Guide</i>.</p>'
    SegmentList:
      type: array
      items:
        $ref: '#/components/schemas/Segment'
    ServiceStatistics:
      type: object
      properties:
        OkCount:
          $ref: '#/components/schemas/NullableLong'
          description: The number of requests that completed with a 2xx Success status code.
        ErrorStatistics:
          $ref: '#/components/schemas/ErrorStatistics'
          description: Information about requests that failed with a 4xx Client Error status code.
        FaultStatistics:
          $ref: '#/components/schemas/FaultStatistics'
          description: Information about requests that failed with a 5xx Server Error status code.
        TotalCount:
          $ref: '#/components/schemas/NullableLong'
          description: The total number of completed requests.
        TotalResponseTime:
          $ref: '#/components/schemas/NullableDouble'
          description: The aggregate response time of completed requests.
      description: Response statistics for a service.
    Service:
      type: object
      properties:
        ReferenceId:
          $ref: '#/components/schemas/NullableInteger'
          description: Identifier for the service. Unique within the service map.
        Name:
          $ref: '#/components/schemas/String'
          description: The canonical name of the service.
        Names:
          $ref: '#/components/schemas/ServiceNames'
          description: 'A list of names for the service, including the canonical name.'
        Root:
          $ref: '#/components/schemas/NullableBoolean'
          description: Indicates that the service was the first service to process a request.
        AccountId:
          $ref: '#/components/schemas/String'
          description: Identifier of the AWS account in which the service runs.
        Type:
          $ref: '#/components/schemas/String'
          description: '<p>The type of service.</p> <ul> <li> <p>AWS Resource - The type of an AWS resource. For example, <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application used.</p> </li> <li> <p>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code> for downstream calls to Amazon DynamoDB that didn''t target a specific table.</p> </li> <li> <p> <code>client</code> - Represents the clients that sent requests to a root service.</p> </li> <li> <p> <code>remote</code> - A downstream service of indeterminate type.</p> </li> </ul>'
        State:
          $ref: '#/components/schemas/String'
          description: The service's state.
        StartTime:
          $ref: '#/components/schemas/Timestamp'
          description: The start time of the first segment that the service generated.
        EndTime:
          $ref: '#/components/schemas/Timestamp'
          description: The end time of the last segment that the service generated.
        Edges:
          $ref: '#/components/schemas/EdgeList'
          description: Connections to downstream services.
        SummaryStatistics:
          $ref: '#/components/schemas/ServiceStatistics'
          description: Aggregated statistics for the service.
        DurationHistogram:
          $ref: '#/components/schemas/Histogram'
          description: A histogram that maps the spread of service durations.
        ResponseTimeHistogram:
          $ref: '#/components/schemas/Histogram'
          description: A histogram that maps the spread of service response times.
      description: 'Information about an application that processed requests, users that made requests, or downstream services, resources and applications that an application used.'
    ServiceId:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
          description: <p/>
        Names:
          $ref: '#/components/schemas/ServiceNames'
          description: <p/>
        AccountId:
          $ref: '#/components/schemas/String'
          description: <p/>
        Type:
          $ref: '#/components/schemas/String'
          description: <p/>
      description: <p/>
    ServiceIds:
      type: array
      items:
        $ref: '#/components/schemas/ServiceId'
    TimeSeriesServiceStatistics:
      type: object
      properties:
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp of the window for which statistics are aggregated.
        EdgeSummaryStatistics:
          $ref: '#/components/schemas/EdgeStatistics'
        ServiceSummaryStatistics:
          $ref: '#/components/schemas/ServiceStatistics'
        ResponseTimeHistogram:
          $ref: '#/components/schemas/Histogram'
          description: The response time histogram for the selected entities.
      description: A list of TimeSeriesStatistic structures.
    Trace:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/TraceId'
          description: The unique identifier for the request that generated the trace's segments and subsegments.
        Duration:
          $ref: '#/components/schemas/NullableDouble'
          description: The length of time in seconds between the start time of the root segment and the end time of the last segment that completed.
        Segments:
          $ref: '#/components/schemas/SegmentList'
          description: Segment documents for the segments and subsegments that comprise the trace.
      description: A collection of segment documents with matching trace IDs.
    TraceAvailabilityZones:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZoneDetail'
    TraceInstanceIds:
      type: array
      items:
        $ref: '#/components/schemas/InstanceIdDetail'
    TraceResourceARNs:
      type: array
      items:
        $ref: '#/components/schemas/ResourceARNDetail'
    TraceUsers:
      type: array
      items:
        $ref: '#/components/schemas/TraceUser'
    TraceSummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/TraceId'
          description: The unique identifier for the request that generated the trace's segments and subsegments.
        Duration:
          $ref: '#/components/schemas/NullableDouble'
          description: The length of time in seconds between the start time of the root segment and the end time of the last segment that completed.
        ResponseTime:
          $ref: '#/components/schemas/NullableDouble'
          description: 'The length of time in seconds between the start and end times of the root segment. If the service performs work asynchronously, the response time measures the time before the response is sent to the user, while the duration measures the amount of time before the last traced activity completes.'
        HasFault:
          $ref: '#/components/schemas/NullableBoolean'
          description: The root segment document has a 500 series error.
        HasError:
          $ref: '#/components/schemas/NullableBoolean'
          description: The root segment document has a 400 series error.
        HasThrottle:
          $ref: '#/components/schemas/NullableBoolean'
          description: One or more of the segment documents has a 429 throttling error.
        IsPartial:
          $ref: '#/components/schemas/NullableBoolean'
          description: One or more of the segment documents is in progress.
        Http:
          $ref: '#/components/schemas/Http'
          description: Information about the HTTP request served by the trace.
        Annotations:
          $ref: '#/components/schemas/Annotations'
          description: Annotations from the trace's segment documents.
        Users:
          $ref: '#/components/schemas/TraceUsers'
          description: Users from the trace's segment documents.
        ServiceIds:
          $ref: '#/components/schemas/ServiceIds'
          description: Service IDs from the trace's segment documents.
        ResourceARNs:
          $ref: '#/components/schemas/TraceResourceARNs'
          description: A list of resource ARNs for any resource corresponding to the trace segments.
        InstanceIds:
          $ref: '#/components/schemas/TraceInstanceIds'
          description: A list of EC2 instance IDs for any instance corresponding to the trace segments.
        AvailabilityZones:
          $ref: '#/components/schemas/TraceAvailabilityZones'
          description: A list of availability zones for any zone corresponding to the trace segments.
        EntryPoint:
          $ref: '#/components/schemas/ServiceId'
          description: The root of a trace.
        FaultRootCauses:
          $ref: '#/components/schemas/FaultRootCauses'
          description: A collection of FaultRootCause structures corresponding to the the trace segments.
        ErrorRootCauses:
          $ref: '#/components/schemas/ErrorRootCauses'
          description: A collection of ErrorRootCause structures corresponding to the trace segments.
        ResponseTimeRootCauses:
          $ref: '#/components/schemas/ResponseTimeRootCauses'
          description: A collection of ResponseTimeRootCause structures corresponding to the trace segments.
        Revision:
          $ref: '#/components/schemas/Integer'
          description: The revision number of a trace.
        MatchedEventTime:
          $ref: '#/components/schemas/Timestamp'
          description: The matched time stamp of a defined event.
      description: Metadata generated from the segment documents in a trace.
    TraceUser:
      type: object
      properties:
        UserName:
          $ref: '#/components/schemas/String'
          description: The user's name.
        ServiceIds:
          $ref: '#/components/schemas/ServiceIds'
          description: Services that the user's request hit.
      description: Information about a user recorded in segment documents.
    UnprocessedStatistics:
      type: object
      properties:
        RuleName:
          $ref: '#/components/schemas/String'
          description: The name of the sampling rule.
        ErrorCode:
          $ref: '#/components/schemas/String'
          description: The error code.
        Message:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: Sampling statistics from a call to <a>GetSamplingTargets</a> that X-Ray could not process.
    UnprocessedTraceSegment:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/String'
          description: The segment's ID.
        ErrorCode:
          $ref: '#/components/schemas/String'
          description: The error that caused processing to fail.
        Message:
          $ref: '#/components/schemas/String'
          description: The error message.
      description: Information about a segment that failed processing.
    UpdateGroupRequest:
      type: object
      title: UpdateGroupRequest
      properties:
        GroupName:
          $ref: '#/components/schemas/GroupName'
          description: The case-sensitive name of the group.
        GroupARN:
          $ref: '#/components/schemas/GroupARN'
          description: The ARN that was generated upon creation.
        FilterExpression:
          $ref: '#/components/schemas/FilterExpression'
          description: The updated filter expression defining criteria by which to group traces.
    UpdateSamplingRuleRequest:
      type: object
      required:
        - SamplingRuleUpdate
      title: UpdateSamplingRuleRequest
      properties:
        SamplingRuleUpdate:
          $ref: '#/components/schemas/SamplingRuleUpdate'
          description: The rule and fields to change.
    ValueWithServiceIds:
      type: object
      properties:
        AnnotationValue:
          $ref: '#/components/schemas/AnnotationValue'
          description: Values of the annotation.
        ServiceIds:
          $ref: '#/components/schemas/ServiceIds'
          description: Services to which the annotation applies.
      description: Information about a segment annotation.
security:
  - hmac: []
