swagger: '2.0'
schemes:
  - https
host: azure.local
info:
  description: Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.
  title: ApiManagementClient
  version: '2017-03-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimapis.json'
      version: '2.0'
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: apimanagement-apimapis
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  apim_key:
    in: header
    name: Authorization
    type: apiKey
security:
  - apim_key: []
parameters:
  ApiIdParameter:
    description: API identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 256
    minLength: 1
    name: apiId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  OperationIdParameter:
    description: Operation identifier within an API. Must be unique in the current API Management service instance.
    in: path
    maxLength: 256
    minLength: 1
    name: operationId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  SchemaIdParameter:
    description: Schema identifier within an API. Must be unique in the current API Management service instance.
    in: path
    maxLength: 256
    minLength: 1
    name: schemaId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
paths:
  /apis:
    get:
      description: Lists all APIs of the API Management service instance.
      externalDocs:
        url: 'https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis'
      operationId: Api_List
      parameters:
        - description: |-
            | Field       | Supported operators    | Supported functions               |
            |-------------|------------------------|-----------------------------------|
            | id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
            | name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
            | description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
            | serviceUrl  | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
            | path        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
          in: query
          name: $filter
          required: false
          type: string
        - description: Number of records to return.
          format: int32
          in: query
          minimum: 1
          name: $top
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Number of records to skip.
          format: int32
          in: query
          minimum: 0
          name: $skip
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Paged Result response of Apis.
          schema:
            $ref: '#/definitions/ApiCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Apis
      x-ms-examples:
        ApiManagementListApis:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            '200':
              body:
                count: 71
                value:
                  - apiRevision: '1'
                    id: /apis/5a58bac3a40f7ef2e05bc7db
                    isCurrent: true
                    name: 5a58bac3a40f7ef2e05bc7d7
                    path: suffix_5a58bac3a40f7ef2e05bc7dd
                    protocols:
                      - https
                    serviceUrl: 'https://5a58bac3a40f7ef2e05bc7dc'
                  - apiRevision: '1'
                    id: /apis/5a58bac3a40f7ef2e05bc7de
                    isCurrent: true
                    name: 5a58bac3a40f7ef2e05bc7d8
                    path: suffix_5a58bac3a40f7ef2e05bc7e0
                    protocols:
                      - https
                    serviceUrl: 'https://5a58bac3a40f7ef2e05bc7df'
                  - apiRevision: '1'
                    description: description_5a58babfa40f7ef2e05bc7bd
                    id: /apis/5a58babfa40f7ef2e05bc7bb
                    isCurrent: true
                    name: api_5a58babfa40f7ef2e05bc7bc
                    path: suffix_5a58babfa40f7ef2e05bc7bf
                    protocols:
                      - https
                    serviceUrl: 'http://contoso/5a58babfa40f7ef2e05bc7be'
      x-ms-odata: '#/definitions/ApiContract'
      x-ms-pageable:
        nextLinkName: nextLink
  '/apis/{apiId}':
    delete:
      description: Deletes the specified API of the API Management service instance.
      operationId: Api_Delete
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: ETag of the API Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '204':
          description: The API was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Apis
      x-ms-examples:
        ApiManagementDeleteApis:
          parameters:
            If-Match: '"AAAAAAAAD08="'
            api-version: '2017-03-01'
            apiId: 5a58bb37a40f7ef2e05bd7f2
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            '204': {}
    get:
      description: Gets the details of the API specified by its identifier.
      operationId: Api_Get
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: The response body contains the specified API entity.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            $ref: '#/definitions/ApiContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Apis
      x-ms-examples:
        ApiManagementGetApis:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bafaa40f7ef2e05bcfbe
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            '200':
              body:
                apiRevision: '1'
                description: description_5a58bafaa40f7ef2e05bcfc0
                id: /apis/5a58bafaa40f7ef2e05bcfbe
                isCurrent: true
                name: api_5a58bafaa40f7ef2e05bcfbf
                path: suffix_5a58bafaa40f7ef2e05bcfc2
                protocols:
                  - https
                serviceUrl: 'http://contoso/5a58bafaa40f7ef2e05bcfc1'
                subscriptionKeyParameterNames:
                  header: Ocp-Apim-Subscription-Key
                  query: subscription-key
    patch:
      description: Updates the specified API of the API Management service instance.
      operationId: Api_Update
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: API Update Contract parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ApiUpdateContract'
        - description: ETag of the API entity. ETag should match the current entity state in the header response of the GET request or it should be * for unconditional update.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '204':
          description: The API was successfully updated.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Apis
      x-ms-examples:
        ApiManagementPatchApis:
          parameters:
            If-Match: '"AAAAAAAACFc="'
            api-version: '2017-03-01'
            apiId: 5a58bac3a40f7ef2e05bc7db
            apimBaseUrl: apimservice1.management.azure-api.net
            parameters:
              serviceUrl: 'https://api.apim.net'
          responses:
            '204': {}
    put:
      description: Creates new or updates existing specified API of the API Management service instance.
      operationId: Api_CreateOrUpdate
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: Create or update parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ApiCreateOrUpdateParameter'
        - description: ETag of the Api Entity. For Create Api Etag should not be specified. For Update Etag should match the existing Entity or it can be * for unconditional update.
          in: header
          name: If-Match
          required: false
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: API was successfully updated.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            $ref: '#/definitions/ApiContract'
        '201':
          description: API was successfully created.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            $ref: '#/definitions/ApiContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Apis
      x-ms-examples:
        ApiManagementPutApis:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bab6a40f7ef2e05bc769
            apiType: Http
            apimBaseUrl: apimservice1.management.azure-api.net
            parameters:
              description: description_5a58bab6a40f7ef2e05bc76b
              name: api_5a58bab6a40f7ef2e05bc76a
              path: suffix_5a58bab6a40f7ef2e05bc76d
              protocols:
                - https
              serviceUrl: 'http://contoso/5a58bab6a40f7ef2e05bc76c'
          responses:
            '200':
              body:
                apiRevision: '1'
                description: description_5a58bab6a40f7ef2e05bc76b
                id: /apis/5a58bab6a40f7ef2e05bc769
                isCurrent: true
                name: api_5a58bab6a40f7ef2e05bc76a
                path: suffix_5a58bab6a40f7ef2e05bc76d
                protocols:
                  - https
                serviceUrl: 'http://contoso/5a58bab6a40f7ef2e05bc76c'
                subscriptionKeyParameterNames:
                  header: Ocp-Apim-Subscription-Key
                  query: subscription-key
            '201':
              body:
                apiRevision: '1'
                description: description_5a58bab6a40f7ef2e05bc76b
                id: /apis/5a58bab6a40f7ef2e05bc769
                isCurrent: true
                name: api_5a58bab6a40f7ef2e05bc76a
                path: suffix_5a58bab6a40f7ef2e05bc76d
                protocols:
                  - https
                serviceUrl: 'http://contoso/5a58bab6a40f7ef2e05bc76c'
                subscriptionKeyParameterNames:
                  header: Ocp-Apim-Subscription-Key
                  query: subscription-key
  '/apis/{apiId}/operations':
    get:
      description: Lists a collection of the operations for the specified API.
      operationId: ApiOperation_ListByApi
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: |-
            | Field       | Supported operators    | Supported functions               |
            |-------------|------------------------|-----------------------------------|
            | name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
            | method      | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
            | description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
            | urlTemplate | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |
          in: query
          name: $filter
          required: false
          type: string
        - description: Number of records to return.
          format: int32
          in: query
          minimum: 1
          name: $top
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Number of records to skip.
          format: int32
          in: query
          minimum: 0
          name: $skip
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: A collection of operation summary entities at the API level.
          schema:
            $ref: '#/definitions/OperationCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Operations
      x-ms-examples:
        ApiManagementListApisOperations:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bac3a40f7ef2e05bc7db
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            '200':
              body:
                count: 8
                value:
                  - description: description_5a58bad4a40f7ef2e05bcce6
                    id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad4a40f7ef2e05bccf2
                    method: PUT
                    name: operation_5a58bad4a40f7ef2e05bcce5
                    urlTemplate: /template_5a58bad4a40f7ef2e05bcce7
                  - id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad9a40f7ef2e05bcd0b
                    method: PATCH
                    name: operation_5a58bad9a40f7ef2e05bcd09
                    urlTemplate: /template_5a58bad9a40f7ef2e05bcd0a
                  - id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad9a40f7ef2e05bcd0f
                    method: PATCH
                    name: operation_5a58bad9a40f7ef2e05bcd0d
                    urlTemplate: /template_5a58bad9a40f7ef2e05bcd0e
                  - description: description_5a58badaa40f7ef2e05bcd12
                    id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58badaa40f7ef2e05bcd1e
                    method: POST
                    name: operation_5a58badaa40f7ef2e05bcd11
                    urlTemplate: /template_5a58badaa40f7ef2e05bcd13
                  - description: description_5a58badea40f7ef2e05bcd33
                    id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58badea40f7ef2e05bcd35
                    method: POST
                    name: operation_5a58badea40f7ef2e05bcd32
                    urlTemplate: /template_5a58badea40f7ef2e05bcd34
                  - description: description_5a58bb39a40f7ef2e05bd90f
                    id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bb39a40f7ef2e05bd91b
                    method: CONNECT
                    name: operation_5a58bb39a40f7ef2e05bd90e
                    urlTemplate: /template_5a58bb39a40f7ef2e05bd910
                  - description: description_5a58bb46a40f7ef2e05bd96f
                    id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bb46a40f7ef2e05bd97b
                    method: DELETE
                    name: operation_5a58bb46a40f7ef2e05bd96e
                    urlTemplate: /template_5a58bb46a40f7ef2e05bd970
                  - description: description_5a58bb5ba40f7ef2e05bdbf4
                    id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bb5ba40f7ef2e05bdc00
                    method: DELETE
                    name: operation_5a58bb5ba40f7ef2e05bdbf3
                    urlTemplate: /template_5a58bb5ba40f7ef2e05bdbf5
      x-ms-odata: '#/definitions/OperationContract'
      x-ms-pageable:
        nextLinkName: nextLink
  '/apis/{apiId}/operations/{operationId}':
    delete:
      description: Deletes the specified operation in the API.
      operationId: ApiOperation_Delete
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: ETag of the API Operation Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '204':
          description: The operation was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Operations
      x-ms-examples:
        ApiManagementDeleteApisOperations:
          parameters:
            If-Match: '*'
            api-version: '2017-03-01'
            apiId: 5a58bb3ea40f7ef2e05bd937
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: 5a58bb3ea40f7ef2e05bd938
          responses:
            '204': {}
    get:
      description: Gets the details of the API Operation specified by its identifier.
      operationId: ApiOperation_Get
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: The response body contains the specified Operation entity.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            $ref: '#/definitions/OperationContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Operations
      x-ms-examples:
        ApiManagementGetApisOperations:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bac3a40f7ef2e05bc7db
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: 5a58bad9a40f7ef2e05bcd0f
          responses:
            '200':
              body:
                id: /apis/5a58bac3a40f7ef2e05bc7db/operations/5a58bad9a40f7ef2e05bcd0f
                method: PATCH
                name: operation_5a58bad9a40f7ef2e05bcd0d
                request:
                  headers: []
                  queryParameters: []
                  representations: []
                responses: []
                templateParameters: []
                urlTemplate: /template_5a58bad9a40f7ef2e05bcd0e
    patch:
      description: Updates the details of the operation in the API specified by its identifier.
      operationId: ApiOperation_Update
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: API Operation Update parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/OperationUpdateContract'
        - description: ETag of the API Operation Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '204':
          description: The operation was successfully updated.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Operations
      x-ms-examples:
        ApiManagementPatchApisOperations:
          parameters:
            If-Match: '"AAAAAAAADfY="'
            api-version: '2017-03-01'
            apiId: 5a58bb25a40f7ef2e05bd5b2
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: 5a58bb25a40f7ef2e05bd5c5
            parameters:
              method: DELETE
              responses:
                - description: description_5a58bb25a40f7ef2e05bd5d1
                  representations:
                    - contentType: application/json
                      sample: sample_5a58bb25a40f7ef2e05bd5d2
                    - contentType: application/xml
                      sample: sample_5a58bb25a40f7ef2e05bd5d3
                  statusCode: 200
          responses:
            '204': {}
    put:
      description: Creates a new operation in the API or updates an existing one.
      operationId: ApiOperation_CreateOrUpdate
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: Create parameters.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/OperationContract'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Operation was successfully updated.
          schema:
            $ref: '#/definitions/OperationContract'
        '201':
          description: Operation was successfully created.
          schema:
            $ref: '#/definitions/OperationContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Operations
      x-ms-examples:
        ApiManagementPutApisOperations:
          parameters:
            api-version: '2017-03-01'
            apiId: 5a58bab8a40f7ef2e05bc7a1
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: 5a58bab8a40f7ef2e05bc7aa
            parameters:
              description: description_5a58bab8a40f7ef2e05bc7a8
              method: PATCH
              name: operation_5a58bab8a40f7ef2e05bc7a7
              urlTemplate: template_5a58bab8a40f7ef2e05bc7a9
          responses:
            '200':
              body:
                description: description_5a58bab8a40f7ef2e05bc7a8
                id: /apis/5a58bab8a40f7ef2e05bc7a1/operations/5a58bab8a40f7ef2e05bc7aa
                method: PATCH
                name: operation_5a58bab8a40f7ef2e05bc7a7
                request:
                  headers: []
                  queryParameters: []
                  representations: []
                responses: []
                templateParameters: []
                urlTemplate: /template_5a58bab8a40f7ef2e05bc7a9
            '201':
              body:
                description: description_5a58bab8a40f7ef2e05bc7a8
                id: /apis/5a58bab8a40f7ef2e05bc7a1/operations/5a58bab8a40f7ef2e05bc7aa
                method: PATCH
                name: operation_5a58bab8a40f7ef2e05bc7a7
                request:
                  headers: []
                  queryParameters: []
                  representations: []
                responses: []
                templateParameters: []
                urlTemplate: /template_5a58bab8a40f7ef2e05bc7a9
  '/apis/{apiId}/operations/{operationId}/policies':
    get:
      description: Get the list of policy configuration at the API Operation level.
      operationId: ApiOperationPolicy_ListByOperation
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Api Operations Policy Collection.
          schema:
            description: The response of the list policy operation.
            properties:
              count:
                description: Total number of records
                type: integer
              nextLink:
                description: Next page link if any.
                type: string
              value:
                description: Policy Contract value.
                items:
                  description: Policy contract Properties.
                  properties:
                    id:
                      description: Policy identifier.
                      type: string
                    policyContent:
                      description: Json escaped Xml Encoded contents of the Policy.
                      type: string
                  required:
                    - policyContent
                type: array
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiOperationPolicies
      x-ms-examples:
        ApiManagementListApisOperationsPolicies:
          parameters:
            api-version: '2017-03-01'
            apiId: 599e2953193c3c0bd0b3e2fa
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: 599e29ab193c3c0bd0b3e2fb
          responses:
            '200':
              body:
                nextLink: ''
                value:
                  - id: /apis/599e2953193c3c0bd0b3e2fa/operations/599e29ab193c3c0bd0b3e2fb/policies/policy
                    policyContent: "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <validate-jwt header-name=\"dd\">\r\n      <required-claims>\r\n        <claim name=\"bla\" separator=\"\">\r\n          <value>xxx</value>\r\n        </claim>\r\n      </required-claims>\r\n    </validate-jwt>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>"
  '/apis/{apiId}/operations/{operationId}/policies/{policyId}':
    delete:
      description: Deletes the policy configuration at the Api Operation.
      operationId: ApiOperationPolicy_Delete
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: The entity state (Etag) version of the Api Operation Policy to delete. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          type: string
        - description: The identifier of the Policy.
          enum:
            - policy
          in: path
          name: policyId
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted the policy configuration at the API Operation level.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiOperationPolicies
      x-ms-examples:
        ApiManagementDeleteApisOperationsPolicies:
          parameters:
            If-Match: '*'
            api-version: '2017-03-01'
            apiId: testapi
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: testoperation
            policyId: policy
          responses:
            '204': {}
    get:
      description: Get the policy configuration at the API Operation level.
      operationId: ApiOperationPolicy_Get
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: The identifier of the Policy.
          enum:
            - policy
          in: path
          name: policyId
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      produces:
        - application/json
        - application/vnd.ms-azure-apim.policy+xml
        - application/vnd.ms-azure-apim.policy.raw+xml
      responses:
        '200':
          description: Api Operation Policy information.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiOperationPolicies
      x-ms-examples:
        ApiManagementGetApisOperationsPolicies:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bfeea40f7e104892c5b6
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: 5a58bfeea40f7e104892c5c9
            policyId: policy
          responses:
            '200':
              body:
                id: /apis/5a58bfeea40f7e104892c5b6/operations/5a58bfeea40f7e104892c5c9/policies/policy
                policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>"
    put:
      consumes:
        - application/json
        - application/vnd.ms-azure-apim.policy+xml
        - application/vnd.ms-azure-apim.policy.raw+xml
      description: Creates or updates policy configuration for the API Operation level.
      operationId: ApiOperationPolicy_CreateOrUpdate
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/OperationIdParameter'
        - description: The identifier of the Policy.
          enum:
            - policy
          in: path
          name: policyId
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
        - description: The policy contents to apply.
          in: body
          name: parameters
          required: true
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        - description: The entity state (Etag) version of the Api Operation policy to update. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Api Operation policy configuration of the tenant was successfully updated.
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        '201':
          description: Api Operation policy configuration was successfully created.
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiOperationPolicies
      x-ms-examples:
        ApiManagementPutApisOperationsPolicies:
          parameters:
            If-Match: '*'
            api-version: '2017-03-01'
            apiId: 5a58bc94a40f7e10489299ac
            apimBaseUrl: apimservice1.management.azure-api.net
            operationId: 5a58bc94a40f7e10489299bf
            parameters:
              policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>"
            policyId: policy
          responses:
            '200':
              body:
                id: /apis/5a58bc94a40f7e10489299ac/operations/5a58bc94a40f7e10489299bf/policies/policy
                policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>"
            '201':
              body:
                id: /apis/5a58bc94a40f7e10489299ac/operations/5a58bc94a40f7e10489299bf/policies/policy
                policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>"
  '/apis/{apiId}/policies':
    get:
      description: Get the policy configuration at the API level.
      operationId: ApiPolicy_ListByApi
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Apis Policy Collection.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            description: The response of the list policy operation.
            properties:
              count:
                description: Total number of records
                type: integer
              nextLink:
                description: Next page link if any.
                type: string
              value:
                description: Policy Contract value.
                items:
                  description: Policy contract Properties.
                  properties:
                    id:
                      description: Policy identifier.
                      type: string
                    policyContent:
                      description: Json escaped Xml Encoded contents of the Policy.
                      type: string
                  required:
                    - policyContent
                type: array
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiPolicy
      x-ms-examples:
        ApiManagementListApisPolicies:
          parameters:
            $skip: 0
            $top: 10000
            Accept: application/json
            api-version: '2017-03-01'
            apiId: echo-api
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            '200':
              body:
                count: 1
                value:
                  - id: /policies/policy
                    policyContent: "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>"
  '/apis/{apiId}/policies/{policyId}':
    delete:
      description: Deletes the policy configuration at the Api.
      operationId: ApiPolicy_Delete
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: The identifier of the Policy.
          enum:
            - policy
          in: path
          name: policyId
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
        - description: The entity state (Etag) version of the Api policy to update. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted the policy configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiPolicy
      x-ms-examples:
        ApiManagementDeleteApisPolicies:
          parameters:
            If-Match: '*'
            api-version: '2017-03-01'
            apiId: loggerId
            apimBaseUrl: apimservice1.management.azure-api.net
            policyId: policy
          responses:
            '204': {}
    get:
      description: Get the policy configuration at the API level.
      operationId: ApiPolicy_Get
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: The identifier of the Policy.
          enum:
            - policy
          in: path
          name: policyId
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      produces:
        - application/json
        - application/vnd.ms-azure-apim.policy+xml
        - application/vnd.ms-azure-apim.policy.raw+xml
      responses:
        '200':
          description: Api Policy information.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiPolicy
      x-ms-examples:
        ApiManagementGetApisPolicies:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bf63a40f7e104892bdaf
            apimBaseUrl: apimservice1.management.azure-api.net
            policyId: policy
          responses:
            '200':
              body:
                id: /apis/5a58bf63a40f7e104892bdaf/policies/policy
                policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" downstream-caching-type=\"none\">\r\n      <vary-by-query-parameter>version</vary-by-query-parameter>\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <cache-store duration=\"@(10)\" />\r\n    <base />\r\n  </outbound>\r\n</policies>"
    put:
      consumes:
        - application/json
        - application/vnd.ms-azure-apim.policy+xml
        - application/vnd.ms-azure-apim.policy.raw+xml
      description: Creates or updates policy configuration for the API.
      operationId: ApiPolicy_CreateOrUpdate
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: The identifier of the Policy.
          enum:
            - policy
          in: path
          name: policyId
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyIdName
          x-ms-parameter-location: method
        - description: The policy contents to apply.
          in: body
          name: parameters
          required: true
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        - description: The entity state (Etag) version of the Api Policy to update. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Api policy configuration of the tenant was successfully updated.
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        '201':
          description: Api policy configuration was successfully created.
          schema:
            description: Policy contract Properties.
            properties:
              id:
                description: Policy identifier.
                type: string
              policyContent:
                description: Json escaped Xml Encoded contents of the Policy.
                type: string
            required:
              - policyContent
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiPolicy
      x-ms-examples:
        ApiManagementPutApisPolicies:
          parameters:
            If-Match: '*'
            api-version: '2017-03-01'
            apiId: 5a58bd43a40f7e104892a398
            apimBaseUrl: apimservice1.management.azure-api.net
            parameters:
              policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" downstream-caching-type=\"none\">\r\n      <vary-by-query-parameter>version</vary-by-query-parameter>\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <cache-store duration=\"@(10)\" />\r\n    <base />\r\n  </outbound>\r\n</policies>"
            policyId: policy
          responses:
            '200':
              body:
                id: /apis/5a58bd43a40f7e104892a398/policies/policy
                policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" downstream-caching-type=\"none\">\r\n      <vary-by-query-parameter>version</vary-by-query-parameter>\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <cache-store duration=\"@(10)\" />\r\n    <base />\r\n  </outbound>\r\n</policies>"
            '201':
              body:
                id: /apis/5a58bd43a40f7e104892a398/policies/policy
                policyContent: "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" downstream-caching-type=\"none\">\r\n      <vary-by-query-parameter>version</vary-by-query-parameter>\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <cache-store duration=\"@(10)\" />\r\n    <base />\r\n  </outbound>\r\n</policies>"
  '/apis/{apiId}/products':
    get:
      description: 'Lists all Products, which the API is part of.'
      operationId: ApiProduct_ListByApis
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: |-
            | Field | Supported operators    | Supported functions                         |
            |-------|------------------------|---------------------------------------------|
            | name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          in: query
          name: $filter
          required: false
          type: string
        - description: Number of records to return.
          format: int32
          in: query
          minimum: 1
          name: $top
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Number of records to skip.
          format: int32
          in: query
          minimum: 0
          name: $skip
          required: false
          type: integer
          x-ms-parameter-location: method
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: The operation returns a collection of products which have the Api entity.
          schema:
            description: Paged Products list representation.
            properties:
              count:
                description: Total number of entities
                type: integer
              nextLink:
                description: Next page link if any.
                type: string
              value:
                description: Page values.
                items:
                  allOf:
                    - allOf:
                        - description: Product Entity Base Parameters
                          properties:
                            approvalRequired:
                              description: "whether subscription approval is required. If\_false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If\_true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false."
                              type: boolean
                            description:
                              description: Product description. May include HTML formatting tags.
                              maxLength: 1000
                              minLength: 1
                              type: string
                            state:
                              description: whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.
                              enum:
                                - notPublished
                                - published
                              type: string
                              x-ms-enum:
                                modelAsString: false
                                name: ProductState
                            subscriptionRequired:
                              description: 'Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as "protected" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as "open" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it''s value is assumed to be true.'
                              type: boolean
                            subscriptionsLimit:
                              description: "Whether the number of subscriptions a user can have to this product at the same time. Set to\_null\_or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false."
                              format: int32
                              type: integer
                            terms:
                              description: Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.
                              type: string
                      description: Product profile.
                      properties:
                        name:
                          description: Product name.
                          maxLength: 300
                          minLength: 1
                          type: string
                      required:
                        - name
                  description: Product details.
                  properties:
                    id:
                      description: Identifier of the Product entity.
                      type: string
                type: array
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiProduct
      x-ms-examples:
        ApiManagementListApisProducts:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bddea40f7e104892ac12
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            '200':
              body:
                count: 2
                value:
                  - approvalRequired: false
                    description: product_description_5a58bddfa40f7e104892ac1a
                    id: /products/5a58bddfa40f7e104892ac18
                    name: product_5a58bddfa40f7e104892ac19
                    state: notPublished
                    subscriptionRequired: true
                  - approvalRequired: false
                    description: product_description_5a58bddfa40f7e104892ac1f
                    id: /products/5a58bddfa40f7e104892ac1d
                    name: product_5a58bddfa40f7e104892ac1e
                    state: notPublished
                    subscriptionRequired: true
      x-ms-odata: './apimproducts.json#/definitions/ProductContract'
      x-ms-pageable:
        nextLinkName: nextLink
  '/apis/{apiId}/schemas':
    get:
      description: Get the schema configuration at the API level.
      operationId: ApiSchema_ListByApi
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Apis Schema Collection.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            $ref: '#/definitions/SchemaCollection'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiSchema
      x-ms-examples:
        ApiManagementListApisSchemas:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bde0a40f7e104892ac2c
            apimBaseUrl: apimservice1.management.azure-api.net
          responses:
            '200':
              body:
                count: 0
                value: []
      x-ms-pageable:
        nextLinkName: nextLink
  '/apis/{apiId}/schemas/{schemaId}':
    delete:
      description: Deletes the schema configuration at the Api.
      operationId: ApiSchema_Delete
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/SchemaIdParameter'
        - description: The entity state (Etag) version of the Api schema to update. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted the schema configuration at the API level.
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiSchema
      x-ms-examples:
        ApiManagementDeleteApisSchemas:
          parameters:
            If-Match: '"AAAAAAAAKhk="'
            api-version: '2017-03-01'
            apiId: 5a58bfd4a40f7e104892c4d2
            apimBaseUrl: apimservice1.management.azure-api.net
            force: 'True'
            schemaId: 5a58bfd4a40f7e104892c4d3
          responses:
            '204': {}
    get:
      description: Get the schema configuration at the API level.
      operationId: ApiSchema_Get
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/SchemaIdParameter'
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Api Schema information.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
              type: string
          schema:
            $ref: '#/definitions/SchemaContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiSchema
      x-ms-examples:
        ApiManagementGetApisSchemas:
          parameters:
            Accept: application/json
            api-version: '2017-03-01'
            apiId: 5a58bde0a40f7e104892ac24
            apimBaseUrl: apimservice1.management.azure-api.net
            schemaId: 5a58bde0a40f7e104892ac25
          responses:
            '200':
              body:
                contentType: application/vnd.ms-azure-apim.xsd+xml
                document:
                  value: "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
                id: /apis/5a58bde0a40f7e104892ac24/schemas/5a58bde0a40f7e104892ac25
    put:
      description: Creates or updates schema configuration for the API.
      operationId: ApiSchema_CreateOrUpdate
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - $ref: '#/parameters/SchemaIdParameter'
        - description: The schema contents to apply.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/SchemaContract'
        - description: The entity state (Etag) version of the Api Schema to update. A value of "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: false
          type: string
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: Api schema configuration of the tenant was successfully updated.
          schema:
            $ref: '#/definitions/SchemaContract'
        '201':
          description: Api schema configuration was successfully created.
          schema:
            $ref: '#/definitions/SchemaContract'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - ApiSchema
      x-ms-examples:
        ApiManagementPutApisSchemas:
          parameters:
            api-version: '2017-03-01'
            apiId: 5a58bdf5a40f7e104892acda
            apimBaseUrl: apimservice1.management.azure-api.net
            parameters:
              contentType: application/vnd.ms-azure-apim.xsd+xml
              document:
                value: "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
            schemaId: 5a58bdf5a40f7e104892ace0
          responses:
            '200':
              body:
                contentType: application/vnd.ms-azure-apim.xsd+xml
                document:
                  value: "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
                id: /apis/5a58bdf5a40f7e104892acda/schemas/5a58bdf5a40f7e104892ace0
            '201':
              body:
                contentType: application/vnd.ms-azure-apim.xsd+xml
                document:
                  value: "<s:schema elementFormDefault=\"qualified\" targetNamespace=\"http://ws.cdyne.com/WeatherWS/\" xmlns:tns=\"http://ws.cdyne.com/WeatherWS/\" xmlns:s=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm=\"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:apim-wsdltns=\"http://ws.cdyne.com/WeatherWS/\">\r\n  <s:element name=\"GetWeatherInformation\">\r\n    <s:complexType />\r\n  </s:element>\r\n  <s:element name=\"GetWeatherInformationResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetWeatherInformationResult\" type=\"tns:ArrayOfWeatherDescription\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ArrayOfWeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"WeatherDescription\" type=\"tns:WeatherDescription\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"WeatherDescription\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"PictureURL\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityForecastByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityForecastByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"GetCityForecastByZIPResult\" type=\"tns:ForecastReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"ForecastReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ForecastResult\" type=\"tns:ArrayOfForecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"ArrayOfForecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"unbounded\" name=\"Forecast\" nillable=\"true\" type=\"tns:Forecast\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"Forecast\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Date\" type=\"s:dateTime\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Desciption\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Temperatures\" type=\"tns:temp\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"ProbabilityOfPrecipiation\" type=\"tns:POP\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"temp\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"MorningLow\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"DaytimeHigh\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:complexType name=\"POP\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Nighttime\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Daytime\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"GetCityWeatherByZIP\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ZIP\" type=\"s:string\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:element name=\"GetCityWeatherByZIPResponse\">\r\n    <s:complexType>\r\n      <s:sequence>\r\n        <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"GetCityWeatherByZIPResult\" type=\"tns:WeatherReturn\" />\r\n      </s:sequence>\r\n    </s:complexType>\r\n  </s:element>\r\n  <s:complexType name=\"WeatherReturn\">\r\n    <s:sequence>\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"Success\" type=\"s:boolean\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"ResponseText\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"State\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"City\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WeatherStationCity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"1\" maxOccurs=\"1\" name=\"WeatherID\" type=\"s:short\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Description\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Temperature\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"RelativeHumidity\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Wind\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Pressure\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Visibility\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"WindChill\" type=\"s:string\" />\r\n      <s:element minOccurs=\"0\" maxOccurs=\"1\" name=\"Remarks\" type=\"s:string\" />\r\n    </s:sequence>\r\n  </s:complexType>\r\n  <s:element name=\"ArrayOfWeatherDescription\" nillable=\"true\" type=\"tns:ArrayOfWeatherDescription\" />\r\n  <s:element name=\"ForecastReturn\" nillable=\"true\" type=\"tns:ForecastReturn\" />\r\n  <s:element name=\"WeatherReturn\" type=\"tns:WeatherReturn\" />\r\n</s:schema>"
                id: /apis/5a58bdf5a40f7e104892acda/schemas/5a58bdf5a40f7e104892ace0
definitions:
  ApiCollection:
    description: Paged Api list representation.
    properties:
      count:
        description: Total number of entities
        type: integer
      nextLink:
        description: Next page link if any.
        type: string
      value:
        items:
          $ref: '#/definitions/ApiContract'
        type: array
  ApiContract:
    allOf:
      - $ref: '#/definitions/ApiContractProperties'
    description: Api Contract Details
    properties:
      id:
        description: Identifier of the Entity
        type: string
  ApiContractProperties:
    allOf:
      - $ref: '#/definitions/ApiEntityBaseContract'
    description: Api Entity Properties
    properties:
      name:
        description: API name.
        maxLength: 300
        minLength: 1
        type: string
      path:
        description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
        maxLength: 400
        minLength: 0
        type: string
      protocols:
        description: Describes on which protocols the operations in this API can be invoked.
        items:
          enum:
            - http
            - https
          type: string
          x-ms-enum:
            modelAsString: false
            name: Protocol
        type: array
      serviceUrl:
        description: Absolute URL of the backend service implementing this API.
        maxLength: 2000
        minLength: 1
        type: string
    required:
      - path
  ApiCreateOrUpdateParameter:
    allOf:
      - $ref: '#/definitions/ApiContractProperties'
    description: Api Create or Update Properties.
    properties:
      contentFormat:
        description: Format of the Content in which the API is getting imported.
        enum:
          - wadl-xml
          - wadl-link-json
          - swagger-json
          - swagger-link-json
          - wsdl
          - wsdl-link
        type: string
        x-ms-enum:
          modelAsString: true
          name: ContentFormat
          values:
            - description: The contents are inline and Content type is a WADL document.
              value: wadl-xml
            - description: The WADL document is hosted on a publicly accessible internet address.
              value: wadl-link-json
            - description: The contents are inline and Content Type if a OpenApi 2.0 Document.
              value: swagger-json
            - description: The Open Api 2.0 document is hosted on a publicly accessible internet address.
              value: swagger-link-json
            - description: The contents are inline and the document is a WSDL/Soap document.
              value: wsdl
            - description: The WSDL document is hosted on a publicly accessible internet address.
              value: wsdl-link
      contentValue:
        description: Content value when Importing an API.
        type: string
      id:
        description: Identifier of the entity
        type: string
      wsdlSelector:
        description: Criteria to limit import of WSDL to a subset of the document.
        properties:
          wsdlEndpointName:
            description: Name of endpoint(port) to import from WSDL
            type: string
          wsdlServiceName:
            description: Name of service to import from WSDL
            type: string
        type: object
  ApiEntityBaseContract:
    description: API base contract details.
    properties:
      apiRevision:
        description: 'Describes the Revision of the Api. If no value is provided, default revision 1 is created'
        maxLength: 100
        minLength: 1
        type: string
      authenticationSettings:
        $ref: '#/definitions/AuthenticationSettingsContract'
        description: Collection of authentication settings included into this API.
      description:
        description: Description of the API. May include HTML formatting tags.
        type: string
      isCurrent:
        description: Indicates if API revision is current api revision.
        type: boolean
      isOnline:
        description: Indicates if API revision is accessible via the gateway.
        type: boolean
      subscriptionKeyParameterNames:
        $ref: '#/definitions/SubscriptionKeyParameterNamesContract'
        description: Protocols over which API is made available.
      type:
        description: Type of API.
        enum:
          - http
          - soap
        type: string
        x-ms-client-name: ApiType
        x-ms-enum:
          modelAsString: true
          name: ApiType
  ApiExportResult:
    description: API Export result Blob Uri.
    properties:
      link:
        description: Link to the Storage Blob containing the result of the export operation. The Blob Uri is only valid for 5 minutes.
        type: string
  ApiUpdateContract:
    allOf:
      - $ref: '#/definitions/ApiEntityBaseContract'
    description: API update contract properties.
    properties:
      name:
        description: API name.
        maxLength: 300
        minLength: 1
        type: string
      path:
        description: Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.
        maxLength: 400
        minLength: 0
        type: string
      protocols:
        description: Describes on which protocols the operations in this API can be invoked.
        items:
          enum:
            - http
            - https
          type: string
          x-ms-enum:
            modelAsString: false
            name: Protocol
        type: array
      serviceUrl:
        description: Absolute URL of the backend service implementing this API.
        maxLength: 2000
        minLength: 1
        type: string
  AuthenticationSettingsContract:
    description: API Authentication Settings.
    properties:
      oAuth2:
        $ref: '#/definitions/OAuth2AuthenticationSettingsContract'
        description: OAuth2 Authentication settings
  OAuth2AuthenticationSettingsContract:
    description: API OAuth2 Authentication settings details.
    properties:
      authorizationServerId:
        description: OAuth authorization server identifier.
        type: string
      scope:
        description: operations scope.
        type: string
  OperationCollection:
    description: Paged Operation list representation.
    properties:
      count:
        description: Total number of entities
        type: integer
      nextLink:
        description: Next page link if any.
        type: string
      value:
        description: Page values.
        items:
          $ref: '#/definitions/OperationContract'
        type: array
  OperationContract:
    allOf:
      - $ref: '#/definitions/OperationContractProperties'
    description: Api Operation details.
    properties:
      id:
        description: Identifier of the Operation.
        type: string
  OperationContractProperties:
    allOf:
      - $ref: '#/definitions/OperationEntityBaseContract'
    description: Operation Contract Properties
    properties:
      method:
        description: 'A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.'
        externalDocs:
          description: As defined by RFC.
          url: 'http://www.rfc-editor.org/rfc/rfc7230.txt'
        type: string
      name:
        description: Operation Name.
        maxLength: 300
        minLength: 1
        type: string
      urlTemplate:
        description: 'Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}'
        maxLength: 1000
        minLength: 1
        type: string
    required:
      - name
      - method
      - urlTemplate
  OperationEntityBaseContract:
    description: Api Operation Entity Base Contract details.
    properties:
      description:
        description: Description of the operation. May include HTML formatting tags.
        maxLength: 1000
        type: string
      policies:
        description: Operation Policies
        type: string
      request:
        $ref: '#/definitions/RequestContract'
        description: An entity containing request details.
      responses:
        description: Array of Operation responses.
        items:
          $ref: '#/definitions/ResponseContract'
        type: array
      templateParameters:
        description: Collection of URL template parameters.
        items:
          $ref: '#/definitions/ParameterContract'
        type: array
  OperationUpdateContract:
    allOf:
      - $ref: '#/definitions/OperationEntityBaseContract'
    description: Operation Update Contract Properties.
    properties:
      method:
        description: 'A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.'
        externalDocs:
          description: As defined by RFC.
          url: 'http://www.rfc-editor.org/rfc/rfc7230.txt'
        type: string
      name:
        description: Operation Name.
        maxLength: 300
        minLength: 1
        type: string
      urlTemplate:
        description: 'Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}'
        maxLength: 1000
        minLength: 1
        type: string
  ParameterContract:
    description: Operation parameters details.
    properties:
      defaultValue:
        description: Default parameter value.
        type: string
      description:
        description: Parameter description.
        type: string
      name:
        description: Parameter name.
        type: string
      required:
        description: whether parameter is required or not.
        type: boolean
      type:
        description: Parameter type.
        type: string
      values:
        description: Parameter values.
        items:
          type: string
        type: array
    required:
      - name
      - type
  RepresentationContract:
    description: Operation request/response representation details.
    properties:
      contentType:
        description: 'Specifies a registered or custom content type for this representation, e.g. application/xml.'
        type: string
      formParameters:
        description: Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..
        items:
          $ref: '#/definitions/ParameterContract'
        type: array
      sample:
        description: An example of the representation.
        type: string
      schemaId:
        description: Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
        type: string
      typeName:
        description: Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.
        type: string
    required:
      - contentType
  RequestContract:
    description: Operation request details.
    properties:
      description:
        description: Operation request description.
        type: string
      headers:
        description: Collection of operation request headers.
        items:
          $ref: '#/definitions/ParameterContract'
        type: array
      queryParameters:
        description: Collection of operation request query parameters.
        items:
          $ref: '#/definitions/ParameterContract'
        type: array
      representations:
        description: Collection of operation request representations.
        items:
          $ref: '#/definitions/RepresentationContract'
        type: array
  ResponseContract:
    description: Operation response details.
    properties:
      description:
        description: Operation response description.
        type: string
      headers:
        description: Collection of operation response headers.
        items:
          $ref: '#/definitions/ParameterContract'
        type: array
      representations:
        description: Collection of operation response representations.
        items:
          $ref: '#/definitions/RepresentationContract'
        type: array
      statusCode:
        description: Operation response HTTP status code.
        format: int32
        type: integer
    required:
      - statusCode
  SchemaCollection:
    description: The response of the list schema operation.
    properties:
      count:
        description: Total number of entities
        type: integer
      nextLink:
        description: Next page link if any.
        type: string
      value:
        description: Api Schema Contract value.
        items:
          $ref: '#/definitions/SchemaContract'
        type: array
  SchemaContract:
    allOf:
      - $ref: '#/definitions/SchemaContractProperties'
    description: Schema Contract details.
    properties:
      id:
        description: Identifier of the Schema.
        type: string
  SchemaContractProperties:
    description: Schema contract Properties.
    properties:
      contentType:
        description: 'Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml).'
        type: string
      document:
        $ref: '#/definitions/SchemaDocumentProperties'
        description: Properties of the Schema Document.
        x-ms-client-flatten: true
    required:
      - contentType
  SchemaDocumentProperties:
    description: Schema Document Properties.
    properties:
      value:
        description: Json escaped string defining the document representing the Schema.
        type: string
  SubscriptionKeyParameterNamesContract:
    description: Subscription key parameter names details.
    example:
      subscriptionKeyParameterNames:
        header: customHeaderParameterName
        query: customQueryParameterName
    properties:
      header:
        description: Subscription key header name.
        type: string
      query:
        description: Subscription key query string parameter name.
        type: string
x-ms-parameterized-host:
  hostTemplate: '{apimBaseUrl}'
  parameters:
    - description: 'The management endpoint of the API Management service, for example https://myapimservice.management.azure-api.net.'
      in: path
      name: apimBaseUrl
      required: true
      type: string
      x-ms-skip-url-encoding: true
  positionInOperation: first
  useSchemePrefix: false
x-ms-paths:
  '/apis/{apiId}?export=true':
    get:
      description: Gets the details of the API specified by its identifier in the format specified to the Storage Blob with SAS Key valid for 5 minutes.
      operationId: ApiExport_Get
      parameters:
        - $ref: '#/parameters/ApiIdParameter'
        - description: Format in which to export the Api Details to the Storage Blob with Sas Key valid for 5 minutes.
          enum:
            - application/vnd.swagger.link+json
            - application/vnd.sun.wadl.link+json
            - application/vnd.ms.wsdl.link+xml
          in: header
          name: Accept
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportFormat
            values:
              - description: Export the Api Definition in OpenApi Specification 2.0 format to the Storage Blob.
                name: OpenApi2
                value: application/vnd.swagger.link+json
              - description: Export the Api Definition in WSDL Schema to Storage Blob.
                name: Wsdl
                value: application/vnd.ms.wsdl.link+xml
              - description: Export the Api Definition in WADL Schema to Storage Blob.
                name: Wadl
                value: application/vnd.sun.wadl.link+json
        - description: Query parameter required to export the API details.
          enum:
            - 'true'
          in: query
          name: export
          required: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportApi
        - description: Version of the API to be used with the client request.
          in: query
          name: api-version
          required: true
          type: string
      responses:
        '200':
          description: The response contains a stream with a full set of API metadata and includes API entity with an embedded array of operation entities.
          schema:
            $ref: '#/definitions/ApiExportResult'
        default:
          description: Error response describing why the operation failed.
          schema:
            description: Error Body contract.
            properties:
              code:
                description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
                type: string
              details:
                description: 'The list of invalid fields send in request, in case of validation error.'
                items:
                  description: Error Field contract.
                  properties:
                    code:
                      description: Property level error code.
                      type: string
                    message:
                      description: Human-readable representation of property-level error.
                      type: string
                    target:
                      description: Property name.
                      type: string
                type: array
              message:
                description: Human-readable representation of the error.
                type: string
      tags:
        - Apis
