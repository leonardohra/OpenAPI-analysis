swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: 'Use these REST APIs for performing operations on entities like API, Product, and Subscription associated with your Azure API Management deployment.'
  title: ApiManagementClient
  version: '2019-01-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2019-01-01/apimanagement.json'
      version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: apimanagement
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow.
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  AccessParameter:
    description: The identifier of the Access configuration.
    enum:
      - access
    in: path
    name: accessName
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: AccessIdName
    x-ms-parameter-location: method
  ApiIdParameter:
    description: API identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: apiId
    required: true
    type: string
    x-ms-parameter-location: method
  ApiIdRevParameter:
    description: API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
    in: path
    maxLength: 256
    minLength: 1
    name: apiId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  ApiVersionParameter:
    description: Version of the API to be used with the client request.
    in: query
    name: api-version
    required: true
    type: string
  ApiVersionSetIdParameter:
    description: Api Version Set identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: versionSetId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  AttachmentIdParameter:
    description: Attachment identifier within an Issue. Must be unique in the current Issue.
    in: path
    maxLength: 256
    minLength: 1
    name: attachmentId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  AuthenticationServerIdParameter:
    description: Identifier of the authorization server.
    in: path
    maxLength: 80
    minLength: 1
    name: authsid
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  BackendIdParameter:
    description: Identifier of the Backend entity. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: backendId
    required: true
    type: string
    x-ms-parameter-location: method
  CacheIdParameter:
    description: Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).
    in: path
    maxLength: 80
    minLength: 1
    name: cacheId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  CertificateIdParameter:
    description: Identifier of the certificate entity. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: certificateId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  CommentIdParameter:
    description: Comment identifier within an Issue. Must be unique in the current Issue.
    in: path
    maxLength: 256
    minLength: 1
    name: commentId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  ConfigurationParameter:
    description: The identifier of the Git Configuration Operation.
    enum:
      - configuration
    in: path
    name: configurationName
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: configurationIdName
    x-ms-parameter-location: method
  DiagnosticIdParameter:
    description: Diagnostic identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: diagnosticId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  EmailParameter:
    description: Email identifier.
    in: path
    name: email
    required: true
    type: string
    x-ms-parameter-location: method
  GroupIdParameter:
    description: Group identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 256
    minLength: 1
    name: groupId
    required: true
    type: string
    x-ms-parameter-location: method
  IdentityProviderNameParameter:
    description: Identity Provider Type identifier.
    enum:
      - facebook
      - google
      - microsoft
      - twitter
      - aad
      - aadB2C
    in: path
    name: identityProviderName
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: IdentityProviderType
      values:
        - description: Facebook as Identity provider.
          value: facebook
        - description: Google as Identity provider.
          value: google
        - description: Microsoft Live as Identity provider.
          value: microsoft
        - description: Twitter as Identity provider.
          value: twitter
        - description: Azure Active Directory as Identity provider.
          value: aad
        - description: Azure Active Directory B2C as Identity provider.
          value: aadB2C
    x-ms-parameter-location: method
  IfMatchOptionalParameter:
    description: 'ETag of the Entity. Not required when creating an entity, but required when updating an entity.'
    in: header
    name: If-Match
    required: false
    type: string
    x-ms-parameter-location: method
  IfMatchRequiredParameter:
    description: ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.
    in: header
    name: If-Match
    required: true
    type: string
    x-ms-parameter-location: method
  IssueIdParameter:
    description: Issue identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 256
    minLength: 1
    name: issueId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  LocationNameParameter:
    description: 'Location in which the API Management service is deployed. This is one of the Azure Regions like West US, East US, South Central US.'
    in: path
    minLength: 1
    name: locationName
    required: true
    type: string
    x-ms-parameter-location: method
  LoggerIdParameter:
    description: Logger identifier. Must be unique in the API Management service instance.
    in: path
    maxLength: 256
    name: loggerId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  NotificationNameParameter:
    description: Notification Name Identifier.
    enum:
      - RequestPublisherNotificationMessage
      - PurchasePublisherNotificationMessage
      - NewApplicationNotificationMessage
      - BCC
      - NewIssuePublisherNotificationMessage
      - AccountClosedPublisher
      - QuotaLimitApproachingPublisherNotificationMessage
    in: path
    name: notificationName
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: NotificationName
      values:
        - description: The following email recipients and users will receive email notifications about subscription requests for API products requiring approval.
          value: RequestPublisherNotificationMessage
        - description: The following email recipients and users will receive email notifications about new API product subscriptions.
          value: PurchasePublisherNotificationMessage
        - description: The following email recipients and users will receive email notifications when new applications are submitted to the application gallery.
          value: NewApplicationNotificationMessage
        - description: The following recipients will receive blind carbon copies of all emails sent to developers.
          value: BCC
        - description: The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal.
          value: NewIssuePublisherNotificationMessage
        - description: The following email recipients and users will receive email notifications when developer closes his account.
          value: AccountClosedPublisher
        - description: The following email recipients and users will receive email notifications when subscription usage gets close to usage quota.
          value: QuotaLimitApproachingPublisherNotificationMessage
    x-ms-parameter-location: method
  NotifySubscriptionStateChangeParameter:
    description: |-
      Notify change in Subscription State. 
       - If false, do not send any email notification for change of state of subscription 
       - If true, send email notification of change of state of subscription 
    in: query
    name: notify
    required: false
    type: boolean
    x-ms-parameter-location: method
  OpenIdConnectIdParameter:
    description: Identifier of the OpenID Connect Provider.
    in: path
    maxLength: 256
    name: opid
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  OperationIdParameter:
    description: Operation identifier within an API. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: operationId
    required: true
    type: string
    x-ms-parameter-location: method
  PolicyExportFormat:
    default: xml
    description: Policy Export Format.
    enum:
      - xml
      - rawxml
    in: query
    name: format
    required: false
    type: string
    x-ms-enum:
      modelAsString: true
      name: PolicyExportFormat
      values:
        - description: The contents are inline and Content type is an XML document.
          value: xml
        - description: The contents are inline and Content type is a non XML encoded policy document.
          value: rawxml
    x-ms-parameter-location: method
  PolicyIdParameter:
    description: The identifier of the Policy.
    enum:
      - policy
    in: path
    name: policyId
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: PolicyIdName
    x-ms-parameter-location: method
  ProductIdParameter:
    description: Product identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 256
    minLength: 1
    name: productId
    required: true
    type: string
    x-ms-parameter-location: method
  PropertyIdParameter:
    description: Identifier of the property.
    in: path
    maxLength: 256
    name: propId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  QuotaCounterKeyParameter:
    description: 'Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in the policy, then it’s accessible by "boo" counter key. But if it’s defined as counter-key="@("b"+"a")" then it will be accessible by "ba" key'
    in: path
    name: quotaCounterKey
    required: true
    type: string
    x-ms-parameter-location: method
  QuotaPeriodKeyParameter:
    description: Quota period key identifier.
    in: path
    name: quotaPeriodKey
    required: true
    type: string
    x-ms-parameter-location: method
  ReleaseIdParameter:
    description: Release identifier within an API. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: releaseId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  ResourceGroupNameParameter:
    description: The name of the resource group.
    in: path
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  SchemaIdParameter:
    description: Schema identifier within an API. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: schemaId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  ServiceNameParameter:
    description: The name of the API Management service.
    in: path
    maxLength: 50
    minLength: 1
    name: serviceName
    pattern: '^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$'
    required: true
    type: string
    x-ms-parameter-location: method
  SkipQueryParameter:
    description: Number of records to skip.
    format: int32
    in: query
    minimum: 0
    name: $skip
    required: false
    type: integer
    x-ms-parameter-location: method
  SubscriptionEntityIdParameter:
    description: Subscription entity Identifier. The entity represents the association between a user and a product in API Management.
    in: path
    maxLength: 256
    name: sid
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  SubscriptionIdParameter:
    description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
  TagIdParameter:
    description: Tag identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: tagId
    pattern: '^[^*#&+:<>?]+$'
    required: true
    type: string
    x-ms-parameter-location: method
  TemplateNameParameter:
    description: Email Template Name Identifier.
    enum:
      - applicationApprovedNotificationMessage
      - accountClosedDeveloper
      - quotaLimitApproachingDeveloperNotificationMessage
      - newDeveloperNotificationMessage
      - emailChangeIdentityDefault
      - inviteUserNotificationMessage
      - newCommentNotificationMessage
      - confirmSignUpIdentityDefault
      - newIssueNotificationMessage
      - purchaseDeveloperNotificationMessage
      - passwordResetIdentityDefault
      - passwordResetByAdminNotificationMessage
      - rejectDeveloperNotificationMessage
      - requestDeveloperNotificationMessage
    in: path
    name: templateName
    required: true
    type: string
    x-ms-enum:
      modelAsString: true
      name: TemplateName
    x-ms-parameter-location: method
  TopQueryParameter:
    description: Number of records to return.
    format: int32
    in: query
    minimum: 1
    name: $top
    required: false
    type: integer
    x-ms-parameter-location: method
  UserIdParameter:
    description: User identifier. Must be unique in the current API Management service instance.
    in: path
    maxLength: 80
    minLength: 1
    name: userId
    required: true
    type: string
    x-ms-parameter-location: method
paths: {}
definitions:
  ErrorFieldContract:
    description: Error Field contract.
    properties:
      code:
        description: Property level error code.
        type: string
      message:
        description: Human-readable representation of property-level error.
        type: string
      target:
        description: Property name.
        type: string
  ErrorResponse:
    description: Error Response.
    properties:
      error:
        $ref: '#/definitions/ErrorResponseBody'
        description: Properties of the Error Response.
        x-ms-client-flatten: true
  ErrorResponseBody:
    description: Error Body contract.
    properties:
      code:
        description: Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.
        type: string
      details:
        description: 'The list of invalid fields send in request, in case of validation error.'
        items:
          $ref: '#/definitions/ErrorFieldContract'
        type: array
      message:
        description: Human-readable representation of the error.
        type: string
  RegionContract:
    description: Region profile.
    properties:
      isDeleted:
        description: whether Region is deleted.
        type: boolean
      isMasterRegion:
        description: whether Region is the master region.
        type: boolean
      name:
        description: Region name.
        readOnly: true
        type: string
  RegionListResult:
    description: Lists Regions operation response details.
    properties:
      count:
        description: Total record count number across all pages.
        format: int64
        type: integer
      nextLink:
        description: Next page link if any.
        type: string
      value:
        description: Lists of Regions.
        items:
          $ref: '#/definitions/RegionContract'
        type: array
  Resource:
    description: The Resource definition.
    properties:
      id:
        description: Resource ID.
        readOnly: true
        type: string
      name:
        description: Resource name.
        readOnly: true
        type: string
      type:
        description: Resource type for API Management resource.
        readOnly: true
        type: string
    x-ms-azure-resource: true
