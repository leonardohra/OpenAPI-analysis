swagger: '2.0'
schemes:
  - https
host: ee.iva-api.com
info:
  contact:
    x-twitter: VideoDetective
  description: 'Your Gateway to Building Incredible Movie, TV, and Game Content Discovery Experiences.'
  license:
    name: Terms and Conditions
    url: 'https://developer.iva-api.com/terms'
  title: Entertainment Express
  version: '2.0'
  x-apisguru-categories:
    - media
  x-logo:
    url: 'https://twitter.com/VideoDetective/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://ee.iva-api.com/specs/openapi'
      version: '2.0'
  x-providerName: iva-api.com
externalDocs:
  description: For addition information about this api visit the external documentation.
  url: 'https://developer.iva-api.com/docs/v2/getting-started'
consumes:
  - application/json
securityDefinitions:
  ApiKeyHeader:
    description: Authorize requests passing your apiKey in HTTP header.
    in: header
    name: Ocp-Apim-Subscription-Key
    type: apiKey
  ApiKeyQuery:
    description: Authorize requests passing your apiKey in Querystring.
    in: query
    name: subscription-Key
    type: apiKey
parameters:
  Accept:
    description: Accept Header
    enum:
      - application/json
    in: header
    name: Accept
    required: true
    type: string
tags:
  - name: Analytics
  - name: Celebrity
  - name: Changes
  - name: Charts
  - name: Common
  - name: Entertainment
  - name: ExternalIds
  - name: Fandango
  - name: Find
  - name: Games
  - name: GoWatchIt
  - name: Images
  - name: Metacritic
  - name: Movies
  - name: My
  - name: People
  - name: Reports
  - name: Rev
  - name: SDKs
  - name: Shows
  - name: Tests
  - name: TheatricalMovies
  - name: TvGrid
  - name: Videos
  - name: XroadMedia
paths:
  /Analytics/GBUsage/:
    get:
      deprecated: false
      description: Requires a valid Customer ID.
      operationId: GetAnalyticsGBUsage
      parameters:
        - description: Report Tag filter.
          in: query
          name: ReportTag
          required: false
          type: string
        - description: Report month
          enum:
            - January
            - February
            - March
            - April
            - May
            - June
            - July
            - August
            - September
            - October
            - November
            - December
          in: query
          name: Month
          required: false
          type: string
          x-nullable: false
        - description: Report year
          format: int32
          in: query
          name: Year
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GBUsageResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: GB Usage.
      tags:
        - Analytics
    parameters:
      - $ref: '#/parameters/Accept'
  /Celebrity/RankedSearch/:
    get:
      deprecated: false
      description: Find celebrity using name ordered by rank.
      operationId: GetCelebrityRanked
      parameters:
        - in: query
          name: StartsWith
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/CelebrityRankedResponse'
            title: List<CelebrityRankedResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Find Celebrity by Name ordered by rank.
      tags:
        - Celebrity
    parameters:
      - $ref: '#/parameters/Accept'
  /Celebrity/Search/:
    get:
      deprecated: false
      description: 'Search celebrity meta data and images.  Each image in our database is related to a specific movie, TV or game title and is promotional of that title.  If you have title pages or articles about that title, then offering an image gallery on that page is obviously promotional.  If you are doing editorial about another topic and use an image from IVA, you need to reference or otherwise indicate the title of the film, TV show or game so as to be promotional.'
      operationId: SearchCelebrityGet
      parameters:
        - in: query
          name: Package
          required: false
          type: string
        - collectionFormat: multi
          description: 'Search person using one or more Ids.  Ex:  Person/123'
          in: query
          items:
            type: string
          name: Ids
          required: false
          type: array
        - description: 'Rows to skip, used for paging. Default is 0.'
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - description: 'Rows to return, used for paging. Default is 10, limit is 50.'
          format: int32
          in: query
          name: Take
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: Include sub objects from the person
          in: query
          items:
            enum:
              - Images
              - ExternalIds
              - Descriptions
              - AlternateNames
            type: string
          name: Includes
          required: false
          type: array
        - description: Filter results based on Name.
          in: query
          name: Name
          required: false
          type: string
        - description: People with images with estimated age.
          format: int32
          in: query
          name: FaceDetails_Age
          required: false
          type: integer
        - description: People images with a beard.
          in: query
          name: FaceDetails_Beard
          required: false
          type: boolean
        - description: People images with a mustache.
          in: query
          name: FaceDetails_Mustache
          required: false
          type: boolean
        - collectionFormat: multi
          description: Filter People images by emotions.
          in: query
          items:
            enum:
              - UNKNOWN
              - HAPPY
              - SAD
              - ANGRY
              - CONFUSED
              - DISGUSTED
              - SURPRISED
              - CALM
            type: string
            x-nullable: false
          name: FaceDetails_Emotions
          required: false
          type: array
        - description: People images wearing eyeglasses.
          in: query
          name: FaceDetails_Eyeglasses
          required: false
          type: boolean
        - description: People images wearing sunglasses.
          in: query
          name: FaceDetails_Sunglasses
          required: false
          type: boolean
        - description: People images with eyes open.
          in: query
          name: FaceDetails_EyesOpen
          required: false
          type: boolean
        - description: People images with mouth open.
          in: query
          name: FaceDetails_MouthOpen
          required: false
          type: boolean
        - description: People images based on gender.
          enum:
            - UNKNOWN
            - Male
            - Female
          in: query
          name: FaceDetails_Gender
          required: false
          type: string
        - description: People images with smile.
          in: query
          name: FaceDetails_Smile
          required: false
          type: boolean
        - description: People with images greater than or equal to image height.
          format: int32
          in: query
          name: MinImageHeight
          required: false
          type: integer
        - description: People with images greater than or equal to image width.
          format: int32
          in: query
          name: MinImageWidth
          required: false
          type: integer
        - description: People with images of type.
          enum:
            - UNKNOWN
            - Poster
            - Photo
            - Portrait
          in: query
          name: ImageType
          required: false
          type: string
        - collectionFormat: multi
          description: People with image violence scores.
          in: query
          items:
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
            format: int32
            type: integer
            x-nullable: false
          name: ImageViolence
          required: false
          type: array
        - description: Filter results with a minimum Rating greater than or equal to this value. (0 to 100)
          format: int32
          in: query
          name: Minimum_IvaRating
          required: false
          type: integer
        - collectionFormat: multi
          description: People with image sexuality scores.
          in: query
          items:
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
            format: int32
            type: integer
            x-nullable: false
          name: ImageSexuality
          required: false
          type: array
        - collectionFormat: multi
          description: People with image containing tags.
          in: query
          items:
            type: string
          name: ImageTags
          required: false
          type: array
        - description: Limit People with official images.
          in: query
          name: OfficialImage
          required: false
          type: boolean
        - collectionFormat: multi
          description: 'People with images from EntertainmentIds.  Ex: Movie/1234'
          in: query
          items:
            type: string
          name: ImageEntertainmentIds
          required: false
          type: array
        - description: Filter by birth name.
          in: query
          name: BirthName
          required: false
          type: string
        - description: Filter people by gender. (m or f)
          enum:
            - m
            - f
          in: query
          name: Gender
          required: false
          type: string
        - description: Birth Date
          format: date-time
          in: query
          name: BirthDate
          required: false
          type: string
        - description: Birth Year
          format: int32
          in: query
          name: BirthYear
          required: false
          type: integer
        - description: Birth Day of Month
          format: int32
          in: query
          name: BirthDayOfMonth
          required: false
          type: integer
        - description: Birth Month of Year
          format: int32
          in: query
          name: BirthMonthOfYear
          required: false
          type: integer
        - description: Birth Day of Month
          format: int32
          in: query
          name: DeathDayOfMonth
          required: false
          type: integer
        - description: Birth Month of Year
          format: int32
          in: query
          name: DeathMonthOfYear
          required: false
          type: integer
        - description: Filter results matching external Id
          in: query
          name: ExternalId
          required: false
          type: string
        - description: Filter results matching external Id
          enum:
            - IVA
            - TMDB
            - IMDB
            - Facebook
            - Instagram
            - Twitter
            - Freebase_MID
            - Freebase_ID
            - TvRage
          in: query
          name: ExternalIdType
          required: false
          type: string
        - description: Filter results based on timestamp.  Returns >= value timestamp (UTC) provided.
          format: date-time
          in: query
          name: ModifiedRecordsSince
          required: false
          type: string
        - description: Sort results based on last modified descending.  Default is sorted by _score
          in: query
          name: SortByTimeStamp
          required: false
          type: boolean
        - description: Include Soft Deleted Records. Default (false)
          in: query
          name: IncludeDeleted
          required: false
          type: boolean
          x-nullable: false
        - description: SortBy
          in: query
          name: SortBy
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SearchCelebrityResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Search celebrities.
      tags:
        - Celebrity
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: 'Search celebrity meta data and images.  Each image in our database is related to a specific movie, TV or game title and is promotional of that title.  If you have title pages or articles about that title, then offering an image gallery on that page is obviously promotional.  If you are doing editorial about another topic and use an image from IVA, you need to reference or otherwise indicate the title of the film, TV show or game so as to be promotional.'
      operationId: SearchCelebrityPost
      parameters:
        - in: formData
          name: Package
          required: false
          type: string
        - collectionFormat: multi
          description: 'Search person using one or more Ids.  Ex:  Person/123'
          in: formData
          items:
            type: string
          name: Ids
          required: false
          type: array
        - description: 'Rows to skip, used for paging. Default is 0.'
          format: int32
          in: formData
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - description: 'Rows to return, used for paging. Default is 10, limit is 50.'
          format: int32
          in: formData
          name: Take
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: Include sub objects from the person
          in: formData
          items:
            enum:
              - Images
              - ExternalIds
              - Descriptions
              - AlternateNames
            type: string
          name: Includes
          required: false
          type: array
        - description: Filter results based on Name.
          in: formData
          name: Name
          required: false
          type: string
        - description: People with images with estimated age.
          format: int32
          in: formData
          name: FaceDetails_Age
          required: false
          type: integer
        - description: People images with a beard.
          in: formData
          name: FaceDetails_Beard
          required: false
          type: boolean
        - description: People images with a mustache.
          in: formData
          name: FaceDetails_Mustache
          required: false
          type: boolean
        - collectionFormat: multi
          description: Filter People images by emotions.
          in: formData
          items:
            enum:
              - UNKNOWN
              - HAPPY
              - SAD
              - ANGRY
              - CONFUSED
              - DISGUSTED
              - SURPRISED
              - CALM
            type: string
            x-nullable: false
          name: FaceDetails_Emotions
          required: false
          type: array
        - description: People images wearing eyeglasses.
          in: formData
          name: FaceDetails_Eyeglasses
          required: false
          type: boolean
        - description: People images wearing sunglasses.
          in: formData
          name: FaceDetails_Sunglasses
          required: false
          type: boolean
        - description: People images with eyes open.
          in: formData
          name: FaceDetails_EyesOpen
          required: false
          type: boolean
        - description: People images with mouth open.
          in: formData
          name: FaceDetails_MouthOpen
          required: false
          type: boolean
        - description: People images based on gender.
          enum:
            - UNKNOWN
            - Male
            - Female
          in: formData
          name: FaceDetails_Gender
          required: false
          type: string
        - description: People images with smile.
          in: formData
          name: FaceDetails_Smile
          required: false
          type: boolean
        - description: People with images greater than or equal to image height.
          format: int32
          in: formData
          name: MinImageHeight
          required: false
          type: integer
        - description: People with images greater than or equal to image width.
          format: int32
          in: formData
          name: MinImageWidth
          required: false
          type: integer
        - description: People with images of type.
          enum:
            - UNKNOWN
            - Poster
            - Photo
            - Portrait
          in: formData
          name: ImageType
          required: false
          type: string
        - collectionFormat: multi
          description: People with image violence scores.
          in: formData
          items:
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
            format: int32
            type: integer
            x-nullable: false
          name: ImageViolence
          required: false
          type: array
        - description: Filter results with a minimum Rating greater than or equal to this value. (0 to 100)
          format: int32
          in: formData
          name: Minimum_IvaRating
          required: false
          type: integer
        - collectionFormat: multi
          description: People with image sexuality scores.
          in: formData
          items:
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
            format: int32
            type: integer
            x-nullable: false
          name: ImageSexuality
          required: false
          type: array
        - collectionFormat: multi
          description: People with image containing tags.
          in: formData
          items:
            type: string
          name: ImageTags
          required: false
          type: array
        - description: Limit People with official images.
          in: formData
          name: OfficialImage
          required: false
          type: boolean
        - collectionFormat: multi
          description: 'People with images from EntertainmentIds.  Ex: Movie/1234'
          in: formData
          items:
            type: string
          name: ImageEntertainmentIds
          required: false
          type: array
        - description: Filter by birth name.
          in: formData
          name: BirthName
          required: false
          type: string
        - description: Filter people by gender. (m or f)
          enum:
            - m
            - f
          in: formData
          name: Gender
          required: false
          type: string
        - description: Birth Date
          format: date-time
          in: formData
          name: BirthDate
          required: false
          type: string
        - description: Birth Year
          format: int32
          in: formData
          name: BirthYear
          required: false
          type: integer
        - description: Birth Day of Month
          format: int32
          in: formData
          name: BirthDayOfMonth
          required: false
          type: integer
        - description: Birth Month of Year
          format: int32
          in: formData
          name: BirthMonthOfYear
          required: false
          type: integer
        - description: Birth Day of Month
          format: int32
          in: formData
          name: DeathDayOfMonth
          required: false
          type: integer
        - description: Birth Month of Year
          format: int32
          in: formData
          name: DeathMonthOfYear
          required: false
          type: integer
        - description: Filter results matching external Id
          in: formData
          name: ExternalId
          required: false
          type: string
        - description: Filter results matching external Id
          enum:
            - IVA
            - TMDB
            - IMDB
            - Facebook
            - Instagram
            - Twitter
            - Freebase_MID
            - Freebase_ID
            - TvRage
          in: formData
          name: ExternalIdType
          required: false
          type: string
        - description: Filter results based on timestamp.  Returns >= value timestamp (UTC) provided.
          format: date-time
          in: formData
          name: ModifiedRecordsSince
          required: false
          type: string
        - description: Sort results based on last modified descending.  Default is sorted by _score
          in: formData
          name: SortByTimeStamp
          required: false
          type: boolean
        - description: Include Soft Deleted Records. Default (false)
          in: formData
          name: IncludeDeleted
          required: false
          type: boolean
          x-nullable: false
        - description: SortBy
          in: formData
          name: SortBy
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SearchCelebrityResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Search celebrities.
      tags:
        - Celebrity
  /Changes/Episodes/History/:
    get:
      deprecated: false
      description: 'For each updated episode ID, pull the full episode data for that ID and update.'
      operationId: GetEpisodeChangeHistory
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EpisodeChangeHistoryResponse'
            title: List<EpisodeChangeHistoryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique EpisodeId changes greater than or equal to date (UTC)
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Episodes/HistoryWithEntity/:
    get:
      deprecated: false
      description: Lists each episode ID that has changed as well as the entity in the object that changed.
      operationId: GetEpisodeChangeHistoryWithEntity
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EpisodeChangeHistoryWithEntityResponse'
            title: List<EpisodeChangeHistoryWithEntityResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique EpisodeId and Entity changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Games/History/:
    get:
      deprecated: false
      description: Requires a valid Date.
      operationId: GetGameChangeHistory
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/GameChangeHistoryResponse'
            title: List<GameChangeHistoryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique GameId changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Movies/History/:
    get:
      deprecated: false
      description: 'Use to get the ID''s of the movies that have been added or changed and use /Movies/{ID} to get back the object with the updated data and replace in your database.'
      operationId: GetMovieChangeHistory
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieChangeHistoryResponse'
            title: List<MovieChangeHistoryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique MovieId changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Movies/HistoryWithEntity/:
    get:
      deprecated: false
      description: Same as /Changes/Movies/History but with the specific entities that have changed inside the MovieResponse.
      operationId: GetMovieChangeHistoryWithEntity
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieChangeHistoryWithEntityResponse'
            title: List<MovieChangeHistoryWithEntityResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: |-

        Returns list of unique MovieId and Entity changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/People/History/:
    get:
      deprecated: false
      description: Requires a valid Date.
      operationId: GetPersonChangeHistory
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/PersonChangeHistoryResponse'
            title: List<PersonChangeHistoryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique PersonId changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/People/HistoryWithEntity/:
    get:
      deprecated: false
      description: Requires a valid Date.
      operationId: GetPersonChangeHistoryWithEntity
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/PersonChangeHistoryWithEntityResponse'
            title: List<PersonChangeHistoryWithEntityResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique PersonId and Entity changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Seasons/History/:
    get:
      deprecated: false
      description: Use if you want to check for specific updates to season records.
      operationId: GetSeasonChangeHistory
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/SeasonChangeHistoryResponse'
            title: List<SeasonChangeHistoryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique SeasonId changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Seasons/HistoryWithEntity/:
    get:
      deprecated: false
      description: Returns list of new or changed SeasonIds with the entity that has changed.
      operationId: GetSeasonChangeHistoryWithEntity
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/SeasonChangeHistoryWithEntityResponse'
            title: List<SeasonChangeHistoryWithEntityResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique SeasonId and Entity changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Shows/History/:
    get:
      deprecated: false
      description: 'All new and updated shows from requested date and time.  When a record gets updated, use the ID to get the full show object and replace the data in your cache.'
      operationId: GetShowChangeHistory
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowChangeHistoryResponse'
            title: List<ShowChangeHistoryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique ShowId changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Changes/Shows/HistoryWithEntity/:
    get:
      deprecated: false
      description: Returns a list of ShowId and entity of any show that has been updated.
      operationId: GetShowChangeHistoryWithEntity
      parameters:
        - description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Date
          required: true
          type: string
          x-nullable: false
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowChangeHistoryWithEntityResponse'
            title: List<ShowChangeHistoryWithEntityResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of unique ShowId and Entity changes greater than or equal to date (UTC).
      tags:
        - Changes
    parameters:
      - $ref: '#/parameters/Accept'
  /Charts/Movies/Boxoffice:
    get:
      deprecated: false
      description: Returns top 10 box office movies.
      operationId: GetChartMoviesBoxoffice
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 100)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ChartItem'
            title: List<ChartItem>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Movies (Weekend box office revenue).
      tags:
        - Charts
    parameters:
      - $ref: '#/parameters/Accept'
  /Charts/Movies/MostAnticipated:
    get:
      deprecated: false
      description: Requires Skip and Take. Maximum page size is 100.
      operationId: GetChartMoviesMostAnticipated
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 100)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ChartItem'
            title: List<ChartItem>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Movies (Most Anticipated).
      tags:
        - Charts
    parameters:
      - $ref: '#/parameters/Accept'
  /Charts/Movies/Popular:
    get:
      deprecated: false
      description: Requires Skip and Take. Maximum page size is 100.
      operationId: GetChartMoviesPopular
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 100)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ChartItem'
            title: List<ChartItem>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Movies based on popularity.
      tags:
        - Charts
    parameters:
      - $ref: '#/parameters/Accept'
  /Charts/People/Popular:
    get:
      deprecated: false
      description: Requires Skip and Take. Maximum page size is 100.
      operationId: GetChartPeoplePopular
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 100)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ChartPersonItem'
            title: List<ChartPersonItem>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Celebrities based on popularity.
      tags:
        - Charts
    parameters:
      - $ref: '#/parameters/Accept'
  /Charts/Shows/Popular:
    get:
      deprecated: false
      description: Requires Skip and Take. Maximum page size is 100.
      operationId: GetChartShowsPopular
      parameters:
        - description: Limits the total items returned. Maximum of 100 per request.
          format: int32
          in: query
          name: Take
          required: false
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ChartItem'
            title: List<ChartItem>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Shows based on popularity.
      tags:
        - Charts
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/Companies/:
    get:
      deprecated: false
      description: 'Companies are listed in a movie, show, or game response as those whom are involved with the program.  EX: Universal Pictures.'
      operationId: GetCompanies
      parameters:
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/CompanyResponse'
            title: List<CompanyResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Companies (with paging).
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/Countries/:
    get:
      deprecated: false
      description: 'List of Countries, ISO codes and Country IDs used throughout the API.'
      operationId: GetCountries
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/CountryResponse'
            title: List<CountryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Countries.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/DataDemoFilters:
    get:
      deprecated: false
      description: List of filter options available in data demo.
      operationId: GetDataDemoFilters
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/DataDemoFilters'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of filter options available in data demo.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/GetCommonEnumerators:
    get:
      deprecated: false
      description: Provider enumerator has values added regularly.  Update your SDK to refresh these values.
      operationId: GetCommonEnumerators
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CommonEnumerators'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Common Enumerators.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/ImageTypes/:
    get:
      deprecated: false
      description: 'A list of image types available in the IVA database. **EX: Poster**'
      operationId: GetImageTypes
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ImageTypeResponse'
            title: List<ImageTypeResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Image Types.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/Languages/:
    get:
      deprecated: false
      description: Returns a list of languages used in the API as well as the ISO code and language ID.
      operationId: GetLanguages
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/LanguageResponse'
            title: List<LanguageResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Languages.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/OriginatingNetworks/:
    get:
      deprecated: false
      description: No parameters.
      operationId: GetOriginatingNetworks
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/OriginatingNetworkResponse'
            title: List<OriginatingNetworkResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Originating Networks.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/Tags/:
    get:
      deprecated: false
      description: Paged list of all tags used in the API.
      operationId: GetTags
      parameters:
        - description: Offset for paging. Default is 0.
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: 'Maximum number of rows returned. Default is 1,000.'
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TagResponse'
            title: List<TagResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Tags (with paging
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/TrendSources:
    get:
      deprecated: false
      description: List of Trend Sources.
      operationId: GetTrendSources
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TrendSourceResponse'
            title: List<TrendSourceResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Trend Sources.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Common/VideoTypes/:
    get:
      deprecated: false
      description: Returns a list of the types of videos that can be associated to a title.
      operationId: GetVideoTypes
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/VideoTypeResponse'
            title: List<VideoTypeResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Video Types.
      tags:
        - Common
    parameters:
      - $ref: '#/parameters/Accept'
  /Entertainment/Autocomplete/:
    get:
      deprecated: false
      description: Get suggestions based on prefix and field selection.
      operationId: SearchEntertainmentAutoComplete
      parameters:
        - description: 'Rows to return, used for paging. Default is 10, limit is 50.'
          format: int32
          in: query
          name: Size
          required: false
          type: integer
          x-nullable: false
        - in: query
          name: Package
          required: false
          type: string
        - collectionFormat: multi
          description: List of program types. See /Common/GetCommonEnumerators endpoint for complete list.
          in: query
          items:
            enum:
              - Movie
              - Show
              - Game
              - Season
              - Episode
            type: string
            x-nullable: false
          name: ProgramTypes
          required: false
          type: array
        - description: List of available auto completion fields.
          enum:
            - basedOns_instanceOfLabel
            - basedOns_label
            - subjects_label
            - filmingLocations_label
            - narrativeLocations_label
            - microGenres_label
            - timePeriods_label
            - title
            - originalTitle
            - tags
            - originatingNetwork
            - companies_name
            - contributors_personName
          in: query
          name: Field
          required: true
          type: string
          x-nullable: false
        - description: String prefix to use to locate matching strings based on Field selected.
          in: query
          name: Prefix
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/SearchEntertainmentAutoCompleteResponse'
            title: List<SearchEntertainmentAutoCompleteResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - Entertainment
    parameters:
      - $ref: '#/parameters/Accept'
  /Entertainment/Match/:
    get:
      deprecated: false
      description: 'Requires a valid program type and at least a title. Matches to Entertainment Programs of given type, returns all candidates that achieved the highest score, ties possible.'
      operationId: MatchToEntertainmentGet
      parameters:
        - description: Type of Program to be matched.
          in: query
          name: ProgramType
          required: true
          type: string
          x-nullable: false
        - description: 'Id of Entertainment program to be matched against, if this is set no search is run and data is compared to this program only.'
          format: int64
          in: query
          name: EntertainmentId
          required: false
          type: integer
        - description: Title of Program to be matched.
          in: query
          name: Title
          required: false
          type: string
        - collectionFormat: multi
          description: Alternate Titles of Program to be matched.
          in: query
          items:
            type: string
          name: AlternateTitles
          required: false
          type: array
        - description: Release Year of Program to be matched.
          format: int32
          in: query
          name: Year
          required: false
          type: integer
        - collectionFormat: multi
          description: Cast members of Program to be matched.
          in: query
          items:
            type: string
          name: Cast
          required: false
          type: array
        - collectionFormat: multi
          description: Producers of Program to be matched.
          in: query
          items:
            type: string
          name: Producers
          required: false
          type: array
        - collectionFormat: multi
          description: Directors of Program to be matched.
          in: query
          items:
            type: string
          name: Directors
          required: false
          type: array
        - description: Description of Program to be matched.
          in: query
          name: Description
          required: false
          type: string
        - description: Originating network of SHOW Program to be matched.
          in: query
          name: OriginatingNetwork
          required: false
          type: string
        - description: Poster of Program to be matched.
          in: query
          name: Poster
          required: false
          type: string
        - description: Release Date of Program to be matched.
          format: date-time
          in: query
          name: ReleaseDate
          required: false
          type: string
        - description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
          format: int32
          in: query
          name: StringDistance
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MatchToEntertainmentProgramResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Match a program using Title, Year, Cast, Director.'
      tags:
        - Entertainment
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: 'Requires a valid program type and at least a title. Matches to Entertainment Programs of given type, returns all candidates that achieved the highest score, ties possible.'
      operationId: MatchToEntertainmentPost
      parameters:
        - description: Type of Program to be matched.
          in: formData
          name: ProgramType
          required: true
          type: string
          x-nullable: false
        - description: 'Id of Entertainment program to be matched against, if this is set no search is run and data is compared to this program only.'
          format: int64
          in: formData
          name: EntertainmentId
          required: false
          type: integer
        - description: Title of Program to be matched.
          in: formData
          name: Title
          required: false
          type: string
        - collectionFormat: multi
          description: Alternate Titles of Program to be matched.
          in: formData
          items:
            type: string
          name: AlternateTitles
          required: false
          type: array
        - description: Release Year of Program to be matched.
          format: int32
          in: formData
          name: Year
          required: false
          type: integer
        - collectionFormat: multi
          description: Cast members of Program to be matched.
          in: formData
          items:
            type: string
          name: Cast
          required: false
          type: array
        - collectionFormat: multi
          description: Producers of Program to be matched.
          in: formData
          items:
            type: string
          name: Producers
          required: false
          type: array
        - collectionFormat: multi
          description: Directors of Program to be matched.
          in: formData
          items:
            type: string
          name: Directors
          required: false
          type: array
        - description: Description of Program to be matched.
          in: formData
          name: Description
          required: false
          type: string
        - description: Originating network of SHOW Program to be matched.
          in: formData
          name: OriginatingNetwork
          required: false
          type: string
        - description: Poster of Program to be matched.
          in: formData
          name: Poster
          required: false
          type: string
        - description: Release Date of Program to be matched.
          format: date-time
          in: formData
          name: ReleaseDate
          required: false
          type: string
        - description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
          format: int32
          in: formData
          name: StringDistance
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MatchToEntertainmentProgramResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Match a program using Title, Year, Cast, Director.'
      tags:
        - Entertainment
  /Entertainment/Search/:
    get:
      deprecated: false
      description: 'Search movies, shows, seasons, episodes, and games.  Each image in our database is related to a specific movie, TV or game title and is promotional of that title.  If you have title pages or articles about that title, then offering an image gallery on that page is obviously promotional.  If you are doing editorial about another topic and use an image from IVA, you need to reference or otherwise indicate the title of the film, TV show or game so as to be promotional.'
      operationId: SearchEntertainmentGet
      parameters:
        - collectionFormat: multi
          description: 'Search by one or more Ids.  Ex: Movie/123.'
          in: query
          items:
            type: string
          name: Ids
          required: false
          type: array
        - description: 'Rows to skip, used for paging. Default is 0.'
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - description: 'Rows to return, used for paging. Default is 10, limit is 50.'
          format: int32
          in: query
          name: Take
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of availability providers.  See /Common/GetCommonEnumerators endpoint for complete list.
          in: query
          items:
            enum:
              - NOT_SET
              - AmazonInstantVideo
              - NBC
              - ABC
              - FOX
              - FandangoMovies
              - GooglePlay
              - CBS
              - The_CW
              - TBS
              - Nickelodeon
              - PBS
              - Discovery_Channel
              - HBO
              - Disney_XD
              - USA_Network
              - Hulu
              - AmazonPrimeVideo
              - iTunes
              - Netflix
              - AtomTickets
              - YouTubePremium
              - DCUniverse
              - AppleTvPlus
              - DisneyPlus
            type: string
            x-nullable: false
          name: Providers
          required: false
          type: array
        - collectionFormat: multi
          description: List of availability delivery methods. See /Common/GetCommonEnumerators endpoint for complete list.
          in: query
          items:
            enum:
              - NOT_SET
              - Scheduled
              - Ticket
              - Physical
              - OnDemand
            type: string
            x-nullable: false
          name: DeliveryMethods
          required: false
          type: array
        - collectionFormat: multi
          description: List of availability offer types. See /Common/GetCommonEnumerators endpoint for complete list.
          in: query
          items:
            enum:
              - NOT_SET
              - Buy
              - Subscription
              - Free
              - Rent
            type: string
            x-nullable: false
          name: OfferTypes
          required: false
          type: array
        - collectionFormat: multi
          description: List of availability video qualities. See /Common/GetCommonEnumerators endpoint for complete list.
          in: query
          items:
            enum:
              - NOT_SET
              - HD
              - UHD
              - SD
            type: string
            x-nullable: false
          name: VideoQualities
          required: false
          type: array
        - collectionFormat: multi
          description: List of program types. See /Common/GetCommonEnumerators endpoint for complete list.
          in: query
          items:
            enum:
              - Movie
              - Show
              - Game
              - Season
              - Episode
            type: string
            x-nullable: false
          name: ProgramTypes
          required: false
          type: array
        - collectionFormat: multi
          description: List of 2 character country codes.
          in: query
          items:
            type: string
          name: AvailabilityCountries
          required: false
          type: array
        - collectionFormat: multi
          description: List of genres (movie and show).
          in: query
          items:
            type: string
          name: Genres
          required: false
          type: array
        - collectionFormat: multi
          description: List of themes (movie and show).
          in: query
          items:
            type: string
          name: Themes
          required: false
          type: array
        - collectionFormat: multi
          description: List of tags (movie and show).
          in: query
          items:
            type: string
          name: Tags
          required: false
          type: array
        - collectionFormat: multi
          description: List of certifications for movie and show.
          in: query
          items:
            type: string
          name: Certifications
          required: false
          type: array
        - collectionFormat: multi
          description: List of names. Maximum of 3.
          in: query
          items:
            type: string
          name: PersonNames
          required: false
          type: array
        - collectionFormat: multi
          description: Person Ids.  Currently supports one person.
          in: query
          items:
            type: string
          name: PeopleIds
          required: false
          type: array
        - collectionFormat: multi
          description: List of Jobs a contributor can have.
          in: query
          items:
            type: string
          name: Jobs
          required: false
          type: array
        - collectionFormat: multi
          description: List of release types for both movie and show.
          in: query
          items:
            enum:
              - Digital
              - Festival
              - Physical
              - Premiere
              - Theatrical_Limited_Release
              - Theatrical_Wide_Release
              - TV
              - On_Demand_Release
              - Show_Release
            type: string
            x-nullable: false
          name: ReleaseTypes
          required: false
          type: array
        - collectionFormat: multi
          description: List of 2 character country codes when filtering on releases.
          in: query
          items:
            type: string
          name: ReleaseCountries
          required: false
          type: array
        - description: Filter results based on start and end original release year.
          format: int32
          in: query
          name: YearRange_Start
          required: false
          type: integer
        - description: Filter results based on start and end original release year.
          format: int32
          in: query
          name: YearRange_End
          required: false
          type: integer
        - description: Filter results based on any release date range.
          format: date-time
          in: query
          name: ReleaseDateRange_Start
          required: false
          type: string
        - description: Filter results based on any release date range.
          format: date-time
          in: query
          name: ReleaseDateRange_End
          required: false
          type: string
        - description: Filter results based on original release date range.
          format: date-time
          in: query
          name: OriginalReleaseDateRange_Start
          required: false
          type: string
        - description: Filter results based on original release date range.
          format: date-time
          in: query
          name: OriginalReleaseDateRange_End
          required: false
          type: string
        - in: query
          name: Package
          required: false
          type: string
        - description: Title search.
          in: query
          name: Title
          required: false
          type: string
        - description: Filter results to match a show.  Use for locating seasons and episodes for a show.
          in: query
          name: ShowId
          required: false
          type: string
        - description: Filter results to match a season.  Use for locating episodes for a season.
          in: query
          name: SeasonId
          required: false
          type: string
        - collectionFormat: multi
          description: Include sub objects from the program
          in: query
          items:
            enum:
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - ExternalIds
              - Videos
              - Images
              - Availabilities
              - Genres
              - ProgramTrends
              - Themes
              - Subjects
              - FilmingLocations
              - NarrativeLocations
              - BasedOns
              - TimePeriods
              - MicroGenres
              - ProgramTags
            type: string
          name: Includes
          required: false
          type: array
        - description: Specify the country and language
          enum:
            - NOT_SET
            - English_US
            - English_CA
            - English_UK
            - English_AU
          in: query
          name: Culture
          required: false
          type: string
        - description: Filter results matching external Id
          in: query
          name: ExternalId
          required: false
          type: string
        - description: Filter results matching external Id
          in: query
          name: ExternalIdType
          required: false
          type: string
        - description: Filter results matching company name
          in: query
          name: CompanyName
          required: false
          type: string
        - description: Filter results based on having video content
          in: query
          name: HasVideo
          required: false
          type: boolean
        - description: Filter results based on matching a single Video ID.
          format: int64
          in: query
          name: VideoId
          required: false
          type: integer
        - collectionFormat: multi
          description: List of 2 character country codes when filtering on video target countries.
          in: query
          items:
            type: string
          name: VideoTargetCountries
          required: false
          type: array
        - collectionFormat: multi
          description: Specify video target languages. This takes into consideration both language spoken and language subtitled.
          in: query
          items:
            type: string
          name: VideoTargetLanguages
          required: false
          type: array
        - description: Sort results based on last modified descending.  Default is sorted by _score. DEPRECIATED! Use SortBy instead.
          in: query
          name: SortByTimeStamp
          required: false
          type: boolean
          x-nullable: false
        - description: SortBy
          enum:
            - NOT_SET
            - Relevance
            - TimeStamp
            - IvaRating
            - ReleaseDate
            - CalculatedTrendRank
          in: query
          name: SortBy
          required: false
          type: string
        - description: Filter results based on timestamp.  Returns >= value timestamp (UTC) provided.
          format: date-time
          in: query
          name: ModifiedRecordsSince
          required: false
          type: string
        - collectionFormat: multi
          description: 'The Network the current first run shows appear on. Ex: ABC, NBC, Netflix, etc.  '
          in: query
          items:
            type: string
          name: OriginatingNetworks
          required: false
          type: array
        - collectionFormat: multi
          description: 'The status of the movie or show.  Ex: Returning_Series, in_production, etc.  '
          in: query
          items:
            type: string
          name: Status
          required: false
          type: array
        - collectionFormat: multi
          description: The original language of the program.
          in: query
          items:
            type: string
          name: OriginalLanguages
          required: false
          type: array
        - description: Filter results where movie revenue is greater than or equal to this value.
          format: int64
          in: query
          name: Revenue
          required: false
          type: integer
        - description: Filter results where movie budget is greater than or equal to this value.
          format: int64
          in: query
          name: Budget
          required: false
          type: integer
        - description: Filter results with a minimum Rating greater than or equal to this value. (0 to 100)
          format: int32
          in: query
          name: Minimum_IvaRating
          required: false
          type: integer
        - description: Filter results based on encode date.
          format: date-time
          in: query
          name: Minimum_EncodeDate
          required: false
          type: string
        - description: Include Soft Deleted Records. Default (false)
          in: query
          name: IncludeDeleted
          required: false
          type: boolean
          x-nullable: false
        - collectionFormat: multi
          description: 'Program Trend Source Ids.  Ex: 2,3.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: TrendSourceIds
          required: false
          type: array
        - collectionFormat: multi
          description: 'Program Trend Brands.  Ex: IMDB,IVA'
          in: query
          items:
            enum:
              - IMDB
              - IVA
              - BoxOfficeMojo
              - TMDB
              - RottenTomatoes
              - TVGuide
              - iTunes
              - Amazon
              - Fios
              - Gamespot
              - Hulu
              - MovieClips
              - Netflix
              - PlutoTV
              - Redbox
              - TheNumbers
              - Vudu
              - Xfinity
              - Youtube
            type: string
          name: TrendBrands
          required: false
          type: array
        - collectionFormat: multi
          description: 'Program Trend Countries.  Ex: US,CA.'
          in: query
          items:
            type: string
          name: TrendCountries
          required: false
          type: array
        - collectionFormat: multi
          description: 'Program Trend List Classifiers.  Ex: AVOD,SVOD.'
          in: query
          items:
            enum:
              - Publisher
              - TVOD
              - SVOD
              - Revenue
              - Social
              - Trailers
              - AVOD
              - Physical
            type: string
          name: TrendListClassifiers
          required: false
          type: array
        - collectionFormat: multi
          description: List of External ID Names that will be used to find where they DO NOT exist.
          in: query
          items:
            type: string
          name: MissingExternalIdNames
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: query
          items:
            type: string
          name: BasedOns
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: query
          items:
            type: string
          name: BasedOnInstanceOfs
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: query
          items:
            type: string
          name: FilmingLocations
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: query
          items:
            type: string
          name: NarrativeLocations
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: query
          items:
            type: string
          name: TimePeriods
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: query
          items:
            type: string
          name: Subjects
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: query
          items:
            type: string
          name: MicroGenres
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SearchEntertainmentResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Search all entertainment programs.
      tags:
        - Entertainment
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: 'Search movies, shows, seasons, episodes, and games.  Each image in our database is related to a specific movie, TV or game title and is promotional of that title.  If you have title pages or articles about that title, then offering an image gallery on that page is obviously promotional.  If you are doing editorial about another topic and use an image from IVA, you need to reference or otherwise indicate the title of the film, TV show or game so as to be promotional.'
      operationId: SearchEntertainmentPost
      parameters:
        - collectionFormat: multi
          description: 'Search by one or more Ids.  Ex: Movie/123.'
          in: formData
          items:
            type: string
          name: Ids
          required: false
          type: array
        - description: 'Rows to skip, used for paging. Default is 0.'
          format: int32
          in: formData
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - description: 'Rows to return, used for paging. Default is 10, limit is 50.'
          format: int32
          in: formData
          name: Take
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of availability providers.  See /Common/GetCommonEnumerators endpoint for complete list.
          in: formData
          items:
            enum:
              - NOT_SET
              - AmazonInstantVideo
              - NBC
              - ABC
              - FOX
              - FandangoMovies
              - GooglePlay
              - CBS
              - The_CW
              - TBS
              - Nickelodeon
              - PBS
              - Discovery_Channel
              - HBO
              - Disney_XD
              - USA_Network
              - Hulu
              - AmazonPrimeVideo
              - iTunes
              - Netflix
              - AtomTickets
              - YouTubePremium
              - DCUniverse
              - AppleTvPlus
              - DisneyPlus
            type: string
            x-nullable: false
          name: Providers
          required: false
          type: array
        - collectionFormat: multi
          description: List of availability delivery methods. See /Common/GetCommonEnumerators endpoint for complete list.
          in: formData
          items:
            enum:
              - NOT_SET
              - Scheduled
              - Ticket
              - Physical
              - OnDemand
            type: string
            x-nullable: false
          name: DeliveryMethods
          required: false
          type: array
        - collectionFormat: multi
          description: List of availability offer types. See /Common/GetCommonEnumerators endpoint for complete list.
          in: formData
          items:
            enum:
              - NOT_SET
              - Buy
              - Subscription
              - Free
              - Rent
            type: string
            x-nullable: false
          name: OfferTypes
          required: false
          type: array
        - collectionFormat: multi
          description: List of availability video qualities. See /Common/GetCommonEnumerators endpoint for complete list.
          in: formData
          items:
            enum:
              - NOT_SET
              - HD
              - UHD
              - SD
            type: string
            x-nullable: false
          name: VideoQualities
          required: false
          type: array
        - collectionFormat: multi
          description: List of program types. See /Common/GetCommonEnumerators endpoint for complete list.
          in: formData
          items:
            enum:
              - Movie
              - Show
              - Game
              - Season
              - Episode
            type: string
            x-nullable: false
          name: ProgramTypes
          required: false
          type: array
        - collectionFormat: multi
          description: List of 2 character country codes.
          in: formData
          items:
            type: string
          name: AvailabilityCountries
          required: false
          type: array
        - collectionFormat: multi
          description: List of genres (movie and show).
          in: formData
          items:
            type: string
          name: Genres
          required: false
          type: array
        - collectionFormat: multi
          description: List of themes (movie and show).
          in: formData
          items:
            type: string
          name: Themes
          required: false
          type: array
        - collectionFormat: multi
          description: List of tags (movie and show).
          in: formData
          items:
            type: string
          name: Tags
          required: false
          type: array
        - collectionFormat: multi
          description: List of certifications for movie and show.
          in: formData
          items:
            type: string
          name: Certifications
          required: false
          type: array
        - collectionFormat: multi
          description: List of names. Maximum of 3.
          in: formData
          items:
            type: string
          name: PersonNames
          required: false
          type: array
        - collectionFormat: multi
          description: Person Ids.  Currently supports one person.
          in: formData
          items:
            type: string
          name: PeopleIds
          required: false
          type: array
        - collectionFormat: multi
          description: List of Jobs a contributor can have.
          in: formData
          items:
            type: string
          name: Jobs
          required: false
          type: array
        - collectionFormat: multi
          description: List of release types for both movie and show.
          in: formData
          items:
            enum:
              - Digital
              - Festival
              - Physical
              - Premiere
              - Theatrical_Limited_Release
              - Theatrical_Wide_Release
              - TV
              - On_Demand_Release
              - Show_Release
            type: string
            x-nullable: false
          name: ReleaseTypes
          required: false
          type: array
        - collectionFormat: multi
          description: List of 2 character country codes when filtering on releases.
          in: formData
          items:
            type: string
          name: ReleaseCountries
          required: false
          type: array
        - description: Filter results based on start and end original release year.
          format: int32
          in: formData
          name: YearRange_Start
          required: false
          type: integer
        - description: Filter results based on start and end original release year.
          format: int32
          in: formData
          name: YearRange_End
          required: false
          type: integer
        - description: Filter results based on any release date range.
          format: date-time
          in: formData
          name: ReleaseDateRange_Start
          required: false
          type: string
        - description: Filter results based on any release date range.
          format: date-time
          in: formData
          name: ReleaseDateRange_End
          required: false
          type: string
        - description: Filter results based on original release date range.
          format: date-time
          in: formData
          name: OriginalReleaseDateRange_Start
          required: false
          type: string
        - description: Filter results based on original release date range.
          format: date-time
          in: formData
          name: OriginalReleaseDateRange_End
          required: false
          type: string
        - in: formData
          name: Package
          required: false
          type: string
        - description: Title search.
          in: formData
          name: Title
          required: false
          type: string
        - description: Filter results to match a show.  Use for locating seasons and episodes for a show.
          in: formData
          name: ShowId
          required: false
          type: string
        - description: Filter results to match a season.  Use for locating episodes for a season.
          in: formData
          name: SeasonId
          required: false
          type: string
        - collectionFormat: multi
          description: Include sub objects from the program
          in: formData
          items:
            enum:
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - ExternalIds
              - Videos
              - Images
              - Availabilities
              - Genres
              - ProgramTrends
              - Themes
              - Subjects
              - FilmingLocations
              - NarrativeLocations
              - BasedOns
              - TimePeriods
              - MicroGenres
              - ProgramTags
            type: string
          name: Includes
          required: false
          type: array
        - description: Specify the country and language
          enum:
            - NOT_SET
            - English_US
            - English_CA
            - English_UK
            - English_AU
          in: formData
          name: Culture
          required: false
          type: string
        - description: Filter results matching external Id
          in: formData
          name: ExternalId
          required: false
          type: string
        - description: Filter results matching external Id
          in: formData
          name: ExternalIdType
          required: false
          type: string
        - description: Filter results matching company name
          in: formData
          name: CompanyName
          required: false
          type: string
        - description: Filter results based on having video content
          in: formData
          name: HasVideo
          required: false
          type: boolean
        - description: Filter results based on matching a single Video ID.
          format: int64
          in: formData
          name: VideoId
          required: false
          type: integer
        - collectionFormat: multi
          description: List of 2 character country codes when filtering on video target countries.
          in: formData
          items:
            type: string
          name: VideoTargetCountries
          required: false
          type: array
        - collectionFormat: multi
          description: Specify video target languages. This takes into consideration both language spoken and language subtitled.
          in: formData
          items:
            type: string
          name: VideoTargetLanguages
          required: false
          type: array
        - description: Sort results based on last modified descending.  Default is sorted by _score. DEPRECIATED! Use SortBy instead.
          in: formData
          name: SortByTimeStamp
          required: false
          type: boolean
          x-nullable: false
        - description: SortBy
          enum:
            - NOT_SET
            - Relevance
            - TimeStamp
            - IvaRating
            - ReleaseDate
            - CalculatedTrendRank
          in: formData
          name: SortBy
          required: false
          type: string
        - description: Filter results based on timestamp.  Returns >= value timestamp (UTC) provided.
          format: date-time
          in: formData
          name: ModifiedRecordsSince
          required: false
          type: string
        - collectionFormat: multi
          description: 'The Network the current first run shows appear on. Ex: ABC, NBC, Netflix, etc.  '
          in: formData
          items:
            type: string
          name: OriginatingNetworks
          required: false
          type: array
        - collectionFormat: multi
          description: 'The status of the movie or show.  Ex: Returning_Series, in_production, etc.  '
          in: formData
          items:
            type: string
          name: Status
          required: false
          type: array
        - collectionFormat: multi
          description: The original language of the program.
          in: formData
          items:
            type: string
          name: OriginalLanguages
          required: false
          type: array
        - description: Filter results where movie revenue is greater than or equal to this value.
          format: int64
          in: formData
          name: Revenue
          required: false
          type: integer
        - description: Filter results where movie budget is greater than or equal to this value.
          format: int64
          in: formData
          name: Budget
          required: false
          type: integer
        - description: Filter results with a minimum Rating greater than or equal to this value. (0 to 100)
          format: int32
          in: formData
          name: Minimum_IvaRating
          required: false
          type: integer
        - description: Filter results based on encode date.
          format: date-time
          in: formData
          name: Minimum_EncodeDate
          required: false
          type: string
        - description: Include Soft Deleted Records. Default (false)
          in: formData
          name: IncludeDeleted
          required: false
          type: boolean
          x-nullable: false
        - collectionFormat: multi
          description: 'Program Trend Source Ids.  Ex: 2,3.'
          in: formData
          items:
            format: int32
            type: integer
            x-nullable: false
          name: TrendSourceIds
          required: false
          type: array
        - collectionFormat: multi
          description: 'Program Trend Brands.  Ex: IMDB,IVA'
          in: formData
          items:
            enum:
              - IMDB
              - IVA
              - BoxOfficeMojo
              - TMDB
              - RottenTomatoes
              - TVGuide
              - iTunes
              - Amazon
              - Fios
              - Gamespot
              - Hulu
              - MovieClips
              - Netflix
              - PlutoTV
              - Redbox
              - TheNumbers
              - Vudu
              - Xfinity
              - Youtube
            type: string
          name: TrendBrands
          required: false
          type: array
        - collectionFormat: multi
          description: 'Program Trend Countries.  Ex: US,CA.'
          in: formData
          items:
            type: string
          name: TrendCountries
          required: false
          type: array
        - collectionFormat: multi
          description: 'Program Trend List Classifiers.  Ex: AVOD,SVOD.'
          in: formData
          items:
            enum:
              - Publisher
              - TVOD
              - SVOD
              - Revenue
              - Social
              - Trailers
              - AVOD
              - Physical
            type: string
          name: TrendListClassifiers
          required: false
          type: array
        - collectionFormat: multi
          description: List of External ID Names that will be used to find where they DO NOT exist.
          in: formData
          items:
            type: string
          name: MissingExternalIdNames
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: formData
          items:
            type: string
          name: BasedOns
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: formData
          items:
            type: string
          name: BasedOnInstanceOfs
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: formData
          items:
            type: string
          name: FilmingLocations
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: formData
          items:
            type: string
          name: NarrativeLocations
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: formData
          items:
            type: string
          name: TimePeriods
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: formData
          items:
            type: string
          name: Subjects
          required: false
          type: array
        - collectionFormat: multi
          description: List of string
          in: formData
          items:
            type: string
          name: MicroGenres
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SearchEntertainmentResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Search all entertainment programs.
      tags:
        - Entertainment
  /ExternalIds/GracenoteMovie:
    get:
      deprecated: false
      description: 'Not accessible with a Demo account.  **Special permissions needed** for access to this operation.  Contact [Sales](mailto:sales@internetvideoarchive.com).'
      operationId: GetGracenoteMovieIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieExternalIdMap'
            title: List<MovieExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all MovieId, Gracenote Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/GracenoteShow:
    get:
      deprecated: false
      description: 'Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).'
      operationId: GetGracenoteShowIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowExternalIdMap'
            title: List<ShowExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all ShowId, Gracenote Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/ImdbMovie:
    get:
      deprecated: false
      description: Ingest this ID map to create connections between the objects in your existing database with an IMDB ID to the IVA Movie objects.
      operationId: GetImdbMovieIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieExternalIdMap'
            title: List<MovieExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all MovieId, IMDB Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/ImdbShow:
    get:
      deprecated: false
      description: ngest this ID map to create connections between the objects in your existing database with an IMDB ID to the IVA Show objects.
      operationId: GetImdbShowIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowExternalIdMap'
            title: List<ShowExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all MovieId, Tmdb Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/RoviMovie:
    get:
      deprecated: false
      description: 'Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).'
      operationId: GetTivoMovieIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieExternalIdMap'
            title: List<MovieExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all MovieId, Tivo Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/RoviShow:
    get:
      deprecated: false
      description: 'Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).'
      operationId: GetTivoShowIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowExternalIdMap'
            title: List<ShowExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all ShowId, Tivo Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/TmdbMovie:
    get:
      deprecated: false
      description: Use to link a TMDB ID to an IVA Movie ID.
      operationId: GetTmdbMovieIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieExternalIdMap'
            title: List<MovieExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all MovieId, Tmdb Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/TmdbShow:
    get:
      deprecated: false
      description: Use to link a TMDB ID to an IVA Show ID.
      operationId: GetTmdbShowIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowExternalIdMap'
            title: List<ShowExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all ShowId, TMDB Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  /ExternalIds/Webedia:
    get:
      deprecated: false
      description: 'Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).'
      operationId: GetWebediaMovieIds
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 1000)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieExternalIdMap'
            title: List<MovieExternalIdMap>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Returns list of all MovieId, Webedia Id pairs.'
      tags:
        - ExternalIds
    parameters:
      - $ref: '#/parameters/Accept'
  '/Fandango/countries/{country}/postalcodes/{postalcode}':
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoGeoLocationPostalCode
      parameters:
        - in: path
          name: postalcode
          required: true
          type: string
        - in: path
          name: country
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoGeoLocationPostalCode'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets geo-location data for a postal code.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  '/Fandango/countries/{country}/states/{state}/cities/{city}':
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoGeoLocationCity
      parameters:
        - in: path
          name: country
          required: true
          type: string
        - in: path
          name: city
          required: true
          type: string
        - in: path
          name: state
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoGeoLocationCity'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets geo-location data for a city.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  /Fandango/movies:
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoMovies
      parameters:
        - description: Specify InTheaters or ComingSoon.
          enum:
            - InTheaters
            - ComingSoon
          in: query
          name: Type
          required: true
          type: string
          x-nullable: false
        - description: Latitude of the user's location.
          format: double
          in: query
          name: Latitude
          required: false
          type: number
        - description: Longitude of the user's location.
          format: double
          in: query
          name: Longitude
          required: false
          type: number
        - description: Zip code of the user's location.
          in: query
          name: ZipCode
          required: false
          type: string
        - description: Search radius in miles around the user's location.
          format: int32
          in: query
          name: Radius
          required: false
          type: integer
        - description: Number of items to return. Used in pagination.
          format: int32
          in: query
          name: Limit
          required: false
          type: integer
        - description: Offset index of the first item to return. Used in pagination..
          format: int32
          in: query
          name: Offset
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoMovies'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Search for movies available.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  /Fandango/movies/Id:
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoMovie
      parameters:
        - description: The ID of the movie.
          in: query
          name: MovieId
          required: true
          type: string
        - description: The provider for the movie ID.
          enum:
            - fandangoApi
            - fandango
            - IVA
          in: query
          name: IdProvider
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoMovie'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets a movie.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  /Fandango/movies/Id/display-dates:
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoMovieDisplayDates
      parameters:
        - description: The ID of the movie.
          in: query
          name: MovieId
          required: true
          type: string
        - description: The provider for the movie ID.
          enum:
            - fandangoApi
            - fandango
            - IVA
          in: query
          name: IdProvider
          required: true
          type: string
          x-nullable: false
        - description: Latitude of the user's location.
          format: double
          in: query
          name: Latitude
          required: false
          type: number
        - description: Longitude of the user's location.
          format: double
          in: query
          name: Longitude
          required: false
          type: number
        - description: Zip code of the user's location.
          in: query
          name: ZipCode
          required: false
          type: string
        - description: Search radius in miles around the user's location.
          format: int32
          in: query
          name: Radius
          required: false
          type: integer
        - description: Start datetime (ISO-8601) for the display date range. Defaults to UTC now.
          format: date-time
          in: query
          name: StartDateTime
          required: false
          type: string
        - description: End datetime (ISO-8601) for the display date range. Defaults to no end datetime.
          format: date-time
          in: query
          name: EndDateTime
          required: false
          type: string
        - collectionFormat: multi
          description: Comma delimited list of theaters to exclude.
          in: query
          items:
            type: string
          name: ExcludeTheaterIds
          required: false
          type: array
        - collectionFormat: multi
          description: Comma delimited list of theater chains to filter.
          in: query
          items:
            type: string
          name: TheaterChainCodes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoDisplayDates'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets display dates for a movie based on geolocation.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  /Fandango/movies/Id/showtime-groupings:
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoMovieShowtimeGroupings
      parameters:
        - description: The ID of the movie.
          in: query
          name: MovieId
          required: true
          type: string
        - description: The provider for the movie ID.
          enum:
            - fandangoApi
            - fandango
            - IVA
          in: query
          name: IdProvider
          required: true
          type: string
          x-nullable: false
        - description: Longitude of the user's location.
          format: double
          in: query
          name: Longitude
          required: false
          type: number
        - description: Latitude of the user's location.
          format: double
          in: query
          name: Latitude
          required: false
          type: number
        - description: Zip code of the user's location.
          in: query
          name: ZipCode
          required: false
          type: string
        - description: Search radius in miles around the user's location.
          format: int32
          in: query
          name: Radius
          required: false
          type: integer
        - description: Start date for the display date range. Defaults to UTC now.
          format: date-time
          in: query
          name: StartDisplayDate
          required: false
          type: string
          x-nullable: false
        - description: End display date. Defaults to start display date.
          format: date-time
          in: query
          name: EndDisplayDate
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoShowtimeGroupings'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Gets movie showtimes grouped by date, theater, format, and amenities.'
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  /Fandango/showtimes/:
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoShowtimes
      parameters:
        - description: The ID of the theater (required if latitude/longitude or zipCode not provided).
          in: query
          name: TheaterId
          required: false
          type: string
        - description: The provider for the theater ID.
          enum:
            - fandangoApi
            - tms
          in: query
          name: TheaterIdProvider
          required: false
          type: string
        - description: Longitude of the user's location.
          format: double
          in: query
          name: Longitude
          required: false
          type: number
        - description: Latitude of the user's location.
          format: double
          in: query
          name: Latitude
          required: false
          type: number
        - description: Zip code of the user's location.
          in: query
          name: ZipCode
          required: false
          type: string
        - description: Search radius in miles around the user's location.
          format: int32
          in: query
          name: Radius
          required: false
          type: integer
        - description: Start datetime (ISO-8601) for the display date range. Defaults to UTC now.
          format: date-time
          in: query
          name: StartDateTime
          required: false
          type: string
        - description: End datetime (ISO-8601) for the display date range. Defaults to no end datetime.
          format: date-time
          in: query
          name: EndDateTime
          required: false
          type: string
        - description: Start date for the display date range. Defaults to UTC now.
          format: date-time
          in: query
          name: StartDisplayDate
          required: false
          type: string
          x-nullable: false
        - description: End display date. Defaults to start display date.
          format: date-time
          in: query
          name: EndDisplayDate
          required: false
          type: string
        - description: Filter showtimes by movie title.
          in: query
          name: MovieTitle
          required: false
          type: string
        - description: Filter showtimes by theater name.
          in: query
          name: TheaterName
          required: false
          type: string
        - description: Filter showtimes by movie ID.
          in: query
          name: MovieId
          required: false
          type: string
        - description: The provider for the movie ID.
          enum:
            - fandangoApi
            - fandango
            - IVA
          in: query
          name: MovieIdProvider
          required: false
          type: string
        - collectionFormat: multi
          description: Filter showtimes by amenity list (comma delimited). Only entries with amenities exactly matching this list are returned.
          in: query
          items:
            type: string
          name: AmenityIds
          required: false
          type: array
        - description: The provider for the amenity ID.
          enum:
            - fandangoApi
            - fandango
          in: query
          name: AmenityIdProvider
          required: false
          type: string
        - description: Number of items to return. Used in pagination.
          format: int32
          in: query
          name: Limit
          required: false
          type: integer
        - description: Offset index of the first item to return. Used in pagination.
          format: int32
          in: query
          name: Offset
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoShowtimes'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets showtimes by geolocation/theater and date.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  '/Fandango/showtimes/{ShowtimeId}':
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoShowtime
      parameters:
        - description: Showtime ID for request.
          in: path
          name: ShowtimeId
          required: true
          type: string
        - description: The provider for the showtime ID.
          enum:
            - fandangoApi
            - fandango
          in: query
          name: IdProvider
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoShowtimeDetails'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get showtime details by showtime id.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  /Fandango/theaters/:
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoTheaters
      parameters:
        - description: Longitude of the user's location.
          format: double
          in: query
          name: Longitude
          required: false
          type: number
        - description: Latitude of the user's location.
          format: double
          in: query
          name: Latitude
          required: false
          type: number
        - description: Zip code of the user's location.
          in: query
          name: ZipCode
          required: false
          type: string
        - description: Search radius in miles around the user's location.
          format: int32
          in: query
          name: Radius
          required: false
          type: integer
        - description: Number of items to return. Used in pagination.
          format: int32
          in: query
          name: Limit
          required: false
          type: integer
        - description: Offset index of the first item to return. Used in pagination.
          format: int32
          in: query
          name: Offset
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoTheaters'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets theaters close to a geolocation.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  '/Fandango/theaters/{TheaterId}':
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoTheater
      parameters:
        - description: Id of theater.
          in: path
          name: TheaterId
          required: true
          type: string
        - description: The provider for the theater ID.
          enum:
            - fandangoApi
            - tms
          in: query
          name: IdProvider
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoTheaterResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets a theater.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  '/Fandango/theaters/{TheaterId}/display-dates':
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoTheaterDisplayDates
      parameters:
        - description: Id of theater.
          in: path
          name: TheaterId
          required: true
          type: string
        - description: The provider for the theater ID.
          enum:
            - fandangoApi
            - tms
          in: query
          name: IdProvider
          required: true
          type: string
        - description: Start datetime (ISO-8601) for the display date range. Defaults to UTC now.
          format: date-time
          in: query
          name: StartDateTime
          required: false
          type: string
        - description: End datetime (ISO-8601) for the display date range. Defaults to no end datetime.
          format: date-time
          in: query
          name: EndDateTime
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoDisplayDates'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets display dates for a theater.
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  '/Fandango/theaters/{TheaterId}/showtime-groupings':
    get:
      deprecated: false
      description: ''
      operationId: GetFandangoTheaterShowtimeGroupings
      parameters:
        - description: Offset index of the first item to return. Used in pagination.
          in: path
          name: TheaterId
          required: true
          type: string
        - description: The provider for the theater ID.
          enum:
            - fandangoApi
            - tms
          in: query
          name: IdProvider
          required: true
          type: string
        - description: Start date for the display date range. Defaults to UTC now.
          format: date-time
          in: query
          name: StartDisplayDate
          required: false
          type: string
          x-nullable: false
        - description: End display date. Defaults to start display date.
          format: date-time
          in: query
          name: EndDisplayDate
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FandangoTheaterShowtimeGroupings'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Gets theater showtimes grouped by date, movie, format, and amenities.'
      tags:
        - Fandango
    parameters:
      - $ref: '#/parameters/Accept'
  /Find/Movie/:
    get:
      deprecated: false
      description: |-
        Use FindMovie with a third party ID like IMDB, TMDB, Gracenote, Tivo, etc. to find the corresponding movie in the IVA database.  For a full list of supported ID types see /Movies/AlternateIdTypes. 



        `Recommendation: Use with small data sets or for a proof of concept. `
      operationId: FindMovie
      parameters:
        - description: Required third party ID type of MovieAlternateId.
          format: int32
          in: query
          name: IdType
          required: true
          type: integer
        - description: Required third party ID of Movie.
          in: query
          name: Id
          required: true
          type: string
        - collectionFormat: multi
          description: List of additional objects to include in the movie object.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MovieResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Find a movie using third party ID.
      tags:
        - Find
    parameters:
      - $ref: '#/parameters/Accept'
  /Find/Show/:
    get:
      deprecated: false
      description: 'Use FindShow with a third party ID like IMDB, TMDB, Gracenote, Tivo, etc. to find the corresponding TV show in the IVA database. For a full list of supported ID types see /Shows/AlternateIdTypes. `Recommendation: Use with small data sets or for a proof of concept. `'
      operationId: FindShow
      parameters:
        - description: Required third party ID type of ShowAlternateId.
          format: int32
          in: query
          name: IdType
          required: true
          type: integer
        - description: Required third party ID of Show.
          in: query
          name: Id
          required: true
          type: string
        - collectionFormat: multi
          description: List of additional objects to include in the show response.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - Seasons
              - EpisodeVideos
              - SeasonVideos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ShowResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Find a TV show using a third party ID.
      tags:
        - Find
    parameters:
      - $ref: '#/parameters/Accept'
  /Games/All:
    get:
      deprecated: false
      description: Returns a AllGameResponse object containing a list of all games. By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.
      operationId: GetAllGames
      parameters:
        - description: Limits the total items returned. Maximum of 100 per request.
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the game object.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Videos
              - ExternalIds
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AllGamesResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets all Games.
      tags:
        - Games
    parameters:
      - $ref: '#/parameters/Accept'
  /Games/RankedSearch/:
    get:
      deprecated: false
      description: Find game using title ordered by year.
      operationId: GetGameRanked
      parameters:
        - in: query
          name: StartsWith
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GameRankedResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Find Game by Title ordered by year.
      tags:
        - Games
    parameters:
      - $ref: '#/parameters/Accept'
  '/Games/{Id}':
    get:
      deprecated: false
      description: By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.
      operationId: GetGame
      parameters:
        - description: Required ID of Game.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the game response.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Videos
              - ExternalIds
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GameResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get Game by Game ID.
      tags:
        - Games
    parameters:
      - $ref: '#/parameters/Accept'
  '/GoWatchIt/Episodes/{Id}/Availabilities':
    get:
      deprecated: false
      description: 'Returns GoWatchit episode availability by Entertainment Episode ID. Special permission is required to access this endpoint. '
      operationId: GetGoWatchItEpisodeAvailabilities
      parameters:
        - description: Required ID of Entertainment Episode.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Required GoWatchIt API key.
          in: query
          name: ApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GoWatchItEpisodeAvailabilitiesResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get GoWatchIt Episode Availability.
      tags:
        - GoWatchIt
    parameters:
      - $ref: '#/parameters/Accept'
  '/GoWatchIt/Movies/{Id}/Availabilities':
    get:
      deprecated: false
      description: 'Returns GoWatchIt movie availability by Entertainment Movie ID.  Special permission is required to access this endpoint.  Contact [Sales](mailto:Sales@InternetVideoArchive.com) for more information.'
      operationId: GetGoWatchItMovieAvailabilities
      parameters:
        - description: Required ID of Entertainment Movie.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Required GoWatchIt API key.
          in: query
          name: ApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GoWatchItMovieAvailabilitiesResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get GoWatchIt Movie Availability.
      tags:
        - GoWatchIt
    parameters:
      - $ref: '#/parameters/Accept'
  '/GoWatchIt/Seasons/{Id}/Availabilities':
    get:
      deprecated: false
      description: 'Returns GoWatchIt season availability by Entertainment Season ID.  Special permission is required to access this endpoint.  Contact [Sales](mailto:Sales@InternetVideoArchive.com) for more information.'
      operationId: GetGoWatchItSeasonAvailabilities
      parameters:
        - description: Required ID of Entertainment Season.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Required GoWatchIt API key.
          in: query
          name: ApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GoWatchItSeasonAvailabilitiesResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get GoWatchIt Season Availability.
      tags:
        - GoWatchIt
    parameters:
      - $ref: '#/parameters/Accept'
  '/GoWatchIt/Shows/{Id}/Availabilities':
    get:
      deprecated: false
      description: 'Returns GoWatchIt show availability by Entertainment Show ID.  Special permission is required to access this endpoint. Please contact [Sales](mailto:Sales@InternetVideoArchive.com) for more information.'
      operationId: GetGoWatchItShowAvailabilities
      parameters:
        - description: Required ID of Entertainment Show.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Required GoWatchIt API key.
          in: query
          name: ApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GoWatchItShowAvailabilitiesResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get GoWatchItShow Availability.
      tags:
        - GoWatchIt
    parameters:
      - $ref: '#/parameters/Accept'
  /Images/Batch:
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: Requires a list filepath.
      operationId: GetImageBatch
      parameters:
        - collectionFormat: multi
          description: List of Filepaths.
          in: query
          items:
            type: string
          name: FilePath
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ImageBatchResponse'
            title: List<ImageBatchResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Batch Image.
      tags:
        - Images
  /Images/ScreenCaptures/Batch:
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: Requires a list of filepaths.
      operationId: GetScreenCaptureBatch
      parameters:
        - collectionFormat: multi
          description: List of Filepaths.
          in: query
          items:
            type: string
          name: FilePath
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ImageBatchResponse'
            title: List<ImageBatchResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Screen Capture Responses.
      tags:
        - Images
  /Images/ScreenCaptures/Redirect:
    get:
      deprecated: false
      description: |-
        Requires a valid filepath of a video asset screen capture.  

        `Note: The swagger U/I does not support redirects.`
      operationId: GetScreenCapture
      parameters:
        - description: Filepath of Image.
          in: query
          name: FilePath
          required: true
          type: string
        - description: Redirect to the image. Default = true
          in: query
          name: Redirect
          required: false
          type: boolean
          x-nullable: false
        - description: Image url expiration in minutes. Default = 60. Maximum is 1440.
          in: query
          name: ExpirationMinutes
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ScreenCaptureRedirectResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Redirect to a Screen Capture.
      tags:
        - Images
    parameters:
      - $ref: '#/parameters/Accept'
  '/Images/{FilePath}/Redirect':
    get:
      deprecated: false
      description: |-
        Images should be downloaded and stored on the client server. Use /Common/ImageTypes to see a list of available image types.  


        `Note: The swagger U/I does not support redirects.`
      operationId: GetImage
      parameters:
        - description: Filepath of Image.
          in: path
          name: FilePath
          required: true
          type: string
        - description: Redirect to the image. Default = true
          in: query
          name: Redirect
          required: false
          type: boolean
          x-nullable: false
        - description: Image url expiration in minutes. Default = 60. Maximum is 1440.
          in: query
          name: ExpirationMinutes
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ImageRedirectResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Redirect to an Image.
      tags:
        - Images
    parameters:
      - $ref: '#/parameters/Accept'
  '/Metacritic/Movie/{Id}':
    get:
      deprecated: false
      description: Returns Metacritic Movie information by Entertainment Movie ID.
      operationId: GetMetacriticMovie
      parameters:
        - description: Required ID of Entertainment Movie.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MetacriticMovieResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get Metacritic Movie information.
      tags:
        - Metacritic
    parameters:
      - $ref: '#/parameters/Accept'
  '/Metacritic/TV/{Id}':
    get:
      deprecated: false
      description: Returns Metacritic TV information by Entertainment Show ID.
      operationId: GetMetacriticTv
      parameters:
        - description: Required ID of Entertainment Show.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Number of season.
          format: int32
          in: query
          name: SeasonNumber
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MetacriticTvResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get Metacritic TV information.
      tags:
        - Metacritic
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/All:
    get:
      deprecated: false
      description: |
        By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.   


        `Subscriptions with "Limited" data will only be able to include basic title information and Videos.`  
      operationId: GetAllMovies
      parameters:
        - description: Limits the total items returned. Maximum of 100 per request.
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the movie objectSearch movie by OriginalTitle.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AllMoviesResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns a paged list of all movies.
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/AlternateIdTypes:
    get:
      deprecated: false
      description: |-
        Movie alternate ID types refer to 3rd party IDs that IVA matches its own movie IDs.  **EX: IMDB, TMDB**.  

        `Use to get the Id of the ID type to use with /Find/Movie.`
      operationId: GetMovieAlternateIdTypes
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieAlternateIdTypeResponse'
            title: List<MovieAlternateIdTypeResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns all MovieAlternateIdTypes
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/ComingSoon/:
    get:
      deprecated: false
      description: |-
        Requires Skip and Take. Maximum page size is 10.

        By default the API will only return basic title information.
        Additional objects can be included by passing the object in the Includes parameter in a comma separated list. 
      operationId: GetMoviesComingSoon
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 10)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the movie response.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieResponse'
            title: List<MovieResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of all Movies coming to US Theaters.
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/InTheaters/:
    get:
      deprecated: false
      description: |-
        Requires Skip and Take. Maximum page size is 10.

        By default the API will only return basic title information.
        Additional objects can be included by passing the object in the Includes parameter in a comma separated list. 
      operationId: GetMoviesInTheaters
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 10)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the movie response.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieResponse'
            title: List<MovieResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of all Movies currently in US Theaters.
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/Match/:
    get:
      deprecated: false
      description: 'Use to match IVA movie data to another data source using title, year, cast etc.'
      operationId: MatchToMovie
      parameters:
        - description: Title of movie to be matched.
          in: query
          name: Title
          required: true
          type: string
        - collectionFormat: multi
          description: Alternate Titles of movie to be matched.
          in: query
          items:
            type: string
          name: AlternateTitles
          required: false
          type: array
        - description: Release Year of movie to be matched.
          format: int32
          in: query
          name: Year
          required: false
          type: integer
        - description: Release Date of movie to be matched.
          format: date-time
          in: query
          name: ReleaseDate
          required: false
          type: string
        - collectionFormat: multi
          description: Cast members of movie to be matched.
          in: query
          items:
            type: string
          name: Cast
          required: false
          type: array
        - collectionFormat: multi
          description: Directors of movie to be matched.
          in: query
          items:
            type: string
          name: Directors
          required: false
          type: array
        - description: Description of movie to be matched.
          in: query
          name: Description
          required: false
          type: string
        - description: Poster of movie to be matched.
          in: query
          name: Poster
          required: false
          type: string
        - description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
          format: int32
          in: query
          name: StringDistance
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MatchToEntertainmentMovieResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Perform a match to Entertainment using Title, Year, Cast and Director. Returns best match and score for the match.'
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: 'Requires a valid MatchMovieCandidate, matches to Entertainment Movies'
      operationId: MatchToMoviePost
      parameters:
        - description: Title of movie to be matched.
          in: formData
          name: Title
          required: true
          type: string
        - collectionFormat: multi
          description: Alternate Titles of movie to be matched.
          in: formData
          items:
            type: string
          name: AlternateTitles
          required: false
          type: array
        - description: Release Year of movie to be matched.
          format: int32
          in: formData
          name: Year
          required: false
          type: integer
        - description: Release Date of movie to be matched.
          format: date-time
          in: formData
          name: ReleaseDate
          required: false
          type: string
        - collectionFormat: multi
          description: Cast members of movie to be matched.
          in: formData
          items:
            type: string
          name: Cast
          required: false
          type: array
        - collectionFormat: multi
          description: Directors of movie to be matched.
          in: formData
          items:
            type: string
          name: Directors
          required: false
          type: array
        - description: Description of movie to be matched.
          in: formData
          name: Description
          required: false
          type: string
        - description: Poster of movie to be matched.
          in: formData
          name: Poster
          required: false
          type: string
        - description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
          format: int32
          in: formData
          name: StringDistance
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MatchToEntertainmentMovieResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Perform a match to Entertainment using Title, Year, Cast and Director.  Returns best match and score for the match.'
      tags:
        - Movies
  /Movies/MovieCertifications:
    get:
      deprecated: false
      description: Returns all Movie Certifications used in a movie response with the Releases object.
      operationId: GetMovieCertifications
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieCertificationResponse'
            title: List<MovieCertificationResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Movie Certifications
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/MovieGenres:
    get:
      deprecated: false
      description: List of all movie genres used in the API.
      operationId: GetMovieGenres
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieGenreResponse'
            title: List<MovieGenreResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Movie Genres
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/ReleaseTypes:
    get:
      deprecated: false
      description: 'Release type refers to the release. **EX: Theatrical, Home Video, etc.**'
      operationId: GetMovieReleaseTypes
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieReleaseTypeResponse'
            title: List<MovieReleaseTypeResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Movie Release Types
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /Movies/SearchAndDiscover:
    get:
      deprecated: false
      description: |-
        Searchable Fields:
        Title, AlternateTitles, Genres, OriginalReleaseDate, UnitedStatesReleaseDate, GermanyReleaseDate, FranceReleaseDate, UnitedKingdomReleaseDate, ItalyReleaseDate, JapanReleaseDate, Tags, Cast, Directors, Descriptions, Ratings, OriginalLanguage.
        [Syntax Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/simple-query-syntax-in-azure-search)

        Filterable Fields:
        ID, Title, AlternateTitles, Genres, OriginalReleaseDate, UnitedStatesReleaseDate, GermanyReleaseDate, FranceReleaseDate, UnitedKingdomReleaseDate, ItalyReleaseDate, JapanReleaseDate, Year, Tags, Cast, Directors, Descriptions, HasVideo, PosterFilePath, Ratings, OriginalLanguage, Runtime, Budget, Revenue, Created, Modified.
        [Syntax Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/odata-expression-syntax-for-azure-search)
      operationId: SearchAndDiscoverMovie
      parameters:
        - description: Term to search for. This can be combined with all other options. Use '*' to return any match.
          in: query
          name: term
          required: false
          type: string
        - collectionFormat: multi
          description: List of field names to be returned in the object.
          in: query
          items:
            type: string
          name: SelectFields
          required: false
          type: array
        - collectionFormat: multi
          description: List of field names to search using 'term.'
          in: query
          items:
            type: string
          name: SearchFields
          required: false
          type: array
        - description: Expression to filter results.
          in: query
          name: Filter
          required: false
          type: string
        - collectionFormat: multi
          description: List of field names to sort results.  Default is relevance.
          in: query
          items:
            type: string
          name: OrderBy
          required: false
          type: array
        - description: Limit results.  Maximum returned is 1000.
          format: int32
          in: query
          name: Top
          required: false
          type: integer
          x-nullable: false
        - description: Skip number of results. Use this for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - description: Includes total results in response. This will have a performance impact.
          in: query
          name: IncludeTotalResultCount
          required: false
          type: boolean
          x-nullable: false
        - description: Specifies whether ANY or ALL of the search terms must be matched in order to count the item as a match.
          in: query
          name: SearchMode
          required: false
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SearchMovieResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Search and discover movies.
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  '/Movies/{Id}':
    get:
      deprecated: false
      description: |
        By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.   


        `Subscriptions with "Limited" data will only be able to include basic title information and Videos.`  
      operationId: GetMovie
      parameters:
        - description: Required ID of Movie.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the movie response.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MovieResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns movie data for a specific IVA MovieId.
      tags:
        - Movies
    parameters:
      - $ref: '#/parameters/Accept'
  /My/Programs:
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: Create new Program.
      operationId: CreateMyProgram
      parameters:
        - description: Client reference ID of MyVideo.
          in: formData
          name: ReferenceId
          required: false
          type: string
        - description: Title of MyVideo.
          in: formData
          name: Title
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MyProgramResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Create new Program.
      tags:
        - My
    put:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: Update a Program.
      operationId: UpdateMyProgram
      parameters:
        - description: Unique ID of MyVideo.
          format: int64
          in: formData
          name: Id
          required: false
          type: integer
          x-nullable: false
        - description: Client reference ID of MyVideo.
          in: formData
          name: ReferenceId
          required: false
          type: string
        - description: Title of MyVideo.
          in: formData
          name: Title
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MyProgramResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Update a Program.
      tags:
        - My
  /My/Programs/All:
    get:
      deprecated: false
      description: Get all Programs.
      operationId: GetAllMyPrograms
      parameters:
        - description: Limits the total items returned. Maximum of 100 per request.
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AllMyProgramsResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns all Programs.
      tags:
        - My
    parameters:
      - $ref: '#/parameters/Accept'
  '/My/Programs/{Id}':
    get:
      deprecated: false
      description: Requires a valid Program ID.
      operationId: GetMyProgram
      parameters:
        - description: Required ID of program.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MyProgramResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get a Program by ID.
      tags:
        - My
    parameters:
      - $ref: '#/parameters/Accept'
  /My/Videos:
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: Create new Video.
      operationId: CreateMyVideo
      parameters:
        - description: Location of the media you wish to upload.
          in: formData
          name: Url
          required: false
          type: string
        - description: Location to have us notify you of video encode status.
          in: formData
          name: NotificationUrl
          required: false
          type: string
        - description: Client reference ID of MyVideo.
          in: formData
          name: ReferenceId
          required: false
          type: string
        - description: Title of MyVideo.
          in: formData
          name: Title
          required: false
          type: string
        - collectionFormat: multi
          description: Companies of MyVideo.
          in: formData
          items:
            type: string
          name: Companies
          required: false
          type: array
        - description: First date of MyVideo availability.
          format: date-time
          in: formData
          name: StartDate
          required: false
          type: string
        - description: Date MyVideo expires / becomes unavailable for streaming.
          format: date-time
          in: formData
          name: ExpirationDate
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MyVideoResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Create new Video.
      tags:
        - My
    put:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: Update a Video.
      operationId: UpdateMyVideo
      parameters:
        - description: Unique ID of MyVideo.
          format: int64
          in: formData
          name: Id
          required: false
          type: integer
          x-nullable: false
        - description: Client reference ID of MyVideo.
          in: formData
          name: ReferenceId
          required: false
          type: string
        - description: Title of MyVideo.
          in: formData
          name: Title
          required: false
          type: string
        - collectionFormat: multi
          description: Companies of MyVideo.
          in: formData
          items:
            type: string
          name: Companies
          required: false
          type: array
        - description: First date of MyVideo availability.
          format: date-time
          in: formData
          name: StartDate
          required: false
          type: string
        - description: Date MyVideo expires / becomes unavailable for streaming.
          format: date-time
          in: formData
          name: ExpirationDate
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MyVideoResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Update a Video.
      tags:
        - My
  /My/Videos/All:
    get:
      deprecated: false
      description: Get all Videos.
      operationId: GetAllMyVideos
      parameters:
        - description: Limits the total items returned. Maximum of 100 per request.
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AllMyVideosResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns all Videos.
      tags:
        - My
    parameters:
      - $ref: '#/parameters/Accept'
  '/My/Videos/{Id}':
    get:
      deprecated: false
      description: Requires a valid Video ID.
      operationId: GetMyVideo
      parameters:
        - description: Required ID of video.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MyVideoResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get a Video by ID.
      tags:
        - My
    parameters:
      - $ref: '#/parameters/Accept'
  /People/All:
    get:
      deprecated: false
      description: Returns a AllPeopleResponse object containing a list of all poeple.
      operationId: GetAllPeople
      parameters:
        - description: Limits the total items returned. Maximum of 100 per request.
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the person response.
          in: query
          items:
            enum:
              - ExternalIds
              - AlternateNames
              - Images
              - Descriptions
              - Tags
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AllPeopleResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Gets all People.
      tags:
        - People
    parameters:
      - $ref: '#/parameters/Accept'
  /People/RankedSearch/:
    get:
      deprecated: false
      description: Find person using name ordered by rank.
      operationId: GetPersonRankedSearch
      parameters:
        - in: query
          name: StartsWith
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/PersonRankedResponse'
            title: List<PersonRankedResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Find Person by Name ordered by rank.
      tags:
        - People
    parameters:
      - $ref: '#/parameters/Accept'
  '/People/{Id}':
    get:
      deprecated: false
      description: BETA - By default the API will only return basic People information. Additional objects can be included by passing the object in the Includes parameter.
      operationId: GetPerson
      parameters:
        - description: Required ID of Person.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the person response.
          in: query
          items:
            enum:
              - ExternalIds
              - AlternateNames
              - Images
              - Descriptions
              - Tags
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/PersonResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns information on a person.
      tags:
        - People
    parameters:
      - $ref: '#/parameters/Accept'
  '/People/{Id}/Filmography':
    get:
      deprecated: false
      description: Requires a valid Person ID.
      operationId: GetFilmography
      parameters:
        - format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FilmographyResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get a Person's Filmography.
      tags:
        - People
    parameters:
      - $ref: '#/parameters/Accept'
  /Reports/VideoDetailReport:
    get:
      deprecated: false
      operationId: GetVideoDetailReportVideoDetailReport_Get
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VideoDetailReport'
      tags:
        - private
    parameters:
      - $ref: '#/parameters/Accept'
  /Rev/Orders:
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: Requires at least one Video ID.
      operationId: CreateRevCaptionOrder
      parameters:
        - description: This is a secret key specific to each partner that wishes to use the Rev API.
          in: formData
          name: ClientApiKey
          required: true
          type: string
        - description: 'This is a secret key specific to a Rev user, which identifies the user account under whose privileges the requested operation executes. This key can be obtained by logging in to Rev as the user in question and going to the Rev Account Settings page.'
          in: formData
          name: UserApiKey
          required: true
          type: string
        - description: Optional order reference number.
          in: formData
          name: ReferenceId
          required: false
          type: string
        - description: ID of video to caption.
          format: int64
          in: formData
          name: VideoId
          required: true
          type: integer
          x-nullable: false
        - description: Optional URL to send notifications when order is complete.
          in: formData
          name: NotificationUrl
          required: false
          type: string
        - description: Optional URL to send notifications when order is complete.
          in: formData
          name: UseSandbox
          required: false
          type: boolean
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CaptionOrderResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Creates a caption order for given Video Ids.
      tags:
        - Rev
  /Rev/Orders/All:
    get:
      deprecated: false
      description: Orders are paged. Use Order ID to retrieve the caption attachment.
      operationId: GetRevCaptions
      parameters:
        - description: Limits the total items returned. Maximum of 100 per request.
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AllRevCaptionsResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Caption Orders.
      tags:
        - Rev
    parameters:
      - $ref: '#/parameters/Accept'
  '/Rev/{Id}/Attachments/{Type}/content':
    get:
      deprecated: false
      description: Requires caption OrderId and Type of caption.
      operationId: GetRevCaptionAttachmentContent
      parameters:
        - description: Caption Order Id.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Type of caption content.
          enum:
            - WebVTT
            - Ttml
            - SubRip
            - Scc
            - Mcc
            - QtText
            - Transcript
            - Dfxp
            - CheetaCap
            - Stl
            - AvidDs
            - FacebookSubRip
            - Unknown
          in: path
          name: Type
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            title: String
            type: string
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Caption text.
      tags:
        - Rev
    parameters:
      - $ref: '#/parameters/Accept'
  '/SDKs/{Client}':
    get:
      deprecated: false
      description: Generate and download SDK's for using the API.  Requires a subscription key for authorization and a valid client.
      operationId: GetSDK
      parameters:
        - description: Client SDK
          enum:
            - akka_scala
            - android
            - async_scala
            - bash
            - clojure
            - cpprest
            - csharp
            - CsharpDotNet2
            - cwiki
            - dart
            - dynamic_html
            - elixir
            - flash
            - go
            - groovy
            - html
            - html2
            - java
            - javascript
            - javascript_closure_angular
            - jaxrs_cxf_client
            - jmeter
            - objc
            - perl
            - php
            - python
            - qt5cpp
            - ruby
            - scala
            - swagger
            - swagger_yaml
            - swift
            - swift3
            - tizen
            - typescript_angular
            - typescript_angular2
            - typescript_fetch
            - typescript_node
          in: path
          name: Client
          required: true
          type: string
        - description: Redirect to download the zipped SDK.
          in: query
          name: RedirectToFile
          required: true
          type: boolean
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SDKResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns a zip file of client SDK.
      tags:
        - SDKs
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/All:
    get:
      deprecated: false
      description: |-
        By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter. 


        `Subscriptions with "Limited" data will only be able to include basic title information, Videos, EpisodicVideos, and SeasonVideos.`
      operationId: GetAllShows
      parameters:
        - description: Limits the total items returned. Maximum of 10 per request.
          format: int32
          in: query
          name: Take
          required: false
          type: integer
          x-nullable: false
        - description: Skips records using for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the show object.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - Seasons
              - EpisodeVideos
              - SeasonVideos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AllShowsResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns a paged list of all TV shows.
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/AlternateIdTypes:
    get:
      deprecated: false
      description: 'Alternate Id types refer to the 3rd party ID sets IVA data has matched.  **Ex: IMDB**'
      operationId: GetShowAlternateIdTypes
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowAlternateIdTypeResponse'
            title: List<ShowAlternateIdTypeResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of External Id Types
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/Match/:
    get:
      deprecated: false
      description: 'Use to match IVA show data to another data source using title, director, cast, etc.'
      operationId: MatchToShow
      parameters:
        - description: Title of Show to be matched.
          in: query
          name: Title
          required: true
          type: string
        - collectionFormat: multi
          description: Alternate Titles of Show to be matched.
          in: query
          items:
            type: string
          name: AlternateTitles
          required: false
          type: array
        - description: Release Year of Show to be matched.
          format: int32
          in: query
          name: Year
          required: false
          type: integer
        - collectionFormat: multi
          description: Cast members of Show to be matched.
          in: query
          items:
            type: string
          name: Cast
          required: false
          type: array
        - collectionFormat: multi
          description: Producers of Show to be matched.
          in: query
          items:
            type: string
          name: Producers
          required: false
          type: array
        - collectionFormat: multi
          description: Directors of Show to be matched.
          in: query
          items:
            type: string
          name: Directors
          required: false
          type: array
        - description: Description of Show to be matched.
          in: query
          name: Description
          required: false
          type: string
        - description: Poster of movie to be matched.
          in: query
          name: Poster
          required: false
          type: string
        - description: Release Date of movie to be matched.
          format: date-time
          in: query
          name: ReleaseDate
          required: false
          type: string
        - description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
          format: int32
          in: query
          name: StringDistance
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MatchToEntertainmentShowResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Perform a match to Entertainment using Title, Year, Cast and Director. Returns best match and score for the match.'
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
    post:
      consumes:
        - application/x-www-form-urlencoded
      deprecated: false
      description: 'Requires a valid MatchShowCandidate, matches to Entertainment Shows'
      operationId: MatchToShowPost
      parameters:
        - description: Title of Show to be matched.
          in: formData
          name: Title
          required: true
          type: string
        - collectionFormat: multi
          description: Alternate Titles of Show to be matched.
          in: formData
          items:
            type: string
          name: AlternateTitles
          required: false
          type: array
        - description: Release Year of Show to be matched.
          format: int32
          in: formData
          name: Year
          required: false
          type: integer
        - collectionFormat: multi
          description: Cast members of Show to be matched.
          in: formData
          items:
            type: string
          name: Cast
          required: false
          type: array
        - collectionFormat: multi
          description: Producers of Show to be matched.
          in: formData
          items:
            type: string
          name: Producers
          required: false
          type: array
        - collectionFormat: multi
          description: Directors of Show to be matched.
          in: formData
          items:
            type: string
          name: Directors
          required: false
          type: array
        - description: Description of Show to be matched.
          in: formData
          name: Description
          required: false
          type: string
        - description: Poster of movie to be matched.
          in: formData
          name: Poster
          required: false
          type: string
        - description: Release Date of movie to be matched.
          format: date-time
          in: formData
          name: ReleaseDate
          required: false
          type: string
        - description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
          format: int32
          in: formData
          name: StringDistance
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MatchToEntertainmentShowResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Perform a match to Entertainment using Title, Year, Cast and Director.  Returns best match and score for the match.'
      tags:
        - Shows
  /Shows/ReleaseTypes:
    get:
      deprecated: false
      description: Release types refer to the type of release and are used in the releases object for a show.
      operationId: GetShowReleaseTypes
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowReleaseTypeResponse'
            title: List<ShowReleaseTypeResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Show Release Types
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/SearchAndDiscover:
    get:
      deprecated: false
      description: |-
        Searchable Fields: Title, AlternateTitles, Genres, Tags, Cast, Directors, Descriptions, Ratings, OriginalLanguage. [Syntax Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/simple-query-syntax-in-azure-search)

        Filterable Fields: Id, Title, AlternateTitles, Genres, OriginalAirDate, Year, Tags, Cast, Directors, Descriptions, HasVideo, ImageFilePath, Ratings, OriginalLanguage, Created, Modified, NumberOfSeasons, NumberOfEpisodes. [Syntax Ref](https://docs.microsoft.com/en-us/rest/api/searchservice/simple-query-syntax-in-azure-search)
      operationId: SearchAndDiscoverShow
      parameters:
        - description: Term to search for. This can be combined with all other options. Use '*' to return any match.
          in: query
          name: term
          required: false
          type: string
        - collectionFormat: multi
          description: List of field names to be returned in the object.
          in: query
          items:
            type: string
          name: SelectFields
          required: false
          type: array
        - collectionFormat: multi
          description: List of field names to search using 'term.'
          in: query
          items:
            type: string
          name: SearchFields
          required: false
          type: array
        - description: Expression to filter results.
          in: query
          name: Filter
          required: false
          type: string
        - collectionFormat: multi
          description: List of field names to sort results.  Default is relevance.
          in: query
          items:
            type: string
          name: OrderBy
          required: false
          type: array
        - description: Limit results.  Maximum returned is 1000.
          format: int32
          in: query
          name: Top
          required: false
          type: integer
          x-nullable: false
        - description: Skip number of results. Use this for paging results.
          format: int32
          in: query
          name: Skip
          required: false
          type: integer
          x-nullable: false
        - description: Includes total results in response. This will have a performance impact.
          in: query
          name: IncludeTotalResultCount
          required: false
          type: boolean
          x-nullable: false
        - description: Specifies whether ANY or ALL of the search terms must be matched in order to count the item as a match.
          in: query
          name: SearchMode
          required: false
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SearchShowResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Search and discover shows.
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/Season/:
    get:
      deprecated: true
      description: Use the IVA ShowId and a season number to get a season details and video asset data.
      operationId: GetSeasonByNumber
      parameters:
        - description: Id of a Show.
          format: int64
          in: query
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Number of a Season belonging to a Show.
          format: int32
          in: query
          name: SeasonNumber
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SeasonResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get Season by ShowId and Season Number.
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/Seasons/Episode/:
    get:
      deprecated: true
      description: 'Some use cases find it useful to be able to pass a season number and episode number of a known show to get the data for that exact episode.  '
      operationId: GetEpisodeByNumber
      parameters:
        - description: Required Id of the Show.
          format: int64
          in: query
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Required SeasonNumber.
          format: int32
          in: query
          name: SeasonNumber
          required: true
          type: integer
          x-nullable: false
        - description: Required EpisodeNumber.
          format: int32
          in: query
          name: EpisodeNumber
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/EpisodeResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Get Episode by ShowId, Season Number and Episode Number.'
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  '/Shows/Seasons/Episodes/{Id}':
    get:
      deprecated: false
      description: Returns the episode details for a specific episode ID.
      operationId: GetEpisode
      parameters:
        - description: Required ID of an Episode.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the episode response.
          in: query
          items:
            enum:
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/EpisodeResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns an Episode object for a requested Episode ID.
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  '/Shows/Seasons/{Id}':
    get:
      deprecated: false
      description: Use with a SeasonId to return details for a season including any video asset data.
      operationId: GetSeason
      parameters:
        - description: Id of a Season.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the season response.
          in: query
          items:
            enum:
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Episodes
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SeasonResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get Season by SeasonId.
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/ShowCertifications:
    get:
      deprecated: false
      description: List of Show Certifications and definitions.
      operationId: GetShowCertifications
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/DbShowCertification'
            title: List<DbShowCertification>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Show Certifications
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Shows/ShowGenres:
    get:
      deprecated: false
      description: Returns a list of all the show genres used in the IVA database.
      operationId: GetShowGenres
      parameters: []
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ShowGenreResponse'
            title: List<ShowGenreResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Show Genres
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  '/Shows/{Id}':
    get:
      deprecated: false
      description: |-
        By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.  


        `Subscriptions with "Limited" data will only be able to include basic title information, Videos, EpisodicVideos, and SeasonVideos.`
      operationId: GetShow
      parameters:
        - description: Required ID of Show.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the show response.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
              - Seasons
              - EpisodeVideos
              - SeasonVideos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ShowResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get Show by Show ID.
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  '/Shows/{Id}/Seasons/{SeasonNumber}':
    get:
      deprecated: false
      description: Depreciated. Use GetSeasonBySeasonNumber instead.  Requires a valid ShowId and Season Number.
      operationId: GetSeasonBySeasonNumber
      parameters:
        - description: Id of a Show.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Number of a Season belonging to a Show.
          format: int32
          in: path
          name: SeasonNumber
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the season response.
          in: query
          items:
            enum:
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Episodes
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SeasonResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Get Season by ShowId and Season Number.
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  '/Shows/{Id}/Seasons/{SeasonNumber}/Episodes/{EpisodeNumber}':
    get:
      deprecated: false
      description: 'Requires a valid ShowId, Season Number and Episode Number.'
      operationId: GetEpisodeByEpisodeNumber
      parameters:
        - description: Required Id of the Show.
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Required SeasonNumber.
          format: int32
          in: path
          name: SeasonNumber
          required: true
          type: integer
          x-nullable: false
        - description: Required EpisodeNumber.
          format: int32
          in: path
          name: EpisodeNumber
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the episode response.
          in: query
          items:
            enum:
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Images
              - Videos
              - ExternalIds
              - Availabilities
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/EpisodeResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Get Episode by ShowId, Season Number and Episode Number.'
      tags:
        - Shows
    parameters:
      - $ref: '#/parameters/Accept'
  /Tests/TestDateTime/:
    get:
      deprecated: false
      description: Entertainment Express APIs use date time format ISO 8601.  Use this API to test your date time format to see if it translates to a valid time on our server.
      operationId: GetTestDateTime
      parameters:
        - description: DateTime to test format from API.
          format: date-time
          in: query
          name: DateTime
          required: true
          type: string
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/TestDateTimeResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns translated time from IVA or an error if invalid.
      tags:
        - Tests
    parameters:
      - $ref: '#/parameters/Accept'
  /TheatricalMovies/:
    get:
      deprecated: true
      description: |+
        Deprecated. Use /Movies/InTheaters or /Movies/ComingSoon instead. Returns all movies with a US Theatrical Release Date > today - 60 days.  Use the includes parameter to include additional objects related to the movie.  The includes parameter takes a comma separated list of objects.  **EX: Genres,Descriptions,Videos**    



      operationId: GetTheatricalMovies
      parameters:
        - description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
          format: int32
          in: query
          name: Skip
          required: true
          type: integer
          x-nullable: false
        - description: Determines the page size.  (Maximum of 10)
          format: int32
          in: query
          name: Take
          required: true
          type: integer
          x-nullable: false
        - collectionFormat: multi
          description: List of additional objects to include in the movie response.
          in: query
          items:
            enum:
              - Genres
              - Releases
              - Contributors
              - AlternateTitles
              - Descriptions
              - Companies
              - Tags
              - Images
              - Videos
            type: string
          name: Includes
          required: false
          type: array
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/MovieResponse'
            title: List<MovieResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Returns list of all US Theatrical Movie objects.
      tags:
        - TheatricalMovies
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/Videos:
    get:
      deprecated: false
      description: List of Videos for a program.
      operationId: GetVideosById
      parameters:
        - in: query
          name: Id
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ProgramVideo'
            title: List<ProgramVideo>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Videos for a program.
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/genres/movies:
    get:
      deprecated: false
      description: Gets list of movie genres.
      operationId: GetTvMediaMovieGenres
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaGenreResponse'
            title: List<TvMediaGenreResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/genres/shows:
    get:
      deprecated: false
      description: Gets list of show genres.
      operationId: GetTvMediaShowGenres
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaGenreResponse'
            title: List<TvMediaGenreResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/genres/sports:
    get:
      deprecated: false
      description: Gets list of sports genres.
      operationId: GetTvMediaSportGenres
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaGenreResponse'
            title: List<TvMediaGenreResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/leagues:
    get:
      deprecated: false
      description: Gets list of sports leagues.
      operationId: GetTvMediaLeagues
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaLeagueResponse'
            title: List<TvMediaLeagueResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/leagues/{LeagueID}/listings':
    get:
      deprecated: false
      description: Retrieve listings for a given leagueID.
      operationId: GetTvMediaLeagueListings
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: League ID. See /leagues for a list of all available sports leagues.
          in: path
          name: LeagueID
          required: true
          type: string
        - description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.
          in: query
          name: LineupID
          required: true
          type: string
        - description: UTC start time in ISO8601. Defaults to current date and time.
          format: date-time
          in: query
          name: Start
          required: false
          type: string
        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
          format: date-time
          in: query
          name: End
          required: false
          type: string
        - description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
          format: int32
          in: query
          name: TimeZone
          required: false
          type: integer
        - collectionFormat: multi
          description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
          in: query
          items:
            type: string
          name: Channel
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
          in: query
          items:
            type: string
          name: ExcludeChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
          in: query
          items:
            type: string
          name: StartChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
          in: query
          items:
            type: string
          name: EndChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: Station
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: ExcludeStation
          required: false
          type: array
        - description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
          in: query
          name: Search
          required: false
          type: string
        - collectionFormat: multi
          description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ExcludeShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
          in: query
          items:
            type: string
          name: Id
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
          in: query
          items:
            type: string
          name: SportType
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
          in: query
          items:
            type: string
          name: League
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
          in: query
          items:
            type: string
          name: Team
          required: false
          type: array
        - description: Only displays listings which are starting on or after the given start time. No value necessary.
          in: query
          name: NotYetStarted
          required: false
          type: boolean
        - description: Get sporting events only. No value necessary.
          in: query
          name: SportEventsOnly
          required: false
          type: boolean
        - description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
          in: query
          name: DescriptiveVideoOnly
          required: false
          type: boolean
        - description: Only displays live listings. No value necessary.
          in: query
          name: LiveOnly
          required: false
          type: boolean
        - description: Get new shows only. No value necessary.
          in: query
          name: NewShowsOnly
          required: false
          type: boolean
        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.
          in: query
          name: AdultContent
          required: false
          type: boolean
          x-nullable: false
        - description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
          in: query
          name: DisplayArtwork
          required: false
          type: boolean
          x-nullable: false
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaListingResponse'
            title: List<TvMediaListingResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/leagues/{LeagueID}/teams':
    get:
      deprecated: false
      description: Gets list of teams in a league.
      operationId: GetTvMediaTeams
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: League ID. See /TvMedia/leagues for a list of all available sports leagues.
          in: path
          name: LeagueID
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaTeamResponse'
            title: List<TvMediaTeamResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/lineups:
    get:
      deprecated: false
      description: Get lineups by postal code.
      operationId: GetTvMediaLineupsByPostalCode
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Postal code.
          in: query
          name: PostalCode
          required: true
          type: string
        - description: 'Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.'
          enum:
            - OTA
            - SAT
            - CAB
            - IPTV
          in: query
          name: LineupType
          required: false
          type: string
        - description: Filter by provider ID
          in: query
          name: ProviderId
          required: false
          type: string
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaLineupResponse'
            title: List<TvMediaLineupResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: ''
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/lineups/browse:
    get:
      deprecated: false
      description: 'Starting point for lineup browser, returns available countries.'
      operationId: GetTvMediaCountries
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaCountryResponse'
            title: List<TvMediaCountryResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/lineups/browse/{CountryID}':
    get:
      deprecated: false
      description: Browse regions by country.
      operationId: GetTvMediaRegions
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Country abbreviation. See TvMedia/lineups/browse for a list of supported countries.
          in: path
          name: CountryID
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaRegionResponse'
            title: List<TvMediaRegionResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/lineups/browse/{CountryID}/{RegionID}':
    get:
      deprecated: false
      description: Get service areas for a specific country and region.
      operationId: GetTvMediaServiceAreas
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Country abbreviation. See TvMedia/lineups/browse for a list of supported countries.
          in: path
          name: CountryID
          required: true
          type: string
        - description: 'Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a list of regions.'
          in: path
          name: RegionID
          required: true
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaServiceAreaResponse'
            title: List<TvMediaServiceAreaResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/lineups/browse/{CountryID}/{RegionID}/{AreaID}':
    get:
      deprecated: false
      description: Get lineups by AreaID.
      operationId: GetTvMediaLineupsByAreaID
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Country abbreviation. See TvMedia/lineups/browse for a list of supported countries.
          in: path
          name: CountryID
          required: true
          type: string
        - description: 'Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a list of regions.'
          in: path
          name: RegionID
          required: true
          type: string
        - description: 'Service area ID. See TvMedia/lineups/browse/{CountryID}/{RegionID} for a list of service areas.'
          in: path
          name: AreaID
          required: true
          type: string
        - description: 'Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.'
          enum:
            - OTA
            - SAT
            - CAB
            - IPTV
          in: query
          name: LineupType
          required: false
          type: string
        - description: Filter by provider ID
          in: query
          name: ProviderId
          required: false
          type: string
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaLineupResponse'
            title: List<TvMediaLineupResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/lineups/geo:
    get:
      deprecated: false
      description: Get lineups by latitude and longitude.
      operationId: GetTvMediaLineupsByLatitudeLongitude
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Latitude (geographic coordinate).
          format: float
          in: query
          name: Latitude
          required: true
          type: number
          x-nullable: false
        - description: Longitude (geographic coordinate).
          format: float
          in: query
          name: Longitude
          required: true
          type: number
          x-nullable: false
        - description: 'Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.'
          enum:
            - OTA
            - SAT
            - CAB
            - IPTV
          in: query
          name: LineupType
          required: false
          type: string
        - description: Filter by provider ID
          in: query
          name: ProviderId
          required: false
          type: string
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaLineupResponse'
            title: List<TvMediaLineupResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/lineups/{LineupID}':
    get:
      deprecated: false
      description: Get lineups by specific LineupID.
      operationId: GetTvMediaLineupByID
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Lineup ID.
          in: path
          name: LineupID
          required: true
          type: string
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/TvMediaLineupResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/lineups/{LineupID}/listings':
    get:
      deprecated: false
      description: 'Retrieve individual listings for a given lineup ordered by start time (listDateTime) and channel number; unless using the search parameter, in which case they will be ordered by search term relevance.'
      operationId: GetTvMediaLineupListings
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Lineup ID.
          in: path
          name: LineupID
          required: true
          type: string
        - description: UTC start time in ISO8601. Defaults to current date and time.
          format: date-time
          in: query
          name: Start
          required: false
          type: string
        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
          format: date-time
          in: query
          name: End
          required: false
          type: string
        - description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
          format: int32
          in: query
          name: TimeZone
          required: false
          type: integer
        - collectionFormat: multi
          description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
          in: query
          items:
            type: string
          name: Channel
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
          in: query
          items:
            type: string
          name: ExcludeChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
          in: query
          items:
            type: string
          name: StartChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
          in: query
          items:
            type: string
          name: EndChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: Station
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: ExcludeStation
          required: false
          type: array
        - description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
          in: query
          name: Search
          required: false
          type: string
        - collectionFormat: multi
          description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ExcludeShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
          in: query
          items:
            type: string
          name: Id
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
          in: query
          items:
            type: string
          name: SportType
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
          in: query
          items:
            type: string
          name: League
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
          in: query
          items:
            type: string
          name: Team
          required: false
          type: array
        - description: Only displays listings which are starting on or after the given start time. No value necessary.
          in: query
          name: NotYetStarted
          required: false
          type: boolean
        - description: Get sporting events only. No value necessary.
          in: query
          name: SportEventsOnly
          required: false
          type: boolean
        - description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
          in: query
          name: DescriptiveVideoOnly
          required: false
          type: boolean
        - description: Only displays live listings. No value necessary.
          in: query
          name: LiveOnly
          required: false
          type: boolean
        - description: Get new shows only. No value necessary.
          in: query
          name: NewShowsOnly
          required: false
          type: boolean
        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.
          in: query
          name: AdultContent
          required: false
          type: boolean
          x-nullable: false
        - description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
          in: query
          name: DisplayArtwork
          required: false
          type: boolean
          x-nullable: false
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaListingResponse'
            title: List<TvMediaListingResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/lineups/{LineupID}/listings/grid':
    get:
      deprecated: false
      description: 'A collection of listings grouped by channel and ordered by listDateTime. The grid dimensions ( time x channels ) can be modified by using the start, end, startchan and maxchan parameters. Channels without any listings will be returned with an empty listings collection.'
      operationId: GetTvMediaLineupListingsGrid
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Lineup ID.
          in: path
          name: LineupID
          required: true
          type: string
        - description: UTC start time in ISO8601. Defaults to current date and time.
          format: date-time
          in: query
          name: Start
          required: false
          type: string
        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
          format: date-time
          in: query
          name: End
          required: false
          type: string
        - description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
          format: int32
          in: query
          name: TimeZone
          required: false
          type: integer
        - collectionFormat: multi
          description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
          in: query
          items:
            type: string
          name: Channel
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
          in: query
          items:
            type: string
          name: ExcludeChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
          in: query
          items:
            type: string
          name: StartChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
          in: query
          items:
            type: string
          name: EndChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: Station
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: ExcludeStation
          required: false
          type: array
        - description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
          in: query
          name: Search
          required: false
          type: string
        - collectionFormat: multi
          description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ExcludeShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
          in: query
          items:
            type: string
          name: Id
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
          in: query
          items:
            type: string
          name: SportType
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
          in: query
          items:
            type: string
          name: League
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
          in: query
          items:
            type: string
          name: Team
          required: false
          type: array
        - description: Only displays listings which are starting on or after the given start time. No value necessary.
          in: query
          name: NotYetStarted
          required: false
          type: boolean
        - description: Get sporting events only. No value necessary.
          in: query
          name: SportEventsOnly
          required: false
          type: boolean
        - description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
          in: query
          name: DescriptiveVideoOnly
          required: false
          type: boolean
        - description: Only displays live listings. No value necessary.
          in: query
          name: LiveOnly
          required: false
          type: boolean
        - description: Get new shows only. No value necessary.
          in: query
          name: NewShowsOnly
          required: false
          type: boolean
        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.
          in: query
          name: AdultContent
          required: false
          type: boolean
          x-nullable: false
        - description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
          in: query
          name: DisplayArtwork
          required: false
          type: boolean
          x-nullable: false
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaGridResponse'
            title: List<TvMediaGridResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/lineups/{LineupID}/listings/highlights':
    get:
      deprecated: false
      description: Retrieves featured listings. setting a start and/or end time for every request is a highly recommended.
      operationId: GetTvMediaLineupListingsHighlights
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Lineup ID.
          in: path
          name: LineupID
          required: true
          type: string
        - description: UTC start time in ISO8601. Defaults to current date and time.
          format: date-time
          in: query
          name: Start
          required: false
          type: string
        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
          format: date-time
          in: query
          name: End
          required: false
          type: string
        - description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
          format: int32
          in: query
          name: TimeZone
          required: false
          type: integer
        - collectionFormat: multi
          description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
          in: query
          items:
            type: string
          name: Channel
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
          in: query
          items:
            type: string
          name: ExcludeChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
          in: query
          items:
            type: string
          name: StartChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
          in: query
          items:
            type: string
          name: EndChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: Station
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: ExcludeStation
          required: false
          type: array
        - description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
          in: query
          name: Search
          required: false
          type: string
        - collectionFormat: multi
          description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ExcludeShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
          in: query
          items:
            type: string
          name: Id
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
          in: query
          items:
            type: string
          name: SportType
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
          in: query
          items:
            type: string
          name: League
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
          in: query
          items:
            type: string
          name: Team
          required: false
          type: array
        - description: Only displays listings which are starting on or after the given start time. No value necessary.
          in: query
          name: NotYetStarted
          required: false
          type: boolean
        - description: Get sporting events only. No value necessary.
          in: query
          name: SportEventsOnly
          required: false
          type: boolean
        - description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
          in: query
          name: DescriptiveVideoOnly
          required: false
          type: boolean
        - description: Only displays live listings. No value necessary.
          in: query
          name: LiveOnly
          required: false
          type: boolean
        - description: Get new shows only. No value necessary.
          in: query
          name: NewShowsOnly
          required: false
          type: boolean
        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.
          in: query
          name: AdultContent
          required: false
          type: boolean
          x-nullable: false
        - description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
          in: query
          name: DisplayArtwork
          required: false
          type: boolean
          x-nullable: false
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaListingResponse'
            title: List<TvMediaListingResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  /TvGrid/reference/lineups:
    get:
      deprecated: false
      description: 'Get list of generic lineup IDs that can be used.  A ''generic'' lineup is not a real lineup, but a collection of stations defined by TV Media.  Any listing retrieved using a generic lineup will not return any channel number information, as it is irrelevant.'
      operationId: GetTvMediaGenericLineups
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaLineupResponse'
            title: List<TvMediaLineupResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: ''
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/stations/{StationID}':
    get:
      deprecated: false
      description: Gets station details by ID.
      operationId: GetTvMediaStation
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: 'Station ID. Station ID''s can be found in listings, or by using the Tvmedia/lineups API'
          format: int32
          in: path
          name: StationID
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/TvMediaStationResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/stations/{StationID}/listings':
    get:
      deprecated: false
      description: Get listings for a given station.
      operationId: GetTvMediaListingsByStation
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: 'Station ID. Station ID''s can be found in listings, or by using the Tvmedia/lineups API'
          format: int32
          in: path
          name: StationID
          required: true
          type: integer
          x-nullable: false
        - description: UTC start time in ISO8601. Defaults to current date and time.
          format: date-time
          in: query
          name: Start
          required: false
          type: string
        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
          format: date-time
          in: query
          name: End
          required: false
          type: string
        - description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
          format: int32
          in: query
          name: TimeZone
          required: false
          type: integer
        - collectionFormat: multi
          description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
          in: query
          items:
            type: string
          name: Channel
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
          in: query
          items:
            type: string
          name: ExcludeChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
          in: query
          items:
            type: string
          name: StartChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
          in: query
          items:
            type: string
          name: EndChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: Station
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: ExcludeStation
          required: false
          type: array
        - description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
          in: query
          name: Search
          required: false
          type: string
        - collectionFormat: multi
          description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ExcludeShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
          in: query
          items:
            type: string
          name: Id
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
          in: query
          items:
            type: string
          name: SportType
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
          in: query
          items:
            type: string
          name: League
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
          in: query
          items:
            type: string
          name: Team
          required: false
          type: array
        - description: Only displays listings which are starting on or after the given start time. No value necessary.
          in: query
          name: NotYetStarted
          required: false
          type: boolean
        - description: Get sporting events only. No value necessary.
          in: query
          name: SportEventsOnly
          required: false
          type: boolean
        - description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
          in: query
          name: DescriptiveVideoOnly
          required: false
          type: boolean
        - description: Only displays live listings. No value necessary.
          in: query
          name: LiveOnly
          required: false
          type: boolean
        - description: Get new shows only. No value necessary.
          in: query
          name: NewShowsOnly
          required: false
          type: boolean
        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.
          in: query
          name: AdultContent
          required: false
          type: boolean
          x-nullable: false
        - description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
          in: query
          name: DisplayArtwork
          required: false
          type: boolean
          x-nullable: false
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaShortListingResponse'
            title: List<TvMediaShortListingResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: 'Stations are not tied to lineups, therefore no channel numbers will be present in the response, unlike most other listing operations.'
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/teams/{TeamID}':
    get:
      deprecated: false
      description: Gets details for a specific team.
      operationId: GetTvMediaTeamById
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Team ID.
          format: int32
          in: path
          name: TeamID
          required: true
          type: integer
          x-nullable: false
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaTeamResponse'
            title: List<TvMediaTeamResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/TvGrid/teams/{TeamID}/listings':
    get:
      deprecated: false
      description: Retrieve listings for a given TeamID.
      operationId: GetTvMediaTeamListings
      parameters:
        - description: API Key supplied by TvMedia.ca
          in: query
          name: TvMediaApiKey
          required: true
          type: string
        - description: Team ID. See /teams for a list of all available sports teams.
          format: int32
          in: path
          name: TeamID
          required: true
          type: integer
          x-nullable: false
        - description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.
          in: query
          name: LineupID
          required: true
          type: string
        - description: UTC start time in ISO8601. Defaults to current date and time.
          format: date-time
          in: query
          name: Start
          required: false
          type: string
        - description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
          format: date-time
          in: query
          name: End
          required: false
          type: string
        - description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
          format: int32
          in: query
          name: TimeZone
          required: false
          type: integer
        - collectionFormat: multi
          description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
          in: query
          items:
            type: string
          name: Channel
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
          in: query
          items:
            type: string
          name: ExcludeChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
          in: query
          items:
            type: string
          name: StartChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
          in: query
          items:
            type: string
          name: EndChan
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: Station
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
          in: query
          items:
            format: int32
            type: integer
            x-nullable: false
          name: ExcludeStation
          required: false
          type: array
        - description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
          in: query
          name: Search
          required: false
          type: string
        - collectionFormat: multi
          description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
          in: query
          items:
            type: string
          name: ExcludeShowType
          required: false
          type: array
        - collectionFormat: multi
          description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
          in: query
          items:
            type: string
          name: Id
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
          in: query
          items:
            type: string
          name: SportType
          required: false
          type: array
        - collectionFormat: multi
          description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
          in: query
          items:
            type: string
          name: League
          required: false
          type: array
        - collectionFormat: multi
          description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
          in: query
          items:
            type: string
          name: Team
          required: false
          type: array
        - description: Only displays listings which are starting on or after the given start time. No value necessary.
          in: query
          name: NotYetStarted
          required: false
          type: boolean
        - description: Get sporting events only. No value necessary.
          in: query
          name: SportEventsOnly
          required: false
          type: boolean
        - description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
          in: query
          name: DescriptiveVideoOnly
          required: false
          type: boolean
        - description: Only displays live listings. No value necessary.
          in: query
          name: LiveOnly
          required: false
          type: boolean
        - description: Get new shows only. No value necessary.
          in: query
          name: NewShowsOnly
          required: false
          type: boolean
        - description: Defaults to 1 (allowed). Set to 0 to hide adult content.
          in: query
          name: AdultContent
          required: false
          type: boolean
          x-nullable: false
        - description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
          in: query
          name: DisplayArtwork
          required: false
          type: boolean
          x-nullable: false
        - description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
          enum:
            - full
            - brief
          in: query
          name: Detail
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/TvMediaListingResponse'
            title: List<TvMediaListingResponse>
            type: array
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      tags:
        - TvGrid
    parameters:
      - $ref: '#/parameters/Accept'
  '/Videos/GetVideo/{Id}':
    get:
      deprecated: false
      description: |-
        Returns a URL to the requested video. [Video Format Specs](https://developer.iva-api.com/docs/v1/video-formats)

        **Formats:** MP4 = 4, HLS = 11, Dash = 14, HSS = 12, HDS = 13

        **MP4 KbRate:** 80, 212, 450, 750, 1500, 2500(HD sources only), 5000 (sources >=  1080p)  

        **Adaptive Min/Max rate:** 212000, 350000, 600000, 1200000, 2000000, 2500000, 3500000  

         `URLs requested with a Demo account will always return max 750 kbps video.  Full commercial account required for higher bitrates.`
      operationId: GetVideo
      parameters:
        - description: 'Id of the Video from either MovieVideo, ShowVideo, SeasonVideo, EpisodeVideo object.'
          format: int64
          in: path
          name: Id
          required: true
          type: integer
          x-nullable: false
        - description: Video format.
          enum:
            - mp4
            - hls
            - hss
            - hds
            - dash
          in: query
          name: Format
          required: true
          type: string
          x-nullable: false
        - description: Video bit-rate required for MP4 content.
          enum:
            - NOT_SET
            - mp4_80
            - mp4_212
            - mp4_450
            - mp4_750
            - mp4_1500
            - mp4_2500
            - mp4_5000
            - mp4_8000
          in: query
          name: KbRate
          required: false
          type: string
          x-nullable: false
        - description: 'UTC Time to video link should expire. ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
          format: date-time
          in: query
          name: Expires
          required: true
          type: string
          x-nullable: false
        - description: Report tag used in video analytics.
          in: query
          name: ReportTag
          required: false
          type: string
        - description: Position in seconds to start video playback.
          format: int32
          in: query
          name: start
          required: false
          type: integer
        - description: Position in seconds to end video playback.
          format: int32
          in: query
          name: end
          required: false
          type: integer
        - description: 'Adaptive Maximum rate. (Depreciated, use adaptive minimum resolution instead)'
          enum:
            - adap_212000
            - adap_350000
            - adap_600000
            - adap_1200000
            - adap_2000000
            - adap_2500000
            - adap_3500000
          in: query
          name: MinRate
          required: false
          type: string
          x-nullable: false
        - description: 'Adaptive Minimum rate. (Depreciated, use adaptive minimum resolution instead)'
          enum:
            - adap_212000
            - adap_350000
            - adap_600000
            - adap_1200000
            - adap_2000000
            - adap_2500000
            - adap_3500000
          in: query
          name: MaxRate
          required: false
          type: string
          x-nullable: false
        - description: 'Adaptive Minimum resolution. Default is QVGA (320 wide, 212Kbps)'
          enum:
            - RESOLUTION_QVGA
            - RESOLUTION_HVGA
            - RESOLUTION_480P
            - RESOLUTION_720P
            - RESOLUTION_1080P
          in: query
          name: AdaptiveMinimumResolution
          required: false
          type: string
        - description: Adaptive Maximum resolution. Default is 1080P Resolution.
          enum:
            - RESOLUTION_QVGA
            - RESOLUTION_HVGA
            - RESOLUTION_480P
            - RESOLUTION_720P
            - RESOLUTION_1080P
          in: query
          name: AdaptiveMaximumResolution
          required: false
          type: string
        - description: 'Adaptive Client Manifest Version (HLS, default = 3)'
          format: int32
          in: query
          name: AdaptiveClientManifestVersion
          required: false
          type: integer
        - description: 'Adaptive Start Index. Default = 4, the 480P resolution.'
          format: int32
          in: query
          name: AdaptiveStartIndex
          required: false
          type: integer
        - description: Adaptive Minimum Fragment Length. Default is 10 seconds.
          enum:
            - Two
            - Three
            - Four
            - Five
            - Six
            - Seven
            - Eight
            - Nine
            - Ten
            - Fifteen
            - Twenty
            - Thirty
          in: query
          name: AdaptiveMinimumFragmentLength
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/VideoResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: Redirect URL to video.
      tags:
        - Videos
    parameters:
      - $ref: '#/parameters/Accept'
  /XroadMedia/recommendations:
    get:
      deprecated: false
      description: ''
      operationId: GetXRoadMediaRecommendations
      parameters:
        - description: Source MovieId for recommendations.
          format: int64
          in: query
          name: MovieId
          required: false
          type: integer
        - description: Source ShowId for recommendations.
          format: int64
          in: query
          name: ShowId
          required: false
          type: integer
        - description: Type of recommendation response.
          enum:
            - similar
            - similarShowsOnly
            - similarMoviesOnly
          in: query
          name: Type
          required: false
          type: string
      produces:
        - application/json
        - application/xml
        - text/csv
        - text/html
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/XRoadMediaRecommendationResponse'
        '204':
          description: No content.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. The subscription key does not have permission to access this method.
        '404':
          description: Not found. The item you requested could not be found or has been deleted.
        '409':
          description: Conflict.
        '429':
          description: Too many requests.
        '500':
          description: Internal server error.
        '503':
          description: Service unavailable.
      security:
        - ApiKeyHeader: []
          ApiKeyQuery: []
      summary: List of Recommendations for movie or show.
      tags:
        - XroadMedia
    parameters:
      - $ref: '#/parameters/Accept'
definitions:
  AllGamesResponse:
    description: AllGamesResponse
    properties:
      Result:
        items:
          $ref: '#/definitions/Game'
        type: array
      Skip:
        description: Records to skip used with paging.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Page size.
        format: int32
        type: integer
        x-nullable: false
      TotalCount:
        description: Total count of games.
        format: int32
        type: integer
        x-nullable: false
    title: AllGamesResponse
    type: object
  AllMoviesResponse:
    description: AllMoviesResponse
    properties:
      Result:
        items:
          $ref: '#/definitions/Movie'
        type: array
      Skip:
        description: Records to skip used with paging.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Page size.
        format: int32
        type: integer
        x-nullable: false
      TotalCount:
        description: Total count of movies.
        format: int32
        type: integer
        x-nullable: false
    title: AllMoviesResponse
    type: object
  AllMyProgramsResponse:
    description: AllMyProgramsResponse
    properties:
      Result:
        items:
          $ref: '#/definitions/MyProgram'
        type: array
      Skip:
        description: Records to skip used with paging.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Page size.
        format: int32
        type: integer
        x-nullable: false
      TotalCount:
        description: Total count of programs.
        format: int32
        type: integer
        x-nullable: false
    title: AllMyProgramsResponse
    type: object
  AllMyVideosResponse:
    description: AllMyVideosResponse
    properties:
      Result:
        items:
          $ref: '#/definitions/MyVideo'
        type: array
      Skip:
        description: Records to skip used with paging.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Page size.
        format: int32
        type: integer
        x-nullable: false
      TotalCount:
        description: Total count of videos.
        format: int32
        type: integer
        x-nullable: false
    title: AllMyVideosResponse
    type: object
  AllPeopleResponse:
    description: AllPeopleResponse
    properties:
      Result:
        items:
          $ref: '#/definitions/Person'
        type: array
      Skip:
        description: Records to skip used with paging.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Page size.
        format: int32
        type: integer
        x-nullable: false
      TotalCount:
        description: Total count of people.
        format: int32
        type: integer
        x-nullable: false
    title: AllPeopleResponse
    type: object
  AllRevCaptionsResponse:
    description: AllRevCaptionsResponse
    properties:
      Result:
        items:
          $ref: '#/definitions/RevCaptionsResponse'
        type: array
      Skip:
        description: Records to skip used with paging.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Page size.
        format: int32
        type: integer
        x-nullable: false
      TotalCount:
        description: Total count of captions.
        format: int64
        type: integer
        x-nullable: false
    title: AllRevCaptionsResponse
    type: object
  AllShowsResponse:
    description: AllShowsResponse
    properties:
      Result:
        items:
          $ref: '#/definitions/Show'
        type: array
      Skip:
        description: Records to skip used with paging.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Page size.
        format: int32
        type: integer
        x-nullable: false
      TotalCount:
        description: Total count of shows.
        format: int32
        type: integer
        x-nullable: false
    title: AllShowsResponse
    type: object
  Artwork:
    description: Artwork
    properties:
      episodic:
        type: string
      moviePoster:
        type: string
      movieStill:
        type: string
      poster:
        type: string
      showcard:
        type: string
      titlecard:
        type: string
    title: Artwork
    type: object
  CaptionOrderResponse:
    description: CaptionOrderResponse
    properties:
      Id:
        format: int64
        type: integer
        x-nullable: false
      Status:
        type: string
    title: CaptionOrderResponse
    type: object
  CelebrityRankedResponse:
    description: CelebrityRankedResponse
    properties:
      FilePath:
        type: string
      Id:
        type: string
      Name:
        type: string
    title: CelebrityRankedResponse
    type: object
  ChartItem:
    description: ChartItem
    properties:
      Id:
        format: int64
        type: integer
        x-nullable: false
      Rank:
        format: int32
        type: integer
        x-nullable: false
      Title:
        type: string
      Year:
        format: int32
        type: integer
        x-nullable: false
    title: ChartItem
    type: object
  ChartPersonItem:
    description: ChartPersonItem
    properties:
      Id:
        format: int64
        type: integer
        x-nullable: false
      Name:
        type: string
      Rank:
        format: int32
        type: integer
        x-nullable: false
    title: ChartPersonItem
    type: object
  CommonEnumerators:
    description: CommonEnumerators
    properties:
      CurrencyType:
        items:
          type: string
        type: array
      DeliveryMethod:
        items:
          type: string
        type: array
      OfferType:
        items:
          type: string
        type: array
      Provider:
        items:
          type: string
        type: array
      VideoQuality:
        items:
          type: string
        type: array
    title: CommonEnumerators
    type: object
  Company:
    description: Company
    properties:
      CompanyId:
        description: ID of Company.
        format: int64
        type: integer
        x-nullable: false
      Id:
        description: ID of Company object.
        format: int64
        type: integer
      Name:
        description: Name of the Company.
        type: string
    title: Company
    type: object
  CompanyResponse:
    description: CompanyResponse
    properties:
      Id:
        description: ID of Company.
        format: int64
        type: integer
        x-nullable: false
      Name:
        description: Name of the Company.
        type: string
    title: CompanyResponse
    type: object
  Contribution:
    description: Contribution
    properties:
      Character:
        type: string
      Id:
        format: int64
        type: integer
        x-nullable: false
      Job:
        type: string
      OriginalTitle:
        type: string
      Title:
        type: string
      Year:
        format: int32
        type: integer
        x-nullable: false
    title: Contribution
    type: object
  Country:
    description: Country
    properties:
      AlternateNames:
        description: Alternate names of the Country.
        items:
          type: string
        type: array
      Id:
        format: int32
        type: integer
        x-nullable: false
      IsoCode:
        description: ISO code for a Country.
        type: string
      IsoCodeA3:
        description: ISO 3 character code for a Country.
        type: string
      Name:
        description: Name of the Country.
        type: string
    title: Country
    type: object
  CountryResponse:
    description: CountryResponse
    properties:
      AlternateNames:
        description: Alternate names of the Country.
        items:
          type: string
        type: array
      Id:
        format: int32
        type: integer
        x-nullable: false
      IsoCode:
        description: ISO code for a Country.
        type: string
      IsoCodeA3:
        description: ISO 3 character code for a Country.
        type: string
      Name:
        description: Name of the Country.
        type: string
    title: CountryResponse
    type: object
  CreateMyProgram:
    description: CreateMyProgram
    properties:
      CustomMetadata:
        description: List of custom metadata entries.
        items:
          $ref: '#/definitions/CustomMetadata'
        type: array
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      ReferenceId:
        description: Client reference ID of MyVideo.
        type: string
      Title:
        description: Title of MyVideo.
        type: string
    title: CreateMyProgram
    type: object
  CreateMyVideo:
    description: CreateMyVideo
    properties:
      Companies:
        description: Companies of MyVideo.
        items:
          type: string
        type: array
      Descriptions:
        description: Description of MyVideo.
        items:
          $ref: '#/definitions/MyVideoDescription'
        type: array
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      ExpirationDate:
        description: Date MyVideo expires / becomes unavailable for streaming.
        format: date-time
        type: string
      NotificationUrl:
        description: Location to have us notify you of video encode status.
        type: string
      ReferenceId:
        description: Client reference ID of MyVideo.
        type: string
      StartDate:
        description: First date of MyVideo availability.
        format: date-time
        type: string
      Title:
        description: Title of MyVideo.
        type: string
      Url:
        description: Location of the media you wish to upload.
        type: string
    title: CreateMyVideo
    type: object
  CreateRevCaptionOrder:
    description: CreateRevCaptionOrder
    properties:
      ClientApiKey:
        description: This is a secret key specific to each partner that wishes to use the Rev API.
        type: string
      NotificationUrl:
        description: Optional URL to send notifications when order is complete.
        type: string
      ReferenceId:
        description: Optional order reference number.
        type: string
      UseSandbox:
        description: Optional URL to send notifications when order is complete.
        type: boolean
        x-nullable: false
      UserApiKey:
        description: 'This is a secret key specific to a Rev user, which identifies the user account under whose privileges the requested operation executes. This key can be obtained by logging in to Rev as the user in question and going to the Rev Account Settings page.'
        type: string
      VideoId:
        description: ID of video to caption.
        format: int64
        type: integer
        x-nullable: false
    required:
      - ClientApiKey
      - UserApiKey
      - VideoId
    title: CreateRevCaptionOrder
    type: object
  CustomMetadata:
    description: CustomMetadata
    properties:
      Name:
        description: Metadata name.
        type: string
      Value:
        description: Metadata value.
        type: string
    title: CustomMetadata
    type: object
  DataDemoFilters:
    description: DataDemoFilters
    properties:
      AvailableOn:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      Countries:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      Genres:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      Languages:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      MissingExternalIdNames:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      OriginatingNetworks:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      Packages:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      ProgramTypes:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      RemoteIp:
        type: string
      SortBy:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      Status:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      Themes:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      TrendBrands:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      TrendListClassifiers:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      TrendSources:
        items:
          $ref: '#/definitions/NameValueFilter'
        type: array
      YearRange:
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
    title: DataDemoFilters
    type: object
  DbCountry:
    description: DbCountry
    properties:
      AlternateNames:
        description: Alternate names of the Country.
        items:
          type: string
        type: array
      Id:
        format: int32
        type: integer
        x-nullable: false
      IsoCode:
        description: ISO code for a Country.
        type: string
      IsoCodeA3:
        description: ISO 3 character code for a Country.
        type: string
      Name:
        description: Name of the Country.
        type: string
    title: DbCountry
    type: object
  DbShowCertification:
    description: DbShowCertification
    properties:
      Certification:
        description: Show certification or Rating.
        type: string
      Country:
        $ref: '#/definitions/DbCountry'
      CountryId:
        description: ID of Country associated with ShowCertification.
        format: int32
        type: integer
        x-nullable: false
      Definition:
        description: Definition of ShowCertification.
        type: string
      Id:
        description: Unique ID of a ShowCertification.
        format: int32
        type: integer
        x-nullable: false
      Order:
        description: Rank of ShowCertification from youngest to oldest.
        format: int32
        type: integer
        x-nullable: false
    title: DbShowCertification
    type: object
  DiscoverMovie:
    description: DiscoverMovie
    properties:
      AlternateTitles:
        description: List of alternate titles for this Movie.
        items:
          type: string
        type: array
      Budget:
        description: Budget of Movie.
        format: int64
        type: integer
      Cast:
        description: List of cast members associated with Movie.
        items:
          type: string
        type: array
      Created:
        description: Datetime Movie record created.
        format: date-time
        type: string
      Descriptions:
        description: List of Descriptions associated with Movie.
        items:
          type: string
        type: array
      Directors:
        description: List of directors associated with Movie.
        items:
          type: string
        type: array
      FranceReleaseDate:
        description: Release date of Movie in France.
        format: date-time
        type: string
      Genres:
        description: List of genres associated with Movie.
        items:
          type: string
        type: array
      GermanyReleaseDate:
        description: Release date of Movie in Germany.
        format: date-time
        type: string
      HasVideo:
        description: Flag indicating video content available.
        type: boolean
      Id:
        description: Unique ID of a Movie.
        type: string
      Idx:
        description: Used to distinguish identical movie title + year records.
        type: string
      ItalyReleaseDate:
        description: Original release date of Movie in Italy.
        format: date-time
        type: string
      JapanReleaseDate:
        description: Original release date of Movie in Japan.
        format: date-time
        type: string
      Modified:
        description: Datetime Movie last modified.
        format: date-time
        type: string
      OriginalLanguage:
        description: Original language of Movie.
        type: string
      OriginalReleaseDate:
        description: Original release date of Movie.
        format: date-time
        type: string
      PosterFilePath:
        description: File path location of poster for Movie.
        type: string
      Ratings:
        description: List of Ratings associated with Movie.
        items:
          type: string
        type: array
      Revenue:
        description: Totle global Revenue of Movie.
        format: int64
        type: integer
      Runtime:
        description: Runtime in minutes of Movie.
        format: int32
        type: integer
      Status:
        description: Status of a Movie
        type: string
      Tags:
        description: List of tags associated with Movie.
        items:
          type: string
        type: array
      Title:
        description: Title of a Movie
        type: string
      Type:
        description: 'Type of a Movie. Ex: Movie, Short, TV_Movie, Video_Movie'
        type: string
      UnitedKingdomReleaseDate:
        description: Release date of Movie in UK.
        format: date-time
        type: string
      UnitedStatesReleaseDate:
        description: Release date of Movie in USA.
        format: date-time
        type: string
      Year:
        description: Release year of Movie.
        format: int32
        type: integer
    title: DiscoverMovie
    type: object
  DiscoverPerson:
    description: DiscoverPerson
    properties:
      AlternateNames:
        description: List of PersonName associated with this Person.
        items:
          type: string
        type: array
      BirthDate:
        $ref: '#/definitions/FlexDate'
        description: Date Person was born.
      BirthDayOfMonth:
        description: Day of month Person was born.
        format: int32
        type: integer
      BirthMonthOfYear:
        description: Month of Year Person was born.
        format: int32
        type: integer
      BirthName:
        description: Name of Person at birth.
        type: string
      DeathDate:
        $ref: '#/definitions/FlexDate'
        description: Date Person died.
      DeathDayOfMonth:
        description: Day of month Person died.
        format: int32
        type: integer
      DeathMonthOfYear:
        description: Month of Year Person died.
        format: int32
        type: integer
      Descriptions:
        description: List of biographies for this person.
        items:
          $ref: '#/definitions/ProgramDescription'
        type: array
      ExternalIds:
        description: List of alternate Ids associated with this person.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Gender:
        description: Gender of Person.
        type: string
      Id:
        description: Unique ID of thePerson in the form of Person/1
        type: string
      Images:
        description: List of Images associated with this Person.
        items:
          $ref: '#/definitions/ProgramPersonImage'
        type: array
      IvaRating:
        description: IVA Rating for Person.
        format: int32
        type: integer
      Modified:
        description: Datetime Person was last modified.
        format: date-time
        type: string
        x-nullable: false
      Name:
        description: Full Name of this Person.
        type: string
      Packages:
        items:
          type: string
        type: array
      ProgramType:
        description: 'Defines the type of data this is.  Ex: Person'
        type: string
      Tags:
        description: List of tags associated with person.
        items:
          type: string
        type: array
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
    title: DiscoverPerson
    type: object
  DiscoverProgram:
    description: DiscoverProgram
    properties:
      AlternateTitles:
        description: List of alternate titles for this Program.
        items:
          $ref: '#/definitions/ProgramAlternateTitle'
        type: array
      Availabilities:
        description: List of availabilities for program.
        items:
          $ref: '#/definitions/ProgramAvailability'
        type: array
      Budget:
        description: Movie budget
        format: int64
        type: integer
      Companies:
        description: 'List of companies (Production, Distribution, etc.) associated with program.'
        items:
          $ref: '#/definitions/Company'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this program.'
        items:
          $ref: '#/definitions/ProgramContributor'
        type: array
      Created:
        description: DateTime record was created.
        format: date-time
        type: string
        x-nullable: false
      Deleted:
        type: boolean
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Program.
        items:
          $ref: '#/definitions/ProgramDescription'
        type: array
      EpisodeNumber:
        description: Used for episodes.
        format: int32
        type: integer
      ExternalIds:
        description: List of external Ids associated with Program.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Genres:
        description: List of genres.
        items:
          type: string
        type: array
      Id:
        description: 'Unique ID of the Movie, Show, Season or Episode in the form of Movie/1 or Show/2'
        type: string
      Idx:
        description: Index to differentiate movies with identical titles and year.
        type: string
      ImageCount:
        description: Count of images
        format: int32
        type: integer
        x-nullable: false
      Images:
        description: List of images.
        items:
          $ref: '#/definitions/ProgramImage'
        type: array
      IvaRating:
        description: 'IVA Rating for program.  Applies to Show, Movie, and Game'
        format: double
        type: number
      Modified:
        description: DateTime record last modified.
        format: date-time
        type: string
        x-nullable: false
      OfficialSiteUrl:
        description: Movie website home page.
        type: string
      OriginalLanguage:
        description: Original language.
        type: string
      OriginalReleaseDate:
        description: First generally available release regardless of country. Excludes festivals and premieres.
        format: date-time
        type: string
      OriginalTitle:
        description: Original title of program
        type: string
      OriginatingNetwork:
        description: The network the new shows are currently airing on.
        type: string
      ProgramTrends:
        description: List of trending source data.
        items:
          $ref: '#/definitions/ProgramTrend'
        type: array
      ProgramType:
        type: string
      RedirectTo:
        description: Redirect to.
        type: string
      Releases:
        description: List of releases associated with Program.
        items:
          $ref: '#/definitions/ProgramRelease'
        type: array
      Revenue:
        description: Total revenue generated by Movie.
        format: int64
        type: integer
      Runtime:
        description: Movie runtime in minutes.
        format: int32
        type: integer
      SeasonId:
        description: 'Used for season and episodes. Ex: Season/1234'
        type: string
      SeasonNumber:
        description: Used for season and episodes.
        format: int32
        type: integer
      ShowId:
        description: 'Used for season and episodes.  Ex: Show/1234'
        type: string
      Status:
        description: Status of movie.
        type: string
      Tags:
        description: List of tags associated with Program.
        items:
          type: string
        type: array
      Themes:
        description: List of themes.
        items:
          type: string
        type: array
      TimeStamp:
        description: Last time object was updated or changed.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      Type:
        description: 'Type of movie. Ex: Tv Movie, Short, etc.'
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
      VideoCount:
        description: Count of videos
        format: int32
        type: integer
        x-nullable: false
      Videos:
        description: List of videos.
        items:
          $ref: '#/definitions/ProgramVideo'
        type: array
      Year:
        format: int32
        type: integer
    required:
      - Year
    title: DiscoverProgram
    type: object
  DiscoverShow:
    description: DiscoverShow
    properties:
      AlternateTitles:
        description: List of alternate titles for this Show.
        items:
          type: string
        type: array
      Cast:
        description: List of cast members associated with Show.
        items:
          type: string
        type: array
      Created:
        description: Datetime Show record created.
        format: date-time
        type: string
      Descriptions:
        description: List of Descriptions associated with Show.
        items:
          type: string
        type: array
      Directors:
        description: List of directors associated with Show.
        items:
          type: string
        type: array
      Genres:
        description: List of genres associated with Show.
        items:
          type: string
        type: array
      HasVideo:
        description: Flag indicating video content available.
        type: boolean
      Id:
        description: Unique ID of a Show.
        type: string
      Idx:
        description: Used to distinguish identical show title + year records.
        type: string
      Modified:
        description: Datetime Show last modified.
        format: date-time
        type: string
      NumberOfEpisodes:
        description: Number of Episodes associated with Show.
        format: int32
        type: integer
      NumberOfSeasons:
        description: Number of Seasons associated with Show.
        format: int32
        type: integer
      OriginalAirDate:
        description: Original air date of Show.
        format: date-time
        type: string
      OriginalLanguage:
        description: Original language of Show.
        type: string
      PosterFilePath:
        description: File path location of poster for Show.
        type: string
      Ratings:
        description: List of Ratings associated with Show.
        items:
          type: string
        type: array
      Status:
        description: Status of a Show
        type: string
      Tags:
        description: List of tags associated with Show.
        items:
          type: string
        type: array
      Title:
        description: Title of a Show
        type: string
      Type:
        description: Type of a Show
        type: string
      Year:
        description: Year of original air date of Show.
        format: int32
        type: integer
    title: DiscoverShow
    type: object
  EntertainmentConnection:
    description: EntertainmentConnection
    properties:
      EntertainmentType:
        description: MyVideo Entertainment connection type.
        type: string
      Id:
        description: MyVideo Entertainment connection ID.
        format: int64
        type: integer
        x-nullable: false
    title: EntertainmentConnection
    type: object
  Episode:
    description: Episode
    properties:
      AlternateTitles:
        description: List of alternate titles for this Episode.
        items:
          $ref: '#/definitions/EpisodeAlternateTitle'
        type: array
      Availabilities:
        description: List of episode offers.
        items:
          $ref: '#/definitions/EpisodeAvailabilityResponse'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Episode.'
        items:
          $ref: '#/definitions/EpisodeContributor'
        type: array
      Created:
        description: DateTime Episode record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Episode.
        items:
          $ref: '#/definitions/EpisodeDescription'
        type: array
      EpisodeNumber:
        description: Number of Episode within its associated Season.
        format: int32
        type: integer
        x-nullable: false
      ExternalIds:
        description: List of external Ids associated with Episode.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Id:
        description: Unique ID of the Episode.
        format: int64
        type: integer
        x-nullable: false
      Images:
        description: List of images associated with Episode.
        items:
          $ref: '#/definitions/EpisodeImage'
        type: array
      Modified:
        description: DateTime Episode record last modified.
        format: date-time
        type: string
        x-nullable: false
      Modifier:
        description: User who last modified the Episode record.
        format: int32
        type: integer
      OriginalLanguage:
        description: Episode original language.
        type: string
      OriginalReleaseDate:
        description: Original release date of Episode.
        format: date-time
        type: string
      OriginalTitle:
        description: Original title of Episode
        type: string
      OwnerId:
        description: User who has ownership of the Show record.
        format: int32
        type: integer
      Releases:
        description: List of releases associated with Episode.
        items:
          $ref: '#/definitions/EpisodeRelease'
        type: array
      SeasonId:
        description: ID of Season this Episode is associated with.
        format: int64
        type: integer
        x-nullable: false
      SeasonNumber:
        description: Number of Season within its associated Show.
        format: int32
        type: integer
        x-nullable: false
      ShowId:
        description: ID of Show this Episode is associated with.
        format: int64
        type: integer
        x-nullable: false
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Episode.
        items:
          $ref: '#/definitions/EpisodeVideo'
        type: array
      Year:
        description: Release year of Episode.
        format: int32
        type: integer
    title: Episode
    type: object
  EpisodeAlternateTitle:
    description: EpisodeAlternateTitle
    properties:
      Country:
        description: Country associated with this alternate title.
        type: string
      Id:
        description: Unique ID of this EpisodeAlternateTitle
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Title:
        description: The alternate title.
        type: string
    title: EpisodeAlternateTitle
    type: object
  EpisodeAvailabilityResponse:
    description: EpisodeAvailabilityResponse
    properties:
      Country:
        type: string
      Currency:
        type: string
      DeliveryMethod:
        type: string
      ExpirationDate:
        format: date-time
        type: string
      Links:
        items:
          $ref: '#/definitions/OfferLink'
        type: array
      OfferType:
        type: string
      PreSale:
        type: boolean
        x-nullable: false
      Price:
        format: double
        type: number
        x-nullable: false
      Provider:
        type: string
      Quality:
        type: string
      StartDate:
        format: date-time
        type: string
      Title:
        type: string
    title: EpisodeAvailabilityResponse
    type: object
  EpisodeChangeHistoryResponse:
    description: EpisodeChangeHistoryResponse
    properties:
      EpisodeId:
        description: ID of the Episode.
        format: int64
        type: integer
        x-nullable: false
    title: EpisodeChangeHistoryResponse
    type: object
  EpisodeChangeHistoryWithEntityResponse:
    description: EpisodeChangeHistoryWithEntityResponse
    properties:
      Entity:
        description: Object belonging to Episode that has changed.
        type: string
      EpisodeId:
        description: ID of the Episode.
        format: int64
        type: integer
        x-nullable: false
    title: EpisodeChangeHistoryWithEntityResponse
    type: object
  EpisodeContribution:
    description: EpisodeContribution
    properties:
      Character:
        type: string
      Id:
        format: int64
        type: integer
        x-nullable: false
      Job:
        type: string
      OriginalTitle:
        type: string
      ShowId:
        format: int64
        type: integer
        x-nullable: false
      Title:
        type: string
      Year:
        format: int32
        type: integer
        x-nullable: false
    title: EpisodeContribution
    type: object
  EpisodeContributor:
    description: EpisodeContributor
    properties:
      Character:
        description: Role played by EpisodeContributor.
        type: string
      Id:
        description: Unique ID of the EpisodeContributor object.
        format: int64
        type: integer
      Job:
        description: Job of Person associated with EpisodeContributor.
        type: string
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Order:
        description: Rank of EpisodeContributor in list for Episode (cast).
        format: int32
        type: integer
        x-nullable: false
      PersonId:
        description: ID of Person associated with EpisodeContributor.
        format: int64
        type: integer
        x-nullable: false
      PersonName:
        description: Person's Name associated with EpisodeContributor.
        type: string
    title: EpisodeContributor
    type: object
  EpisodeDescription:
    description: EpisodeDescription
    properties:
      Attribution:
        description: Source of EpisodeDescription.
        type: string
      Description:
        description: Episode Description.
        type: string
      Id:
        description: Unique ID of this EpisodeDescription
        format: int64
        type: integer
      Language:
        description: Language object for language of EpisodeDescription.
        type: string
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
    title: EpisodeDescription
    type: object
  EpisodeImage:
    description: EpisodeImage
    properties:
      FilePath:
        description: Filepath (location) of EpisodeImage.
        type: string
      Height:
        description: Height in pixels of EpisodeImage.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of this EpisodeImage
        format: int64
        type: integer
      ImageId:
        description: ID of Image associated with EpisodeImage.
        format: int64
        type: integer
      ImageType:
        description: ImageType of EpisodeImage.
        type: string
      Language:
        description: Language associated with EpisodeImage.
        type: string
      Modified:
        description: Time when image was modified.
        format: date-time
        type: string
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Official:
        description: Determines if image is official.
        type: boolean
      Sexuality:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in image.
        format: int32
        type: integer
      Tags:
        description: List of Tags associated with this EpisodeImage
        items:
          $ref: '#/definitions/Tag'
        type: array
      Violence:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in image.
        format: int32
        type: integer
      Width:
        description: Width in pixels of EpisodeImage.
        format: int32
        type: integer
        x-nullable: false
    title: EpisodeImage
    type: object
  EpisodeRelease:
    description: EpisodeRelease
    properties:
      Certification:
        description: Certification for EpisodeRelease.
        type: string
      Country:
        description: The Country Episode was released.
        type: string
      Date:
        description: Date of this EpisodeRelease.
        format: date-time
        type: string
      Id:
        description: Unique Id of this EpisodeRelease.
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Type:
        description: The type of this EpisodeRelease.
        type: string
    title: EpisodeRelease
    type: object
  EpisodeResponse:
    description: EpisodeResponse
    properties:
      AlternateTitles:
        description: List of alternate titles for this Episode.
        items:
          $ref: '#/definitions/EpisodeAlternateTitle'
        type: array
      Availabilities:
        description: List of episode offers.
        items:
          $ref: '#/definitions/EpisodeAvailabilityResponse'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Episode.'
        items:
          $ref: '#/definitions/EpisodeContributor'
        type: array
      Created:
        description: DateTime Episode record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Episode.
        items:
          $ref: '#/definitions/EpisodeDescription'
        type: array
      EpisodeNumber:
        description: Number of Episode within its associated Season.
        format: int32
        type: integer
        x-nullable: false
      ExternalIds:
        description: List of external Ids associated with Episode.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Id:
        description: Unique ID of the Episode.
        format: int64
        type: integer
        x-nullable: false
      Images:
        description: List of images associated with Episode.
        items:
          $ref: '#/definitions/EpisodeImage'
        type: array
      Modified:
        description: DateTime Episode record last modified.
        format: date-time
        type: string
        x-nullable: false
      Modifier:
        description: User who last modified the Episode record.
        format: int32
        type: integer
      OriginalLanguage:
        description: Episode original language.
        type: string
      OriginalReleaseDate:
        description: Original release date of Episode.
        format: date-time
        type: string
      OriginalTitle:
        description: Original title of Episode
        type: string
      OwnerId:
        description: User who has ownership of the Show record.
        format: int32
        type: integer
      Releases:
        description: List of releases associated with Episode.
        items:
          $ref: '#/definitions/EpisodeRelease'
        type: array
      SeasonId:
        description: ID of Season this Episode is associated with.
        format: int64
        type: integer
        x-nullable: false
      SeasonNumber:
        description: Number of Season within its associated Show.
        format: int32
        type: integer
        x-nullable: false
      ShowId:
        description: ID of Show this Episode is associated with.
        format: int64
        type: integer
        x-nullable: false
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Episode.
        items:
          $ref: '#/definitions/EpisodeVideo'
        type: array
      Year:
        description: Release year of Episode.
        format: int32
        type: integer
    title: EpisodeResponse
    type: object
  EpisodeVideo:
    description: EpisodeVideo
    properties:
      AllowAdvertising:
        description: Flag denoting if pre-roll video ads are allowed in front of of content.
        type: boolean
        x-nullable: false
      Certification:
        description: Certification for EpisodeVideo.
        type: boolean
      Clean:
        description: 'True if Certification, Theatrical, and HomeVideo are False.'
        type: boolean
      Company:
        description: Company associated with EpisodeVideo.
        type: string
      Duration:
        description: Runtime of EpisodeVideo.
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        description: Datetime EpisodeVideo was encoded.
        format: date-time
        type: string
        x-nullable: false
      Encodes:
        description: List of Encodes (bitrate and type) for EpisodeVideo.
        items:
          $ref: '#/definitions/EpisodeVideoEncode'
        type: array
      ExpirationDate:
        description: Date EpisodeVideo expires.
        format: date-time
        type: string
      HomeVideo:
        description: Flag for promoting Home Video.
        type: boolean
      Id:
        description: Unique ID of EpisodeVideo.
        format: int64
        type: integer
        x-nullable: false
      Language:
        description: Language associated with EpisodeVideo.
        type: string
      LanguageSubtitled:
        description: Subtitle language associated with EpisodeVideo.
        type: string
      Mature:
        description: Flag for designating video content not suitable for children. Age gate required.
        type: boolean
        x-nullable: false
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      ScreenCaptures:
        description: List of screen captures from EpisodeVideo.
        items:
          $ref: '#/definitions/EpisodeVideoScreenCapture'
        type: array
      SourceVideoHeight:
        description: Height in pixels of EpisodeVideo.
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        description: Width in pixels of EpisodeVideo.
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        description: First date of EpisodeVideo availability.
        format: date-time
        type: string
      TargetCountries:
        description: List of countries targeted by EpisodeVideo.
        items:
          $ref: '#/definitions/TargetCountry'
        type: array
      Title:
        description: 'Title of EpisodeVideo, not Season.'
        type: string
      TuneIn:
        description: Flag for promoting tune in.
        type: boolean
      Type:
        description: VideoType for the EpisodeVideo.
        type: string
    title: EpisodeVideo
    type: object
  EpisodeVideoEncode:
    description: EpisodeVideoEncode
    properties:
      BitRate:
        description: BitRate of VideoEncode.
        format: int32
        type: integer
      EncodeType:
        description: Datetime when the VideoEncode was encoded.
        type: string
      Id:
        description: Unique ID of the video encode
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
    title: EpisodeVideoEncode
    type: object
  EpisodeVideoExtended:
    description: EpisodeVideoExtended
    properties:
      AllowAdvertising:
        description: Flag denoting if pre-roll video ads are allowed in front of of content.
        type: boolean
        x-nullable: false
      Certification:
        description: Certification for EpisodeVideo.
        type: boolean
      Clean:
        description: 'True if Certification, Theatrical, and HomeVideo are False.'
        type: boolean
      Company:
        description: Company associated with EpisodeVideo.
        type: string
      Duration:
        description: Runtime of EpisodeVideo.
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        description: Datetime EpisodeVideo was encoded.
        format: date-time
        type: string
        x-nullable: false
      Encodes:
        description: List of Encodes (bitrate and type) for EpisodeVideo.
        items:
          $ref: '#/definitions/EpisodeVideoEncode'
        type: array
      EpisodeNumber:
        format: int32
        type: integer
        x-nullable: false
      ExpirationDate:
        description: Date EpisodeVideo expires.
        format: date-time
        type: string
      HomeVideo:
        description: Flag for promoting Home Video.
        type: boolean
      Id:
        description: Unique ID of EpisodeVideo.
        format: int64
        type: integer
        x-nullable: false
      Language:
        description: Language associated with EpisodeVideo.
        type: string
      LanguageSubtitled:
        description: Subtitle language associated with EpisodeVideo.
        type: string
      Mature:
        description: Flag for designating video content not suitable for children. Age gate required.
        type: boolean
        x-nullable: false
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      ScreenCaptures:
        description: List of screen captures from EpisodeVideo.
        items:
          $ref: '#/definitions/EpisodeVideoScreenCapture'
        type: array
      SeasonNumber:
        format: int32
        type: integer
        x-nullable: false
      SourceVideoHeight:
        description: Height in pixels of EpisodeVideo.
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        description: Width in pixels of EpisodeVideo.
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        description: First date of EpisodeVideo availability.
        format: date-time
        type: string
      TargetCountries:
        description: List of countries targeted by EpisodeVideo.
        items:
          $ref: '#/definitions/TargetCountry'
        type: array
      Title:
        description: 'Title of EpisodeVideo, not Season.'
        type: string
      TuneIn:
        description: Flag for promoting tune in.
        type: boolean
      Type:
        description: VideoType for the EpisodeVideo.
        type: string
    title: EpisodeVideoExtended
    type: object
  EpisodeVideoScreenCapture:
    description: EpisodeVideoScreenCapture
    properties:
      Aspect:
        description: Aspect ratio of VideoScreenCapture.
        type: string
      FilePath:
        description: Filepath (location) of VideoScreenCapture.
        type: string
      Height:
        description: Height in pixels of VideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of the screen capture
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Width:
        description: Width in pixels of VideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
    title: EpisodeVideoScreenCapture
    type: object
  Explanation:
    description: Explanation
    properties:
      level:
        format: int32
        type: integer
        x-nullable: false
      message:
        type: string
      originator:
        description: Origination of the explanation.
        type: string
      type:
        description: The granularity of recommendation match.
        type: string
    title: Explanation
    type: object
  ExternalId:
    description: ExternalId
    properties:
      Id:
        type: string
      Name:
        type: string
    title: ExternalId
    type: object
  FaceDetails:
    description: FaceDetails
    properties:
      AgeRange:
        $ref: '#/definitions/FaceDetailsAgerange'
        description: Age range of the person.
      Beard:
        $ref: '#/definitions/FaceDetailsBeard'
        description: Details on whether the person has a beard.
      BoundingBox:
        $ref: '#/definitions/FaceDetailsBoundingbox'
        description: 'Details on position of the face, expressed as ratios of the image width/height.'
      BoundingBoxPixel:
        $ref: '#/definitions/FaceDetailsBoundingboxPixel'
        description: 'Details on position of the face, in pixels.'
      Confidence:
        description: Confidence value on this face being the correct person.
        format: float
        type: number
        x-nullable: false
      Emotions:
        items:
          $ref: '#/definitions/FaceDetailsEmotion'
        type: array
      Eyeglasses:
        $ref: '#/definitions/FaceDetailsEyeglasses'
        description: Details on whether the person is wearing glasses.
      EyesOpen:
        $ref: '#/definitions/FaceDetailsEyesopen'
        description: Details on whether the person's eyes are open.
      Gender:
        $ref: '#/definitions/FaceDetailsGender'
        description: Details on the person's gender.
      Landmarks:
        description: 'Details on positions of facial features, expressed as ratios of the image width/height.'
        items:
          $ref: '#/definitions/FaceDetailsLandmark'
        type: array
      LandmarksPixel:
        description: 'Details on positions of facial features, in pixels.'
        items:
          $ref: '#/definitions/FaceDetailsLandmarkPixel'
        type: array
      MouthOpen:
        $ref: '#/definitions/FaceDetailsMouthopen'
        description: Details on whether the person's mouth is open.
      Mustache:
        $ref: '#/definitions/FaceDetailsMustache'
        description: Details on whether the person has a mustache.
      Pose:
        $ref: '#/definitions/FaceDetailsPose'
        description: Details on the positioning of the person's head.
      Quality:
        $ref: '#/definitions/FaceDetailsQuality'
        description: Details on the quality of the image.
      Smile:
        $ref: '#/definitions/FaceDetailsSmile'
        description: Details on whether the person is smiling.
      Sunglasses:
        $ref: '#/definitions/FaceDetailsSunglasses'
        description: Details on whether the person is wearing sunglasses.
    title: FaceDetails
    type: object
  FaceDetailsAgerange:
    description: FaceDetailsAgerange
    properties:
      High:
        description: Upper age estimate.
        format: int32
        type: integer
        x-nullable: false
      Low:
        description: Lower age estimate.
        format: int32
        type: integer
        x-nullable: false
    title: FaceDetailsAgerange
    type: object
  FaceDetailsBeard:
    description: FaceDetailsBeard
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: True/False whether person has beard.
        type: boolean
        x-nullable: false
    title: FaceDetailsBeard
    type: object
  FaceDetailsBoundingbox:
    description: FaceDetailsBoundingbox
    properties:
      Height:
        description: Height of face box.
        format: float
        type: number
        x-nullable: false
      Left:
        description: How far from left of image to start face box.
        format: float
        type: number
        x-nullable: false
      Top:
        description: How far from top of image to start face box.
        format: float
        type: number
        x-nullable: false
      Width:
        description: Width of face box.
        format: float
        type: number
        x-nullable: false
    title: FaceDetailsBoundingbox
    type: object
  FaceDetailsBoundingboxPixel:
    description: FaceDetailsBoundingboxPixel
    properties:
      Height:
        description: Height of face box.
        format: int32
        type: integer
        x-nullable: false
      Left:
        description: How far from left of image to start face box.
        format: int32
        type: integer
        x-nullable: false
      Top:
        description: How far from top of image to start face box.
        format: int32
        type: integer
        x-nullable: false
      Width:
        description: Width of face box.
        format: int32
        type: integer
        x-nullable: false
    title: FaceDetailsBoundingboxPixel
    type: object
  FaceDetailsEmotion:
    description: FaceDetailsEmotion
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Type:
        description: Type of emotion.
        type: string
    title: FaceDetailsEmotion
    type: object
  FaceDetailsEyeglasses:
    description: FaceDetailsEyeglasses
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: True/False whether person has glasses.
        type: boolean
        x-nullable: false
    title: FaceDetailsEyeglasses
    type: object
  FaceDetailsEyesopen:
    description: FaceDetailsEyesopen
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: True/False whether person has eyes open.
        type: boolean
        x-nullable: false
    title: FaceDetailsEyesopen
    type: object
  FaceDetailsGender:
    description: FaceDetailsGender
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: Estimated gender.
        type: string
    title: FaceDetailsGender
    type: object
  FaceDetailsLandmark:
    description: FaceDetailsLandmark
    properties:
      Type:
        description: Type of facial landmark.
        type: string
      X:
        description: Position from left of image.
        format: float
        type: number
        x-nullable: false
      'Y':
        description: Position from top of image.
        format: float
        type: number
        x-nullable: false
    title: FaceDetailsLandmark
    type: object
  FaceDetailsLandmarkPixel:
    description: FaceDetailsLandmarkPixel
    properties:
      Type:
        description: Type of facial landmark.
        type: string
      X:
        description: Position from left of image.
        format: int32
        type: integer
        x-nullable: false
      'Y':
        description: Position from top of image.
        format: int32
        type: integer
        x-nullable: false
    title: FaceDetailsLandmarkPixel
    type: object
  FaceDetailsMouthopen:
    description: FaceDetailsMouthopen
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: True/False whether person has mouth open.
        type: boolean
        x-nullable: false
    title: FaceDetailsMouthopen
    type: object
  FaceDetailsMustache:
    description: FaceDetailsMustache
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: True/False whether person has mustache.
        type: boolean
        x-nullable: false
    title: FaceDetailsMustache
    type: object
  FaceDetailsPose:
    description: FaceDetailsPose
    properties:
      Pitch:
        description: Pitch of face.
        format: float
        type: number
        x-nullable: false
      Roll:
        description: Roll of face.
        format: float
        type: number
        x-nullable: false
      Yaw:
        description: Yaw of face.
        format: float
        type: number
        x-nullable: false
    title: FaceDetailsPose
    type: object
  FaceDetailsQuality:
    description: FaceDetailsQuality
    properties:
      Brightness:
        description: Brightness of image.
        format: float
        type: number
        x-nullable: false
      Sharpness:
        description: Sharpness of image.
        format: float
        type: number
        x-nullable: false
    title: FaceDetailsQuality
    type: object
  FaceDetailsSmile:
    description: FaceDetailsSmile
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: True/False whether person is smiling.
        type: boolean
        x-nullable: false
    title: FaceDetailsSmile
    type: object
  FaceDetailsSunglasses:
    description: FaceDetailsSunglasses
    properties:
      Confidence:
        description: Confidence rating of Value.
        format: float
        type: number
        x-nullable: false
      Value:
        description: True/False whether person has sunglasses.
        type: boolean
        x-nullable: false
    title: FaceDetailsSunglasses
    type: object
  FandangoAmenity:
    description: FandangoAmenity
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      shortDescription:
        type: string
    title: FandangoAmenity
    type: object
  FandangoAmenitygroup:
    description: FandangoAmenitygroup
    properties:
      amenities:
        items:
          $ref: '#/definitions/FandangoAmenity'
        type: array
      showtimes:
        items:
          $ref: '#/definitions/FandangoShowtime'
        type: array
    title: FandangoAmenitygroup
    type: object
  FandangoDatetime:
    description: FandangoDatetime
    properties:
      local:
        type: string
      utc:
        type: string
    title: FandangoDatetime
    type: object
  FandangoDisplayDates:
    description: FandangoDisplayDates
    properties:
      data:
        $ref: '#/definitions/FandangoDisplayDatesData'
    title: FandangoDisplayDates
    type: object
  FandangoDisplayDatesData:
    description: FandangoDisplayDatesData
    properties:
      displayDates:
        items:
          type: string
        type: array
    title: FandangoDisplayDatesData
    type: object
  FandangoGeo:
    description: FandangoGeo
    properties:
      latitude:
        format: double
        type: number
        x-nullable: false
      longitude:
        format: double
        type: number
        x-nullable: false
    title: FandangoGeo
    type: object
  FandangoGeoCity:
    description: FandangoGeoCity
    properties:
      city:
        type: string
      country:
        type: string
      latitude:
        format: double
        type: number
        x-nullable: false
      longitude:
        format: double
        type: number
        x-nullable: false
      radius:
        format: int32
        type: integer
        x-nullable: false
      state:
        type: string
    title: FandangoGeoCity
    type: object
  FandangoGeoLocationCity:
    description: FandangoGeoLocationCity
    properties:
      data:
        $ref: '#/definitions/FandangoGeoCity'
    title: FandangoGeoLocationCity
    type: object
  FandangoGeoLocationPostalCode:
    description: FandangoGeoLocationPostalCode
    properties:
      data:
        $ref: '#/definitions/FandangoGeoPostalCode'
    title: FandangoGeoLocationPostalCode
    type: object
  FandangoGeoPostalCode:
    description: FandangoGeoPostalCode
    properties:
      city:
        type: string
      country:
        type: string
      latitude:
        format: double
        type: number
        x-nullable: false
      longitude:
        format: double
        type: number
        x-nullable: false
      postalCode:
        type: string
      radius:
        format: int32
        type: integer
        x-nullable: false
      state:
        type: string
    title: FandangoGeoPostalCode
    type: object
  FandangoImage:
    description: FandangoImage
    properties:
      caption:
        type: string
      copyright:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      title:
        type: string
    title: FandangoImage
    type: object
  FandangoLink:
    description: FandangoLink
    properties:
      href:
        type: string
      rel:
        type: string
    title: FandangoLink
    type: object
  FandangoMovie:
    description: FandangoMovie
    properties:
      data:
        $ref: '#/definitions/FandangoMovieItem'
    title: FandangoMovie
    type: object
  FandangoMovieData:
    description: FandangoMovieData
    properties:
      movies:
        items:
          $ref: '#/definitions/FandangoMovieItem'
        type: array
    title: FandangoMovieData
    type: object
  FandangoMovieDisplaydate:
    description: FandangoMovieDisplaydate
    properties:
      displayDate:
        type: string
      movies:
        items:
          $ref: '#/definitions/FandangoMovieItem'
        type: array
    title: FandangoMovieDisplaydate
    type: object
  FandangoMovieItem:
    description: FandangoMovieItem
    properties:
      cast:
        items:
          $ref: '#/definitions/FandangoPerson'
        type: array
      directors:
        items:
          $ref: '#/definitions/FandangoPerson'
        type: array
      genres:
        items:
          type: string
        type: array
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/FandangoImage'
        type: array
      mediumSynopsis:
        type: string
      movieIds:
        items:
          $ref: '#/definitions/FandangoMovieid'
        type: array
      movieVariants:
        items:
          $ref: '#/definitions/FandangoMovievariant'
        type: array
      mpaaRating:
        type: string
      poster:
        $ref: '#/definitions/FandangoPoster'
      releaseDate:
        type: string
      runtime:
        format: int32
        type: integer
        x-nullable: false
      synopsis:
        type: string
      title:
        type: string
    title: FandangoMovieItem
    type: object
  FandangoMovieid:
    description: FandangoMovieid
    properties:
      idProvider:
        type: string
      value:
        type: string
    title: FandangoMovieid
    type: object
  FandangoMovieidGroup:
    description: FandangoMovieidGroup
    properties:
      idProvider:
        type: string
      value:
        type: string
    title: FandangoMovieidGroup
    type: object
  FandangoMovies:
    description: FandangoMovies
    properties:
      data:
        $ref: '#/definitions/FandangoMovieData'
      page:
        $ref: '#/definitions/FandangoPage'
    title: FandangoMovies
    type: object
  FandangoMovievariant:
    description: FandangoMovievariant
    properties:
      amenityGroups:
        items:
          $ref: '#/definitions/FandangoAmenitygroup'
        type: array
      formatId:
        type: string
      formatName:
        type: string
      movieVariantId:
        type: string
    title: FandangoMovievariant
    type: object
  FandangoPage:
    description: FandangoPage
    properties:
      limit:
        format: int32
        type: integer
        x-nullable: false
      offset:
        format: int32
        type: integer
        x-nullable: false
      totalCount:
        format: int32
        type: integer
        x-nullable: false
    title: FandangoPage
    type: object
  FandangoPerson:
    description: FandangoPerson
    properties:
      IvaPersonId:
        type: string
      id:
        type: string
      name:
        type: string
    title: FandangoPerson
    type: object
  FandangoPoster:
    description: FandangoPoster
    properties:
      contentUrl:
        type: string
      thumbnailUrl:
        type: string
    title: FandangoPoster
    type: object
  FandangoShowtime:
    description: FandangoShowtime
    properties:
      dateTime:
        $ref: '#/definitions/FandangoDatetime'
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/FandangoLink'
        type: array
      message:
        type: string
      type:
        type: string
    title: FandangoShowtime
    type: object
  FandangoShowtimeDetails:
    description: FandangoShowtimeDetails
    properties:
      data:
        $ref: '#/definitions/FandangoShowtimeDetailsData'
    title: FandangoShowtimeDetails
    type: object
  FandangoShowtimeDetailsData:
    description: FandangoShowtimeDetailsData
    properties:
      amenities:
        items:
          $ref: '#/definitions/FandangoAmenity'
        type: array
      auditoriumId:
        format: int32
        type: integer
        x-nullable: false
      dateTime:
        $ref: '#/definitions/FandangoDatetime'
      displayDate:
        type: string
      distance:
        format: int32
        type: integer
        x-nullable: false
      expired:
        type: boolean
        x-nullable: false
      formatName:
        type: string
      id:
        type: string
      isTicketing:
        type: boolean
        x-nullable: false
      message:
        type: string
      movieId:
        type: string
      movieTitle:
        type: string
      seatingType:
        type: string
      theaterChainCode:
        type: string
      theaterId:
        type: string
      theaterName:
        type: string
      type:
        type: string
    title: FandangoShowtimeDetailsData
    type: object
  FandangoShowtimeGroupings:
    description: FandangoShowtimeGroupings
    properties:
      data:
        $ref: '#/definitions/FandangoShowtimeGroupingsData'
    title: FandangoShowtimeGroupings
    type: object
  FandangoShowtimeGroupingsData:
    description: FandangoShowtimeGroupingsData
    properties:
      displayDates:
        items:
          $ref: '#/definitions/FandangoTheaterDisplaydate'
        type: array
      movieIds:
        items:
          $ref: '#/definitions/FandangoMovieidGroup'
        type: array
    title: FandangoShowtimeGroupingsData
    type: object
  FandangoShowtimeItems:
    description: FandangoShowtimeItems
    properties:
      showtimes:
        items:
          $ref: '#/definitions/ShowtimeItemDetail'
        type: array
    title: FandangoShowtimeItems
    type: object
  FandangoShowtimes:
    description: FandangoShowtimes
    properties:
      data:
        $ref: '#/definitions/FandangoShowtimeItems'
      page:
        $ref: '#/definitions/FandangoPage'
    title: FandangoShowtimes
    type: object
  FandangoTheater:
    description: FandangoTheater
    properties:
      address1:
        type: string
      amenities:
        items:
          $ref: '#/definitions/FandangoAmenity'
        type: array
      chainCode:
        type: string
      chainLogoUrl:
        type: string
      chainName:
        type: string
      city:
        type: string
      distance:
        format: double
        type: number
        x-nullable: false
      geo:
        $ref: '#/definitions/FandangoGeo'
      hasShowtimes:
        type: boolean
        x-nullable: false
      id:
        type: string
      isTicketing:
        type: boolean
        x-nullable: false
      link:
        type: string
      name:
        type: string
      phone:
        type: string
      state:
        type: string
      theaterIds:
        items:
          $ref: '#/definitions/FandangoTheaterid'
        type: array
      zipCode:
        type: string
    title: FandangoTheater
    type: object
  FandangoTheaterDisplaydate:
    description: FandangoTheaterDisplaydate
    properties:
      displayDate:
        type: string
      theaters:
        items:
          $ref: '#/definitions/FandangoTheaterGroup'
        type: array
    title: FandangoTheaterDisplaydate
    type: object
  FandangoTheaterGroup:
    description: FandangoTheaterGroup
    properties:
      chainCode:
        type: string
      distance:
        format: int32
        type: integer
        x-nullable: false
      id:
        type: string
      isTicketing:
        type: boolean
        x-nullable: false
      movieVariants:
        items:
          $ref: '#/definitions/FandangoMovievariant'
        type: array
      name:
        type: string
      theaterIds:
        items:
          $ref: '#/definitions/FandangoTheaterid'
        type: array
    title: FandangoTheaterGroup
    type: object
  FandangoTheaterItems:
    description: FandangoTheaterItems
    properties:
      theaters:
        items:
          $ref: '#/definitions/FandangoTheater'
        type: array
    title: FandangoTheaterItems
    type: object
  FandangoTheaterResponse:
    description: FandangoTheaterResponse
    properties:
      data:
        $ref: '#/definitions/FandangoTheater'
    title: FandangoTheaterResponse
    type: object
  FandangoTheaterShowtimeGroupings:
    description: FandangoTheaterShowtimeGroupings
    properties:
      data:
        $ref: '#/definitions/FandangoTheaterShowtimeGroupingsData'
    title: FandangoTheaterShowtimeGroupings
    type: object
  FandangoTheaterShowtimeGroupingsData:
    description: FandangoTheaterShowtimeGroupingsData
    properties:
      displayDates:
        items:
          $ref: '#/definitions/FandangoMovieDisplaydate'
        type: array
      theaterIds:
        items:
          $ref: '#/definitions/FandangoTheaterid'
        type: array
    title: FandangoTheaterShowtimeGroupingsData
    type: object
  FandangoTheaterid:
    description: FandangoTheaterid
    properties:
      idProvider:
        type: string
      value:
        type: string
    title: FandangoTheaterid
    type: object
  FandangoTheaters:
    description: FandangoTheaters
    properties:
      data:
        $ref: '#/definitions/FandangoTheaterItems'
      page:
        $ref: '#/definitions/FandangoPage'
    title: FandangoTheaters
    type: object
  FilmographyResponse:
    description: FilmographyResponse
    properties:
      Episodes:
        description: List of Episode contributions.
        items:
          $ref: '#/definitions/EpisodeContribution'
        type: array
      Movies:
        description: List of Movie contributions.
        items:
          $ref: '#/definitions/Contribution'
        type: array
      Shows:
        description: List of Show contributions.
        items:
          $ref: '#/definitions/Contribution'
        type: array
    title: FilmographyResponse
    type: object
  FindMovie:
    description: FindMovie
    properties:
      Id:
        description: Required third party ID of Movie.
        type: string
      IdType:
        description: Required third party ID type of MovieAlternateId.
        format: int32
        type: integer
      Includes:
        description: List of additional objects to include in the movie object.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
    required:
      - IdType
      - Id
    title: FindMovie
    type: object
  FindShow:
    description: FindShow
    properties:
      Id:
        description: Required third party ID of Show.
        type: string
      IdType:
        description: Required third party ID type of ShowAlternateId.
        format: int32
        type: integer
      Includes:
        description: List of additional objects to include in the show response.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - Seasons
          - EpisodeVideos
          - SeasonVideos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
    required:
      - IdType
      - Id
    title: FindShow
    type: object
  FlexDate:
    description: FlexDate
    properties:
      Date:
        format: date-time
        type: string
        x-nullable: false
      Estimated:
        type: boolean
        x-nullable: false
      Type:
        type: string
    title: FlexDate
    type: object
  GBUsageDay:
    description: GBUsageDay
    properties:
      Date:
        format: date-time
        type: string
        x-nullable: false
      FlashPlayerRequests:
        format: int32
        type: integer
        x-nullable: false
      GB:
        format: double
        type: number
        x-nullable: false
      ImageServiceGB:
        format: double
        type: number
        x-nullable: false
      ImageServiceRequests:
        format: int32
        type: integer
        x-nullable: false
    title: GBUsageDay
    type: object
  GBUsageResponse:
    description: GBUsageResponse
    properties:
      Detail:
        items:
          $ref: '#/definitions/GBUsageDay'
        type: array
      MonthEncodeMinutes:
        type: string
      MonthlyStorageInMinutes:
        type: string
      TotalGB:
        format: double
        type: number
        x-nullable: false
    title: GBUsageResponse
    type: object
  Game:
    description: Game
    properties:
      AlternateTitles:
        description: List of alternate titles for this Game.
        items:
          $ref: '#/definitions/GameAlternateTitle'
        type: array
      Companies:
        description: 'List of companies (Production, Distribution, etc.) associated with Game.'
        items:
          $ref: '#/definitions/Company'
        type: array
      Created:
        description: DateTime Game record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Game.
        items:
          $ref: '#/definitions/GameDescription'
        type: array
      ExternalIds:
        description: List of external Ids associated with Game.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Genres:
        description: List of genres associated with Game.
        items:
          $ref: '#/definitions/GameGenre'
        type: array
      Id:
        description: Unique ID of the Game.
        format: int64
        type: integer
        x-nullable: false
      Modified:
        description: DateTime Game record last modified.
        format: date-time
        type: string
        x-nullable: false
      OfficialSiteUrl:
        description: Game website home page.
        type: string
      OriginalLanguage:
        description: ID of Game original language.
        type: string
      OriginalReleaseDate:
        description: First generally available release regardless of country. Excludes festivals and premieres.
        format: date-time
        type: string
      OriginalTitle:
        type: string
      Platforms:
        description: List of platforms associated with Game.
        items:
          $ref: '#/definitions/GamePlatform'
        type: array
      Ratings:
        description: List of ratings associated with Game.
        items:
          $ref: '#/definitions/GameRating'
        type: array
      Releases:
        description: List of releases associated with Game.
        items:
          $ref: '#/definitions/GameRelease'
        type: array
      Tags:
        description: List of tags associated with Game.
        items:
          $ref: '#/definitions/GameTag'
        type: array
      Title:
        description: English version of any foreign Original Title.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Game.
        items:
          $ref: '#/definitions/GameVideo'
        type: array
      Year:
        format: int32
        type: integer
        x-nullable: false
    required:
      - OriginalTitle
      - Year
    title: Game
    type: object
  GameAlternateTitle:
    description: GameAlternateTitle
    properties:
      Id:
        description: Unique ID of this GameAlternateTitle
        format: int64
        type: integer
      Title:
        description: The alternate title.
        type: string
    title: GameAlternateTitle
    type: object
  GameChangeHistoryResponse:
    description: GameChangeHistoryResponse
    properties:
      GameId:
        description: Unique ID of a Game.
        format: int64
        type: integer
        x-nullable: false
    title: GameChangeHistoryResponse
    type: object
  GameDescription:
    description: GameDescription
    properties:
      Attribution:
        description: Source of GameDescription.
        type: string
      Description:
        description: Game Description.
        type: string
      Id:
        description: Unique ID of this GameDescription
        format: int64
        type: integer
      Language:
        description: Language object for language of GameDescription.
        type: string
    title: GameDescription
    type: object
  GameGenre:
    description: GameGenre
    properties:
      Id:
        description: Id of the Genre object.
        format: int32
        type: integer
      Name:
        description: Name of the Genre.
        type: string
    title: GameGenre
    type: object
  GamePlatform:
    description: GamePlatform
    properties:
      Id:
        description: Id of the Platform object.
        format: int32
        type: integer
      Name:
        description: Name of the Platform.
        type: string
    title: GamePlatform
    type: object
  GameRankedResponse:
    description: GameRankedResponse
    properties:
      Id:
        format: int64
        type: integer
        x-nullable: false
      Title:
        type: string
      Year:
        format: int32
        type: integer
        x-nullable: false
    title: GameRankedResponse
    type: object
  GameRating:
    description: GameRating
    properties:
      Id:
        description: Id of the Rating object.
        format: int32
        type: integer
      Name:
        description: Name of the Rating.
        type: string
    title: GameRating
    type: object
  GameRelease:
    description: GameRelease
    properties:
      Country:
        description: The Country Game was released.
        type: string
      Date:
        description: Date of this GameRelease.
        format: date-time
        type: string
      Id:
        description: Unique Id of this GameRelease.
        format: int64
        type: integer
      Type:
        description: The type of this GameRelease.
        type: string
    title: GameRelease
    type: object
  GameResponse:
    description: GameResponse
    properties:
      AlternateTitles:
        description: List of alternate titles for this Game.
        items:
          $ref: '#/definitions/GameAlternateTitle'
        type: array
      Companies:
        description: 'List of companies (Production, Distribution, etc.) associated with Game.'
        items:
          $ref: '#/definitions/Company'
        type: array
      Created:
        description: DateTime Game record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Game.
        items:
          $ref: '#/definitions/GameDescription'
        type: array
      ExternalIds:
        description: List of external Ids associated with Game.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Genres:
        description: List of genres associated with Game.
        items:
          $ref: '#/definitions/GameGenre'
        type: array
      Id:
        description: Unique ID of the Game.
        format: int64
        type: integer
        x-nullable: false
      Modified:
        description: DateTime Game record last modified.
        format: date-time
        type: string
        x-nullable: false
      OfficialSiteUrl:
        description: Game website home page.
        type: string
      OriginalLanguage:
        description: ID of Game original language.
        type: string
      OriginalReleaseDate:
        description: First generally available release regardless of country. Excludes festivals and premieres.
        format: date-time
        type: string
      OriginalTitle:
        type: string
      Platforms:
        description: List of platforms associated with Game.
        items:
          $ref: '#/definitions/GamePlatform'
        type: array
      Ratings:
        description: List of ratings associated with Game.
        items:
          $ref: '#/definitions/GameRating'
        type: array
      Releases:
        description: List of releases associated with Game.
        items:
          $ref: '#/definitions/GameRelease'
        type: array
      Tags:
        description: List of tags associated with Game.
        items:
          $ref: '#/definitions/GameTag'
        type: array
      Title:
        description: English version of any foreign Original Title.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Game.
        items:
          $ref: '#/definitions/GameVideo'
        type: array
      Year:
        format: int32
        type: integer
        x-nullable: false
    required:
      - OriginalTitle
      - Year
    title: GameResponse
    type: object
  GameTag:
    description: GameTag
    properties:
      Id:
        description: ID of the object.
        format: int64
        type: integer
      Name:
        description: Name of the Tag.
        type: string
      TagId:
        description: ID of the Tag.
        format: int64
        type: integer
        x-nullable: false
    title: GameTag
    type: object
  GameVideo:
    description: GameVideo
    properties:
      AllowAdvertising:
        description: Flag denoting if pre-roll video ads are allowed in front of of content.
        type: boolean
        x-nullable: false
      Certification:
        description: Certification for GameVideo.
        type: boolean
      Clean:
        description: 'True if Certification, Theatrical, and HomeVideo are False.'
        type: boolean
      Company:
        description: Company associated with GameVideo.
        type: string
      Duration:
        description: Runtime of GameVideo.
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        description: Datetime GameVideo was encoded.
        format: date-time
        type: string
        x-nullable: false
      Encodes:
        description: List of Encodes (bitrate and type) for GameVideo.
        items:
          $ref: '#/definitions/GameVideoEncode'
        type: array
      ExpirationDate:
        description: Date GameVideo expires.
        format: date-time
        type: string
      HomeVideo:
        description: Flag for promoting Home Video.
        type: boolean
      Id:
        description: Unique ID of GameVideo.
        format: int64
        type: integer
        x-nullable: false
      Language:
        description: Language associated with GameVideo.
        type: string
      LanguageSubtitled:
        description: Subtitle language associated with GameVideo.
        type: string
      Mature:
        description: Flag for designating video content not suitable for children. Age gate required.
        type: boolean
        x-nullable: false
      ScreenCaptures:
        description: List of screen captures from GameVideo.
        items:
          $ref: '#/definitions/GameVideoScreenCapture'
        type: array
      SourceVideoHeight:
        description: Height in pixels of GameVideo.
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        description: Width in pixels of GameVideo.
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        description: First date of GameVideo availability.
        format: date-time
        type: string
      TargetCountries:
        description: List of countries targeted by GameVideo.
        items:
          $ref: '#/definitions/TargetCountry'
        type: array
      Theatrical:
        description: Flag for promoting Theatrical release.
        type: boolean
      Title:
        description: 'Title of GameVideo, not Game.'
        type: string
      Type:
        description: VideoType for the GameVideo.
        type: string
    title: GameVideo
    type: object
  GameVideoEncode:
    description: GameVideoEncode
    properties:
      BitRate:
        description: BitRate of GameVideoEncode.
        format: int32
        type: integer
      EncodeType:
        description: Datetime when the GameVideoEncode was encoded.
        type: string
      Id:
        description: Unique ID of the video encode
        format: int64
        type: integer
    title: GameVideoEncode
    type: object
  GameVideoScreenCapture:
    description: GameVideoScreenCapture
    properties:
      Aspect:
        description: Aspect ratio of GameVideoScreenCapture.
        type: string
      FilePath:
        description: Filepath (location) of GameVideoScreenCapture.
        type: string
      Height:
        description: Height in pixels of GameVideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of the screen capture
        format: int64
        type: integer
      Width:
        description: Width in pixels of GameVideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
    title: GameVideoScreenCapture
    type: object
  GetAllGames:
    description: GetAllGames
    properties:
      Includes:
        description: List of additional objects to include in the game object.
        enum:
          - Genres
          - Releases
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Videos
          - ExternalIds
        items:
          type: string
        type: array
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 100 per request.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Take
    title: GetAllGames
    type: object
  GetAllMovies:
    description: GetAllMovies
    properties:
      Includes:
        description: List of additional objects to include in the movie objectSearch movie by OriginalTitle.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 100 per request.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Take
    title: GetAllMovies
    type: object
  GetAllMyPrograms:
    description: GetAllMyPrograms
    properties:
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 100 per request.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Take
    title: GetAllMyPrograms
    type: object
  GetAllMyVideos:
    description: GetAllMyVideos
    properties:
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 100 per request.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Take
    title: GetAllMyVideos
    type: object
  GetAllPeople:
    description: GetAllPeople
    properties:
      Includes:
        description: List of additional objects to include in the person response.
        enum:
          - ExternalIds
          - AlternateNames
          - Images
          - Descriptions
          - Tags
        items:
          type: string
        type: array
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 100 per request.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Take
    title: GetAllPeople
    type: object
  GetAllShows:
    description: GetAllShows
    properties:
      Includes:
        description: List of additional objects to include in the show object.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - Seasons
          - EpisodeVideos
          - SeasonVideos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 10 per request.
        format: int32
        type: integer
        x-nullable: false
    title: GetAllShows
    type: object
  GetCelebrityRanked:
    description: GetCelebrityRanked
    properties:
      StartsWith:
        type: string
    title: GetCelebrityRanked
    type: object
  GetChartMoviesBoxoffice:
    description: GetChartMoviesBoxoffice
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 100)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetChartMoviesBoxoffice
    type: object
  GetChartMoviesMostAnticipated:
    description: GetChartMoviesMostAnticipated
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 100)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetChartMoviesMostAnticipated
    type: object
  GetChartMoviesPopular:
    description: GetChartMoviesPopular
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 100)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetChartMoviesPopular
    type: object
  GetChartPeoplePopular:
    description: GetChartPeoplePopular
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 100)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetChartPeoplePopular
    type: object
  GetChartShowsPopular:
    description: GetChartShowsPopular
    properties:
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 100 per request.
        format: int32
        type: integer
        x-nullable: false
    title: GetChartShowsPopular
    type: object
  GetCommonEnumerators:
    description: GetCommonEnumerators
    properties: {}
    title: GetCommonEnumerators
    type: object
  GetCompanies:
    description: GetCompanies
    properties:
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetCompanies
    type: object
  GetCountries:
    description: GetCountries
    properties: {}
    title: GetCountries
    type: object
  GetDataDemoFilters:
    description: GetDataDemoFilters
    properties: {}
    title: GetDataDemoFilters
    type: object
  GetDbShowCertifications:
    description: GetDbShowCertifications
    properties: {}
    title: GetDbShowCertifications
    type: object
  GetDbShowReleaseTypes:
    description: GetDbShowReleaseTypes
    properties: {}
    title: GetDbShowReleaseTypes
    type: object
  GetEpisode:
    description: GetEpisode
    properties:
      Id:
        description: Required ID of an Episode.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the episode response.
        enum:
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
    required:
      - Id
    title: GetEpisode
    type: object
  GetEpisodeByEpisodeNumber:
    description: GetEpisodeByEpisodeNumber
    properties:
      EpisodeNumber:
        description: Required EpisodeNumber.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Required Id of the Show.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the episode response.
        enum:
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
      SeasonNumber:
        description: Required SeasonNumber.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Id
      - SeasonNumber
      - EpisodeNumber
    title: GetEpisodeByEpisodeNumber
    type: object
  GetEpisodeByNumber:
    description: GetEpisodeByNumber
    properties:
      EpisodeNumber:
        description: Required EpisodeNumber.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Required Id of the Show.
        format: int64
        type: integer
        x-nullable: false
      SeasonNumber:
        description: Required SeasonNumber.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Id
      - SeasonNumber
      - EpisodeNumber
    title: GetEpisodeByNumber
    type: object
  GetEpisodeChangeHistory:
    description: GetEpisodeChangeHistory
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetEpisodeChangeHistory
    type: object
  GetEpisodeChangeHistoryWithEntity:
    description: GetEpisodeChangeHistoryWithEntity
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetEpisodeChangeHistoryWithEntity
    type: object
  GetFandangoGeoLocationCity:
    description: GetFandangoGeoLocationCity
    properties:
      City:
        description: Name of city.
        type: string
      Country:
        description: 2-Letter country code.
        type: string
      State:
        description: State code or name.
        type: string
    required:
      - Country
      - State
      - City
    title: GetFandangoGeoLocationCity
    type: object
  GetFandangoGeoLocationPostalCode:
    description: GetFandangoGeoLocationPostalCode
    properties:
      Country:
        description: 2-Letter country code.
        type: string
      Postalcode:
        description: Postal code.
        type: string
    required:
      - Country
      - Postalcode
    title: GetFandangoGeoLocationPostalCode
    type: object
  GetFandangoMovie:
    description: GetFandangoMovie
    properties:
      IdProvider:
        description: The provider for the movie ID.
        enum:
          - fandangoApi
          - fandango
          - IVA
        type: string
      MovieId:
        description: The ID of the movie.
        type: string
    required:
      - MovieId
      - IdProvider
    title: GetFandangoMovie
    type: object
  GetFandangoMovieDisplayDates:
    description: GetFandangoMovieDisplayDates
    properties:
      EndDateTime:
        description: End datetime (ISO-8601) for the display date range. Defaults to no end datetime.
        format: date-time
        type: string
      ExcludeTheaterIds:
        description: Comma delimited list of theaters to exclude.
        items:
          type: string
        type: array
      IdProvider:
        description: The provider for the movie ID.
        enum:
          - fandangoApi
          - fandango
          - IVA
        type: string
      Latitude:
        description: Latitude of the user's location.
        format: double
        type: number
      Longitude:
        description: Longitude of the user's location.
        format: double
        type: number
      MovieId:
        description: The ID of the movie.
        type: string
      Radius:
        description: Search radius in miles around the user's location.
        format: int32
        type: integer
      StartDateTime:
        description: Start datetime (ISO-8601) for the display date range. Defaults to UTC now.
        format: date-time
        type: string
      TheaterChainCodes:
        description: Comma delimited list of theater chains to filter.
        items:
          type: string
        type: array
      ZipCode:
        description: Zip code of the user's location.
        type: string
    required:
      - MovieId
      - IdProvider
    title: GetFandangoMovieDisplayDates
    type: object
  GetFandangoMovieShowtimeGroupings:
    description: GetFandangoMovieShowtimeGroupings
    properties:
      EndDisplayDate:
        description: End display date. Defaults to start display date.
        format: date-time
        type: string
      IdProvider:
        description: The provider for the movie ID.
        enum:
          - fandangoApi
          - fandango
          - IVA
        type: string
      Latitude:
        description: Latitude of the user's location.
        format: double
        type: number
      Longitude:
        description: Longitude of the user's location.
        format: double
        type: number
      MovieId:
        description: The ID of the movie.
        type: string
      Radius:
        description: Search radius in miles around the user's location.
        format: int32
        type: integer
      StartDisplayDate:
        description: Start date for the display date range. Defaults to UTC now.
        format: date-time
        type: string
        x-nullable: false
      ZipCode:
        description: Zip code of the user's location.
        type: string
    required:
      - MovieId
      - IdProvider
    title: GetFandangoMovieShowtimeGroupings
    type: object
  GetFandangoMovies:
    description: GetFandangoMovies
    properties:
      Latitude:
        description: Latitude of the user's location.
        format: double
        type: number
      Limit:
        description: Number of items to return. Used in pagination.
        format: int32
        type: integer
      Longitude:
        description: Longitude of the user's location.
        format: double
        type: number
      Offset:
        description: Offset index of the first item to return. Used in pagination..
        format: int32
        type: integer
        x-nullable: false
      Radius:
        description: Search radius in miles around the user's location.
        format: int32
        type: integer
      Type:
        description: Specify InTheaters or ComingSoon.
        enum:
          - InTheaters
          - ComingSoon
        type: string
      ZipCode:
        description: Zip code of the user's location.
        type: string
    required:
      - Type
    title: GetFandangoMovies
    type: object
  GetFandangoShowtime:
    description: GetFandangoShowtime
    properties:
      IdProvider:
        description: The provider for the showtime ID.
        enum:
          - fandangoApi
          - fandango
        type: string
      ShowtimeId:
        description: Showtime ID for request.
        type: string
    required:
      - ShowtimeId
      - IdProvider
    title: GetFandangoShowtime
    type: object
  GetFandangoShowtimes:
    description: GetFandangoShowtimes
    properties:
      AmenityIdProvider:
        description: The provider for the amenity ID.
        enum:
          - fandangoApi
          - fandango
        type: string
      AmenityIds:
        description: Filter showtimes by amenity list (comma delimited). Only entries with amenities exactly matching this list are returned.
        items:
          type: string
        type: array
      EndDateTime:
        description: End datetime (ISO-8601) for the display date range. Defaults to no end datetime.
        format: date-time
        type: string
      EndDisplayDate:
        description: End display date. Defaults to start display date.
        format: date-time
        type: string
      Latitude:
        description: Latitude of the user's location.
        format: double
        type: number
      Limit:
        description: Number of items to return. Used in pagination.
        format: int32
        type: integer
      Longitude:
        description: Longitude of the user's location.
        format: double
        type: number
      MovieId:
        description: Filter showtimes by movie ID.
        type: string
      MovieIdProvider:
        description: The provider for the movie ID.
        enum:
          - fandangoApi
          - fandango
          - IVA
        type: string
      MovieTitle:
        description: Filter showtimes by movie title.
        type: string
      Offset:
        description: Offset index of the first item to return. Used in pagination.
        format: int32
        type: integer
        x-nullable: false
      Radius:
        description: Search radius in miles around the user's location.
        format: int32
        type: integer
      StartDateTime:
        description: Start datetime (ISO-8601) for the display date range. Defaults to UTC now.
        format: date-time
        type: string
      StartDisplayDate:
        description: Start date for the display date range. Defaults to UTC now.
        format: date-time
        type: string
        x-nullable: false
      TheaterId:
        description: The ID of the theater (required if latitude/longitude or zipCode not provided).
        type: string
      TheaterIdProvider:
        description: The provider for the theater ID.
        enum:
          - fandangoApi
          - tms
        type: string
      TheaterName:
        description: Filter showtimes by theater name.
        type: string
      ZipCode:
        description: Zip code of the user's location.
        type: string
    title: GetFandangoShowtimes
    type: object
  GetFandangoTheater:
    description: GetFandangoTheater
    properties:
      IdProvider:
        description: The provider for the theater ID.
        enum:
          - fandangoApi
          - tms
        type: string
      TheaterId:
        description: Id of theater.
        type: string
    required:
      - TheaterId
      - IdProvider
    title: GetFandangoTheater
    type: object
  GetFandangoTheaterDisplayDates:
    description: GetFandangoTheaterDisplayDates
    properties:
      EndDateTime:
        description: End datetime (ISO-8601) for the display date range. Defaults to no end datetime.
        format: date-time
        type: string
      IdProvider:
        description: The provider for the theater ID.
        enum:
          - fandangoApi
          - tms
        type: string
      StartDateTime:
        description: Start datetime (ISO-8601) for the display date range. Defaults to UTC now.
        format: date-time
        type: string
      TheaterId:
        description: Id of theater.
        type: string
    required:
      - TheaterId
      - IdProvider
    title: GetFandangoTheaterDisplayDates
    type: object
  GetFandangoTheaterShowtimeGroupings:
    description: GetFandangoTheaterShowtimeGroupings
    properties:
      EndDisplayDate:
        description: End display date. Defaults to start display date.
        format: date-time
        type: string
      IdProvider:
        description: The provider for the theater ID.
        enum:
          - fandangoApi
          - tms
        type: string
      StartDisplayDate:
        description: Start date for the display date range. Defaults to UTC now.
        format: date-time
        type: string
        x-nullable: false
      TheaterId:
        description: Offset index of the first item to return. Used in pagination.
        type: string
    required:
      - TheaterId
      - IdProvider
    title: GetFandangoTheaterShowtimeGroupings
    type: object
  GetFandangoTheaters:
    description: GetFandangoTheaters
    properties:
      Latitude:
        description: Latitude of the user's location.
        format: double
        type: number
      Limit:
        description: Number of items to return. Used in pagination.
        format: int32
        type: integer
      Longitude:
        description: Longitude of the user's location.
        format: double
        type: number
      Offset:
        description: Offset index of the first item to return. Used in pagination.
        format: int32
        type: integer
        x-nullable: false
      Radius:
        description: Search radius in miles around the user's location.
        format: int32
        type: integer
      ZipCode:
        description: Zip code of the user's location.
        type: string
    title: GetFandangoTheaters
    type: object
  GetFilmography:
    description: GetFilmography
    properties:
      Id:
        format: int64
        type: integer
        x-nullable: false
    title: GetFilmography
    type: object
  GetGBUsage:
    description: GetGBUsage
    properties:
      Month:
        description: Report month
        enum:
          - January
          - February
          - March
          - April
          - May
          - June
          - July
          - August
          - September
          - October
          - November
          - December
        type: string
      ReportTag:
        description: Report Tag filter.
        type: string
      Year:
        description: Report year
        format: int32
        type: integer
        x-nullable: false
    title: GetGBUsage
    type: object
  GetGame:
    description: GetGame
    properties:
      Id:
        description: Required ID of Game.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the game response.
        enum:
          - Genres
          - Releases
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Videos
          - ExternalIds
        items:
          type: string
        type: array
    required:
      - Id
    title: GetGame
    type: object
  GetGameChangeHistory:
    description: GetGameChangeHistory
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetGameChangeHistory
    type: object
  GetGameRanked:
    description: GetGameRanked
    properties:
      StartsWith:
        type: string
    title: GetGameRanked
    type: object
  GetGoWatchItEpisodeAvailabilities:
    description: GetGoWatchItEpisodeAvailabilities
    properties:
      ApiKey:
        description: Required GoWatchIt API key.
        type: string
      Id:
        description: Required ID of Entertainment Episode.
        format: int64
        type: integer
        x-nullable: false
    required:
      - Id
      - ApiKey
    title: GetGoWatchItEpisodeAvailabilities
    type: object
  GetGoWatchItMovieAvailabilities:
    description: GetGoWatchItMovieAvailabilities
    properties:
      ApiKey:
        description: Required GoWatchIt API key.
        type: string
      Id:
        description: Required ID of Entertainment Movie.
        format: int64
        type: integer
        x-nullable: false
    required:
      - Id
      - ApiKey
    title: GetGoWatchItMovieAvailabilities
    type: object
  GetGoWatchItSeasonAvailabilities:
    description: GetGoWatchItSeasonAvailabilities
    properties:
      ApiKey:
        description: Required GoWatchIt API key.
        type: string
      Id:
        description: Required ID of Entertainment Season.
        format: int64
        type: integer
        x-nullable: false
    required:
      - Id
      - ApiKey
    title: GetGoWatchItSeasonAvailabilities
    type: object
  GetGoWatchItShowAvailabilities:
    description: GetGoWatchItShowAvailabilities
    properties:
      ApiKey:
        description: Required GoWatchIt API key.
        type: string
      Id:
        description: Required ID of Entertainment Show.
        format: int64
        type: integer
        x-nullable: false
    required:
      - Id
      - ApiKey
    title: GetGoWatchItShowAvailabilities
    type: object
  GetGracenoteMovieIds:
    description: GetGracenoteMovieIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetGracenoteMovieIds
    type: object
  GetGracenoteShowIds:
    description: GetGracenoteShowIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetGracenoteShowIds
    type: object
  GetImageBatch:
    description: GetImageBatch
    properties:
      FilePath:
        description: List of Filepaths.
        items:
          type: string
        type: array
    title: GetImageBatch
    type: object
  GetImageRedirect:
    description: GetImageRedirect
    properties:
      ExpirationMinutes:
        description: Image url expiration in minutes. Default = 60. Maximum is 1440.
        type: string
      FilePath:
        description: Filepath of Image.
        type: string
      Redirect:
        description: Redirect to the image. Default = true
        type: boolean
        x-nullable: false
    required:
      - FilePath
    title: GetImageRedirect
    type: object
  GetImageTypes:
    description: GetImageTypes
    properties: {}
    title: GetImageTypes
    type: object
  GetImdbMovieIds:
    description: GetImdbMovieIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetImdbMovieIds
    type: object
  GetImdbShowIds:
    description: GetImdbShowIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetImdbShowIds
    type: object
  GetLanguages:
    description: GetLanguages
    properties: {}
    title: GetLanguages
    type: object
  GetMetacriticMovie:
    description: GetMetacriticMovie
    properties:
      Id:
        description: Required ID of Entertainment Movie.
        format: int64
        type: integer
        x-nullable: false
    required:
      - Id
    title: GetMetacriticMovie
    type: object
  GetMetacriticTv:
    description: GetMetacriticTv
    properties:
      Id:
        description: Required ID of Entertainment Show.
        format: int64
        type: integer
        x-nullable: false
      SeasonNumber:
        description: Number of season.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Id
    title: GetMetacriticTv
    type: object
  GetMovie:
    description: GetMovie
    properties:
      Id:
        description: Required ID of Movie.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the movie response.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
    required:
      - Id
    title: GetMovie
    type: object
  GetMovieAlternateIdTypes:
    description: GetMovieAlternateIdTypes
    properties: {}
    title: GetMovieAlternateIdTypes
    type: object
  GetMovieCertifications:
    description: GetMovieCertifications
    properties: {}
    title: GetMovieCertifications
    type: object
  GetMovieChangeHistory:
    description: GetMovieChangeHistory
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetMovieChangeHistory
    type: object
  GetMovieChangeHistoryWithEntity:
    description: GetMovieChangeHistoryWithEntity
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetMovieChangeHistoryWithEntity
    type: object
  GetMovieGenres:
    description: GetMovieGenres
    properties: {}
    title: GetMovieGenres
    type: object
  GetMovieReleaseTypes:
    description: GetMovieReleaseTypes
    properties: {}
    title: GetMovieReleaseTypes
    type: object
  GetMoviesComingSoon:
    description: GetMoviesComingSoon
    properties:
      Includes:
        description: List of additional objects to include in the movie response.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 10)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetMoviesComingSoon
    type: object
  GetMoviesInTheaters:
    description: GetMoviesInTheaters
    properties:
      Includes:
        description: List of additional objects to include in the movie response.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 10)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetMoviesInTheaters
    type: object
  GetMyProgram:
    description: GetMyProgram
    properties:
      Id:
        description: Required ID of program.
        format: int64
        type: integer
        x-nullable: false
    required:
      - Id
    title: GetMyProgram
    type: object
  GetMyVideo:
    description: GetMyVideo
    properties:
      Id:
        description: Required ID of video.
        format: int64
        type: integer
        x-nullable: false
    required:
      - Id
    title: GetMyVideo
    type: object
  GetOriginatingNetworks:
    description: GetOriginatingNetworks
    properties: {}
    title: GetOriginatingNetworks
    type: object
  GetPerson:
    description: GetPerson
    properties:
      Id:
        description: Required ID of Person.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the person response.
        enum:
          - ExternalIds
          - AlternateNames
          - Images
          - Descriptions
          - Tags
        items:
          type: string
        type: array
    required:
      - Id
    title: GetPerson
    type: object
  GetPersonChangeHistory:
    description: GetPersonChangeHistory
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetPersonChangeHistory
    type: object
  GetPersonChangeHistoryWithEntity:
    description: GetPersonChangeHistoryWithEntity
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetPersonChangeHistoryWithEntity
    type: object
  GetPersonRanked:
    description: GetPersonRanked
    properties:
      StartsWith:
        type: string
    title: GetPersonRanked
    type: object
  GetRevCaptionAttachmentContent:
    description: GetRevCaptionAttachmentContent
    properties:
      Id:
        description: Caption Order Id.
        format: int64
        type: integer
        x-nullable: false
      Type:
        description: Type of caption content.
        enum:
          - WebVTT
          - Ttml
          - SubRip
          - Scc
          - Mcc
          - QtText
          - Transcript
          - Dfxp
          - CheetaCap
          - Stl
          - AvidDs
          - FacebookSubRip
          - Unknown
        type: string
    required:
      - Id
      - Type
    title: GetRevCaptionAttachmentContent
    type: object
  GetRevCaptions:
    description: GetRevCaptions
    properties:
      Skip:
        description: Skips records using for paging results.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Limits the total items returned. Maximum of 100 per request.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Take
    title: GetRevCaptions
    type: object
  GetRoviMovieIds:
    description: GetRoviMovieIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetRoviMovieIds
    type: object
  GetRoviShowIds:
    description: GetRoviShowIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetRoviShowIds
    type: object
  GetSDK:
    description: GetSDK
    properties:
      Client:
        description: Client SDK
        enum:
          - akka_scala
          - android
          - async_scala
          - bash
          - clojure
          - cpprest
          - csharp
          - CsharpDotNet2
          - cwiki
          - dart
          - dynamic_html
          - elixir
          - flash
          - go
          - groovy
          - html
          - html2
          - java
          - javascript
          - javascript_closure_angular
          - jaxrs_cxf_client
          - jmeter
          - objc
          - perl
          - php
          - python
          - qt5cpp
          - ruby
          - scala
          - swagger
          - swagger_yaml
          - swift
          - swift3
          - tizen
          - typescript_angular
          - typescript_angular2
          - typescript_fetch
          - typescript_node
        type: string
      RedirectToFile:
        description: Redirect to download the zipped SDK.
        type: boolean
        x-nullable: false
    required:
      - Client
      - RedirectToFile
    title: GetSDK
    type: object
  GetScreenCaptureBatch:
    description: GetScreenCaptureBatch
    properties:
      FilePath:
        description: List of Filepaths.
        items:
          type: string
        type: array
    title: GetScreenCaptureBatch
    type: object
  GetScreenCaptureRedirect:
    description: GetScreenCaptureRedirect
    properties:
      ExpirationMinutes:
        description: Image url expiration in minutes. Default = 60. Maximum is 1440.
        type: string
      FilePath:
        description: Filepath of Image.
        type: string
      Redirect:
        description: Redirect to the image. Default = true
        type: boolean
        x-nullable: false
    required:
      - FilePath
    title: GetScreenCaptureRedirect
    type: object
  GetSeason:
    description: GetSeason
    properties:
      Id:
        description: Id of a Season.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the season response.
        enum:
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Episodes
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
    required:
      - Id
    title: GetSeason
    type: object
  GetSeasonByNumber:
    description: GetSeasonByNumber
    properties:
      Id:
        description: Id of a Show.
        format: int64
        type: integer
        x-nullable: false
      SeasonNumber:
        description: Number of a Season belonging to a Show.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Id
      - SeasonNumber
    title: GetSeasonByNumber
    type: object
  GetSeasonBySeasonNumber:
    description: GetSeasonBySeasonNumber
    properties:
      Id:
        description: Id of a Show.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the season response.
        enum:
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Episodes
          - Images
          - Videos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
      SeasonNumber:
        description: Number of a Season belonging to a Show.
        format: int32
        type: integer
        x-nullable: false
    required:
      - Id
      - SeasonNumber
    title: GetSeasonBySeasonNumber
    type: object
  GetSeasonChangeHistory:
    description: GetSeasonChangeHistory
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetSeasonChangeHistory
    type: object
  GetSeasonChangeHistoryWithEntity:
    description: GetSeasonChangeHistoryWithEntity
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetSeasonChangeHistoryWithEntity
    type: object
  GetShow:
    description: GetShow
    properties:
      Id:
        description: Required ID of Show.
        format: int64
        type: integer
        x-nullable: false
      Includes:
        description: List of additional objects to include in the show response.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
          - Seasons
          - EpisodeVideos
          - SeasonVideos
          - ExternalIds
          - Availabilities
        items:
          type: string
        type: array
    required:
      - Id
    title: GetShow
    type: object
  GetShowAlternateIdTypes:
    description: GetShowAlternateIdTypes
    properties: {}
    title: GetShowAlternateIdTypes
    type: object
  GetShowChangeHistory:
    description: GetShowChangeHistory
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetShowChangeHistory
    type: object
  GetShowChangeHistoryWithEntity:
    description: GetShowChangeHistoryWithEntity
    properties:
      Date:
        description: 'Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Date
      - Skip
      - Take
    title: GetShowChangeHistoryWithEntity
    type: object
  GetShowGenres:
    description: GetShowGenres
    properties: {}
    title: GetShowGenres
    type: object
  GetTags:
    description: GetTags
    properties:
      Skip:
        description: Offset for paging. Default is 0.
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: 'Maximum number of rows returned. Default is 1,000.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetTags
    type: object
  GetTestDateTime:
    description: GetTestDateTime
    properties:
      DateTime:
        description: DateTime to test format from API.
        format: date-time
        type: string
        x-nullable: false
    required:
      - DateTime
    title: GetTestDateTime
    type: object
  GetTheatricalMovies:
    description: GetTheatricalMovies
    properties:
      Includes:
        description: List of additional objects to include in the movie response.
        enum:
          - Genres
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - Images
          - Videos
        items:
          type: string
        type: array
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 10)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetTheatricalMovies
    type: object
  GetTmdbMovieIds:
    description: GetTmdbMovieIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetTmdbMovieIds
    type: object
  GetTmdbShowIds:
    description: GetTmdbShowIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetTmdbShowIds
    type: object
  GetTrendSources:
    description: GetTrendSources
    properties: {}
    title: GetTrendSources
    type: object
  GetTvMediaCountries:
    description: GetTvMediaCountries
    properties:
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
    title: GetTvMediaCountries
    type: object
  GetTvMediaGenericLineups:
    description: GetTvMediaGenericLineups
    properties:
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
    title: GetTvMediaGenericLineups
    type: object
  GetTvMediaLeagueListings:
    description: GetTvMediaLeagueListings
    properties:
      AdultContent:
        description: Defaults to 1 (allowed). Set to 0 to hide adult content.
        type: boolean
        x-nullable: false
      Channel:
        description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
        items:
          type: string
        type: array
      DescriptiveVideoOnly:
        description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
        type: boolean
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      DisplayArtwork:
        description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
        type: boolean
        x-nullable: false
      End:
        description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
        format: date-time
        type: string
      EndChan:
        description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
        items:
          type: string
        type: array
      ExcludeChan:
        description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
        items:
          type: string
        type: array
      ExcludeShowType:
        description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      ExcludeStation:
        description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Id:
        description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
        items:
          type: string
        type: array
      League:
        description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
        items:
          type: string
        type: array
      LeagueID:
        description: League ID. See /leagues for a list of all available sports leagues.
        type: string
      LineupID:
        description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.
        type: string
      LiveOnly:
        description: Only displays live listings. No value necessary.
        type: boolean
      NewShowsOnly:
        description: Get new shows only. No value necessary.
        type: boolean
      NotYetStarted:
        description: Only displays listings which are starting on or after the given start time. No value necessary.
        type: boolean
      Search:
        description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
        type: string
      ShowType:
        description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      SportEventsOnly:
        description: Get sporting events only. No value necessary.
        type: boolean
      SportType:
        description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
        items:
          type: string
        type: array
      Start:
        description: UTC start time in ISO8601. Defaults to current date and time.
        format: date-time
        type: string
      StartChan:
        description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
        items:
          type: string
        type: array
      Station:
        description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Team:
        description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
        items:
          type: string
        type: array
      TimeZone:
        description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
        format: int32
        type: integer
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - LeagueID
      - LineupID
    title: GetTvMediaLeagueListings
    type: object
  GetTvMediaLeagues:
    description: GetTvMediaLeagues
    properties:
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
    title: GetTvMediaLeagues
    type: object
  GetTvMediaLineupByID:
    description: GetTvMediaLineupByID
    properties:
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      LineupID:
        description: Lineup ID.
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - LineupID
    title: GetTvMediaLineupByID
    type: object
  GetTvMediaLineupListings:
    description: GetTvMediaLineupListings
    properties:
      AdultContent:
        description: Defaults to 1 (allowed). Set to 0 to hide adult content.
        type: boolean
        x-nullable: false
      Channel:
        description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
        items:
          type: string
        type: array
      DescriptiveVideoOnly:
        description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
        type: boolean
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      DisplayArtwork:
        description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
        type: boolean
        x-nullable: false
      End:
        description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
        format: date-time
        type: string
      EndChan:
        description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
        items:
          type: string
        type: array
      ExcludeChan:
        description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
        items:
          type: string
        type: array
      ExcludeShowType:
        description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      ExcludeStation:
        description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Id:
        description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
        items:
          type: string
        type: array
      League:
        description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
        items:
          type: string
        type: array
      LineupID:
        description: Lineup ID.
        type: string
      LiveOnly:
        description: Only displays live listings. No value necessary.
        type: boolean
      NewShowsOnly:
        description: Get new shows only. No value necessary.
        type: boolean
      NotYetStarted:
        description: Only displays listings which are starting on or after the given start time. No value necessary.
        type: boolean
      Search:
        description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
        type: string
      ShowType:
        description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      SportEventsOnly:
        description: Get sporting events only. No value necessary.
        type: boolean
      SportType:
        description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
        items:
          type: string
        type: array
      Start:
        description: UTC start time in ISO8601. Defaults to current date and time.
        format: date-time
        type: string
      StartChan:
        description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
        items:
          type: string
        type: array
      Station:
        description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Team:
        description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
        items:
          type: string
        type: array
      TimeZone:
        description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
        format: int32
        type: integer
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - LineupID
    title: GetTvMediaLineupListings
    type: object
  GetTvMediaLineupListingsGrid:
    description: GetTvMediaLineupListingsGrid
    properties:
      AdultContent:
        description: Defaults to 1 (allowed). Set to 0 to hide adult content.
        type: boolean
        x-nullable: false
      Channel:
        description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
        items:
          type: string
        type: array
      DescriptiveVideoOnly:
        description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
        type: boolean
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      DisplayArtwork:
        description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
        type: boolean
        x-nullable: false
      End:
        description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
        format: date-time
        type: string
      EndChan:
        description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
        items:
          type: string
        type: array
      ExcludeChan:
        description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
        items:
          type: string
        type: array
      ExcludeShowType:
        description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      ExcludeStation:
        description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Id:
        description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
        items:
          type: string
        type: array
      League:
        description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
        items:
          type: string
        type: array
      LineupID:
        description: Lineup ID.
        type: string
      LiveOnly:
        description: Only displays live listings. No value necessary.
        type: boolean
      NewShowsOnly:
        description: Get new shows only. No value necessary.
        type: boolean
      NotYetStarted:
        description: Only displays listings which are starting on or after the given start time. No value necessary.
        type: boolean
      Search:
        description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
        type: string
      ShowType:
        description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      SportEventsOnly:
        description: Get sporting events only. No value necessary.
        type: boolean
      SportType:
        description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
        items:
          type: string
        type: array
      Start:
        description: UTC start time in ISO8601. Defaults to current date and time.
        format: date-time
        type: string
      StartChan:
        description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
        items:
          type: string
        type: array
      Station:
        description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Team:
        description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
        items:
          type: string
        type: array
      TimeZone:
        description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
        format: int32
        type: integer
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - LineupID
    title: GetTvMediaLineupListingsGrid
    type: object
  GetTvMediaLineupListingsHighlights:
    description: GetTvMediaLineupListingsHighlights
    properties:
      AdultContent:
        description: Defaults to 1 (allowed). Set to 0 to hide adult content.
        type: boolean
        x-nullable: false
      Channel:
        description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
        items:
          type: string
        type: array
      DescriptiveVideoOnly:
        description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
        type: boolean
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      DisplayArtwork:
        description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
        type: boolean
        x-nullable: false
      End:
        description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
        format: date-time
        type: string
      EndChan:
        description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
        items:
          type: string
        type: array
      ExcludeChan:
        description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
        items:
          type: string
        type: array
      ExcludeShowType:
        description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      ExcludeStation:
        description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Id:
        description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
        items:
          type: string
        type: array
      League:
        description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
        items:
          type: string
        type: array
      LineupID:
        description: Lineup ID.
        type: string
      LiveOnly:
        description: Only displays live listings. No value necessary.
        type: boolean
      NewShowsOnly:
        description: Get new shows only. No value necessary.
        type: boolean
      NotYetStarted:
        description: Only displays listings which are starting on or after the given start time. No value necessary.
        type: boolean
      Search:
        description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
        type: string
      ShowType:
        description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      SportEventsOnly:
        description: Get sporting events only. No value necessary.
        type: boolean
      SportType:
        description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
        items:
          type: string
        type: array
      Start:
        description: UTC start time in ISO8601. Defaults to current date and time.
        format: date-time
        type: string
      StartChan:
        description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
        items:
          type: string
        type: array
      Station:
        description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Team:
        description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
        items:
          type: string
        type: array
      TimeZone:
        description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
        format: int32
        type: integer
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - LineupID
    title: GetTvMediaLineupListingsHighlights
    type: object
  GetTvMediaLineupsByAreaID:
    description: GetTvMediaLineupsByAreaID
    properties:
      AreaID:
        description: 'Service area ID. See TvMedia/lineups/browse/{CountryID}/{RegionID} for a list of service areas.'
        type: string
      CountryID:
        description: Country abbreviation. See TvMedia/lineups/browse for a list of supported countries.
        type: string
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      LineupType:
        description: 'Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.'
        enum:
          - OTA
          - SAT
          - CAB
          - IPTV
        type: string
      ProviderId:
        description: Filter by provider ID
        type: string
      RegionID:
        description: 'Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a list of regions.'
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - CountryID
      - RegionID
      - AreaID
    title: GetTvMediaLineupsByAreaID
    type: object
  GetTvMediaLineupsByLatitudeLongitude:
    description: GetTvMediaLineupsByLatitudeLongitude
    properties:
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      Latitude:
        description: Latitude (geographic coordinate).
        format: float
        type: number
        x-nullable: false
      LineupType:
        description: 'Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.'
        enum:
          - OTA
          - SAT
          - CAB
          - IPTV
        type: string
      Longitude:
        description: Longitude (geographic coordinate).
        format: float
        type: number
        x-nullable: false
      ProviderId:
        description: Filter by provider ID
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - Latitude
      - Longitude
    title: GetTvMediaLineupsByLatitudeLongitude
    type: object
  GetTvMediaLineupsByPostalCode:
    description: GetTvMediaLineupsByPostalCode
    properties:
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''brief''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      LineupType:
        description: 'Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.'
        enum:
          - OTA
          - SAT
          - CAB
          - IPTV
        type: string
      PostalCode:
        description: Postal code.
        type: string
      ProviderId:
        description: Filter by provider ID
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - PostalCode
    title: GetTvMediaLineupsByPostalCode
    type: object
  GetTvMediaListingsByStation:
    description: GetTvMediaListingsByStation
    properties:
      AdultContent:
        description: Defaults to 1 (allowed). Set to 0 to hide adult content.
        type: boolean
        x-nullable: false
      Channel:
        description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
        items:
          type: string
        type: array
      DescriptiveVideoOnly:
        description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
        type: boolean
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      DisplayArtwork:
        description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
        type: boolean
        x-nullable: false
      End:
        description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
        format: date-time
        type: string
      EndChan:
        description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
        items:
          type: string
        type: array
      ExcludeChan:
        description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
        items:
          type: string
        type: array
      ExcludeShowType:
        description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      ExcludeStation:
        description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Id:
        description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
        items:
          type: string
        type: array
      League:
        description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
        items:
          type: string
        type: array
      LiveOnly:
        description: Only displays live listings. No value necessary.
        type: boolean
      NewShowsOnly:
        description: Get new shows only. No value necessary.
        type: boolean
      NotYetStarted:
        description: Only displays listings which are starting on or after the given start time. No value necessary.
        type: boolean
      Search:
        description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
        type: string
      ShowType:
        description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      SportEventsOnly:
        description: Get sporting events only. No value necessary.
        type: boolean
      SportType:
        description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
        items:
          type: string
        type: array
      Start:
        description: UTC start time in ISO8601. Defaults to current date and time.
        format: date-time
        type: string
      StartChan:
        description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
        items:
          type: string
        type: array
      Station:
        description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      StationID:
        description: 'Station ID. Station ID''s can be found in listings, or by using the Tvmedia/lineups API'
        format: int32
        type: integer
        x-nullable: false
      Team:
        description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
        items:
          type: string
        type: array
      TimeZone:
        description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
        format: int32
        type: integer
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - StationID
    title: GetTvMediaListingsByStation
    type: object
  GetTvMediaMovieGenres:
    description: GetTvMediaMovieGenres
    properties:
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
    title: GetTvMediaMovieGenres
    type: object
  GetTvMediaRegions:
    description: GetTvMediaRegions
    properties:
      CountryID:
        description: Country abbreviation. See TvMedia/lineups/browse for a list of supported countries.
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - CountryID
    title: GetTvMediaRegions
    type: object
  GetTvMediaServiceAreas:
    description: GetTvMediaServiceAreas
    properties:
      CountryID:
        description: Country abbreviation. See TvMedia/lineups/browse for a list of supported countries.
        type: string
      RegionID:
        description: 'Region abbreviation. See TvMedia/lineups/browse/{CountryID} for a list of regions.'
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - CountryID
      - RegionID
    title: GetTvMediaServiceAreas
    type: object
  GetTvMediaShowGenres:
    description: GetTvMediaShowGenres
    properties:
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
    title: GetTvMediaShowGenres
    type: object
  GetTvMediaSportGenres:
    description: GetTvMediaSportGenres
    properties:
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
    title: GetTvMediaSportGenres
    type: object
  GetTvMediaStation:
    description: GetTvMediaStation
    properties:
      StationID:
        description: 'Station ID. Station ID''s can be found in listings, or by using the Tvmedia/lineups API'
        format: int32
        type: integer
        x-nullable: false
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - StationID
    title: GetTvMediaStation
    type: object
  GetTvMediaTeamById:
    description: GetTvMediaTeamById
    properties:
      TeamID:
        description: Team ID.
        format: int32
        type: integer
        x-nullable: false
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - TeamID
    title: GetTvMediaTeamById
    type: object
  GetTvMediaTeamListings:
    description: GetTvMediaTeamListings
    properties:
      AdultContent:
        description: Defaults to 1 (allowed). Set to 0 to hide adult content.
        type: boolean
        x-nullable: false
      Channel:
        description: 'Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).'
        items:
          type: string
        type: array
      DescriptiveVideoOnly:
        description: Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.
        type: boolean
      Detail:
        description: 'Set level of detail for response. values are ''full'' or ''brief'', defaults to ''full''. ''full'' will include all properties, ''brief'' will exclude optional properties.'
        enum:
          - full
          - brief
        type: string
      DisplayArtwork:
        description: 'Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).'
        type: boolean
        x-nullable: false
      End:
        description: UTC end time in ISO8601. Defaults to 'start' time +4 hours.
        format: date-time
        type: string
      EndChan:
        description: 'Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the ''maxchan'' parameter.'
        items:
          type: string
        type: array
      ExcludeChan:
        description: 'Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).'
        items:
          type: string
        type: array
      ExcludeShowType:
        description: 'Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      ExcludeStation:
        description: 'Filter out station IDs; array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Id:
        description: 'ListingID, array or single values accepted. to return a single listing it should be used in combination with a stationID (station parameter).'
        items:
          type: string
        type: array
      League:
        description: Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see /leagues.
        items:
          type: string
        type: array
      LineupID:
        description: Lineup ID. Lineups can be found through the /TvMedia/lineups method.
        type: string
      LiveOnly:
        description: Only displays live listings. No value necessary.
        type: boolean
      NewShowsOnly:
        description: Get new shows only. No value necessary.
        type: boolean
      NotYetStarted:
        description: Only displays listings which are starting on or after the given start time. No value necessary.
        type: boolean
      Search:
        description: 'search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.'
        type: string
      ShowType:
        description: 'Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type''s and their ID''s see /genres/shows, or the showTypeID property of a listing object.'
        items:
          type: string
        type: array
      SportEventsOnly:
        description: Get sporting events only. No value necessary.
        type: boolean
      SportType:
        description: Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see /genres/sports.
        items:
          type: string
        type: array
      Start:
        description: UTC start time in ISO8601. Defaults to current date and time.
        format: date-time
        type: string
      StartChan:
        description: 'Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.'
        items:
          type: string
        type: array
      Station:
        description: 'Filter by station ID. Array or single value accepted. Station ID''s can be found in listings, or by using the /lineups API.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      Team:
        description: 'Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see /leagues/teams. (NOTE: league parameter is required when using this parameter).'
        items:
          type: string
        type: array
      TeamID:
        description: Team ID. See /teams for a list of all available sports teams.
        format: int32
        type: integer
        x-nullable: false
      TimeZone:
        description: 'Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.'
        format: int32
        type: integer
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - TeamID
      - LineupID
    title: GetTvMediaTeamListings
    type: object
  GetTvMediaTeams:
    description: GetTvMediaTeams
    properties:
      LeagueID:
        description: League ID. See /TvMedia/leagues for a list of all available sports leagues.
        type: string
      TvMediaApiKey:
        description: API Key supplied by TvMedia.ca
        type: string
    required:
      - TvMediaApiKey
      - LeagueID
    title: GetTvMediaTeams
    type: object
  GetVideo:
    description: GetVideo
    properties:
      AdaptiveClientManifestVersion:
        description: 'Adaptive Client Manifest Version (HLS, default = 3)'
        format: int32
        type: integer
      AdaptiveMaximumResolution:
        description: Adaptive Maximum resolution. Default is 1080P Resolution.
        enum:
          - RESOLUTION_QVGA
          - RESOLUTION_HVGA
          - RESOLUTION_480P
          - RESOLUTION_720P
          - RESOLUTION_1080P
        type: string
      AdaptiveMinimumFragmentLength:
        description: Adaptive Minimum Fragment Length. Default is 10 seconds.
        enum:
          - Two
          - Three
          - Four
          - Five
          - Six
          - Seven
          - Eight
          - Nine
          - Ten
          - Fifteen
          - Twenty
          - Thirty
        type: string
      AdaptiveMinimumResolution:
        description: 'Adaptive Minimum resolution. Default is QVGA (320 wide, 212Kbps)'
        enum:
          - RESOLUTION_QVGA
          - RESOLUTION_HVGA
          - RESOLUTION_480P
          - RESOLUTION_720P
          - RESOLUTION_1080P
        type: string
      AdaptiveStartIndex:
        description: 'Adaptive Start Index. Default = 4, the 480P resolution.'
        format: int32
        type: integer
      Expires:
        description: 'UTC Time to video link should expire. ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z'
        format: date-time
        type: string
        x-nullable: false
      Format:
        description: Video format.
        enum:
          - mp4
          - hls
          - hss
          - hds
          - dash
        type: string
      Id:
        description: 'Id of the Video from either MovieVideo, ShowVideo, SeasonVideo, EpisodeVideo object.'
        format: int64
        type: integer
        x-nullable: false
      KbRate:
        description: Video bit-rate required for MP4 content.
        enum:
          - NOT_SET
          - mp4_80
          - mp4_212
          - mp4_450
          - mp4_750
          - mp4_1500
          - mp4_2500
          - mp4_5000
          - mp4_8000
        type: string
      MaxRate:
        description: 'Adaptive Minimum rate. (Depreciated, use adaptive minimum resolution instead)'
        enum:
          - adap_212000
          - adap_350000
          - adap_600000
          - adap_1200000
          - adap_2000000
          - adap_2500000
          - adap_3500000
        type: string
      MinRate:
        description: 'Adaptive Maximum rate. (Depreciated, use adaptive minimum resolution instead)'
        enum:
          - adap_212000
          - adap_350000
          - adap_600000
          - adap_1200000
          - adap_2000000
          - adap_2500000
          - adap_3500000
        type: string
      ReportTag:
        description: Report tag used in video analytics.
        type: string
      end:
        description: Position in seconds to end video playback.
        format: int32
        type: integer
      start:
        description: Position in seconds to start video playback.
        format: int32
        type: integer
    required:
      - Id
      - Format
      - Expires
    title: GetVideo
    type: object
  GetVideoDetailReport:
    description: GetVideoDetailReport
    properties: {}
    title: GetVideoDetailReport
    type: object
  GetVideoTypes:
    description: GetVideoTypes
    properties: {}
    title: GetVideoTypes
    type: object
  GetVideosById:
    description: GetVideosById
    properties:
      Id:
        type: string
    title: GetVideosById
    type: object
  GetWebediaMovieIds:
    description: GetWebediaMovieIds
    properties:
      Skip:
        description: 'Determines where to start page.  Ex: 0 starts at the beginning.'
        format: int32
        type: integer
        x-nullable: false
      Take:
        description: Determines the page size.  (Maximum of 1000)
        format: int32
        type: integer
        x-nullable: false
    required:
      - Skip
      - Take
    title: GetWebediaMovieIds
    type: object
  GetXroadMediaRecommendations:
    description: GetXroadMediaRecommendations
    properties:
      MovieId:
        description: Source MovieId for recommendations.
        format: int64
        type: integer
      ShowId:
        description: Source ShowId for recommendations.
        format: int64
        type: integer
      Type:
        description: Type of recommendation response.
        enum:
          - similar
          - similarShowsOnly
          - similarMoviesOnly
        type: string
    title: GetXroadMediaRecommendations
    type: object
  GoWatchItEpisodeAvailabilitiesAvailability:
    description: GoWatchItEpisodeAvailabilitiesAvailability
    properties:
      buy_line:
        type: string
      categories:
        items:
          type: string
        type: array
      category:
        type: string
      dma:
        type: boolean
        x-nullable: false
      format_line:
        type: string
      formats:
        items:
          $ref: '#/definitions/GoWatchItEpisodeAvailabilitiesAvailabilityFormat'
        type: array
      presale:
        type: boolean
        x-nullable: false
      provider_format_id:
        format: int32
        type: integer
        x-nullable: false
      provider_format_logos:
        $ref: '#/definitions/GoWatchItEpisodeAvailabilitiesAvailabilityProvider_Format_Logos'
      provider_format_name:
        type: string
      provider_name:
        type: string
      rent_line:
        type: string
      suggested_line:
        type: string
      suggested_url:
        type: string
      ultraviolet:
        type: boolean
        x-nullable: false
      watch_now_url:
        type: string
    title: GoWatchItEpisodeAvailabilitiesAvailability
    type: object
  GoWatchItEpisodeAvailabilitiesAvailabilityFormat:
    description: GoWatchItEpisodeAvailabilitiesAvailabilityFormat
    properties:
      annotation:
        $ref: '#/definitions/Object'
      category:
        type: string
      delivery:
        $ref: '#/definitions/Object'
      links:
        items:
          $ref: '#/definitions/GoWatchItEpisodeAvailabilitiesAvailabilityFormatLink'
        type: array
      offer:
        $ref: '#/definitions/Object'
      position:
        format: int32
        type: integer
        x-nullable: false
      price:
        $ref: '#/definitions/Object'
      quality:
        type: string
    title: GoWatchItEpisodeAvailabilitiesAvailabilityFormat
    type: object
  GoWatchItEpisodeAvailabilitiesAvailabilityFormatLink:
    description: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLink
    properties:
      logos:
        $ref: '#/definitions/GoWatchItEpisodeAvailabilitiesAvailabilityFormatLinkLogos'
      type:
        type: string
      url:
        type: string
    title: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLink
    type: object
  GoWatchItEpisodeAvailabilitiesAvailabilityFormatLinkLogos:
    description: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLinkLogos
    properties:
      dark:
        $ref: '#/definitions/Object'
      light:
        $ref: '#/definitions/Object'
    title: GoWatchItEpisodeAvailabilitiesAvailabilityFormatLinkLogos
    type: object
  GoWatchItEpisodeAvailabilitiesAvailabilityProvider_Format_Logos:
    description: GoWatchItEpisodeAvailabilitiesAvailabilityProvider_Format_Logos
    properties:
      dark:
        type: string
      light:
        type: string
    title: GoWatchItEpisodeAvailabilitiesAvailabilityProvider_Format_Logos
    type: object
  GoWatchItEpisodeAvailabilitiesResponse:
    description: GoWatchItEpisodeAvailabilitiesResponse
    properties:
      GoWatchItId:
        format: int32
        type: integer
        x-nullable: false
      availabilities:
        items:
          $ref: '#/definitions/GoWatchItEpisodeAvailabilitiesAvailability'
        type: array
      available:
        type: boolean
        x-nullable: false
    title: GoWatchItEpisodeAvailabilitiesResponse
    type: object
  GoWatchItMovieAvailabilitiesAvailability:
    description: GoWatchItMovieAvailabilitiesAvailability
    properties:
      buy_line:
        type: string
      categories:
        items:
          type: string
        type: array
      category:
        type: string
      dma:
        type: boolean
        x-nullable: false
      format_line:
        type: string
      formats:
        items:
          $ref: '#/definitions/GoWatchItMovieAvailabilitiesAvailabilityFormat'
        type: array
      presale:
        type: boolean
        x-nullable: false
      provider_format_id:
        format: int32
        type: integer
        x-nullable: false
      provider_format_logos:
        $ref: '#/definitions/GoWatchItMovieAvailabilitiesAvailabilityProvider_Format_Logos'
      provider_format_name:
        type: string
      provider_name:
        type: string
      rent_line:
        type: string
      suggested_line:
        type: string
      suggested_url:
        type: string
      ultraviolet:
        type: boolean
        x-nullable: false
      watch_now_url:
        type: string
    title: GoWatchItMovieAvailabilitiesAvailability
    type: object
  GoWatchItMovieAvailabilitiesAvailabilityFormat:
    description: GoWatchItMovieAvailabilitiesAvailabilityFormat
    properties:
      annotation:
        $ref: '#/definitions/Object'
      category:
        type: string
      delivery:
        $ref: '#/definitions/Object'
      links:
        items:
          $ref: '#/definitions/GoWatchItMovieAvailabilitiesAvailabilityFormatLink'
        type: array
      offer:
        type: string
      position:
        format: int32
        type: integer
        x-nullable: false
      price:
        type: string
      quality:
        type: string
    title: GoWatchItMovieAvailabilitiesAvailabilityFormat
    type: object
  GoWatchItMovieAvailabilitiesAvailabilityFormatLink:
    description: GoWatchItMovieAvailabilitiesAvailabilityFormatLink
    properties:
      logos:
        $ref: '#/definitions/GoWatchItMovieAvailabilitiesAvailabilityFormatLinkLogos'
      type:
        type: string
      url:
        type: string
    title: GoWatchItMovieAvailabilitiesAvailabilityFormatLink
    type: object
  GoWatchItMovieAvailabilitiesAvailabilityFormatLinkLogos:
    description: GoWatchItMovieAvailabilitiesAvailabilityFormatLinkLogos
    properties:
      dark:
        $ref: '#/definitions/Object'
      light:
        $ref: '#/definitions/Object'
    title: GoWatchItMovieAvailabilitiesAvailabilityFormatLinkLogos
    type: object
  GoWatchItMovieAvailabilitiesAvailabilityProvider_Format_Logos:
    description: GoWatchItMovieAvailabilitiesAvailabilityProvider_Format_Logos
    properties:
      dark:
        type: string
      light:
        type: string
    title: GoWatchItMovieAvailabilitiesAvailabilityProvider_Format_Logos
    type: object
  GoWatchItMovieAvailabilitiesResponse:
    description: GoWatchItMovieAvailabilitiesResponse
    properties:
      GoWatchItId:
        format: int32
        type: integer
        x-nullable: false
      availabilities:
        items:
          $ref: '#/definitions/GoWatchItMovieAvailabilitiesAvailability'
        type: array
      available:
        type: boolean
        x-nullable: false
    title: GoWatchItMovieAvailabilitiesResponse
    type: object
  GoWatchItSeasonAvailabilitiesAvailability:
    description: GoWatchItSeasonAvailabilitiesAvailability
    properties:
      buy_line:
        type: string
      categories:
        items:
          type: string
        type: array
      category:
        type: string
      dma:
        type: boolean
        x-nullable: false
      format_line:
        type: string
      formats:
        items:
          $ref: '#/definitions/GoWatchItSeasonAvailabilitiesAvailabilityFormat'
        type: array
      presale:
        type: boolean
        x-nullable: false
      provider_format_id:
        format: int32
        type: integer
        x-nullable: false
      provider_format_logos:
        $ref: '#/definitions/GoWatchItSeasonAvailabilitiesAvailabilityProvider_Format_Logos'
      provider_format_name:
        type: string
      provider_name:
        type: string
      rent_line:
        type: string
      suggested_line:
        type: string
      suggested_url:
        type: string
      ultraviolet:
        type: boolean
        x-nullable: false
      watch_now_url:
        type: string
    title: GoWatchItSeasonAvailabilitiesAvailability
    type: object
  GoWatchItSeasonAvailabilitiesAvailabilityFormat:
    description: GoWatchItSeasonAvailabilitiesAvailabilityFormat
    properties:
      annotation:
        $ref: '#/definitions/Object'
      category:
        type: string
      delivery:
        $ref: '#/definitions/Object'
      links:
        items:
          $ref: '#/definitions/GoWatchItSeasonAvailabilitiesAvailabilityFormatLink'
        type: array
      offer:
        type: string
      position:
        format: int32
        type: integer
        x-nullable: false
      price:
        type: string
      quality:
        type: string
    title: GoWatchItSeasonAvailabilitiesAvailabilityFormat
    type: object
  GoWatchItSeasonAvailabilitiesAvailabilityFormatLink:
    description: GoWatchItSeasonAvailabilitiesAvailabilityFormatLink
    properties:
      logos:
        $ref: '#/definitions/GoWatchItSeasonAvailabilitiesAvailabilityFormatLinkLogos'
      type:
        type: string
      url:
        type: string
    title: GoWatchItSeasonAvailabilitiesAvailabilityFormatLink
    type: object
  GoWatchItSeasonAvailabilitiesAvailabilityFormatLinkLogos:
    description: GoWatchItSeasonAvailabilitiesAvailabilityFormatLinkLogos
    properties:
      dark:
        $ref: '#/definitions/Object'
      light:
        $ref: '#/definitions/Object'
    title: GoWatchItSeasonAvailabilitiesAvailabilityFormatLinkLogos
    type: object
  GoWatchItSeasonAvailabilitiesAvailabilityProvider_Format_Logos:
    description: GoWatchItSeasonAvailabilitiesAvailabilityProvider_Format_Logos
    properties:
      dark:
        type: string
      light:
        type: string
    title: GoWatchItSeasonAvailabilitiesAvailabilityProvider_Format_Logos
    type: object
  GoWatchItSeasonAvailabilitiesResponse:
    description: GoWatchItSeasonAvailabilitiesResponse
    properties:
      GoWatchItId:
        format: int32
        type: integer
        x-nullable: false
      availabilities:
        items:
          $ref: '#/definitions/GoWatchItSeasonAvailabilitiesAvailability'
        type: array
      available:
        type: boolean
        x-nullable: false
    title: GoWatchItSeasonAvailabilitiesResponse
    type: object
  GoWatchItShowAvailabilitiesAvailability:
    description: GoWatchItShowAvailabilitiesAvailability
    properties:
      buy_line:
        type: string
      categories:
        items:
          type: string
        type: array
      category:
        type: string
      dma:
        type: boolean
        x-nullable: false
      format_line:
        type: string
      formats:
        items:
          $ref: '#/definitions/GoWatchItShowAvailabilitiesAvailabilityFormat'
        type: array
      presale:
        type: boolean
        x-nullable: false
      provider_format_id:
        format: int32
        type: integer
        x-nullable: false
      provider_format_logos:
        $ref: '#/definitions/GoWatchItShowAvailabilitiesAvailabilityProvider_Format_Logos'
      provider_format_name:
        type: string
      provider_name:
        type: string
      rent_line:
        type: string
      suggested_line:
        type: string
      suggested_url:
        type: string
      ultraviolet:
        type: boolean
        x-nullable: false
      watch_now_url:
        type: string
    title: GoWatchItShowAvailabilitiesAvailability
    type: object
  GoWatchItShowAvailabilitiesAvailabilityFormat:
    description: GoWatchItShowAvailabilitiesAvailabilityFormat
    properties:
      annotation:
        $ref: '#/definitions/Object'
      category:
        type: string
      delivery:
        $ref: '#/definitions/Object'
      links:
        items:
          $ref: '#/definitions/GoWatchItShowAvailabilitiesAvailabilityFormatLink'
        type: array
      offer:
        $ref: '#/definitions/Object'
      position:
        format: int32
        type: integer
        x-nullable: false
      price:
        $ref: '#/definitions/Object'
      quality:
        type: string
    title: GoWatchItShowAvailabilitiesAvailabilityFormat
    type: object
  GoWatchItShowAvailabilitiesAvailabilityFormatLink:
    description: GoWatchItShowAvailabilitiesAvailabilityFormatLink
    properties:
      logos:
        $ref: '#/definitions/GoWatchItShowAvailabilitiesAvailabilityFormatLinkLogos'
      type:
        type: string
      url:
        type: string
    title: GoWatchItShowAvailabilitiesAvailabilityFormatLink
    type: object
  GoWatchItShowAvailabilitiesAvailabilityFormatLinkLogos:
    description: GoWatchItShowAvailabilitiesAvailabilityFormatLinkLogos
    properties:
      dark:
        $ref: '#/definitions/Object'
      light:
        $ref: '#/definitions/Object'
    title: GoWatchItShowAvailabilitiesAvailabilityFormatLinkLogos
    type: object
  GoWatchItShowAvailabilitiesAvailabilityProvider_Format_Logos:
    description: GoWatchItShowAvailabilitiesAvailabilityProvider_Format_Logos
    properties:
      dark:
        type: string
      light:
        type: string
    title: GoWatchItShowAvailabilitiesAvailabilityProvider_Format_Logos
    type: object
  GoWatchItShowAvailabilitiesResponse:
    description: GoWatchItShowAvailabilitiesResponse
    properties:
      GoWatchItId:
        format: int32
        type: integer
        x-nullable: false
      availabilities:
        items:
          $ref: '#/definitions/GoWatchItShowAvailabilitiesAvailability'
        type: array
      available:
        type: boolean
        x-nullable: false
    title: GoWatchItShowAvailabilitiesResponse
    type: object
  ImageBatchResponse:
    description: ImageBatchResponse
    properties:
      Expires:
        description: 'Image URLs are hashed and expire. ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z '
        format: date-time
        type: string
        x-nullable: false
      FilePath:
        description: Requested FilePath of requested image.
        type: string
      Url:
        description: URL to image request.
        type: string
    title: ImageBatchResponse
    type: object
  ImageRedirectResponse:
    description: ImageRedirectResponse
    properties:
      Expires:
        description: 'Image URLs are hashed and expire. ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z '
        format: date-time
        type: string
        x-nullable: false
      Url:
        description: URL to image request.
        type: string
    title: ImageRedirectResponse
    type: object
  ImageTypeResponse:
    description: ImageTypeResponse
    properties:
      Id:
        description: Unique ID for the ImageType.
        format: int32
        type: integer
        x-nullable: false
      Type:
        description: Name of the Type of the ImageType.
        type: string
    title: ImageTypeResponse
    type: object
  LanguageResponse:
    description: LanguageResponse
    properties:
      Id:
        description: Unique ID of a Language.
        format: int32
        type: integer
        x-nullable: false
      IsoCode:
        description: ISO code for this Language.
        type: string
      Name:
        description: Name of the Language.
        type: string
    title: LanguageResponse
    type: object
  List_CelebrityRankedResponse_:
    items:
      $ref: '#/definitions/CelebrityRankedResponse'
    title: List<CelebrityRankedResponse>
    type: array
  List_ChartItem_:
    items:
      $ref: '#/definitions/ChartItem'
    title: List<ChartItem>
    type: array
  List_ChartPersonItem_:
    items:
      $ref: '#/definitions/ChartPersonItem'
    title: List<ChartPersonItem>
    type: array
  List_CompanyResponse_:
    items:
      $ref: '#/definitions/CompanyResponse'
    title: List<CompanyResponse>
    type: array
  List_CountryResponse_:
    items:
      $ref: '#/definitions/CountryResponse'
    title: List<CountryResponse>
    type: array
  List_DbShowCertification_:
    items:
      $ref: '#/definitions/DbShowCertification'
    title: List<DbShowCertification>
    type: array
  List_EpisodeChangeHistoryResponse_:
    items:
      $ref: '#/definitions/EpisodeChangeHistoryResponse'
    title: List<EpisodeChangeHistoryResponse>
    type: array
  List_EpisodeChangeHistoryWithEntityResponse_:
    items:
      $ref: '#/definitions/EpisodeChangeHistoryWithEntityResponse'
    title: List<EpisodeChangeHistoryWithEntityResponse>
    type: array
  List_GameChangeHistoryResponse_:
    items:
      $ref: '#/definitions/GameChangeHistoryResponse'
    title: List<GameChangeHistoryResponse>
    type: array
  List_ImageBatchResponse_:
    items:
      $ref: '#/definitions/ImageBatchResponse'
    title: List<ImageBatchResponse>
    type: array
  List_ImageTypeResponse_:
    items:
      $ref: '#/definitions/ImageTypeResponse'
    title: List<ImageTypeResponse>
    type: array
  List_LanguageResponse_:
    items:
      $ref: '#/definitions/LanguageResponse'
    title: List<LanguageResponse>
    type: array
  List_MovieAlternateIdTypeResponse_:
    items:
      $ref: '#/definitions/MovieAlternateIdTypeResponse'
    title: List<MovieAlternateIdTypeResponse>
    type: array
  List_MovieCertificationResponse_:
    items:
      $ref: '#/definitions/MovieCertificationResponse'
    title: List<MovieCertificationResponse>
    type: array
  List_MovieChangeHistoryResponse_:
    items:
      $ref: '#/definitions/MovieChangeHistoryResponse'
    title: List<MovieChangeHistoryResponse>
    type: array
  List_MovieChangeHistoryWithEntityResponse_:
    items:
      $ref: '#/definitions/MovieChangeHistoryWithEntityResponse'
    title: List<MovieChangeHistoryWithEntityResponse>
    type: array
  List_MovieExternalIdMap_:
    items:
      $ref: '#/definitions/MovieExternalIdMap'
    title: List<MovieExternalIdMap>
    type: array
  List_MovieGenreResponse_:
    items:
      $ref: '#/definitions/MovieGenreResponse'
    title: List<MovieGenreResponse>
    type: array
  List_MovieReleaseTypeResponse_:
    items:
      $ref: '#/definitions/MovieReleaseTypeResponse'
    title: List<MovieReleaseTypeResponse>
    type: array
  List_MovieResponse_:
    items:
      $ref: '#/definitions/MovieResponse'
    title: List<MovieResponse>
    type: array
  List_OriginatingNetworkResponse_:
    items:
      $ref: '#/definitions/OriginatingNetworkResponse'
    title: List<OriginatingNetworkResponse>
    type: array
  List_PersonChangeHistoryResponse_:
    items:
      $ref: '#/definitions/PersonChangeHistoryResponse'
    title: List<PersonChangeHistoryResponse>
    type: array
  List_PersonChangeHistoryWithEntityResponse_:
    items:
      $ref: '#/definitions/PersonChangeHistoryWithEntityResponse'
    title: List<PersonChangeHistoryWithEntityResponse>
    type: array
  List_PersonRankedResponse_:
    items:
      $ref: '#/definitions/PersonRankedResponse'
    title: List<PersonRankedResponse>
    type: array
  List_ProgramVideo_:
    items:
      $ref: '#/definitions/ProgramVideo'
    title: List<ProgramVideo>
    type: array
  List_SearchEntertainmentAutoCompleteResponse_:
    items:
      $ref: '#/definitions/SearchEntertainmentAutoCompleteResponse'
    title: List<SearchEntertainmentAutoCompleteResponse>
    type: array
  List_SeasonChangeHistoryResponse_:
    items:
      $ref: '#/definitions/SeasonChangeHistoryResponse'
    title: List<SeasonChangeHistoryResponse>
    type: array
  List_SeasonChangeHistoryWithEntityResponse_:
    items:
      $ref: '#/definitions/SeasonChangeHistoryWithEntityResponse'
    title: List<SeasonChangeHistoryWithEntityResponse>
    type: array
  List_ShowAlternateIdTypeResponse_:
    items:
      $ref: '#/definitions/ShowAlternateIdTypeResponse'
    title: List<ShowAlternateIdTypeResponse>
    type: array
  List_ShowChangeHistoryResponse_:
    items:
      $ref: '#/definitions/ShowChangeHistoryResponse'
    title: List<ShowChangeHistoryResponse>
    type: array
  List_ShowChangeHistoryWithEntityResponse_:
    items:
      $ref: '#/definitions/ShowChangeHistoryWithEntityResponse'
    title: List<ShowChangeHistoryWithEntityResponse>
    type: array
  List_ShowExternalIdMap_:
    items:
      $ref: '#/definitions/ShowExternalIdMap'
    title: List<ShowExternalIdMap>
    type: array
  List_ShowGenreResponse_:
    items:
      $ref: '#/definitions/ShowGenreResponse'
    title: List<ShowGenreResponse>
    type: array
  List_ShowReleaseTypeResponse_:
    items:
      $ref: '#/definitions/ShowReleaseTypeResponse'
    title: List<ShowReleaseTypeResponse>
    type: array
  List_TagResponse_:
    items:
      $ref: '#/definitions/TagResponse'
    title: List<TagResponse>
    type: array
  List_TrendSourceResponse_:
    items:
      $ref: '#/definitions/TrendSourceResponse'
    title: List<TrendSourceResponse>
    type: array
  List_TvMediaCountryResponse_:
    items:
      $ref: '#/definitions/TvMediaCountryResponse'
    title: List<TvMediaCountryResponse>
    type: array
  List_TvMediaGenreResponse_:
    items:
      $ref: '#/definitions/TvMediaGenreResponse'
    title: List<TvMediaGenreResponse>
    type: array
  List_TvMediaGridResponse_:
    items:
      $ref: '#/definitions/TvMediaGridResponse'
    title: List<TvMediaGridResponse>
    type: array
  List_TvMediaLeagueResponse_:
    items:
      $ref: '#/definitions/TvMediaLeagueResponse'
    title: List<TvMediaLeagueResponse>
    type: array
  List_TvMediaLineupResponse_:
    items:
      $ref: '#/definitions/TvMediaLineupResponse'
    title: List<TvMediaLineupResponse>
    type: array
  List_TvMediaListingResponse_:
    items:
      $ref: '#/definitions/TvMediaListingResponse'
    title: List<TvMediaListingResponse>
    type: array
  List_TvMediaRegionResponse_:
    items:
      $ref: '#/definitions/TvMediaRegionResponse'
    title: List<TvMediaRegionResponse>
    type: array
  List_TvMediaServiceAreaResponse_:
    items:
      $ref: '#/definitions/TvMediaServiceAreaResponse'
    title: List<TvMediaServiceAreaResponse>
    type: array
  List_TvMediaShortListingResponse_:
    items:
      $ref: '#/definitions/TvMediaShortListingResponse'
    title: List<TvMediaShortListingResponse>
    type: array
  List_TvMediaTeamResponse_:
    items:
      $ref: '#/definitions/TvMediaTeamResponse'
    title: List<TvMediaTeamResponse>
    type: array
  List_VideoTypeResponse_:
    items:
      $ref: '#/definitions/VideoTypeResponse'
    title: List<VideoTypeResponse>
    type: array
  MatchToEntertainmentMovie:
    description: MatchToEntertainmentMovie
    properties:
      AlternateTitles:
        description: Alternate Titles of movie to be matched.
        items:
          type: string
        type: array
      Cast:
        description: Cast members of movie to be matched.
        items:
          type: string
        type: array
      Description:
        description: Description of movie to be matched.
        type: string
      Directors:
        description: Directors of movie to be matched.
        items:
          type: string
        type: array
      Poster:
        description: Poster of movie to be matched.
        type: string
      ReleaseDate:
        description: Release Date of movie to be matched.
        format: date-time
        type: string
      StringDistance:
        description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
        format: int32
        type: integer
      Title:
        description: Title of movie to be matched.
        type: string
      Year:
        description: Release Year of movie to be matched.
        format: int32
        type: integer
    required:
      - Title
    title: MatchToEntertainmentMovie
    type: object
  MatchToEntertainmentMovieResponse:
    description: MatchToEntertainmentMovieResponse
    properties:
      Description:
        description: Description of match operation result.
        type: string
      MovieMatches:
        description: List of matched movies.
        items:
          $ref: '#/definitions/DiscoverMovie'
        type: array
      Score:
        description: Score of the match to Entertainment.
        format: int32
        type: integer
        x-nullable: false
      Success:
        description: Status of match operation.
        type: boolean
        x-nullable: false
    title: MatchToEntertainmentMovieResponse
    type: object
  MatchToEntertainmentProgram:
    description: MatchToEntertainmentProgram
    properties:
      AlternateTitles:
        description: Alternate Titles of Program to be matched.
        items:
          type: string
        type: array
      Cast:
        description: Cast members of Program to be matched.
        items:
          type: string
        type: array
      Description:
        description: Description of Program to be matched.
        type: string
      Directors:
        description: Directors of Program to be matched.
        items:
          type: string
        type: array
      EntertainmentId:
        description: 'Id of Entertainment program to be matched against, if this is set no search is run and data is compared to this program only.'
        format: int64
        type: integer
      LimitedResults:
        type: boolean
        x-nullable: false
      OriginatingNetwork:
        description: Originating network of SHOW Program to be matched.
        type: string
      Poster:
        description: Poster of Program to be matched.
        type: string
      Producers:
        description: Producers of Program to be matched.
        items:
          type: string
        type: array
      ProgramType:
        description: Type of Program to be matched.
        type: string
      ReleaseDate:
        description: Release Date of Program to be matched.
        format: date-time
        type: string
      StringDistance:
        description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
        format: int32
        type: integer
        x-nullable: false
      Title:
        description: Title of Program to be matched.
        type: string
      Year:
        description: Release Year of Program to be matched.
        format: int32
        type: integer
    required:
      - ProgramType
    title: MatchToEntertainmentProgram
    type: object
  MatchToEntertainmentProgramResponse:
    description: MatchToEntertainmentProgramResponse
    properties:
      Description:
        description: Description of match operation result.
        type: string
      EntertainmentId:
        description: Entertainment program ID on successful match.
        format: int64
        type: integer
      ProgramMatches:
        description: List of matched Programs.
        items:
          $ref: '#/definitions/DiscoverProgram'
        type: array
      Score:
        description: Score of the match to Entertainment.
        format: int32
        type: integer
        x-nullable: false
      Success:
        description: Status of match operation.
        type: boolean
        x-nullable: false
      Took:
        description: Elastic search time elapsed.
        format: int64
        type: integer
        x-nullable: false
    title: MatchToEntertainmentProgramResponse
    type: object
  MatchToEntertainmentShow:
    description: MatchToEntertainmentShow
    properties:
      AlternateTitles:
        description: Alternate Titles of Show to be matched.
        items:
          type: string
        type: array
      Cast:
        description: Cast members of Show to be matched.
        items:
          type: string
        type: array
      Description:
        description: Description of Show to be matched.
        type: string
      Directors:
        description: Directors of Show to be matched.
        items:
          type: string
        type: array
      Poster:
        description: Poster of movie to be matched.
        type: string
      Producers:
        description: Producers of Show to be matched.
        items:
          type: string
        type: array
      ReleaseDate:
        description: Release Date of movie to be matched.
        format: date-time
        type: string
      StringDistance:
        description: 'For fuzzy title match, default is 4, set to 0 for no fuzzy match.'
        format: int32
        type: integer
      Title:
        description: Title of Show to be matched.
        type: string
      Year:
        description: Release Year of Show to be matched.
        format: int32
        type: integer
    required:
      - Title
    title: MatchToEntertainmentShow
    type: object
  MatchToEntertainmentShowResponse:
    description: MatchToEntertainmentShowResponse
    properties:
      Description:
        description: Description of match operation result.
        type: string
      Score:
        description: Score of the match to Entertainment.
        format: int32
        type: integer
        x-nullable: false
      ShowMatches:
        description: List of matched Shows.
        items:
          $ref: '#/definitions/DiscoverShow'
        type: array
      Success:
        description: Status of match operation.
        type: boolean
        x-nullable: false
    title: MatchToEntertainmentShowResponse
    type: object
  MetacriticMovieResponse:
    description: MetacriticMovieResponse
    properties:
      response:
        $ref: '#/definitions/MetacriticMovieResponseObj'
    title: MetacriticMovieResponse
    type: object
  MetacriticMovieResponseObj:
    description: MetacriticMovieResponseObj
    properties:
      Product:
        $ref: '#/definitions/MetacriticMovieResponseProduct'
    title: MetacriticMovieResponseObj
    type: object
  MetacriticMovieResponseProduct:
    description: MetacriticMovieResponseProduct
    properties:
      Metascore:
        $ref: '#/definitions/MetacriticMovieResponseProductMetascore'
      ReleaseDate:
        format: date-time
        type: string
      Reviews:
        $ref: '#/definitions/MetacriticMovieResponseProductReviews'
      Title:
        type: string
      Url:
        type: string
      Userscore:
        $ref: '#/definitions/MetacriticMovieResponseProductUserscore'
      Year:
        format: int32
        type: integer
    title: MetacriticMovieResponseProduct
    type: object
  MetacriticMovieResponseProductMetascore:
    description: MetacriticMovieResponseProductMetascore
    properties:
      NegativeCount:
        format: int32
        type: integer
      NeutralCount:
        format: int32
        type: integer
      PositiveCount:
        format: int32
        type: integer
      ReviewCount:
        format: int32
        type: integer
      Score:
        format: int32
        type: integer
    title: MetacriticMovieResponseProductMetascore
    type: object
  MetacriticMovieResponseProductReviews:
    description: MetacriticMovieResponseProductReviews
    properties:
      Review:
        items:
          $ref: '#/definitions/MetacriticMovieResponseProductReviewsReview'
        type: array
    title: MetacriticMovieResponseProductReviews
    type: object
  MetacriticMovieResponseProductReviewsReview:
    description: MetacriticMovieResponseProductReviewsReview
    properties:
      Critic:
        $ref: '#/definitions/MetacriticMovieResponseProductReviewsReviewCritic'
      Date:
        format: date-time
        type: string
      Publication:
        $ref: '#/definitions/MetacriticMovieResponseProductReviewsReviewPublication'
      Quote:
        type: string
      Score:
        format: int32
        type: integer
      Url:
        type: string
    title: MetacriticMovieResponseProductReviewsReview
    type: object
  MetacriticMovieResponseProductReviewsReviewCritic:
    description: MetacriticMovieResponseProductReviewsReviewCritic
    properties:
      Name:
        type: string
    title: MetacriticMovieResponseProductReviewsReviewCritic
    type: object
  MetacriticMovieResponseProductReviewsReviewPublication:
    description: MetacriticMovieResponseProductReviewsReviewPublication
    properties:
      Name:
        type: string
    title: MetacriticMovieResponseProductReviewsReviewPublication
    type: object
  MetacriticMovieResponseProductUserscore:
    description: MetacriticMovieResponseProductUserscore
    properties:
      NegativeCount:
        format: int32
        type: integer
      NeutralCount:
        format: int32
        type: integer
      PositiveCount:
        format: int32
        type: integer
      RatingCount:
        format: int32
        type: integer
      Score:
        format: double
        type: number
    title: MetacriticMovieResponseProductUserscore
    type: object
  MetacriticTvResponse:
    description: MetacriticTvResponse
    properties:
      response:
        $ref: '#/definitions/MetacriticTvResponseObj'
    title: MetacriticTvResponse
    type: object
  MetacriticTvResponseObj:
    description: MetacriticTvResponseObj
    properties:
      Product:
        $ref: '#/definitions/MetacriticTvResponseProduct'
    title: MetacriticTvResponseObj
    type: object
  MetacriticTvResponseProduct:
    description: MetacriticTvResponseProduct
    properties:
      Metascore:
        $ref: '#/definitions/MetacriticTvResponseProductMetascore'
      Reviews:
        $ref: '#/definitions/MetacriticTvResponseProductReviews'
      StartDate:
        format: date-time
        type: string
      Title:
        type: string
      Url:
        type: string
      Userscore:
        $ref: '#/definitions/MetacriticTvResponseProductUserscore'
    title: MetacriticTvResponseProduct
    type: object
  MetacriticTvResponseProductMetascore:
    description: MetacriticTvResponseProductMetascore
    properties:
      NegativeCount:
        format: int32
        type: integer
      NeutralCount:
        format: int32
        type: integer
      PositiveCount:
        format: int32
        type: integer
      ReviewCount:
        format: int32
        type: integer
      Score:
        format: int32
        type: integer
    title: MetacriticTvResponseProductMetascore
    type: object
  MetacriticTvResponseProductReviews:
    description: MetacriticTvResponseProductReviews
    properties:
      Review:
        items:
          $ref: '#/definitions/MetacriticTvResponseProductReviewsReview'
        type: array
    title: MetacriticTvResponseProductReviews
    type: object
  MetacriticTvResponseProductReviewsReview:
    description: MetacriticTvResponseProductReviewsReview
    properties:
      Critic:
        $ref: '#/definitions/MetacriticTvResponseProductReviewsReviewCritic'
      Date:
        format: date-time
        type: string
      Publication:
        $ref: '#/definitions/MetacriticTvResponseProductReviewsReviewPublication'
      Quote:
        type: string
      Score:
        format: int32
        type: integer
      Url:
        type: string
    title: MetacriticTvResponseProductReviewsReview
    type: object
  MetacriticTvResponseProductReviewsReviewCritic:
    description: MetacriticTvResponseProductReviewsReviewCritic
    properties:
      Name:
        type: string
    title: MetacriticTvResponseProductReviewsReviewCritic
    type: object
  MetacriticTvResponseProductReviewsReviewPublication:
    description: MetacriticTvResponseProductReviewsReviewPublication
    properties:
      Name:
        type: string
    title: MetacriticTvResponseProductReviewsReviewPublication
    type: object
  MetacriticTvResponseProductUserscore:
    description: MetacriticTvResponseProductUserscore
    properties:
      NegativeCount:
        format: int32
        type: integer
      NeutralCount:
        format: int32
        type: integer
      PositiveCount:
        format: int32
        type: integer
      RatingCount:
        format: int32
        type: integer
      Score:
        format: double
        type: number
    title: MetacriticTvResponseProductUserscore
    type: object
  Movie:
    description: Movie
    properties:
      AlternateTitles:
        description: List of alternate titles for this Movie.
        items:
          $ref: '#/definitions/MovieAlternateTitle'
        type: array
      Availabilities:
        description: List of movie offers.
        items:
          $ref: '#/definitions/MovieAvailabilityResponse'
        type: array
      Budget:
        description: Movie budget
        format: int64
        type: integer
      Companies:
        description: 'List of companies (Production, Distribution, etc.) associated with Movie.'
        items:
          $ref: '#/definitions/Company'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Movie.'
        items:
          $ref: '#/definitions/MovieContributor'
        type: array
      Created:
        description: DateTime Movie record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Movie.
        items:
          $ref: '#/definitions/MovieDescription'
        type: array
      ExternalIds:
        description: List of external Ids associated with Movie.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Genres:
        description: List of genres associated with Movie.
        items:
          $ref: '#/definitions/MovieGenre'
        type: array
      Id:
        description: Unique ID of the Movie.
        format: int64
        type: integer
        x-nullable: false
      Idx:
        description: Index to differentiate movies with identical titles and year.
        type: string
      Images:
        description: List of images associated with Movie.
        items:
          $ref: '#/definitions/MovieImage'
        type: array
      Modified:
        description: DateTime Movie record last modified.
        format: date-time
        type: string
        x-nullable: false
      OfficialSiteUrl:
        description: Movie website home page.
        type: string
      OriginalLanguage:
        description: ID of Movie original language.
        type: string
      OriginalReleaseDate:
        description: First generally available release regardless of country. Excludes festivals and premieres.
        format: date-time
        type: string
      OriginalTitle:
        type: string
      RedirectTo:
        description: Redirect to.
        type: string
      Releases:
        description: List of releases associated with Movie.
        items:
          $ref: '#/definitions/MovieRelease'
        type: array
      Revenue:
        description: Total revenue generated by Movie.
        format: int64
        type: integer
      Runtime:
        description: Movie runtime in minutes.
        format: int32
        type: integer
      Status:
        description: Status of movie.
        type: string
      Tags:
        description: List of tags associated with Movie.
        items:
          $ref: '#/definitions/MovieTag'
        type: array
      Themes:
        description: List of themes associated with Movie.
        items:
          $ref: '#/definitions/MovieTheme'
        type: array
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      Type:
        description: 'Type of movie. Ex: Tv Movie, Short, etc.'
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Movie.
        items:
          $ref: '#/definitions/MovieVideo'
        type: array
      Year:
        format: int32
        type: integer
        x-nullable: false
    required:
      - OriginalTitle
      - Year
    title: Movie
    type: object
  MovieAlternateIdTypeResponse:
    description: MovieAlternateIdTypeResponse
    properties:
      Id:
        description: ID of AlternateIdType.
        format: int32
        type: integer
        x-nullable: false
      Type:
        description: Provider type of AlternateId.
        type: string
    title: MovieAlternateIdTypeResponse
    type: object
  MovieAlternateTitle:
    description: MovieAlternateTitle
    properties:
      Country:
        description: Country associated with this alternate title.
        type: string
      Id:
        description: Unique ID of this MovieAlternateTitle
        format: int64
        type: integer
      Title:
        description: The alternate title.
        type: string
    title: MovieAlternateTitle
    type: object
  MovieAvailabilityResponse:
    description: MovieAvailabilityResponse
    properties:
      Country:
        type: string
      Currency:
        type: string
      DeliveryMethod:
        type: string
      ExpirationDate:
        format: date-time
        type: string
      Links:
        items:
          $ref: '#/definitions/OfferLink'
        type: array
      OfferType:
        type: string
      PreSale:
        type: boolean
        x-nullable: false
      Price:
        format: double
        type: number
        x-nullable: false
      Provider:
        type: string
      Quality:
        type: string
      StartDate:
        format: date-time
        type: string
      Title:
        type: string
    title: MovieAvailabilityResponse
    type: object
  MovieCertificationResponse:
    description: MovieCertificationResponse
    properties:
      Certification:
        description: Movie certification or Rating.
        type: string
      Country:
        $ref: '#/definitions/Country'
      Definition:
        description: Definition of MovieCertification.
        type: string
      Id:
        description: Unique ID of MovieCertification.
        format: int32
        type: integer
        x-nullable: false
      Order:
        description: Rank of MovieCertification from youngest to oldest.
        format: int32
        type: integer
        x-nullable: false
    title: MovieCertificationResponse
    type: object
  MovieChangeHistoryResponse:
    description: MovieChangeHistoryResponse
    properties:
      MovieId:
        description: Unique ID of a Movie.
        format: int64
        type: integer
        x-nullable: false
    title: MovieChangeHistoryResponse
    type: object
  MovieChangeHistoryWithEntityResponse:
    description: MovieChangeHistoryWithEntityResponse
    properties:
      Entity:
        description: Object belonging to Movie that has changed.
        type: string
      MovieId:
        description: Unique ID of a Movie.
        format: int64
        type: integer
        x-nullable: false
    title: MovieChangeHistoryWithEntityResponse
    type: object
  MovieContributor:
    description: MovieContributor
    properties:
      Character:
        description: Role played by MovieContributor.
        type: string
      Id:
        description: Unique ID of the MovieContributor object.
        format: int64
        type: integer
      Job:
        description: Job of Person associated with MovieContributor.
        type: string
      Order:
        description: Rank of MovieContributor in list for Movie (cast).
        format: int32
        type: integer
        x-nullable: false
      PersonId:
        description: ID of Person associated with MovieContributor.
        format: int64
        type: integer
        x-nullable: false
      PersonName:
        description: Person's Name associated with MovieContributor.
        type: string
    title: MovieContributor
    type: object
  MovieDescription:
    description: MovieDescription
    properties:
      Attribution:
        description: Source of MovieDescription.
        type: string
      Description:
        description: Movie Description.
        type: string
      Id:
        description: Unique ID of this MovieDescription
        format: int64
        type: integer
      Language:
        description: Language object for language of MovieDescription.
        type: string
    title: MovieDescription
    type: object
  MovieExternalIdMap:
    description: MovieExternalIdMap
    properties:
      ExternalId:
        type: string
      MovieId:
        format: int64
        type: integer
        x-nullable: false
    title: MovieExternalIdMap
    type: object
  MovieGenre:
    description: MovieGenre
    properties:
      Id:
        description: Id of the Genre object.
        format: int32
        type: integer
      Name:
        description: Name of the Genre.
        type: string
    title: MovieGenre
    type: object
  MovieGenreResponse:
    description: MovieGenreResponse
    properties:
      Id:
        description: Id of the Genre object.
        format: int32
        type: integer
      Name:
        description: Name of the Genre.
        type: string
    title: MovieGenreResponse
    type: object
  MovieImage:
    description: MovieImage
    properties:
      FilePath:
        description: Filepath (location) of MovieImage.
        type: string
      Height:
        description: Height in pixels of MovieImage.
        format: int32
        type: integer
        x-nullable: false
      ImageType:
        description: ImageType of MovieImage.
        type: string
      Language:
        description: Language associated with MovieImage.
        type: string
      Modified:
        description: Time when image was last modified.
        format: date-time
        type: string
      Official:
        description: Determines if image is official.
        type: boolean
      Sexuality:
        description: 1-5 (Veru-Unlikely to Very-Likely) probability of sexual theme in image.
        format: int32
        type: integer
      Tags:
        description: List of Tags associated with this MovieImage
        items:
          $ref: '#/definitions/MovieTag'
        type: array
      Violence:
        description: 1-5 (Veru-Unlikely to Very-Likely) probability of violent theme in image.
        format: int32
        type: integer
      Width:
        description: Width in pixels of MovieImage.
        format: int32
        type: integer
        x-nullable: false
    title: MovieImage
    type: object
  MovieRelease:
    description: MovieRelease
    properties:
      Certification:
        description: Certification for MovieRelease.
        type: string
      Country:
        description: The Country Movie was released.
        type: string
      Date:
        description: Date of this MovieRelease.
        format: date-time
        type: string
      Type:
        description: The type of this MovieRelease.
        type: string
    title: MovieRelease
    type: object
  MovieReleaseTypeResponse:
    description: MovieReleaseTypeResponse
    properties:
      Id:
        description: Unique ID of MovieReleaseType.
        format: int32
        type: integer
        x-nullable: false
      Type:
        description: Name of MovieReleaseType.
        type: string
    title: MovieReleaseTypeResponse
    type: object
  MovieResponse:
    description: MovieResponse
    properties:
      AlternateTitles:
        description: List of alternate titles for this Movie.
        items:
          $ref: '#/definitions/MovieAlternateTitle'
        type: array
      Availabilities:
        description: List of movie offers.
        items:
          $ref: '#/definitions/MovieAvailabilityResponse'
        type: array
      Budget:
        description: Movie budget
        format: int64
        type: integer
      Companies:
        description: 'List of companies (Production, Distribution, etc.) associated with Movie.'
        items:
          $ref: '#/definitions/Company'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Movie.'
        items:
          $ref: '#/definitions/MovieContributor'
        type: array
      Created:
        description: DateTime Movie record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Movie.
        items:
          $ref: '#/definitions/MovieDescription'
        type: array
      ExternalIds:
        description: List of external Ids associated with Movie.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Genres:
        description: List of genres associated with Movie.
        items:
          $ref: '#/definitions/MovieGenre'
        type: array
      Id:
        description: Unique ID of the Movie.
        format: int64
        type: integer
        x-nullable: false
      Idx:
        description: Index to differentiate movies with identical titles and year.
        type: string
      Images:
        description: List of images associated with Movie.
        items:
          $ref: '#/definitions/MovieImage'
        type: array
      Modified:
        description: DateTime Movie record last modified.
        format: date-time
        type: string
        x-nullable: false
      OfficialSiteUrl:
        description: Movie website home page.
        type: string
      OriginalLanguage:
        description: ID of Movie original language.
        type: string
      OriginalReleaseDate:
        description: First generally available release regardless of country. Excludes festivals and premieres.
        format: date-time
        type: string
      OriginalTitle:
        type: string
      RedirectTo:
        description: Redirect to.
        type: string
      Releases:
        description: List of releases associated with Movie.
        items:
          $ref: '#/definitions/MovieRelease'
        type: array
      Revenue:
        description: Total revenue generated by Movie.
        format: int64
        type: integer
      Runtime:
        description: Movie runtime in minutes.
        format: int32
        type: integer
      Status:
        description: Status of movie.
        type: string
      Tags:
        description: List of tags associated with Movie.
        items:
          $ref: '#/definitions/MovieTag'
        type: array
      Themes:
        description: List of themes associated with Movie.
        items:
          $ref: '#/definitions/MovieTheme'
        type: array
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      Type:
        description: 'Type of movie. Ex: Tv Movie, Short, etc.'
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Movie.
        items:
          $ref: '#/definitions/MovieVideo'
        type: array
      Year:
        format: int32
        type: integer
        x-nullable: false
    required:
      - OriginalTitle
      - Year
    title: MovieResponse
    type: object
  MovieResult:
    description: MovieResult
    properties:
      Document:
        $ref: '#/definitions/DiscoverMovie'
      Score:
        description: Score of this match in Movie search.
        format: double
        type: number
        x-nullable: false
    title: MovieResult
    type: object
  MovieTag:
    description: MovieTag
    properties:
      Name:
        description: Name of the Tag.
        type: string
      TagId:
        description: ID of the Tag.
        format: int64
        type: integer
        x-nullable: false
    title: MovieTag
    type: object
  MovieTheme:
    description: MovieTheme
    properties:
      Name:
        description: Name of the Theme.
        type: string
      ThemeId:
        description: ID of the Theme.
        format: int32
        type: integer
        x-nullable: false
    title: MovieTheme
    type: object
  MovieVideo:
    description: MovieVideo
    properties:
      AllowAdvertising:
        description: Flag denoting if pre-roll video ads are allowed in front of content.
        type: boolean
        x-nullable: false
      Certification:
        description: Certification for MovieVideo.
        type: boolean
      Clean:
        description: 'True if Certification, Theatrical, and HomeVideo are False.'
        type: boolean
      Company:
        description: Company associated with MovieVideo.
        type: string
      Duration:
        description: Runtime of MovieVideo.
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        description: Datetime MovieVideo was encoded.
        format: date-time
        type: string
        x-nullable: false
      Encodes:
        description: List of Encodes (bitrate and type) for MovieVideo.
        items:
          $ref: '#/definitions/MovieVideoEncode'
        type: array
      ExpirationDate:
        description: Date MovieVideo expires.
        format: date-time
        type: string
      HomeVideo:
        description: Flag for promoting Home Video.
        type: boolean
      Id:
        description: Unique ID of MovieVideo.
        format: int64
        type: integer
        x-nullable: false
      Language:
        description: Language associated with MovieVideo.
        type: string
      LanguageSubtitled:
        description: Subtitle language associated with MovieVideo.
        type: string
      Mature:
        description: Flag for designating video content not suitable for children. Age gate required.
        type: boolean
        x-nullable: false
      ScreenCaptures:
        description: List of screen captures from MovieVideo.
        items:
          $ref: '#/definitions/MovieVideoScreenCapture'
        type: array
      SourceVideoHeight:
        description: Height in pixels of MovieVideo.
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        description: Width in pixels of MovieVideo.
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        description: First date of MovieVideo availability.
        format: date-time
        type: string
      TargetCountries:
        description: List of countries targeted by MovieVideo.
        items:
          $ref: '#/definitions/TargetCountry'
        type: array
      Theatrical:
        description: Flag for promoting Theatrical release.
        type: boolean
      Title:
        description: 'Title of MovieVideo, not Movie.'
        type: string
      Type:
        description: VideoType for the MovieVideo.
        type: string
    title: MovieVideo
    type: object
  MovieVideoEncode:
    description: MovieVideoEncode
    properties:
      BitRate:
        description: BitRate of MovieVideoEncode.
        format: int32
        type: integer
      EncodeType:
        description: Datetime when the MovieVideoEncode was encoded.
        type: string
      Id:
        description: Unique ID of the video encode
        format: int64
        type: integer
    title: MovieVideoEncode
    type: object
  MovieVideoScreenCapture:
    description: MovieVideoScreenCapture
    properties:
      Aspect:
        description: Aspect ratio of MovieVideoScreenCapture.
        type: string
      FilePath:
        description: Filepath (location) of MovieVideoScreenCapture.
        type: string
      Height:
        description: Height in pixels of MovieVideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of the screen capture
        format: int64
        type: integer
      Width:
        description: Width in pixels of MovieVideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
    title: MovieVideoScreenCapture
    type: object
  MyProgram:
    description: MyProgram
    properties:
      Created:
        description: DateTime MyProgram record created.
        format: date-time
        type: string
        x-nullable: false
      CustomMetadata:
        description: List of custom metadata entries.
        items:
          $ref: '#/definitions/CustomMetadata'
        type: array
      CustomerId:
        description: Client ID MyProgram belongs to.
        format: int64
        type: integer
        x-nullable: false
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      Id:
        description: Unique ID of MyProgram.
        format: int64
        type: integer
        x-nullable: false
      Modified:
        description: DateTime MyProgram record last modified.
        format: date-time
        type: string
        x-nullable: false
      ReferenceId:
        description: Client reference ID of MyProgram.
        type: string
      Title:
        description: Title of MyProgram.
        type: string
    title: MyProgram
    type: object
  MyProgramResponse:
    description: MyProgramResponse
    properties:
      Created:
        description: DateTime MyProgram record created.
        format: date-time
        type: string
        x-nullable: false
      CustomMetadata:
        description: List of custom metadata entries.
        items:
          $ref: '#/definitions/CustomMetadata'
        type: array
      CustomerId:
        description: Client ID MyProgram belongs to.
        format: int64
        type: integer
        x-nullable: false
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      Id:
        description: Unique ID of MyProgram.
        format: int64
        type: integer
        x-nullable: false
      Modified:
        description: DateTime MyProgram record last modified.
        format: date-time
        type: string
        x-nullable: false
      ReferenceId:
        description: Client reference ID of MyProgram.
        type: string
      Title:
        description: Title of MyProgram.
        type: string
    title: MyProgramResponse
    type: object
  MyVideo:
    description: MyVideo
    properties:
      Companies:
        description: Companies of MyVideo.
        items:
          type: string
        type: array
      Created:
        description: DateTime MyVideo was created.
        format: date-time
        type: string
        x-nullable: false
      CustomerId:
        description: Client ID MyVideo belongs to.
        format: int64
        type: integer
        x-nullable: false
      Descriptions:
        description: Description of MyVideo.
        items:
          $ref: '#/definitions/MyVideoDescription'
        type: array
      Duration:
        description: Runtime of MyVideo.
        format: int32
        type: integer
      Encoded:
        description: DateTime MyVideo was encoded.
        format: date-time
        type: string
      Encodes:
        description: List of Encodes (bitrate and type) for MyVideo.
        items:
          $ref: '#/definitions/MyVideoEncode'
        type: array
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      ExpirationDate:
        description: Date MyVideo expires / becomes unavailable for streaming.
        format: date-time
        type: string
      Id:
        description: Unique ID of MyVideo.
        format: int64
        type: integer
        x-nullable: false
      Modified:
        description: DateTime MyVideo was last modified.
        format: date-time
        type: string
        x-nullable: false
      ReferenceId:
        description: Client reference ID of MyVideo.
        type: string
      ScreenCaptures:
        description: List of screen captures from MyVideo.
        items:
          $ref: '#/definitions/MyVideoScreenCapture'
        type: array
      SourceVideoHeight:
        description: Height in pixels of ProprietaryVideo.
        format: int32
        type: integer
      SourceVideoWidth:
        description: Width in pixels of ProprietaryVideo.
        format: int32
        type: integer
      StartDate:
        description: First date of MyVideo availability.
        format: date-time
        type: string
      Title:
        description: Title of MyVideo.
        type: string
    title: MyVideo
    type: object
  MyVideoDescription:
    description: MyVideoDescription
    properties:
      Description:
        description: MyVideo description.
        type: string
    title: MyVideoDescription
    type: object
  MyVideoEncode:
    description: MyVideoEncode
    properties:
      BitRate:
        description: BitRate of encode.
        format: int32
        type: integer
      EncodeType:
        description: Encode type.
        type: string
    title: MyVideoEncode
    type: object
  MyVideoResponse:
    description: MyVideoResponse
    properties:
      Companies:
        description: Companies of MyVideo.
        items:
          type: string
        type: array
      Created:
        description: DateTime MyVideo was created.
        format: date-time
        type: string
        x-nullable: false
      CustomerId:
        description: Client ID MyVideo belongs to.
        format: int64
        type: integer
        x-nullable: false
      Descriptions:
        description: Description of MyVideo.
        items:
          $ref: '#/definitions/MyVideoDescription'
        type: array
      Duration:
        description: Runtime of MyVideo.
        format: int32
        type: integer
      Encoded:
        description: DateTime MyVideo was encoded.
        format: date-time
        type: string
      Encodes:
        description: List of Encodes (bitrate and type) for MyVideo.
        items:
          $ref: '#/definitions/MyVideoEncode'
        type: array
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      ExpirationDate:
        description: Date MyVideo expires / becomes unavailable for streaming.
        format: date-time
        type: string
      Id:
        description: Unique ID of MyVideo.
        format: int64
        type: integer
        x-nullable: false
      Modified:
        description: DateTime MyVideo was last modified.
        format: date-time
        type: string
        x-nullable: false
      ReferenceId:
        description: Client reference ID of MyVideo.
        type: string
      ScreenCaptures:
        description: List of screen captures from MyVideo.
        items:
          $ref: '#/definitions/MyVideoScreenCapture'
        type: array
      SourceVideoHeight:
        description: Height in pixels of ProprietaryVideo.
        format: int32
        type: integer
      SourceVideoWidth:
        description: Width in pixels of ProprietaryVideo.
        format: int32
        type: integer
      StartDate:
        description: First date of MyVideo availability.
        format: date-time
        type: string
      Title:
        description: Title of MyVideo.
        type: string
    title: MyVideoResponse
    type: object
  MyVideoScreenCapture:
    description: MyVideoScreenCapture
    properties:
      Aspect:
        description: Aspect ratio of screen capture.
        type: string
      FilePath:
        description: File path (location) of screen capture. Use with Image service endpoint.
        type: string
      Height:
        description: Height in pixels of screen capture.
        format: int32
        type: integer
        x-nullable: false
      Width:
        description: Width in pixels of screen capture.
        format: int32
        type: integer
        x-nullable: false
    title: MyVideoScreenCapture
    type: object
  NameValueFilter:
    description: NameValueFilter
    properties:
      Name:
        type: string
      Value:
        type: string
    title: NameValueFilter
    type: object
  Object:
    description: Object
    properties: {}
    type: object
  OfferLink:
    description: OfferLink
    properties:
      Platform:
        type: string
      Url:
        type: string
    title: OfferLink
    type: object
  OriginatingNetworkResponse:
    description: OriginatingNetworkResponse
    properties:
      AlternateNames:
        items:
          type: string
        type: array
      FullName:
        type: string
      Name:
        type: string
      Packages:
        items:
          type: string
          x-nullable: false
        type: array
    title: OriginatingNetworkResponse
    type: object
  Person:
    description: Person
    properties:
      AlternateNames:
        description: List of PersonName associated with this Person.
        items:
          type: string
        type: array
      BirthDate:
        $ref: '#/definitions/FlexDate'
        description: Date Person was born.
      BirthName:
        description: Name of Person at birth.
        type: string
      DeathDate:
        $ref: '#/definitions/FlexDate'
        description: Date Person died.
      Descriptions:
        description: List of biographies for this person.
        items:
          $ref: '#/definitions/PersonDescription'
        type: array
      ExternalIds:
        description: List of alternate Ids associated with this person.
        items:
          $ref: '#/definitions/PersonAlternateId'
        type: array
      Gender:
        description: Gender of Person.
        type: string
      Id:
        description: Unique ID of a Person.
        format: int64
        type: integer
        x-nullable: false
      Images:
        description: List of Images associated with this Person.
        items:
          $ref: '#/definitions/PersonImage'
        type: array
      Modified:
        description: Datetime Person was last modified.
        format: date-time
        type: string
        x-nullable: false
      Name:
        description: Full Name of this Person.
        type: string
      Tags:
        description: List of tags associated with person.
        items:
          $ref: '#/definitions/PersonTag'
        type: array
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
    title: Person
    type: object
  PersonAlternateId:
    description: PersonAlternateId
    properties:
      AlternateId:
        type: string
      Modified:
        format: date-time
        type: string
      Type:
        type: string
    title: PersonAlternateId
    type: object
  PersonChangeHistoryResponse:
    description: PersonChangeHistoryResponse
    properties:
      PersonId:
        description: ID of the Person.
        format: int64
        type: integer
        x-nullable: false
    title: PersonChangeHistoryResponse
    type: object
  PersonChangeHistoryWithEntityResponse:
    description: PersonChangeHistoryWithEntityResponse
    properties:
      Entity:
        description: Object belonging to Person that has changed.
        type: string
      PersonId:
        description: ID of the Person.
        format: int64
        type: integer
        x-nullable: false
    title: PersonChangeHistoryWithEntityResponse
    type: object
  PersonDescription:
    description: PersonDescription
    properties:
      Attribution:
        description: Source of PersonDescription.
        type: string
      Description:
        description: Person Description.
        type: string
      Id:
        description: Unique ID of this PersonDescription
        format: int64
        type: integer
      Language:
        description: Language object for language of PersonDescription.
        type: string
    title: PersonDescription
    type: object
  PersonImage:
    description: PersonImage
    properties:
      Attribution:
        description: Source credit for PersonImage.
        type: string
      EpisodeId:
        description: Entertainment Episode ID of the episode this image is from.
        format: int64
        type: integer
      FaceDetails:
        $ref: '#/definitions/FaceDetails'
        description: Details of the person's face in the image.
      FilePath:
        description: Filepath (location) of PersonImage.
        type: string
      Height:
        description: Height in pixels of PersonImage.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of this PersonImage
        format: int64
        type: integer
      ImageType:
        description: ImageType of PersonImage.
        type: string
      Modified:
        description: Time of last image modificication.
        format: date-time
        type: string
      MovieId:
        description: Entertainment Movie ID of the movie this image is from.
        format: int64
        type: integer
      Official:
        description: Determines if image is official.
        type: boolean
      SeasonId:
        description: Entertainment Season ID of the season this image is from.
        format: int64
        type: integer
      Sexuality:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in image.
        format: int32
        type: integer
      ShowId:
        description: Entertainment Show ID of the show this image is from.
        format: int64
        type: integer
      Tags:
        description: List of Tags associated with this PersonImage
        items:
          $ref: '#/definitions/PersonTag'
        type: array
      Violence:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in image.
        format: int32
        type: integer
      Width:
        description: Width in pixels of PersonImage.
        format: int32
        type: integer
        x-nullable: false
    title: PersonImage
    type: object
  PersonRankedResponse:
    description: PersonRankedResponse
    properties:
      FilePath:
        type: string
      Id:
        format: int64
        type: integer
        x-nullable: false
      Name:
        type: string
    title: PersonRankedResponse
    type: object
  PersonResponse:
    description: PersonResponse
    properties:
      AlternateNames:
        description: List of PersonName associated with this Person.
        items:
          type: string
        type: array
      BirthDate:
        $ref: '#/definitions/FlexDate'
        description: Date Person was born.
      BirthName:
        description: Name of Person at birth.
        type: string
      DeathDate:
        $ref: '#/definitions/FlexDate'
        description: Date Person died.
      Descriptions:
        description: List of biographies for this person.
        items:
          $ref: '#/definitions/PersonDescription'
        type: array
      ExternalIds:
        description: List of alternate Ids associated with this person.
        items:
          $ref: '#/definitions/PersonAlternateId'
        type: array
      Gender:
        description: Gender of Person.
        type: string
      Id:
        description: Unique ID of a Person.
        format: int64
        type: integer
        x-nullable: false
      Images:
        description: List of Images associated with this Person.
        items:
          $ref: '#/definitions/PersonImage'
        type: array
      Modified:
        description: Datetime Person was last modified.
        format: date-time
        type: string
        x-nullable: false
      Name:
        description: Full Name of this Person.
        type: string
      Tags:
        description: List of tags associated with person.
        items:
          $ref: '#/definitions/PersonTag'
        type: array
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
    title: PersonResponse
    type: object
  PersonSearchHit:
    description: PersonSearchHit
    properties:
      Id:
        type: string
      Score:
        format: double
        type: number
      Source:
        $ref: '#/definitions/DiscoverPerson'
    title: PersonSearchHit
    type: object
  PersonTag:
    description: PersonTag
    properties:
      Id:
        description: ID of the object.
        format: int64
        type: integer
      Name:
        description: Name of the Tag.
        type: string
      TagId:
        description: ID of the Tag.
        format: int64
        type: integer
        x-nullable: false
    title: PersonTag
    type: object
  Program:
    description: Program
    properties:
      Id:
        description: The ID of the program (show or movie)
        format: int64
        type: integer
        x-nullable: false
      Type:
        description: The type of IVA program (show or movie).
        type: string
    title: Program
    type: object
  ProgramAlternateTitle:
    description: ProgramAlternateTitle
    properties:
      Country:
        type: string
      Title:
        type: string
    title: ProgramAlternateTitle
    type: object
  ProgramAvailability:
    description: ProgramAvailability
    properties:
      Country:
        type: string
      Currency:
        type: string
      DeliveryMethod:
        type: string
      ExpirationDate:
        format: date-time
        type: string
      Links:
        items:
          $ref: '#/definitions/OfferLink'
        type: array
      OfferType:
        type: string
      PreSale:
        type: boolean
        x-nullable: false
      Price:
        format: double
        type: number
        x-nullable: false
      Provider:
        type: string
      Quality:
        type: string
      StartDate:
        format: date-time
        type: string
    title: ProgramAvailability
    type: object
  ProgramContributor:
    description: ProgramContributor
    properties:
      Character:
        type: string
      Job:
        type: string
      PersonId:
        type: string
      PersonName:
        type: string
    title: ProgramContributor
    type: object
  ProgramDescription:
    description: ProgramDescription
    properties:
      Attribution:
        type: string
      Description:
        type: string
      Language:
        type: string
    title: ProgramDescription
    type: object
  ProgramImage:
    description: ProgramImage
    properties:
      FilePath:
        type: string
      Height:
        format: int32
        type: integer
        x-nullable: false
      ImageType:
        type: string
      Language:
        type: string
      Modified:
        format: date-time
        type: string
      Official:
        type: boolean
      Sexuality:
        format: int32
        type: integer
      Tags:
        items:
          type: string
        type: array
      Violence:
        format: int32
        type: integer
      Width:
        format: int32
        type: integer
        x-nullable: false
    title: ProgramImage
    type: object
  ProgramPersonImage:
    description: ProgramPersonImage
    properties:
      EntertainmentId:
        description: 'Entertainment ID of the movie, show, episode this image is promoting.  If you are doing editorial about another topic and use an image from IVA, you need to reference or otherwise indicate the title of the film, TV show or game so as to be promotional.'
        type: string
      FaceDetails:
        $ref: '#/definitions/FaceDetails'
        description: Details of the person's face in the image.
      FilePath:
        type: string
      Height:
        format: int32
        type: integer
        x-nullable: false
      ImageType:
        type: string
      Language:
        type: string
      Modified:
        format: date-time
        type: string
      Official:
        type: boolean
      Sexuality:
        format: int32
        type: integer
      Tags:
        items:
          type: string
        type: array
      Violence:
        format: int32
        type: integer
      Width:
        format: int32
        type: integer
        x-nullable: false
    title: ProgramPersonImage
    type: object
  ProgramRelease:
    description: ProgramRelease
    properties:
      Certification:
        type: string
      Country:
        type: string
      Date:
        format: date-time
        type: string
      Type:
        type: string
    title: ProgramRelease
    type: object
  ProgramTrend:
    description: ProgramTrend
    properties:
      Brand:
        description: Brand associated with trend list.
        type: string
      Classifiers:
        description: List of characteristics of the list.
        items:
          type: string
        type: array
      Country:
        description: Specific country trend list is associated with.
        type: string
      Id:
        description: Trend Source Id.
        format: int32
        type: integer
        x-nullable: false
      ListUrl:
        description: URL of the list.
        type: string
      Modified:
        description: Date the list was last updated.
        format: date-time
        type: string
        x-nullable: false
      Name:
        description: Name of the trend list.
        type: string
      Rank:
        description: Position in the list.  1 is first/top of the list.
        format: int32
        type: integer
        x-nullable: false
      TitleUrl:
        description: URL of title on trend list.
        type: string
    title: ProgramTrend
    type: object
  ProgramVideo:
    description: ProgramVideo
    properties:
      AllowAdvertising:
        type: boolean
      Certification:
        type: boolean
      Clean:
        type: boolean
      Company:
        type: string
      Duration:
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        format: date-time
        type: string
        x-nullable: false
      ExpirationDate:
        format: date-time
        type: string
      HomeVideo:
        type: boolean
      Id:
        format: int64
        type: integer
        x-nullable: false
      Language:
        type: string
      LanguageSubtitled:
        type: string
      Mature:
        type: boolean
        x-nullable: false
      ScreenCaptures:
        items:
          $ref: '#/definitions/VideoScreenCapture'
        type: array
      SourceVideoHeight:
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        format: date-time
        type: string
      TargetCountries:
        items:
          type: string
        type: array
      TargetLanguage:
        type: string
      Theatrical:
        type: boolean
      Title:
        type: string
      TuneIn:
        type: boolean
      Type:
        type: string
    title: ProgramVideo
    type: object
  Recommendation:
    description: Recommendation
    properties:
      businessScore:
        description: Alternate score quality of the recommendation including IVA rules.
        format: float
        type: number
        x-nullable: false
      explanations:
        description: List of reasons for recommendation.
        items:
          $ref: '#/definitions/Explanation'
        type: array
      groupId:
        description: An enumeration of grouped recommendations.
        type: string
      program:
        $ref: '#/definitions/Program'
        description: The ID and Type of IVA Program.
      score:
        description: Quality of the recommendation relative to other recommendations.
        format: float
        type: number
        x-nullable: false
    title: Recommendation
    type: object
  RevCaptionItem:
    description: RevCaptionItem
    properties:
      Content_Type:
        type: string
      Kind:
        type: string
      Text:
        type: string
    title: RevCaptionItem
    type: object
  RevCaptionsResponse:
    description: RevCaptionsResponse
    properties:
      Captions:
        description: List of captions.
        items:
          $ref: '#/definitions/RevCaptionItem'
        type: array
      Comments:
        description: List of comments from Rev.
        items:
          $ref: '#/definitions/RevOrderComment'
        type: array
      Created:
        description: DateTime order was placed.
        format: date-time
        type: string
        x-nullable: false
      Id:
        description: Caption Order Id.  Use this ID to get individual captions.
        format: int64
        type: integer
        x-nullable: false
      Modified:
        description: DateTime order was last modified.
        format: date-time
        type: string
      OrderNumber:
        description: Rev internal order number.
        type: string
      ReferenceId:
        description: Optional reference Id used when creating the order.
        type: string
      Status:
        description: Status of the order.
        type: string
      UseSandbox:
        description: 'Determines if order was placed using Rev''s testing environment. '
        type: boolean
        x-nullable: false
      VideoId:
        description: ID of the video getting captioned.
        format: int64
        type: integer
    title: RevCaptionsResponse
    type: object
  RevOrderComment:
    description: RevOrderComment
    properties:
      by:
        type: string
      text:
        type: string
      timestamp:
        format: date-time
        type: string
        x-nullable: false
    title: RevOrderComment
    type: object
  SDKResponse:
    description: SDKResponse
    properties:
      Url:
        type: string
    title: SDKResponse
    type: object
  ScreenCaptureRedirectResponse:
    description: ScreenCaptureRedirectResponse
    properties:
      Expires:
        description: 'Image URLs are hashed and expire. ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z '
        format: date-time
        type: string
        x-nullable: false
      Url:
        description: URL to image request.
        type: string
    title: ScreenCaptureRedirectResponse
    type: object
  SearchCelebrity:
    description: SearchCelebrity
    properties:
      BirthDate:
        description: Birth Date
        format: date-time
        type: string
      BirthDayOfMonth:
        description: Birth Day of Month
        format: int32
        type: integer
      BirthMonthOfYear:
        description: Birth Month of Year
        format: int32
        type: integer
      BirthName:
        description: Filter by birth name.
        type: string
      BirthYear:
        description: Birth Year
        format: int32
        type: integer
      DeathDayOfMonth:
        description: Birth Day of Month
        format: int32
        type: integer
      DeathMonthOfYear:
        description: Birth Month of Year
        format: int32
        type: integer
      ExternalId:
        description: Filter results matching external Id
        type: string
      ExternalIdType:
        description: Filter results matching external Id
        enum:
          - IVA
          - TMDB
          - IMDB
          - Facebook
          - Instagram
          - Twitter
          - Freebase_MID
          - Freebase_ID
          - TvRage
        type: string
      FaceDetails_Age:
        description: People with images with estimated age.
        format: int32
        type: integer
      FaceDetails_Beard:
        description: People images with a beard.
        type: boolean
      FaceDetails_Emotions:
        description: Filter People images by emotions.
        enum:
          - UNKNOWN
          - HAPPY
          - SAD
          - ANGRY
          - CONFUSED
          - DISGUSTED
          - SURPRISED
          - CALM
        items:
          type: string
          x-nullable: false
        type: array
      FaceDetails_Eyeglasses:
        description: People images wearing eyeglasses.
        type: boolean
      FaceDetails_EyesOpen:
        description: People images with eyes open.
        type: boolean
      FaceDetails_Gender:
        description: People images based on gender.
        enum:
          - UNKNOWN
          - Male
          - Female
        type: string
      FaceDetails_MouthOpen:
        description: People images with mouth open.
        type: boolean
      FaceDetails_Mustache:
        description: People images with a mustache.
        type: boolean
      FaceDetails_Smile:
        description: People images with smile.
        type: boolean
      FaceDetails_Sunglasses:
        description: People images wearing sunglasses.
        type: boolean
      Gender:
        description: Filter people by gender. (m or f)
        enum:
          - m
          - f
        type: string
      Ids:
        description: 'Search person using one or more Ids.  Ex:  Person/123'
        items:
          type: string
        type: array
      ImageEntertainmentIds:
        description: 'People with images from EntertainmentIds.  Ex: Movie/1234'
        items:
          type: string
        type: array
      ImageSexuality:
        description: People with image sexuality scores.
        enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      ImageTags:
        description: People with image containing tags.
        items:
          type: string
        type: array
      ImageType:
        description: People with images of type.
        enum:
          - UNKNOWN
          - Poster
          - Photo
          - Portrait
        type: string
      ImageViolence:
        description: People with image violence scores.
        enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      IncludeDeleted:
        description: Include Soft Deleted Records. Default (false)
        type: boolean
        x-nullable: false
      Includes:
        description: Include sub objects from the person
        enum:
          - Images
          - ExternalIds
          - Descriptions
          - AlternateNames
        items:
          type: string
        type: array
      MinImageHeight:
        description: People with images greater than or equal to image height.
        format: int32
        type: integer
      MinImageWidth:
        description: People with images greater than or equal to image width.
        format: int32
        type: integer
      Minimum_IvaRating:
        description: Filter results with a minimum Rating greater than or equal to this value. (0 to 100)
        format: int32
        type: integer
      ModifiedRecordsSince:
        description: Filter results based on timestamp.  Returns >= value timestamp (UTC) provided.
        format: date-time
        type: string
      Name:
        description: Filter results based on Name.
        type: string
      OfficialImage:
        description: Limit People with official images.
        type: boolean
      Skip:
        description: 'Rows to skip, used for paging. Default is 0.'
        format: int32
        type: integer
        x-nullable: false
      SortBy:
        description: SortBy
        enum:
          - NOT_SET
          - Relevance
          - TimeStamp
          - IvaRating
        type: string
      SortByTimeStamp:
        description: Sort results based on last modified descending.  Default is sorted by _score
        type: boolean
      Take:
        description: 'Rows to return, used for paging. Default is 10, limit is 50.'
        format: int32
        type: integer
        x-nullable: false
    title: SearchCelebrity
    type: object
  SearchCelebrityResponse:
    description: SearchCelebrityResponse
    properties:
      Hits:
        items:
          $ref: '#/definitions/PersonSearchHit'
        type: array
      MaxScore:
        format: double
        type: number
        x-nullable: false
      Message:
        type: string
      Took:
        format: int64
        type: integer
        x-nullable: false
      Total:
        format: int64
        type: integer
        x-nullable: false
    title: SearchCelebrityResponse
    type: object
  SearchEntertainment:
    description: SearchEntertainment
    properties:
      AvailabilityCountries:
        description: List of 2 character country codes.
        items:
          type: string
        type: array
      Budget:
        description: Filter results where movie budget is greater than or equal to this value.
        format: int64
        type: integer
      Certifications:
        description: List of certifications for movie and show.
        items:
          type: string
        type: array
      CompanyName:
        description: Filter results matching company name
        type: string
      Culture:
        description: Specify the country and language
        enum:
          - NOT_SET
          - English_US
          - English_CA
          - English_UK
          - English_AU
        type: string
      DeliveryMethods:
        description: List of availability delivery methods. See /Common/GetCommonEnumerators endpoint for complete list.
        enum:
          - NOT_SET
          - Scheduled
          - Ticket
          - Physical
          - OnDemand
        items:
          type: string
          x-nullable: false
        type: array
      ExternalId:
        description: Filter results matching external Id
        type: string
      ExternalIdType:
        description: Filter results matching external Id
        type: string
      Genres:
        description: List of genres (movie and show).
        items:
          type: string
        type: array
      HasVideo:
        description: Filter results based on having video content
        type: boolean
      Ids:
        description: 'Search by one or more Ids.  Ex: Movie/123.'
        items:
          type: string
        type: array
      IncludeDeleted:
        description: Include Soft Deleted Records. Default (false)
        type: boolean
        x-nullable: false
      Includes:
        description: Include sub objects from the program
        enum:
          - Releases
          - Contributors
          - AlternateTitles
          - Descriptions
          - Companies
          - Tags
          - ExternalIds
          - Videos
          - Images
          - Availabilities
          - Genres
          - ProgramTrends
          - Themes
          - Subjects
          - FilmingLocations
          - NarrativeLocations
          - BasedOns
          - TimePeriods
          - MicroGenres
          - ProgramTags
        items:
          type: string
        type: array
      Jobs:
        description: List of Jobs a contributor can have.
        items:
          type: string
        type: array
      LimitedResults:
        type: boolean
        x-nullable: false
      Minimum_EncodeDate:
        description: Filter results based on encode date.
        format: date-time
        type: string
      Minimum_IvaRating:
        description: Filter results with a minimum Rating greater than or equal to this value. (0 to 100)
        format: int32
        type: integer
      ModifiedRecordsSince:
        description: Filter results based on timestamp.  Returns >= value timestamp (UTC) provided.
        format: date-time
        type: string
      OfferTypes:
        description: List of availability offer types. See /Common/GetCommonEnumerators endpoint for complete list.
        enum:
          - NOT_SET
          - Buy
          - Subscription
          - Free
          - Rent
        items:
          type: string
          x-nullable: false
        type: array
      OriginalLanguages:
        description: The original language of the program.
        items:
          type: string
        type: array
      OriginalReleaseDateRange_End:
        description: Filter results based on original release date range.
        format: date-time
        type: string
      OriginalReleaseDateRange_Start:
        description: Filter results based on original release date range.
        format: date-time
        type: string
      OriginatingNetworks:
        description: 'The Network the current first run shows appear on. Ex: ABC, NBC, Netflix, etc.  '
        items:
          type: string
        type: array
      PeopleIds:
        description: Person Ids.  Currently supports one person.
        items:
          type: string
        type: array
      PersonNames:
        description: List of names. Maximum of 3.
        items:
          type: string
        type: array
      ProgramTypes:
        description: List of program types. See /Common/GetCommonEnumerators endpoint for complete list.
        enum:
          - Movie
          - Show
          - Game
          - Season
          - Episode
        items:
          type: string
          x-nullable: false
        type: array
      Providers:
        description: List of availability providers.  See /Common/GetCommonEnumerators endpoint for complete list.
        enum:
          - NOT_SET
          - AmazonInstantVideo
          - NBC
          - ABC
          - FOX
          - FandangoMovies
          - GooglePlay
          - CBS
          - The_CW
          - TBS
          - Nickelodeon
          - PBS
          - Discovery_Channel
          - HBO
          - Disney_XD
          - USA_Network
          - Hulu
          - AmazonPrimeVideo
          - iTunes
          - Netflix
          - AtomTickets
          - YouTubePremium
          - DCUniverse
          - AppleTvPlus
          - DisneyPlus
        items:
          type: string
          x-nullable: false
        type: array
      ReleaseCountries:
        description: List of 2 character country codes when filtering on releases.
        items:
          type: string
        type: array
      ReleaseDateRange_End:
        description: Filter results based on any release date range.
        format: date-time
        type: string
      ReleaseDateRange_Start:
        description: Filter results based on any release date range.
        format: date-time
        type: string
      ReleaseTypes:
        description: List of release types for both movie and show.
        enum:
          - Digital
          - Festival
          - Physical
          - Premiere
          - Theatrical_Limited_Release
          - Theatrical_Wide_Release
          - TV
          - On_Demand_Release
          - Show_Release
        items:
          type: string
          x-nullable: false
        type: array
      Revenue:
        description: Filter results where movie revenue is greater than or equal to this value.
        format: int64
        type: integer
      SeasonId:
        description: Filter results to match a season.  Use for locating episodes for a season.
        type: string
      ShowId:
        description: Filter results to match a show.  Use for locating seasons and episodes for a show.
        type: string
      Skip:
        description: 'Rows to skip, used for paging. Default is 0.'
        format: int32
        type: integer
        x-nullable: false
      SortBy:
        description: SortBy
        enum:
          - NOT_SET
          - Relevance
          - TimeStamp
          - IvaRating
          - ReleaseDate
          - CalculatedTrendRank
        type: string
      SortByTimeStamp:
        description: Sort results based on last modified descending.  Default is sorted by _score. DEPRECIATED! Use SortBy instead.
        type: boolean
        x-nullable: false
      Status:
        description: 'The status of the movie or show.  Ex: Returning_Series, in_production, etc.  '
        items:
          type: string
        type: array
      Tags:
        description: List of tags (movie and show).
        items:
          type: string
        type: array
      Take:
        description: 'Rows to return, used for paging. Default is 10, limit is 50.'
        format: int32
        type: integer
        x-nullable: false
      Themes:
        description: List of themes (movie and show).
        items:
          type: string
        type: array
      Title:
        description: Title search.
        type: string
      TrendBrands:
        description: 'Program Trend Brands.  Ex: IMDB,IVA'
        enum:
          - IMDB
          - IVA
          - BoxOfficeMojo
          - TMDB
          - RottenTomatoes
          - TVGuide
          - iTunes
          - Amazon
          - Fios
          - Gamespot
          - Hulu
          - MovieClips
          - Netflix
          - PlutoTV
          - Redbox
          - TheNumbers
          - Vudu
          - Xfinity
          - Youtube
        items:
          type: string
        type: array
      TrendCountries:
        description: 'Program Trend Countries.  Ex: US,CA.'
        items:
          type: string
        type: array
      TrendListClassifiers:
        description: 'Program Trend List Classifiers.  Ex: AVOD,SVOD.'
        enum:
          - Publisher
          - TVOD
          - SVOD
          - Revenue
          - Social
          - Trailers
          - AVOD
          - Physical
        items:
          type: string
        type: array
      TrendSourceIds:
        description: 'Program Trend Source Ids.  Ex: 2,3.'
        items:
          format: int32
          type: integer
          x-nullable: false
        type: array
      VideoId:
        description: Filter results based on matching a single Video ID.
        format: int64
        type: integer
      VideoQualities:
        description: List of availability video qualities. See /Common/GetCommonEnumerators endpoint for complete list.
        enum:
          - NOT_SET
          - HD
          - UHD
          - SD
        items:
          type: string
          x-nullable: false
        type: array
      VideoTargetCountries:
        description: List of 2 character country codes when filtering on video target countries.
        items:
          type: string
        type: array
      VideoTargetLanguages:
        description: Specify video target languages. This takes into consideration both language spoken and language subtitled.
        items:
          type: string
        type: array
      YearRange_End:
        description: Filter results based on start and end original release year.
        format: int32
        type: integer
      YearRange_Start:
        description: Filter results based on start and end original release year.
        format: int32
        type: integer
    title: SearchEntertainment
    type: object
  SearchEntertainmentAutoComplete:
    description: SearchEntertainmentAutoComplete
    properties:
      Field:
        description: List of available auto completion fields.
        enum:
          - basedOns_instanceOfLabel
          - basedOns_label
          - subjects_label
          - filmingLocations_label
          - narrativeLocations_label
          - microGenres_label
          - timePeriods_label
          - title
          - originalTitle
          - tags
          - originatingNetwork
          - companies_name
          - contributors_personName
        type: string
      Prefix:
        description: String prefix to use to locate matching strings based on Field selected.
        type: string
      ProgramTypes:
        description: List of program types. See /Common/GetCommonEnumerators endpoint for complete list.
        enum:
          - Movie
          - Show
          - Game
          - Season
          - Episode
        items:
          type: string
          x-nullable: false
        type: array
      Size:
        description: 'Rows to return, used for paging. Default is 10, limit is 50.'
        format: int32
        type: integer
        x-nullable: false
    required:
      - Field
      - Prefix
    title: SearchEntertainmentAutoComplete
    type: object
  SearchEntertainmentAutoCompleteResponse:
    description: SearchEntertainmentAutoCompleteResponse
    properties:
      Description:
        type: string
      Suggestion:
        type: string
    title: SearchEntertainmentAutoCompleteResponse
    type: object
  SearchEntertainmentResponse:
    description: SearchEntertainmentResponse
    properties:
      Hits:
        items:
          $ref: '#/definitions/SearchHit'
        type: array
      MaxScore:
        format: double
        type: number
        x-nullable: false
      Message:
        type: string
      Took:
        format: int64
        type: integer
        x-nullable: false
      Total:
        format: int64
        type: integer
        x-nullable: false
    title: SearchEntertainmentResponse
    type: object
  SearchHit:
    description: SearchHit
    properties:
      Id:
        type: string
      Score:
        format: double
        type: number
      Source:
        $ref: '#/definitions/DiscoverProgram'
    title: SearchHit
    type: object
  SearchMovie:
    description: SearchMovie
    properties:
      Filter:
        description: Expression to filter results.
        type: string
      IncludeTotalResultCount:
        description: Includes total results in response. This will have a performance impact.
        type: boolean
        x-nullable: false
      OrderBy:
        description: List of field names to sort results.  Default is relevance.
        items:
          type: string
        type: array
      SearchFields:
        description: List of field names to search using 'term.'
        items:
          type: string
        type: array
      SearchMode:
        description: Specifies whether ANY or ALL of the search terms must be matched in order to count the item as a match.
        type: string
      SelectFields:
        description: List of field names to be returned in the object.
        items:
          type: string
        type: array
      Skip:
        description: Skip number of results. Use this for paging results.
        format: int32
        type: integer
        x-nullable: false
      Top:
        description: Limit results.  Maximum returned is 1000.
        format: int32
        type: integer
        x-nullable: false
      term:
        description: Term to search for. This can be combined with all other options. Use '*' to return any match.
        type: string
    title: SearchMovie
    type: object
  SearchMovieResponse:
    description: SearchMovieResponse
    properties:
      Count:
        description: Number iof Movies matched in search.
        format: int64
        type: integer
      Results:
        description: List of Match Results (Movies and their Match Scores).
        items:
          $ref: '#/definitions/MovieResult'
        type: array
    title: SearchMovieResponse
    type: object
  SearchShow:
    description: SearchShow
    properties:
      Filter:
        description: Expression to filter results.
        type: string
      IncludeTotalResultCount:
        description: Includes total results in response. This will have a performance impact.
        type: boolean
        x-nullable: false
      OrderBy:
        description: List of field names to sort results.  Default is relevance.
        items:
          type: string
        type: array
      SearchFields:
        description: List of field names to search using 'term.'
        items:
          type: string
        type: array
      SearchMode:
        description: Specifies whether ANY or ALL of the search terms must be matched in order to count the item as a match.
        type: string
      SelectFields:
        description: List of field names to be returned in the object.
        items:
          type: string
        type: array
      Skip:
        description: Skip number of results. Use this for paging results.
        format: int32
        type: integer
        x-nullable: false
      Top:
        description: Limit results.  Maximum returned is 1000.
        format: int32
        type: integer
        x-nullable: false
      term:
        description: Term to search for. This can be combined with all other options. Use '*' to return any match.
        type: string
    title: SearchShow
    type: object
  SearchShowResponse:
    description: SearchShowResponse
    properties:
      Count:
        description: Number iof Shows matched in search.
        format: int64
        type: integer
      Results:
        description: List of Match Results (Shows and their Match Scores).
        items:
          $ref: '#/definitions/ShowResult'
        type: array
    title: SearchShowResponse
    type: object
  Season:
    description: Season
    properties:
      AlternateTitles:
        description: List of alternate titles for this Season.
        items:
          $ref: '#/definitions/SeasonAlternateTitle'
        type: array
      Availabilities:
        description: List of season offers.
        items:
          $ref: '#/definitions/SeasonAvailabilityResponse'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Season.'
        items:
          $ref: '#/definitions/SeasonContributor'
        type: array
      Created:
        description: DateTime Season record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Season.
        items:
          $ref: '#/definitions/SeasonDescription'
        type: array
      Episodes:
        description: List of Episodes associated with Season.
        items:
          $ref: '#/definitions/Episode'
        type: array
      ExternalIds:
        description: List of external Ids associated with Season.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Id:
        description: Unique ID of the Season.
        format: int64
        type: integer
        x-nullable: false
      Images:
        description: List of images associated with Season.
        items:
          $ref: '#/definitions/SeasonImage'
        type: array
      Modified:
        description: DateTime Season record last modified.
        format: date-time
        type: string
        x-nullable: false
      Modifier:
        description: User who last modified the Season record.
        format: int32
        type: integer
      NumberOfEpisodes:
        description: Number of Episodes associated with Season.
        format: int32
        type: integer
        x-nullable: false
      OriginalLanguage:
        description: Season original language.
        type: string
      OriginalReleaseDate:
        description: Original release date of Season.
        format: date-time
        type: string
      OriginalTitle:
        description: Original title of Season
        type: string
      OwnerId:
        description: User who has ownership of the Show record.
        format: int32
        type: integer
      Releases:
        description: List of releases associated with Season.
        items:
          $ref: '#/definitions/SeasonRelease'
        type: array
      SeasonNumber:
        description: Number of Season within its associated Show.
        format: int32
        type: integer
        x-nullable: false
      ShowId:
        description: ID of Show Season is associated with.
        format: int64
        type: integer
        x-nullable: false
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Season.
        items:
          $ref: '#/definitions/SeasonVideo'
        type: array
      Year:
        description: Release year of Season.
        format: int32
        type: integer
    title: Season
    type: object
  SeasonAlternateTitle:
    description: SeasonAlternateTitle
    properties:
      Country:
        description: Country associated with this alternate title.
        type: string
      Id:
        description: Unique ID of this SeasonAlternateTitle
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Title:
        description: The alternate title.
        type: string
    title: SeasonAlternateTitle
    type: object
  SeasonAvailabilityResponse:
    description: SeasonAvailabilityResponse
    properties:
      Country:
        type: string
      Currency:
        type: string
      DeliveryMethod:
        type: string
      ExpirationDate:
        format: date-time
        type: string
      Links:
        items:
          $ref: '#/definitions/OfferLink'
        type: array
      OfferType:
        type: string
      PreSale:
        type: boolean
        x-nullable: false
      Price:
        format: double
        type: number
        x-nullable: false
      Provider:
        type: string
      Quality:
        type: string
      StartDate:
        format: date-time
        type: string
      Title:
        type: string
    title: SeasonAvailabilityResponse
    type: object
  SeasonChangeHistoryResponse:
    description: SeasonChangeHistoryResponse
    properties:
      SeasonId:
        description: ID of the Season.
        format: int64
        type: integer
        x-nullable: false
    title: SeasonChangeHistoryResponse
    type: object
  SeasonChangeHistoryWithEntityResponse:
    description: SeasonChangeHistoryWithEntityResponse
    properties:
      Entity:
        description: Object belonging to Season that has changed.
        type: string
      SeasonId:
        description: ID of the Season.
        format: int64
        type: integer
        x-nullable: false
    title: SeasonChangeHistoryWithEntityResponse
    type: object
  SeasonContributor:
    description: SeasonContributor
    properties:
      Character:
        description: Role played by SeasonContributor.
        type: string
      Id:
        description: Unique ID of the SeasonContributor object.
        format: int64
        type: integer
      Job:
        description: Job of Person associated with SeasonContributor.
        type: string
      NumberOfEpisodes:
        description: Count of episodes this person contributed to.
        format: int32
        type: integer
        x-nullable: false
      PersonId:
        description: ID of Person associated with SeasonContributor.
        format: int64
        type: integer
        x-nullable: false
      PersonName:
        description: Person's Name associated with SeasonContributor.
        type: string
    title: SeasonContributor
    type: object
  SeasonDescription:
    description: SeasonDescription
    properties:
      Attribution:
        description: Source of SeasonDescription.
        type: string
      Description:
        description: Season Description.
        type: string
      Id:
        description: Unique ID of this SeasonDescription
        format: int64
        type: integer
      Language:
        description: Language object for language of SeasonDescription.
        type: string
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
    title: SeasonDescription
    type: object
  SeasonImage:
    description: SeasonImage
    properties:
      FilePath:
        description: Filepath (location) of SeasonImage.
        type: string
      Height:
        description: Height in pixels of SeasonImage.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of this SeasonImage
        format: int64
        type: integer
      ImageId:
        description: ID of Image associated with SeasonImage.
        format: int64
        type: integer
      ImageType:
        description: ImageType of SeasonImage.
        type: string
      Language:
        description: Language associated with SeasonImage.
        type: string
      Modified:
        description: Time when image was last modified.
        format: date-time
        type: string
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Official:
        description: Determines if image is official.
        type: boolean
      Sexuality:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in image.
        format: int32
        type: integer
      Tags:
        description: List of Tags associated with this SeasonImage
        items:
          $ref: '#/definitions/Tag'
        type: array
      Violence:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in image.
        format: int32
        type: integer
      Width:
        description: Width in pixels of SeasonImage.
        format: int32
        type: integer
        x-nullable: false
    title: SeasonImage
    type: object
  SeasonRelease:
    description: SeasonRelease
    properties:
      Certification:
        description: Certification for SeasonRelease.
        type: string
      Country:
        description: The Country Season was released.
        type: string
      Date:
        description: Date of this SeasonRelease.
        format: date-time
        type: string
      Id:
        description: Unique Id of this SeasonRelease.
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Type:
        description: The type of this SeasonRelease.
        type: string
    title: SeasonRelease
    type: object
  SeasonResponse:
    description: SeasonResponse
    properties:
      AlternateTitles:
        description: List of alternate titles for this Season.
        items:
          $ref: '#/definitions/SeasonAlternateTitle'
        type: array
      Availabilities:
        description: List of season offers.
        items:
          $ref: '#/definitions/SeasonAvailabilityResponse'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Season.'
        items:
          $ref: '#/definitions/SeasonContributor'
        type: array
      Created:
        description: DateTime Season record created.
        format: date-time
        type: string
        x-nullable: false
      Descriptions:
        description: List of descriptions for this Season.
        items:
          $ref: '#/definitions/SeasonDescription'
        type: array
      Episodes:
        description: List of Episodes associated with Season.
        items:
          $ref: '#/definitions/Episode'
        type: array
      ExternalIds:
        description: List of external Ids associated with Season.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Id:
        description: Unique ID of the Season.
        format: int64
        type: integer
        x-nullable: false
      Images:
        description: List of images associated with Season.
        items:
          $ref: '#/definitions/SeasonImage'
        type: array
      Modified:
        description: DateTime Season record last modified.
        format: date-time
        type: string
        x-nullable: false
      Modifier:
        description: User who last modified the Season record.
        format: int32
        type: integer
      NumberOfEpisodes:
        description: Number of Episodes associated with Season.
        format: int32
        type: integer
        x-nullable: false
      OriginalLanguage:
        description: Season original language.
        type: string
      OriginalReleaseDate:
        description: Original release date of Season.
        format: date-time
        type: string
      OriginalTitle:
        description: Original title of Season
        type: string
      OwnerId:
        description: User who has ownership of the Show record.
        format: int32
        type: integer
      Releases:
        description: List of releases associated with Season.
        items:
          $ref: '#/definitions/SeasonRelease'
        type: array
      SeasonNumber:
        description: Number of Season within its associated Show.
        format: int32
        type: integer
        x-nullable: false
      ShowId:
        description: ID of Show Season is associated with.
        format: int64
        type: integer
        x-nullable: false
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
        x-nullable: false
      Videos:
        description: List of videos associated with Season.
        items:
          $ref: '#/definitions/SeasonVideo'
        type: array
      Year:
        description: Release year of Season.
        format: int32
        type: integer
    title: SeasonResponse
    type: object
  SeasonVideo:
    description: SeasonVideo
    properties:
      AllowAdvertising:
        description: Flag denoting if pre-roll video ads are allowed in front of content.
        type: boolean
        x-nullable: false
      Certification:
        description: Certification for SeasonVideo.
        type: boolean
      Clean:
        description: 'True if Certification, Theatrical, and HomeVideo are False.'
        type: boolean
      Company:
        description: Company associated with SeasonVideo.
        type: string
      Duration:
        description: Runtime of SeasonVideo.
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        description: Datetime SeasonVideo was encoded.
        format: date-time
        type: string
        x-nullable: false
      Encodes:
        description: List of Encodes (bitrate and type) for SeasonVideo.
        items:
          $ref: '#/definitions/SeasonVideoEncode'
        type: array
      ExpirationDate:
        description: Date SeasonVideo expires.
        format: date-time
        type: string
      HomeVideo:
        description: Flag for promoting Home Video.
        type: boolean
      Id:
        description: Unique ID of SeasonVideo.
        format: int64
        type: integer
        x-nullable: false
      Language:
        description: Language associated with SeasonVideo.
        type: string
      LanguageSubtitled:
        description: Subtitle language associated with SeasonVideo.
        type: string
      Mature:
        description: Flag for designating video content not suitable for children. Age gate required.
        type: boolean
        x-nullable: false
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      ScreenCaptures:
        description: List of screen captures from SeasonVideo.
        items:
          $ref: '#/definitions/SeasonVideoScreenCapture'
        type: array
      SourceVideoHeight:
        description: Height in pixels of SeasonVideo.
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        description: Width in pixels of SeasonVideo.
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        description: First date of SeasonVideo availability.
        format: date-time
        type: string
      TargetCountries:
        description: List of countries targeted by SeasonVideo.
        items:
          $ref: '#/definitions/TargetCountry'
        type: array
      Title:
        description: 'Title of SeasonVideo, not Season.'
        type: string
      TuneIn:
        description: Flag for promoting Tune In.
        type: boolean
      Type:
        description: VideoType for the SeasonVideo.
        type: string
    title: SeasonVideo
    type: object
  SeasonVideoEncode:
    description: SeasonVideoEncode
    properties:
      BitRate:
        description: BitRate of VideoEncode.
        format: int32
        type: integer
      EncodeType:
        description: Datetime when the VideoEncode was encoded.
        type: string
      Id:
        description: Unique ID of the video encode
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
    title: SeasonVideoEncode
    type: object
  SeasonVideoExtended:
    description: SeasonVideoExtended
    properties:
      AllowAdvertising:
        description: Flag denoting if pre-roll video ads are allowed in front of content.
        type: boolean
        x-nullable: false
      Certification:
        description: Certification for SeasonVideo.
        type: boolean
      Clean:
        description: 'True if Certification, Theatrical, and HomeVideo are False.'
        type: boolean
      Company:
        description: Company associated with SeasonVideo.
        type: string
      Duration:
        description: Runtime of SeasonVideo.
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        description: Datetime SeasonVideo was encoded.
        format: date-time
        type: string
        x-nullable: false
      Encodes:
        description: List of Encodes (bitrate and type) for SeasonVideo.
        items:
          $ref: '#/definitions/SeasonVideoEncode'
        type: array
      ExpirationDate:
        description: Date SeasonVideo expires.
        format: date-time
        type: string
      HomeVideo:
        description: Flag for promoting Home Video.
        type: boolean
      Id:
        description: Unique ID of SeasonVideo.
        format: int64
        type: integer
        x-nullable: false
      Language:
        description: Language associated with SeasonVideo.
        type: string
      LanguageSubtitled:
        description: Subtitle language associated with SeasonVideo.
        type: string
      Mature:
        description: Flag for designating video content not suitable for children. Age gate required.
        type: boolean
        x-nullable: false
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      ScreenCaptures:
        description: List of screen captures from SeasonVideo.
        items:
          $ref: '#/definitions/SeasonVideoScreenCapture'
        type: array
      SeasonNumber:
        format: int32
        type: integer
        x-nullable: false
      SourceVideoHeight:
        description: Height in pixels of SeasonVideo.
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        description: Width in pixels of SeasonVideo.
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        description: First date of SeasonVideo availability.
        format: date-time
        type: string
      TargetCountries:
        description: List of countries targeted by SeasonVideo.
        items:
          $ref: '#/definitions/TargetCountry'
        type: array
      Title:
        description: 'Title of SeasonVideo, not Season.'
        type: string
      TuneIn:
        description: Flag for promoting Tune In.
        type: boolean
      Type:
        description: VideoType for the SeasonVideo.
        type: string
    title: SeasonVideoExtended
    type: object
  SeasonVideoScreenCapture:
    description: SeasonVideoScreenCapture
    properties:
      Aspect:
        description: Aspect ratio of VideoScreenCapture.
        type: string
      FilePath:
        description: Filepath (location) of VideoScreenCapture.
        type: string
      Height:
        description: Height in pixels of VideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of the screen capture
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Width:
        description: Width in pixels of VideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
    title: SeasonVideoScreenCapture
    type: object
  Show:
    description: Show
    properties:
      AlternateTitles:
        description: List of alternate titles for this Show.
        items:
          $ref: '#/definitions/ShowAlternateTitle'
        type: array
      Availabilities:
        description: List of show availability.
        items:
          $ref: '#/definitions/ShowAvailabilityResponse'
        type: array
      Companies:
        description: 'List of companies (Production, Distribution, etc.) associated with Show.'
        items:
          $ref: '#/definitions/Company'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Show.'
        items:
          $ref: '#/definitions/ShowContributor'
        type: array
      Created:
        description: DateTime Show record created.
        format: date-time
        type: string
        x-nullable: false
      Deleted:
        description: Flag signifies if Show record is 'Deleted'.
        type: boolean
      Descriptions:
        description: List of descriptions for this Show.
        items:
          $ref: '#/definitions/ShowDescription'
        type: array
      EpisodeVideos:
        description: All EpisodesVideos including season and episode number.
        items:
          $ref: '#/definitions/EpisodeVideoExtended'
        type: array
      ExternalIds:
        description: List of external Ids associated with Show.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Genres:
        description: List of genres associated with Show.
        items:
          $ref: '#/definitions/ShowGenre'
        type: array
      Id:
        description: Unique ID of the Show.
        format: int64
        type: integer
        x-nullable: false
      Idx:
        description: Index to differentiate shows with identical titles and year.
        type: string
      Images:
        description: List of images associated with Show.
        items:
          $ref: '#/definitions/ShowImage'
        type: array
      Modified:
        description: DateTime Show record last modified.
        format: date-time
        type: string
        x-nullable: false
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      OfficialSiteUrl:
        description: Show website home page.
        type: string
      OriginalLanguage:
        description: ID of Show original language.
        type: string
      OriginalReleaseDate:
        description: Original release date of Show.
        format: date-time
        type: string
      OriginalTitle:
        type: string
      OriginatingNetwork:
        description: Last network new episodes aired on.
        type: string
      OwnerId:
        description: User who has ownership of the Show record.
        format: int32
        type: integer
      RedirectTo:
        description: Redirect to.
        type: string
      Releases:
        description: List of releases associated with Show.
        items:
          $ref: '#/definitions/ShowRelease'
        type: array
      SeasonVideos:
        description: All SeasonVideos including season and episode number.
        items:
          $ref: '#/definitions/SeasonVideoExtended'
        type: array
      Seasons:
        items:
          $ref: '#/definitions/Season'
        type: array
      Status:
        description: Status of the show.
        type: string
      Tags:
        description: List of tags associated with Show.
        items:
          $ref: '#/definitions/Tag'
        type: array
      Themes:
        description: List of themes associated with Show.
        items:
          $ref: '#/definitions/ShowTheme'
        type: array
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      Type:
        description: Type of show.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
      Videos:
        description: List of videos associated with Show.
        items:
          $ref: '#/definitions/ShowVideo'
        type: array
      Year:
        format: int32
        type: integer
        x-nullable: false
    required:
      - OriginalTitle
      - Year
    title: Show
    type: object
  ShowAlternateIdTypeResponse:
    description: ShowAlternateIdTypeResponse
    properties:
      Id:
        description: Unique ID of a ShowAlternateIdType.
        format: int32
        type: integer
        x-nullable: false
      Type:
        description: Provider type of a ShowAlternateIdType.
        type: string
    title: ShowAlternateIdTypeResponse
    type: object
  ShowAlternateTitle:
    description: ShowAlternateTitle
    properties:
      Country:
        description: Country associated with this alternate title.
        type: string
      Id:
        description: Unique ID of this ShowAlternateTitle
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Title:
        description: The alternate title.
        type: string
    title: ShowAlternateTitle
    type: object
  ShowAvailabilityResponse:
    description: ShowAvailabilityResponse
    properties:
      Country:
        type: string
      Currency:
        type: string
      DeliveryMethod:
        type: string
      ExpirationDate:
        format: date-time
        type: string
      Links:
        items:
          $ref: '#/definitions/OfferLink'
        type: array
      OfferType:
        type: string
      PreSale:
        type: boolean
        x-nullable: false
      Price:
        format: double
        type: number
        x-nullable: false
      Provider:
        type: string
      Quality:
        type: string
      StartDate:
        format: date-time
        type: string
      Title:
        type: string
    title: ShowAvailabilityResponse
    type: object
  ShowChangeHistoryResponse:
    description: ShowChangeHistoryResponse
    properties:
      ShowId:
        description: ID of the Show.
        format: int64
        type: integer
        x-nullable: false
    title: ShowChangeHistoryResponse
    type: object
  ShowChangeHistoryWithEntityResponse:
    description: ShowChangeHistoryWithEntityResponse
    properties:
      Entity:
        description: Object belonging to Show that has changed.
        type: string
      ShowId:
        description: ID of the Show.
        format: int64
        type: integer
        x-nullable: false
    title: ShowChangeHistoryWithEntityResponse
    type: object
  ShowContributor:
    description: ShowContributor
    properties:
      Character:
        description: Role played by ShowContributor.
        type: string
      Job:
        description: Job of Person associated with ShowContributor.
        type: string
      NumberOfEpisodes:
        description: Number of episodes this actors contributed.
        format: int32
        type: integer
        x-nullable: false
      PersonId:
        description: ID of Person associated with ShowContributor.
        format: int64
        type: integer
        x-nullable: false
      PersonName:
        description: Person's Name associated with ShowContributor.
        type: string
    title: ShowContributor
    type: object
  ShowDescription:
    description: ShowDescription
    properties:
      Attribution:
        description: Source of ShowDescription.
        type: string
      Description:
        description: Show Description.
        type: string
      Id:
        description: Unique ID of this ShowDescription
        format: int64
        type: integer
      Language:
        description: Language object for language of ShowDescription.
        type: string
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
    title: ShowDescription
    type: object
  ShowExternalIdMap:
    description: ShowExternalIdMap
    properties:
      ExternalId:
        type: string
      ShowId:
        format: int64
        type: integer
        x-nullable: false
    title: ShowExternalIdMap
    type: object
  ShowGenre:
    description: ShowGenre
    properties:
      Id:
        description: Id of the Genre object.
        format: int32
        type: integer
      Name:
        description: Name of the Genre.
        type: string
    title: ShowGenre
    type: object
  ShowGenreResponse:
    description: ShowGenreResponse
    properties:
      Id:
        description: Id of the Genre object.
        format: int32
        type: integer
      Name:
        description: Name of the Genre.
        type: string
    title: ShowGenreResponse
    type: object
  ShowImage:
    description: ShowImage
    properties:
      FilePath:
        description: Filepath (location) of ShowImage.
        type: string
      Height:
        description: Height in pixels of ShowImage.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of this ShowImage
        format: int64
        type: integer
      ImageId:
        description: ID of Image associated with ShowImage.
        format: int64
        type: integer
      ImageType:
        description: ImageType of ShowImage.
        type: string
      Language:
        description: Language associated with ShowImage.
        type: string
      Modified:
        description: Time when image was last modified.
        format: date-time
        type: string
      Official:
        description: Determines if image is official.
        type: boolean
      Sexuality:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of sexual theme in image.
        format: int32
        type: integer
      Tags:
        description: List of Tags associated with this ShowImage
        items:
          $ref: '#/definitions/Tag'
        type: array
      Violence:
        description: 1-5 (Very-Unlikely to Very-Likely) probability of violent theme in image.
        format: int32
        type: integer
      Width:
        description: Width in pixels of ShowImage.
        format: int32
        type: integer
        x-nullable: false
    title: ShowImage
    type: object
  ShowRelease:
    description: ShowRelease
    properties:
      Certification:
        description: Certification for ShowRelease.
        type: string
      Country:
        description: The Country Show was released.
        type: string
      Date:
        description: Date of this ShowRelease.
        format: date-time
        type: string
      Id:
        description: Unique Id of this ShowRelease.
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Type:
        description: The type of this ShowRelease.
        type: string
    title: ShowRelease
    type: object
  ShowReleaseTypeResponse:
    description: ShowReleaseTypeResponse
    properties:
      Id:
        description: Unique ID of ShowReleaseType.
        format: int32
        type: integer
        x-nullable: false
      Type:
        description: Name of ShowReleaseType.
        type: string
    title: ShowReleaseTypeResponse
    type: object
  ShowResponse:
    description: ShowResponse
    properties:
      AlternateTitles:
        description: List of alternate titles for this Show.
        items:
          $ref: '#/definitions/ShowAlternateTitle'
        type: array
      Availabilities:
        description: List of show availability.
        items:
          $ref: '#/definitions/ShowAvailabilityResponse'
        type: array
      Companies:
        description: 'List of companies (Production, Distribution, etc.) associated with Show.'
        items:
          $ref: '#/definitions/Company'
        type: array
      Contributors:
        description: 'List of contributors (Cast, Director, Writer, Production, etc.) for this Show.'
        items:
          $ref: '#/definitions/ShowContributor'
        type: array
      Created:
        description: DateTime Show record created.
        format: date-time
        type: string
        x-nullable: false
      Deleted:
        description: Flag signifies if Show record is 'Deleted'.
        type: boolean
      Descriptions:
        description: List of descriptions for this Show.
        items:
          $ref: '#/definitions/ShowDescription'
        type: array
      EpisodeVideos:
        description: All EpisodesVideos including season and episode number.
        items:
          $ref: '#/definitions/EpisodeVideoExtended'
        type: array
      ExternalIds:
        description: List of external Ids associated with Show.
        items:
          $ref: '#/definitions/ExternalId'
        type: array
      Genres:
        description: List of genres associated with Show.
        items:
          $ref: '#/definitions/ShowGenre'
        type: array
      Id:
        description: Unique ID of the Show.
        format: int64
        type: integer
        x-nullable: false
      Idx:
        description: Index to differentiate shows with identical titles and year.
        type: string
      Images:
        description: List of images associated with Show.
        items:
          $ref: '#/definitions/ShowImage'
        type: array
      Modified:
        description: DateTime Show record last modified.
        format: date-time
        type: string
        x-nullable: false
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      OfficialSiteUrl:
        description: Show website home page.
        type: string
      OriginalLanguage:
        description: ID of Show original language.
        type: string
      OriginalReleaseDate:
        description: Original release date of Show.
        format: date-time
        type: string
      OriginalTitle:
        type: string
      OriginatingNetwork:
        description: Last network new episodes aired on.
        type: string
      OwnerId:
        description: User who has ownership of the Show record.
        format: int32
        type: integer
      RedirectTo:
        description: Redirect to.
        type: string
      Releases:
        description: List of releases associated with Show.
        items:
          $ref: '#/definitions/ShowRelease'
        type: array
      SeasonVideos:
        description: All SeasonVideos including season and episode number.
        items:
          $ref: '#/definitions/SeasonVideoExtended'
        type: array
      Seasons:
        items:
          $ref: '#/definitions/Season'
        type: array
      Status:
        description: Status of the show.
        type: string
      Tags:
        description: List of tags associated with Show.
        items:
          $ref: '#/definitions/Tag'
        type: array
      Themes:
        description: List of themes associated with Show.
        items:
          $ref: '#/definitions/ShowTheme'
        type: array
      TimeStamp:
        description: Time of last change to overall object.
        format: date-time
        type: string
      Title:
        description: English version of any foreign Original Title.
        type: string
      Type:
        description: Type of show.
        type: string
      VersionId:
        description: Record Version Id
        format: int64
        type: integer
      Videos:
        description: List of videos associated with Show.
        items:
          $ref: '#/definitions/ShowVideo'
        type: array
      Year:
        format: int32
        type: integer
        x-nullable: false
    required:
      - OriginalTitle
      - Year
    title: ShowResponse
    type: object
  ShowResult:
    description: ShowResult
    properties:
      Document:
        $ref: '#/definitions/DiscoverShow'
      Score:
        description: Score of this match in Show search.
        format: double
        type: number
        x-nullable: false
    title: ShowResult
    type: object
  ShowTheme:
    description: ShowTheme
    properties:
      Name:
        description: Name of the Theme.
        type: string
      ThemeId:
        description: ID of the Theme.
        format: int32
        type: integer
        x-nullable: false
    title: ShowTheme
    type: object
  ShowVideo:
    description: ShowVideo
    properties:
      AllowAdvertising:
        description: Flag denoting if pre-roll video ads are allowed in front of of content.
        type: boolean
        x-nullable: false
      Certification:
        description: Certification for ShowVideo.
        type: boolean
      Clean:
        description: 'True if Certification, Theatrical, and HomeVideo are False.'
        type: boolean
      Company:
        description: Company associated with ShowVideo.
        type: string
      Duration:
        description: Runtime of ShowVideo.
        format: int32
        type: integer
        x-nullable: false
      Encoded:
        description: Datetime ShowVideo was encoded.
        format: date-time
        type: string
        x-nullable: false
      Encodes:
        description: List of Encodes (bitrate and type) for ShowVideo.
        items:
          $ref: '#/definitions/ShowVideoEncode'
        type: array
      ExpirationDate:
        description: Date ShowVideo expires.
        format: date-time
        type: string
      HomeVideo:
        description: Flag for promoting Home Video.
        type: boolean
      Id:
        description: Unique ID of ShowVideo.
        format: int64
        type: integer
        x-nullable: false
      Language:
        description: Language associated with MovieVideo.
        type: string
      LanguageSubtitled:
        description: Subtitle language associated with ShowVideo.
        type: string
      Mature:
        description: Flag for designating video content not suitable for children. Age gate required.
        type: boolean
        x-nullable: false
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      ScreenCaptures:
        description: List of screen captures from ShowVideo.
        items:
          $ref: '#/definitions/ShowVideoScreenCapture'
        type: array
      SourceVideoHeight:
        description: Height in pixels of ShowVideo.
        format: int32
        type: integer
        x-nullable: false
      SourceVideoWidth:
        description: Width in pixels of ShowVideo.
        format: int32
        type: integer
        x-nullable: false
      StartDate:
        description: First date of ShowVideo availability.
        format: date-time
        type: string
      TargetCountries:
        description: List of countries targeted by ShowVideo.
        items:
          $ref: '#/definitions/TargetCountry'
        type: array
      Title:
        description: 'Title of ShowVideo, not Show.'
        type: string
      TuneIn:
        description: Flag for promoting tune in.
        type: boolean
      Type:
        description: VideoType for the ShowVideo.
        type: string
    title: ShowVideo
    type: object
  ShowVideoEncode:
    description: ShowVideoEncode
    properties:
      BitRate:
        description: BitRate of ShowVideoEncode.
        format: int32
        type: integer
      EncodeType:
        description: Datetime when the ShowVideoEncode was encoded.
        type: string
      Id:
        description: Unique ID of the video encode
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
    title: ShowVideoEncode
    type: object
  ShowVideoScreenCapture:
    description: ShowVideoScreenCapture
    properties:
      Aspect:
        description: Aspect ratio of ShowVideoScreenCapture.
        type: string
      FilePath:
        description: Filepath (location) of ShowVideoScreenCapture.
        type: string
      Height:
        description: Height in pixels of ShowVideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
      Id:
        description: Unique ID of the screen capture
        format: int64
        type: integer
      Modifier:
        description: ID of last user who modified the item.
        format: int32
        type: integer
      Width:
        description: Width in pixels of ShowVideoScreenCapture.
        format: int32
        type: integer
        x-nullable: false
    title: ShowVideoScreenCapture
    type: object
  ShowtimeItemDetail:
    description: ShowtimeItemDetail
    properties:
      amenities:
        items:
          $ref: '#/definitions/FandangoAmenity'
        type: array
      auditoriumId:
        format: int32
        type: integer
        x-nullable: false
      dateTime:
        $ref: '#/definitions/FandangoDatetime'
      displayDate:
        type: string
      distance:
        format: double
        type: number
        x-nullable: false
      expired:
        type: boolean
        x-nullable: false
      formatName:
        type: string
      id:
        type: string
      isTicketing:
        type: boolean
        x-nullable: false
      message:
        type: string
      movieId:
        type: string
      movieTitle:
        type: string
      seatingType:
        type: string
      theaterChainCode:
        type: string
      theaterId:
        type: string
      theaterName:
        type: string
      type:
        type: string
    title: ShowtimeItemDetail
    type: object
  Station:
    description: Station
    properties:
      DTV_TSID:
        description: 'In the case of broadcast stations, denotes the FCC/Industry Canada assigned TSID included within the transmission stream.'
        format: int32
        type: integer
        x-nullable: false
      NTSC_TSID:
        description: ' In the case of broadcast stations, denotes the FCC/Industry Canada assigned TSID included within the transmission stream.'
        format: int32
        type: integer
        x-nullable: false
      Twitter:
        type: string
      callsign:
        description: Station short name.
        type: string
      channelNumber:
        description: Channel number.
        format: int32
        type: integer
        x-nullable: false
      logoFilename:
        description: Filename and extension for station's logo.
        type: string
      name:
        type: string
      network:
        description: Network this station is on.
        type: string
      number:
        description: 'ChannelNumber, hyphenated by subChannelNumber when present'
        type: string
      stationHD:
        description: Is this station hd?
        type: boolean
        x-nullable: false
      stationID:
        description: Unique station ID.
        format: int32
        type: integer
        x-nullable: false
      stationType:
        type: string
      subChannelNumber:
        description: Sub channel number.
        format: int32
        type: integer
        x-nullable: false
      webLink:
        description: URL to station's website.
        type: string
    title: Station
    type: object
  Tag:
    description: Tag
    properties:
      Name:
        description: Name of the Tag.
        type: string
      TagId:
        description: ID of the Tag.
        format: int64
        type: integer
        x-nullable: false
    title: Tag
    type: object
  TagResponse:
    description: TagResponse
    properties:
      Id:
        format: int64
        type: integer
        x-nullable: false
      Name:
        type: string
    title: TagResponse
    type: object
  TargetCountry:
    description: TargetCountry
    properties:
      CountryId:
        description: ID of the Country.
        format: int64
        type: integer
        x-nullable: false
      Id:
        description: ID of the TargetCountry.
        format: int64
        type: integer
      Name:
        description: Name of the country
        type: string
    title: TargetCountry
    type: object
  TestDateTimeResponse:
    description: TestDateTimeResponse
    properties:
      DateTime:
        format: date-time
        type: string
        x-nullable: false
      DateTimeString:
        type: string
    title: TestDateTimeResponse
    type: object
  TrendSourceResponse:
    description: TrendSourceResponse
    properties:
      Active:
        type: boolean
        x-nullable: false
      Brand:
        type: string
      Classifiers:
        items:
          type: string
        type: array
      CountryId:
        format: int32
        type: integer
      Id:
        format: int32
        type: integer
        x-nullable: false
      ItemCount:
        format: int32
        type: integer
        x-nullable: false
      ListUrl:
        type: string
      Modified:
        format: date-time
        type: string
        x-nullable: false
      Name:
        type: string
    title: TrendSourceResponse
    type: object
  TvMediaChannelResponse:
    description: TvMediaChannelResponse
    properties:
      DTV_TSID:
        format: int32
        type: integer
        x-nullable: false
      NTSC_TSID:
        format: int32
        type: integer
        x-nullable: false
      Twitter:
        type: string
      callsign:
        type: string
      channelNumber:
        format: int32
        type: integer
        x-nullable: false
      logoFilename:
        type: string
      name:
        type: string
      network:
        type: string
      number:
        type: string
      stationHD:
        type: boolean
        x-nullable: false
      stationID:
        format: int32
        type: integer
        x-nullable: false
      stationType:
        type: string
      subChannelNumber:
        format: int32
        type: integer
        x-nullable: false
      webLink:
        type: string
    title: TvMediaChannelResponse
    type: object
  TvMediaCountryResponse:
    description: TvMediaCountryResponse
    properties:
      countryID:
        type: string
      countryName:
        type: string
    title: TvMediaCountryResponse
    type: object
  TvMediaExternalId:
    description: TvMediaExternalId
    properties:
      id:
        type: string
      name:
        type: string
    title: TvMediaExternalId
    type: object
  TvMediaGenreResponse:
    description: TvMediaGenreResponse
    properties:
      genre:
        type: string
      genreID:
        type: string
    title: TvMediaGenreResponse
    type: object
  TvMediaGridResponse:
    description: TvMediaGridResponse
    properties:
      channel:
        $ref: '#/definitions/TvMediaChannelResponse'
      listings:
        items:
          $ref: '#/definitions/TvMediaShortListingResponse'
        type: array
    title: TvMediaGridResponse
    type: object
  TvMediaLeagueResponse:
    description: TvMediaLeagueResponse
    properties:
      leagueID:
        type: string
      leagueName:
        type: string
      logo:
        type: string
    title: TvMediaLeagueResponse
    type: object
  TvMediaLineupResponse:
    description: TvMediaLineupResponse
    properties:
      country:
        type: string
      lineupID:
        type: string
      lineupName:
        type: string
      lineupType:
        type: string
      providerID:
        type: string
      providerName:
        type: string
      serviceArea:
        type: string
      stations:
        items:
          $ref: '#/definitions/Station'
        type: array
    title: TvMediaLineupResponse
    type: object
  TvMediaListingResponse:
    description: TvMediaListingResponse
    properties:
      PremieresAndFinalesOnly:
        type: boolean
        x-nullable: false
      artwork:
        $ref: '#/definitions/Artwork'
      blackWhite:
        type: boolean
        x-nullable: false
      breakoutLevel:
        format: int32
        type: integer
        x-nullable: false
      callsign:
        type: string
      captioned:
        type: boolean
        x-nullable: false
      cast:
        type: string
      channelNumber:
        format: int32
        type: integer
        x-nullable: false
      description:
        type: string
      descriptiveVideo:
        type: boolean
        x-nullable: false
      director:
        type: string
      duration:
        format: int32
        type: integer
        x-nullable: false
      educational:
        type: boolean
        x-nullable: false
      episodeNumber:
        type: string
      episodeTitle:
        type: string
      eventName:
        type: string
      externalIds:
        items:
          $ref: '#/definitions/TvMediaExternalId'
        type: array
      guest:
        type: string
      hd:
        type: boolean
        x-nullable: false
      inProgress:
        type: boolean
        x-nullable: false
      isNew:
        type: boolean
        x-nullable: false
      league:
        type: string
      listDateTime:
        type: string
      listingID:
        format: int32
        type: integer
        x-nullable: false
      live:
        type: boolean
        x-nullable: false
      location:
        type: string
      logoFilename:
        type: string
      name:
        type: string
      network:
        type: string
      number:
        type: string
      partNum:
        format: int32
        type: integer
        x-nullable: false
      parts:
        format: int32
        type: integer
        x-nullable: false
      rating:
        type: string
      repeat:
        type: boolean
        x-nullable: false
      seasonFinale:
        type: boolean
        x-nullable: false
      seasonPremiere:
        type: boolean
        x-nullable: false
      seriesFinale:
        type: boolean
        x-nullable: false
      seriesID:
        format: int32
        type: integer
        x-nullable: false
      seriesPremiere:
        type: boolean
        x-nullable: false
      showHost:
        type: string
      showID:
        format: int32
        type: integer
        x-nullable: false
      showName:
        type: string
      showPicture:
        type: string
      showType:
        type: string
      showTypeID:
        type: string
      starRating:
        format: int32
        type: integer
        x-nullable: false
      stationID:
        format: int32
        type: integer
        x-nullable: false
      stationType:
        type: string
      subChannelNumber:
        format: int32
        type: integer
        x-nullable: false
      subtitled:
        type: boolean
        x-nullable: false
      team1:
        type: string
      team1ID:
        format: int32
        type: integer
        x-nullable: false
      team2:
        type: string
      team2ID:
        format: int32
        type: integer
        x-nullable: false
      webLink:
        type: string
      year:
        type: string
    title: TvMediaListingResponse
    type: object
  TvMediaRegionResponse:
    description: TvMediaRegionResponse
    properties:
      regionID:
        type: string
      regionName:
        type: string
    title: TvMediaRegionResponse
    type: object
  TvMediaServiceAreaResponse:
    description: TvMediaServiceAreaResponse
    properties:
      areaID:
        type: string
      areaName:
        type: string
    title: TvMediaServiceAreaResponse
    type: object
  TvMediaShortListingResponse:
    description: TvMediaShortListingResponse
    properties:
      artwork:
        $ref: '#/definitions/Artwork'
      blackWhite:
        type: boolean
        x-nullable: false
      breakoutLevel:
        format: int32
        type: integer
        x-nullable: false
      captioned:
        type: boolean
        x-nullable: false
      cast:
        type: string
      description:
        type: string
      descriptiveVideo:
        type: boolean
        x-nullable: false
      director:
        type: string
      duration:
        format: int32
        type: integer
        x-nullable: false
      educational:
        type: boolean
        x-nullable: false
      episodeNumber:
        type: string
      episodeTitle:
        type: string
      eventName:
        type: string
      guest:
        type: string
      hd:
        type: boolean
        x-nullable: false
      inProgress:
        type: boolean
        x-nullable: false
      isNew:
        type: boolean
        x-nullable: false
      league:
        type: string
      listDateTime:
        type: string
      listingID:
        format: int32
        type: integer
        x-nullable: false
      live:
        type: boolean
        x-nullable: false
      location:
        type: string
      partNum:
        format: int32
        type: integer
        x-nullable: false
      parts:
        format: int32
        type: integer
        x-nullable: false
      rating:
        type: string
      repeat:
        type: boolean
        x-nullable: false
      seasonFinale:
        type: boolean
        x-nullable: false
      seasonPremiere:
        type: boolean
        x-nullable: false
      seriesFinale:
        type: boolean
        x-nullable: false
      seriesID:
        format: int32
        type: integer
        x-nullable: false
      seriesPremiere:
        type: boolean
        x-nullable: false
      showHost:
        type: string
      showID:
        format: int32
        type: integer
        x-nullable: false
      showName:
        type: string
      showPicture:
        type: string
      showType:
        type: string
      showTypeID:
        type: string
      starRating:
        format: int32
        type: integer
        x-nullable: false
      subtitled:
        type: boolean
        x-nullable: false
      team1:
        type: string
      team1ID:
        format: int32
        type: integer
        x-nullable: false
      team2:
        type: string
      team2ID:
        format: int32
        type: integer
        x-nullable: false
      year:
        type: string
    title: TvMediaShortListingResponse
    type: object
  TvMediaStationResponse:
    description: TvMediaStationResponse
    properties:
      DTV_TSID:
        format: int32
        type: integer
        x-nullable: false
      NTSC_TSID:
        format: int32
        type: integer
        x-nullable: false
      Twitter:
        type: string
      callsign:
        type: string
      logoFilename:
        type: string
      name:
        type: string
      network:
        type: string
      stationHD:
        type: boolean
        x-nullable: false
      stationID:
        format: int32
        type: integer
        x-nullable: false
      stationType:
        type: string
      webLink:
        type: string
    title: TvMediaStationResponse
    type: object
  TvMediaTeamResponse:
    description: TvMediaTeamResponse
    properties:
      leagueID:
        type: string
      logo:
        type: string
      longName:
        type: string
      mediumName:
        type: string
      shortName:
        type: string
      teamID:
        format: int32
        type: integer
        x-nullable: false
    title: TvMediaTeamResponse
    type: object
  UpdateMyProgram:
    description: UpdateMyProgram
    properties:
      CustomMetadata:
        description: List of custom metadata entries.
        items:
          $ref: '#/definitions/CustomMetadata'
        type: array
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      Id:
        description: Unique ID of MyVideo.
        format: int64
        type: integer
        x-nullable: false
      ReferenceId:
        description: Client reference ID of MyVideo.
        type: string
      Title:
        description: Title of MyVideo.
        type: string
    title: UpdateMyProgram
    type: object
  UpdateMyVideo:
    description: UpdateMyVideo
    properties:
      Companies:
        description: Companies of MyVideo.
        items:
          type: string
        type: array
      Descriptions:
        description: Description of MyVideo.
        items:
          $ref: '#/definitions/MyVideoDescription'
        type: array
      EntertainmentConnections:
        description: List of connections to existing Entertainment programs.
        items:
          $ref: '#/definitions/EntertainmentConnection'
        type: array
      ExpirationDate:
        description: Date MyVideo expires / becomes unavailable for streaming.
        format: date-time
        type: string
      Id:
        description: Unique ID of MyVideo.
        format: int64
        type: integer
        x-nullable: false
      ReferenceId:
        description: Client reference ID of MyVideo.
        type: string
      StartDate:
        description: First date of MyVideo availability.
        format: date-time
        type: string
      Title:
        description: Title of MyVideo.
        type: string
    title: UpdateMyVideo
    type: object
  VideoDetailReport:
    description: VideoDetailReport
    properties:
      EpisodeHDVideo:
        format: int32
        type: integer
        x-nullable: false
      EpisodesRelated:
        format: int32
        type: integer
        x-nullable: false
      EpisodesTrailers:
        format: int32
        type: integer
        x-nullable: false
      GameTotal:
        format: int32
        type: integer
        x-nullable: false
      GamesRelated:
        format: int32
        type: integer
        x-nullable: false
      GamesTrailers:
        format: int32
        type: integer
        x-nullable: false
      MovieHdVideo:
        format: int32
        type: integer
        x-nullable: false
      MovieInternational:
        format: int32
        type: integer
        x-nullable: false
      MovieRelated:
        format: int32
        type: integer
        x-nullable: false
      MovieTrailers:
        format: int32
        type: integer
        x-nullable: false
      MoviesTotal:
        format: int32
        type: integer
        x-nullable: false
      SeasonHDVideo:
        format: int32
        type: integer
        x-nullable: false
      SeasonsRelated:
        format: int32
        type: integer
        x-nullable: false
      SeasonsTrailers:
        format: int32
        type: integer
        x-nullable: false
      SeriesRelated:
        format: int32
        type: integer
        x-nullable: false
      SeriesTrailers:
        format: int32
        type: integer
        x-nullable: false
      ShowHDVideo:
        format: int32
        type: integer
        x-nullable: false
      TVHd:
        format: int32
        type: integer
        x-nullable: false
      TVTotal:
        format: int32
        type: integer
        x-nullable: false
      Total:
        format: int32
        type: integer
        x-nullable: false
    title: VideoDetailReport
    type: object
  VideoResponse:
    description: VideoResponse
    properties:
      Expires:
        format: date-time
        type: string
        x-nullable: false
      Url:
        type: string
    title: VideoResponse
    type: object
  VideoScreenCapture:
    description: VideoScreenCapture
    properties:
      Aspect:
        type: string
      FilePath:
        type: string
      Height:
        format: int32
        type: integer
        x-nullable: false
      Width:
        format: int32
        type: integer
        x-nullable: false
    title: VideoScreenCapture
    type: object
  VideoTypeResponse:
    description: VideoTypeResponse
    properties:
      Id:
        description: Unique ID of VideoType.
        format: int32
        type: integer
        x-nullable: false
      Type:
        description: Type of VideoType.
        type: string
    title: VideoTypeResponse
    type: object
  XRoadMediaRecommendationResponse:
    description: XRoadMediaRecommendationResponse
    properties:
      recommendations:
        items:
          $ref: '#/definitions/Recommendation'
        type: array
    title: XRoadMediaRecommendationResponse
    type: object
