swagger: '2.0'
schemes:
  - http
  - https
host: api.sportsdata.io
basePath: /v3/cbb/stats
info:
  contact:
    x-twitter: nfldata
  title: CBB v3 Stats
  version: '1.0'
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: 'https://twitter.com/nfldata/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://fantasydata.com/downloads/swagger/cbb-v3-stats.json'
      version: '2.0'
  x-providerName: sportsdata.io
  x-serviceName: cbb-v3-stats
produces:
  - application/json
securityDefinitions:
  apiKeyHeader:
    in: header
    name: Ocp-Apim-Subscription-Key
    type: apiKey
  apiKeyQuery:
    in: query
    name: subscription-key
    type: apiKey
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
tags: []
paths:
  '/{format}/AreAnyGamesInProgress':
    get:
      description: Returns <code>true</code> if there is at least one game being played at the time of the request or <code>false</code> if there are none.
      operationId: AreGamesInProgress
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: boolean
      summary: Are Games In Progress
  '/{format}/BoxScore/{gameid}':
    get:
      operationId: BoxScore
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: The GameID of an CBB game.  GameIDs can be found in the Games API.  Valid entries are <code>14620</code> or <code>16905</code>
          in: path
          name: gameid
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BoxScore'
      summary: Box Score
  '/{format}/BoxScores/{date}':
    get:
      operationId: BoxScoresByDate
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/BoxScore'
            type: array
      summary: Box Scores by Date
  '/{format}/BoxScoresDelta/{date}/{minutes}':
    get:
      operationId: BoxScoresByDateDelta
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
        - description: |-
            Only returns player statistics that have changed in the last X minutes.  You specify how many minutes in time to go back.  Valid entries are:
            <code>1</code> or <code>2</code>.
          in: path
          name: minutes
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/BoxScore'
            type: array
      summary: Box Scores by Date Delta
  '/{format}/CurrentSeason':
    get:
      operationId: CurrentSeason
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Season'
      summary: Current Season
  '/{format}/Games/{season}':
    get:
      operationId: Schedules
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: 'Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018PRE</code>, <code>2018POST</code>, <code>2018STAR</code>, <code>2019</code>, etc.'
          in: path
          name: season
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
      summary: Schedules
  '/{format}/GamesByDate/{date}':
    get:
      operationId: GamesByDate
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
      summary: Games by Date
  '/{format}/LeagueHierarchy':
    get:
      operationId: LeagueHierarchy
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Conference'
            type: array
      summary: League Hierarchy
  '/{format}/Player/{playerid}':
    get:
      operationId: PlayerDetailsByPlayer
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            Unique FantasyData Player ID.
            Example:<code>60003802</code>.
          in: path
          name: playerid
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Player'
      summary: Player Details by Player
  '/{format}/PlayerGameProjectionStatsByDate/{date}':
    get:
      operationId: ProjectedPlayerGameStatsByDate
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/PlayerGameProjection'
            type: array
      summary: Projected Player Game Stats by Date
  '/{format}/PlayerGameProjectionStatsByPlayer/{date}/{playerid}':
    get:
      operationId: ProjectedPlayerGameStatsByPlayer
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
        - description: |-
            Unique FantasyData Player ID.
            Example:<code>60003802</code>.
          in: path
          name: playerid
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PlayerGameProjection'
      summary: Projected Player Game Stats by Player
  '/{format}/PlayerGameStatsByDate/{date}':
    get:
      operationId: PlayerGameStatsByDate
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/PlayerGame'
            type: array
      summary: Player Game Stats by Date
  '/{format}/PlayerGameStatsByPlayer/{date}/{playerid}':
    get:
      operationId: PlayerGameStatsByPlayer
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
        - description: |-
            Unique FantasyData Player ID.
            Example:<code>60003802</code>.
          in: path
          name: playerid
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PlayerGame'
      summary: Player Game Stats by Player
  '/{format}/PlayerSeasonStats/{season}':
    get:
      operationId: PlayerSeasonStats
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: 'Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018POST</code>, <code>2019</code>.'
          in: path
          name: season
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/PlayerSeason'
            type: array
      summary: Player Season Stats
  '/{format}/PlayerSeasonStatsByPlayer/{season}/{playerid}':
    get:
      operationId: PlayerSeasonStatsByPlayer
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: 'Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018POST</code>, <code>2019</code>.'
          in: path
          name: season
          required: true
          type: string
        - description: |-
            Unique FantasyData Player ID.
            Example:<code>60003802</code>.
          in: path
          name: playerid
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PlayerSeason'
      summary: Player Season Stats By Player
  '/{format}/PlayerSeasonStatsByTeam/{season}/{team}':
    get:
      operationId: PlayerSeasonStatsByTeam
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: 'Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018POST</code>, <code>2019</code>.'
          in: path
          name: season
          required: true
          type: string
        - description: |-
            The abbreviation of the requested team.
            <br>Examples: <code>SF</code>, <code>NYY</code>.
          in: path
          name: team
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/PlayerSeason'
            type: array
      summary: Player Season Stats by Team
  '/{format}/Players':
    get:
      operationId: PlayerDetailsByActive
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Player'
            type: array
      summary: Player Details by Active
  '/{format}/Players/{team}':
    get:
      operationId: PlayerDetailsByTeam
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The abbreviation of the requested team.
            <br>Examples: <code>SF</code>, <code>NYY</code>.
          in: path
          name: team
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Player'
            type: array
      summary: Player Details by Team
  '/{format}/Stadiums':
    get:
      operationId: Stadiums
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Stadium'
            type: array
      summary: Stadiums
  '/{format}/TeamGameStatsByDate/{date}':
    get:
      operationId: TeamGameStatsByDate
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
          in: path
          name: date
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/TeamGame'
            type: array
      summary: Team Game Stats by Date
  '/{format}/TeamSeasonStats/{season}':
    get:
      operationId: TeamSeasonStats
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: 'Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018POST</code>, <code>2019</code>.'
          in: path
          name: season
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/TeamSeason'
            type: array
      summary: Team Season Stats
  '/{format}/Tournament/{season}':
    get:
      operationId: TournamentHierarchy
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
        - description: 'Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018POST</code>, <code>2019</code>.'
          in: path
          name: season
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tournament'
      summary: Tournament Hierarchy
  '/{format}/teams':
    get:
      operationId: Teams
      parameters:
        - default: XML
          description: Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
          enum:
            - XML
            - JSON
          in: path
          name: format
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Team'
            type: array
      summary: Teams
definitions:
  BoxScore:
    properties:
      Game:
        $ref: '#/definitions/Game'
      Periods:
        items:
          $ref: '#/definitions/Period'
        type: array
      PlayerGames:
        items:
          $ref: '#/definitions/PlayerGame'
        type: array
      TeamGames:
        items:
          $ref: '#/definitions/TeamGame'
        type: array
  Conference:
    properties:
      ConferenceID:
        type: integer
      Name:
        type: string
      Teams:
        items:
          $ref: '#/definitions/Team'
        type: array
  Game:
    properties:
      AwayTeam:
        type: string
      AwayTeamID:
        type: integer
      AwayTeamMoneyLine:
        type: integer
      AwayTeamPreviousGameID:
        type: integer
      AwayTeamPreviousGlobalGameID:
        type: integer
      AwayTeamScore:
        type: integer
      AwayTeamSeed:
        type: integer
      Bracket:
        type: string
      DateTime:
        type: string
      Day:
        type: string
      GameEndDateTime:
        type: string
      GameID:
        type: integer
      GlobalAwayTeamID:
        type: integer
      GlobalGameID:
        type: integer
      GlobalHomeTeamID:
        type: integer
      HomeTeam:
        type: string
      HomeTeamID:
        type: integer
      HomeTeamMoneyLine:
        type: integer
      HomeTeamPreviousGameID:
        type: integer
      HomeTeamPreviousGlobalGameID:
        type: integer
      HomeTeamScore:
        type: integer
      HomeTeamSeed:
        type: integer
      IsClosed:
        type: boolean
      OverUnder:
        type: number
      Period:
        type: string
      Periods:
        items:
          $ref: '#/definitions/Period'
        type: array
      PointSpread:
        type: number
      Round:
        type: integer
      Season:
        type: integer
      SeasonType:
        type: integer
      Stadium:
        $ref: '#/definitions/Stadium'
      Status:
        type: string
      TimeRemainingMinutes:
        type: integer
      TimeRemainingSeconds:
        type: integer
      TournamentDisplayOrder:
        type: integer
      TournamentDisplayOrderForHomeTeam:
        type: string
      TournamentID:
        type: integer
      Updated:
        type: string
  Period:
    properties:
      AwayScore:
        type: integer
      GameID:
        type: integer
      HomeScore:
        type: integer
      Name:
        type: string
      Number:
        type: integer
      PeriodID:
        type: integer
      Type:
        type: string
  Player:
    properties:
      BirthCity:
        type: string
      BirthState:
        type: string
      Class:
        type: string
      FantasyAlarmPlayerID:
        type: integer
      FirstName:
        type: string
      GlobalTeamID:
        type: integer
      Height:
        type: integer
      HighSchool:
        type: string
      Jersey:
        type: integer
      LastName:
        type: string
      PlayerID:
        type: integer
      Position:
        type: string
      RotoWirePlayerID:
        type: integer
      RotoworldPlayerID:
        type: integer
      SportRadarPlayerID:
        type: string
      Team:
        type: string
      TeamID:
        type: integer
      Weight:
        type: integer
  PlayerGame:
    properties:
      Assists:
        type: integer
      AssistsPercentage:
        type: number
      BlockedShots:
        type: integer
      BlocksPercentage:
        type: number
      DateTime:
        type: string
      Day:
        type: string
      DefensiveRebounds:
        type: integer
      DefensiveReboundsPercentage:
        type: number
      DraftKingsPosition:
        type: string
      DraftKingsSalary:
        type: integer
      EffectiveFieldGoalsPercentage:
        type: number
      FanDuelPosition:
        type: string
      FanDuelSalary:
        type: integer
      FantasyDataSalary:
        type: integer
      FantasyPoints:
        type: number
      FantasyPointsDraftKings:
        type: number
      FantasyPointsFanDuel:
        type: number
      FantasyPointsYahoo:
        type: number
      FieldGoalsAttempted:
        type: integer
      FieldGoalsMade:
        type: integer
      FieldGoalsPercentage:
        type: number
      FreeThrowsAttempted:
        type: integer
      FreeThrowsMade:
        type: integer
      FreeThrowsPercentage:
        type: number
      GameID:
        type: integer
      Games:
        type: integer
      GlobalGameID:
        type: integer
      GlobalOpponentID:
        type: integer
      GlobalTeamID:
        type: integer
      HomeOrAway:
        type: string
      InjuryBodyPart:
        type: string
      InjuryNotes:
        type: string
      InjuryStartDate:
        type: string
      InjuryStatus:
        type: string
      IsGameOver:
        type: boolean
      Minutes:
        type: integer
      Name:
        type: string
      OffensiveRebounds:
        type: integer
      OffensiveReboundsPercentage:
        type: number
      Opponent:
        type: string
      OpponentID:
        type: integer
      OpponentPositionRank:
        type: integer
      OpponentRank:
        type: integer
      PersonalFouls:
        type: integer
      PlayerEfficiencyRating:
        type: number
      PlayerID:
        type: integer
      Points:
        type: integer
      Position:
        type: string
      Rebounds:
        type: integer
      Season:
        type: integer
      SeasonType:
        type: integer
      StatID:
        type: integer
      Steals:
        type: integer
      StealsPercentage:
        type: number
      Team:
        type: string
      TeamID:
        type: integer
      ThreePointersAttempted:
        type: integer
      ThreePointersMade:
        type: integer
      ThreePointersPercentage:
        type: number
      TotalReboundsPercentage:
        type: number
      TrueShootingAttempts:
        type: number
      TrueShootingPercentage:
        type: number
      TurnOversPercentage:
        type: number
      Turnovers:
        type: integer
      TwoPointersAttempted:
        type: integer
      TwoPointersMade:
        type: integer
      TwoPointersPercentage:
        type: number
      Updated:
        type: string
      UsageRatePercentage:
        type: number
      YahooPosition:
        type: string
      YahooSalary:
        type: integer
  PlayerGameProjection:
    properties:
      Assists:
        type: integer
      AssistsPercentage:
        type: number
      BlockedShots:
        type: integer
      BlocksPercentage:
        type: number
      DateTime:
        type: string
      Day:
        type: string
      DefensiveRebounds:
        type: integer
      DefensiveReboundsPercentage:
        type: number
      DraftKingsPosition:
        type: string
      DraftKingsSalary:
        type: integer
      EffectiveFieldGoalsPercentage:
        type: number
      FanDuelPosition:
        type: string
      FanDuelSalary:
        type: integer
      FantasyDataSalary:
        type: integer
      FantasyPoints:
        type: number
      FantasyPointsDraftKings:
        type: number
      FantasyPointsFanDuel:
        type: number
      FantasyPointsYahoo:
        type: number
      FieldGoalsAttempted:
        type: integer
      FieldGoalsMade:
        type: integer
      FieldGoalsPercentage:
        type: number
      FreeThrowsAttempted:
        type: integer
      FreeThrowsMade:
        type: integer
      FreeThrowsPercentage:
        type: number
      GameID:
        type: integer
      Games:
        type: integer
      GlobalGameID:
        type: integer
      GlobalOpponentID:
        type: integer
      GlobalTeamID:
        type: integer
      HomeOrAway:
        type: string
      InjuryBodyPart:
        type: string
      InjuryNotes:
        type: string
      InjuryStartDate:
        type: string
      InjuryStatus:
        type: string
      IsGameOver:
        type: boolean
      Minutes:
        type: integer
      Name:
        type: string
      OffensiveRebounds:
        type: integer
      OffensiveReboundsPercentage:
        type: number
      Opponent:
        type: string
      OpponentID:
        type: integer
      OpponentPositionRank:
        type: integer
      OpponentRank:
        type: integer
      PersonalFouls:
        type: integer
      PlayerEfficiencyRating:
        type: number
      PlayerID:
        type: integer
      Points:
        type: integer
      Position:
        type: string
      Rebounds:
        type: integer
      Season:
        type: integer
      SeasonType:
        type: integer
      StatID:
        type: integer
      Steals:
        type: integer
      StealsPercentage:
        type: number
      Team:
        type: string
      TeamID:
        type: integer
      ThreePointersAttempted:
        type: integer
      ThreePointersMade:
        type: integer
      ThreePointersPercentage:
        type: number
      TotalReboundsPercentage:
        type: number
      TrueShootingAttempts:
        type: number
      TrueShootingPercentage:
        type: number
      TurnOversPercentage:
        type: number
      Turnovers:
        type: integer
      TwoPointersAttempted:
        type: integer
      TwoPointersMade:
        type: integer
      TwoPointersPercentage:
        type: number
      Updated:
        type: string
      UsageRatePercentage:
        type: number
      YahooPosition:
        type: string
      YahooSalary:
        type: integer
  PlayerSeason:
    properties:
      Assists:
        type: integer
      AssistsPercentage:
        type: number
      BlockedShots:
        type: integer
      BlocksPercentage:
        type: number
      DefensiveRebounds:
        type: integer
      DefensiveReboundsPercentage:
        type: number
      EffectiveFieldGoalsPercentage:
        type: number
      FantasyPoints:
        type: number
      FantasyPointsDraftKings:
        type: number
      FantasyPointsFanDuel:
        type: number
      FantasyPointsYahoo:
        type: number
      FieldGoalsAttempted:
        type: integer
      FieldGoalsMade:
        type: integer
      FieldGoalsPercentage:
        type: number
      FreeThrowsAttempted:
        type: integer
      FreeThrowsMade:
        type: integer
      FreeThrowsPercentage:
        type: number
      Games:
        type: integer
      GlobalTeamID:
        type: integer
      Minutes:
        type: integer
      Name:
        type: string
      OffensiveRebounds:
        type: integer
      OffensiveReboundsPercentage:
        type: number
      PersonalFouls:
        type: integer
      PlayerEfficiencyRating:
        type: number
      PlayerID:
        type: integer
      Points:
        type: integer
      Position:
        type: string
      Rebounds:
        type: integer
      Season:
        type: integer
      SeasonType:
        type: integer
      StatID:
        type: integer
      Steals:
        type: integer
      StealsPercentage:
        type: number
      Team:
        type: string
      TeamID:
        type: integer
      ThreePointersAttempted:
        type: integer
      ThreePointersMade:
        type: integer
      ThreePointersPercentage:
        type: number
      TotalReboundsPercentage:
        type: number
      TrueShootingAttempts:
        type: number
      TrueShootingPercentage:
        type: number
      TurnOversPercentage:
        type: number
      Turnovers:
        type: integer
      TwoPointersAttempted:
        type: integer
      TwoPointersMade:
        type: integer
      TwoPointersPercentage:
        type: number
      Updated:
        type: string
      UsageRatePercentage:
        type: number
  Season:
    properties:
      ApiSeason:
        type: string
      Description:
        type: string
      EndYear:
        type: integer
      PostSeasonStartDate:
        type: string
      RegularSeasonStartDate:
        type: string
      Season:
        type: integer
      StartYear:
        type: integer
  Stadium:
    properties:
      Active:
        type: boolean
      Address:
        type: string
      Capacity:
        type: integer
      City:
        type: string
      Country:
        type: string
      Name:
        type: string
      StadiumID:
        type: integer
      State:
        type: string
      Zip:
        type: string
  Team:
    properties:
      Active:
        type: boolean
      ApRank:
        type: integer
      Conference:
        type: string
      ConferenceID:
        type: integer
      ConferenceLosses:
        type: integer
      ConferenceWins:
        type: integer
      GlobalTeamID:
        type: integer
      Losses:
        type: integer
      Name:
        type: string
      School:
        type: string
      ShortDisplayName:
        type: string
      Stadium:
        $ref: '#/definitions/Stadium'
      TeamID:
        type: integer
      TeamLogoUrl:
        type: string
      Wins:
        type: integer
      '[Key]':
        type: string
  TeamGame:
    properties:
      Assists:
        type: integer
      AssistsPercentage:
        type: number
      BlockedShots:
        type: integer
      BlocksPercentage:
        type: number
      ConferenceLosses:
        type: integer
      ConferenceWins:
        type: integer
      DateTime:
        type: string
      Day:
        type: string
      DefensiveRebounds:
        type: integer
      DefensiveReboundsPercentage:
        type: number
      EffectiveFieldGoalsPercentage:
        type: number
      FantasyPoints:
        type: number
      FantasyPointsDraftKings:
        type: number
      FantasyPointsFanDuel:
        type: number
      FantasyPointsYahoo:
        type: number
      FieldGoalsAttempted:
        type: integer
      FieldGoalsMade:
        type: integer
      FieldGoalsPercentage:
        type: number
      FreeThrowsAttempted:
        type: integer
      FreeThrowsMade:
        type: integer
      FreeThrowsPercentage:
        type: number
      GameID:
        type: integer
      Games:
        type: integer
      GlobalGameID:
        type: integer
      GlobalOpponentID:
        type: integer
      GlobalTeamID:
        type: integer
      HomeOrAway:
        type: string
      IsGameOver:
        type: boolean
      Losses:
        type: integer
      Minutes:
        type: integer
      Name:
        type: string
      OffensiveRebounds:
        type: integer
      OffensiveReboundsPercentage:
        type: number
      Opponent:
        type: string
      OpponentID:
        type: integer
      PersonalFouls:
        type: integer
      PlayerEfficiencyRating:
        type: number
      Points:
        type: integer
      Possessions:
        type: number
      Rebounds:
        type: integer
      Season:
        type: integer
      SeasonType:
        type: integer
      StatID:
        type: integer
      Steals:
        type: integer
      StealsPercentage:
        type: number
      Team:
        type: string
      TeamID:
        type: integer
      ThreePointersAttempted:
        type: integer
      ThreePointersMade:
        type: integer
      ThreePointersPercentage:
        type: number
      TotalReboundsPercentage:
        type: number
      TrueShootingAttempts:
        type: number
      TrueShootingPercentage:
        type: number
      TurnOversPercentage:
        type: number
      Turnovers:
        type: integer
      TwoPointersAttempted:
        type: integer
      TwoPointersMade:
        type: integer
      TwoPointersPercentage:
        type: number
      Updated:
        type: string
      UsageRatePercentage:
        type: number
      Wins:
        type: integer
  TeamSeason:
    properties:
      Assists:
        type: integer
      AssistsPercentage:
        type: number
      BlockedShots:
        type: integer
      BlocksPercentage:
        type: number
      ConferenceLosses:
        type: integer
      ConferenceWins:
        type: integer
      DefensiveRebounds:
        type: integer
      DefensiveReboundsPercentage:
        type: number
      EffectiveFieldGoalsPercentage:
        type: number
      FantasyPoints:
        type: number
      FantasyPointsDraftKings:
        type: number
      FantasyPointsFanDuel:
        type: number
      FantasyPointsYahoo:
        type: number
      FieldGoalsAttempted:
        type: integer
      FieldGoalsMade:
        type: integer
      FieldGoalsPercentage:
        type: number
      FreeThrowsAttempted:
        type: integer
      FreeThrowsMade:
        type: integer
      FreeThrowsPercentage:
        type: number
      Games:
        type: integer
      GlobalTeamID:
        type: integer
      Losses:
        type: integer
      Minutes:
        type: integer
      Name:
        type: string
      OffensiveRebounds:
        type: integer
      OffensiveReboundsPercentage:
        type: number
      PersonalFouls:
        type: integer
      PlayerEfficiencyRating:
        type: number
      Points:
        type: integer
      Possessions:
        type: number
      Rebounds:
        type: integer
      Season:
        type: integer
      SeasonType:
        type: integer
      StatID:
        type: integer
      Steals:
        type: integer
      StealsPercentage:
        type: number
      Team:
        type: string
      TeamID:
        type: integer
      ThreePointersAttempted:
        type: integer
      ThreePointersMade:
        type: integer
      ThreePointersPercentage:
        type: number
      TotalReboundsPercentage:
        type: number
      TrueShootingAttempts:
        type: number
      TrueShootingPercentage:
        type: number
      TurnOversPercentage:
        type: number
      Turnovers:
        type: integer
      TwoPointersAttempted:
        type: integer
      TwoPointersMade:
        type: integer
      TwoPointersPercentage:
        type: number
      Updated:
        type: string
      UsageRatePercentage:
        type: number
      Wins:
        type: integer
  Tournament:
    properties:
      Games:
        items:
          $ref: '#/definitions/Game'
        type: array
      LeftBottomBracketConference:
        type: string
      LeftTopBracketConference:
        type: string
      Location:
        type: string
      Name:
        type: string
      RightBottomBracketConference:
        type: string
      RightTopBracketConference:
        type: string
      Season:
        type: integer
      TournamentID:
        type: integer
x-servers:
  - url: 'http://api.sportsdata.io'
  - url: 'https://api.sportsdata.io'
  - url: 'http://api.fantasydata.net'
  - url: 'https://api.fantasydata.net'
