openapi: 3.0.0
servers:
  - url: 'https://recommender.googleapis.com/'
info:
  contact:
    name: Google
    url: 'https://google.com'
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Recommender
  version: v1beta1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://recommender.googleapis.com/$discovery/rest?version=v1beta1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: recommender
externalDocs:
  url: 'https://cloud.google.com/recommender/docs/'
tags:
  - name: projects
paths:
  '/v1beta1/{name}':
    get:
      description: |-
        Gets the requested recommendation. Requires the recommender.*.get
        IAM permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.get
      parameters:
        - description: Name of the recommendation.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Recommendation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
  '/v1beta1/{name}:markClaimed':
    parameters:
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Marks the Recommendation State as Claimed. Users can use this method to
        indicate to the Recommender API that they are starting to apply the
        recommendation themselves. This stops the recommendation content from being
        updated. Associated insights are frozen and placed in the ACCEPTED state.

        MarkRecommendationClaimed can be applied to recommendations in CLAIMED or
        ACTIVE state.

        Requires the recommender.*.update IAM permission for the specified
        recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.markClaimed
      parameters:
        - description: Name of the recommendation.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Recommendation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta1/{name}:markFailed':
    parameters:
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Marks the Recommendation State as Failed. Users can use this method to
        indicate to the Recommender API that they have applied the recommendation
        themselves, and the operation failed. This stops the recommendation content
        from being updated. Associated insights are frozen and placed in the
        ACCEPTED state.

        MarkRecommendationFailed can be applied to recommendations in ACTIVE,
        CLAIMED, SUCCEEDED, or FAILED state.

        Requires the recommender.*.update IAM permission for the specified
        recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.markFailed
      parameters:
        - description: Name of the recommendation.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Recommendation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta1/{name}:markSucceeded':
    parameters:
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Marks the Recommendation State as Succeeded. Users can use this method to
        indicate to the Recommender API that they have applied the recommendation
        themselves, and the operation was successful. This stops the recommendation
        content from being updated. Associated insights are frozen and placed in
        the ACCEPTED state.

        MarkRecommendationSucceeded can be applied to recommendations in ACTIVE,
        CLAIMED, SUCCEEDED, or FAILED state.

        Requires the recommender.*.update IAM permission for the specified
        recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.markSucceeded
      parameters:
        - description: Name of the recommendation.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Recommendation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta1/{parent}/recommendations':
    get:
      description: |-
        Lists recommendations for a Cloud project. Requires the recommender.*.list
        IAM permission for the specified recommender.
      operationId: recommender.projects.locations.recommenders.recommendations.list
      parameters:
        - description: |-
            Required. The container resource on which to execute the request.
            Acceptable formats:

            1.
            "projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]",

            LOCATION here refers to GCP Locations:
            https://cloud.google.com/about/locations/
          in: path
          name: parent
          required: true
          schema:
            type: string
          x-reservedExpansion: true
        - description: |-
            Filter expression to restrict the recommendations returned. Supported
            filter fields: state_info.state
            Eg: `state_info.state:"DISMISSED" or state_info.state:"FAILED"
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Optional. The maximum number of results to return from this request.
            Non-positive values are ignored. If not specified, the server will
            determine the number of results to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional. If present, retrieves the next batch of results from the
            preceding call to this method. `page_token` must be the value of
            `next_page_token` from the previous response. The values of other method
            parameters must be identical to those in the previous call.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1ListRecommendationsResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudRecommenderV1beta1CostProjection:
      description: Contains metadata about how much money a recommendation can save or incur.
      properties:
        cost:
          $ref: '#/components/schemas/GoogleTypeMoney'
          description: |-
            An approximate projection on amount saved or amount incurred. Negative cost
            units indicate cost savings and positive cost units indicate increase.
            See google.type.Money documentation for positive/negative units.
        duration:
          description: Duration for which this cost applies.
          format: google-duration
          type: string
      type: object
    GoogleCloudRecommenderV1beta1Impact:
      description: Contains the impact a recommendation can have for a given category.
      properties:
        category:
          description: Category that is being targeted.
          enum:
            - CATEGORY_UNSPECIFIED
            - COST
            - SECURITY
            - PERFORMANCE
            - MANAGEABILITY
          type: string
        costProjection:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1CostProjection'
          description: Use with CategoryType.COST
      type: object
    GoogleCloudRecommenderV1beta1ListRecommendationsResponse:
      description: Response to the `ListRecommendations` method.
      properties:
        nextPageToken:
          description: |-
            A token that can be used to request the next page of results. This field is
            empty if there are no additional results.
          type: string
        recommendations:
          description: The set of recommendations for the `parent` resource.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Recommendation'
          type: array
      type: object
    GoogleCloudRecommenderV1beta1MarkRecommendationClaimedRequest:
      description: Request for the `MarkRecommendationClaimed` Method.
      properties:
        etag:
          description: Fingerprint of the Recommendation. Provides optimistic locking.
          type: string
        stateMetadata:
          additionalProperties:
            type: string
          description: |-
            State properties to include with this state. Overwrites any existing
            `state_metadata`.
            Keys must match the regex /^a-z0-9{0,62}$/.
            Values must match the regex /^[a-zA-Z0-9_./-]{0,255}$/.
          type: object
      type: object
    GoogleCloudRecommenderV1beta1MarkRecommendationFailedRequest:
      description: Request for the `MarkRecommendationFailed` Method.
      properties:
        etag:
          description: Fingerprint of the Recommendation. Provides optimistic locking.
          type: string
        stateMetadata:
          additionalProperties:
            type: string
          description: |-
            State properties to include with this state. Overwrites any existing
            `state_metadata`.
            Keys must match the regex /^a-z0-9{0,62}$/.
            Values must match the regex /^[a-zA-Z0-9_./-]{0,255}$/.
          type: object
      type: object
    GoogleCloudRecommenderV1beta1MarkRecommendationSucceededRequest:
      description: Request for the `MarkRecommendationSucceeded` Method.
      properties:
        etag:
          description: Fingerprint of the Recommendation. Provides optimistic locking.
          type: string
        stateMetadata:
          additionalProperties:
            type: string
          description: |-
            State properties to include with this state. Overwrites any existing
            `state_metadata`.
            Keys must match the regex /^a-z0-9{0,62}$/.
            Values must match the regex /^[a-zA-Z0-9_./-]{0,255}$/.
          type: object
      type: object
    GoogleCloudRecommenderV1beta1Operation:
      description: |-
        Contains an operation for a resource loosely based on the JSON-PATCH format
        with support for:

        * Custom filters for describing partial array patch.
        * Extended path values for describing nested arrays.
        * Custom fields for describing the resource for which the operation is being
          described.
        * Allows extension to custom operations not natively supported by RFC6902.
        See https://tools.ietf.org/html/rfc6902 for details on the original RFC.
      properties:
        action:
          description: |-
            Type of this operation. Contains one of 'and', 'remove', 'replace', 'move',
            'copy', 'test' and 'custom' operations. This field is case-insensitive and
            always populated.
          type: string
        path:
          description: |-
            Path to the target field being operated on. If the operation is at the
            resource level, then path should be "/". This field is always populated.
          type: string
        pathFilters:
          additionalProperties: {}
          description: |-
            Set of filters to apply if `path` refers to array elements or nested array
            elements in order to narrow down to a single unique element that is being
            tested/modified.
            This is intended to be an exact match per filter. To perform advanced
            matching, use path_value_matchers.

            * Example: {
              "/versions/*/name" : "it-123"
              "/versions/*/targetSize/percent": 20
              }
            * Example: {
              "/bindings/*/role": "roles/admin"
              "/bindings/*/condition" : null
              }
            * Example: {
              "/bindings/*/role": "roles/admin"
              "/bindings/*/members/*" : ["x@google.com", "y@google.com"]
              }
            When both path_filters and path_value_matchers are set, an implicit AND
            must be performed.
          type: object
        pathValueMatchers:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1ValueMatcher'
          description: |-
            Similar to path_filters, this contains set of filters to apply if `path`
            field referes to array elements. This is meant to support value matching
            beyond exact match. To perform exact match, use path_filters.
            When both path_filters and path_value_matchers are set, an implicit AND
            must be performed.
          type: object
        resource:
          description: |-
            Contains the fully qualified resource name. This field is always populated.
            ex: //cloudresourcemanager.googleapis.com/projects/foo.
          type: string
        resourceType:
          description: |-
            Type of GCP resource being modified/tested. This field is always populated.
            Example: cloudresourcemanager.googleapis.com/Project,
            compute.googleapis.com/Instance
          type: string
        sourcePath:
          description: |-
            Can be set with action 'copy' or 'move' to indicate the source field within
            resource or source_resource, ignored if provided for other operation types.
          type: string
        sourceResource:
          description: |-
            Can be set with action 'copy' to copy resource configuration across
            different resources of the same type. Example: A resource clone can be
            done via action = 'copy', path = "/", from = "/",
            source_resource = <source> and resource_name = <target>.
            This field is empty for all other values of `action`.
          type: string
        value:
          description: |-
            Value for the `path` field. Will be set for actions:'add'/'replace'.
            Maybe set for action: 'test'. Either this or `value_matcher` will be set
            for 'test' operation. An exact match must be performed.
        valueMatcher:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1ValueMatcher'
          description: |-
            Can be set for action 'test' for advanced matching for the value of
            'path' field. Either this or `value` will be set for 'test' operation.
      type: object
    GoogleCloudRecommenderV1beta1OperationGroup:
      description: Group of operations that need to be performed atomically.
      properties:
        operations:
          description: |-
            List of operations across one or more resources that belong to this group.
            Loosely based on RFC6902 and should be performed in the order they appear.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Operation'
          type: array
      type: object
    GoogleCloudRecommenderV1beta1Recommendation:
      description: |-
        A recommendation along with a suggested action. E.g., a rightsizing
        recommendation for an underutilized VM, IAM role recommendations, etc
      properties:
        additionalImpact:
          description: |-
            Optional set of additional impact that this recommendation may have when
            trying to optimize for the primary category. These may be positive
            or negative.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Impact'
          type: array
        content:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1RecommendationContent'
          description: Content of the recommendation describing recommended changes to resources.
        description:
          description: |-
            Free-form human readable summary in English. The maximum length is 500
            characters.
          type: string
        etag:
          description: |-
            Fingerprint of the Recommendation. Provides optimistic locking when
            updating states.
          type: string
        lastRefreshTime:
          description: |-
            Last time this recommendation was refreshed by the system that created it
            in the first place.
          format: google-datetime
          type: string
        name:
          description: |-
            Name of recommendation.

            A project recommendation is represented as
              projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/recommendations/[RECOMMENDATION_ID]
          type: string
        primaryImpact:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1Impact'
          description: |-
            The primary impact that this recommendation can have while trying to
            optimize for one category.
        recommenderSubtype:
          description: |-
            Contains an identifier for a subtype of recommendations produced for the
            same recommender. Subtype is a function of content and impact, meaning a
            new subtype might be added when significant changes to `content` or
            `primary_impact.category` are introduced. See the Recommenders section
            to see a list of subtypes for a given Recommender.

            Examples:
              For recommender = "google.iam.policy.Recommender",
              recommender_subtype can be one of "REMOVE_ROLE"/"REPLACE_ROLE"
          type: string
        stateInfo:
          $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1RecommendationStateInfo'
          description: Information for state. Contains state and metadata.
      type: object
    GoogleCloudRecommenderV1beta1RecommendationContent:
      description: Contains what resources are changing and how they are changing.
      properties:
        operationGroups:
          description: |-
            Operations to one or more Google Cloud resources grouped in such a way
            that, all operations within one group are expected to be performed
            atomically and in an order.
          items:
            $ref: '#/components/schemas/GoogleCloudRecommenderV1beta1OperationGroup'
          type: array
      type: object
    GoogleCloudRecommenderV1beta1RecommendationStateInfo:
      description: Information for state. Contains state and metadata.
      properties:
        state:
          description: 'The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.'
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CLAIMED
            - SUCCEEDED
            - FAILED
            - DISMISSED
          type: string
        stateMetadata:
          additionalProperties:
            type: string
          description: 'A map of metadata for the state, provided by user or automations systems.'
          type: object
      type: object
    GoogleCloudRecommenderV1beta1ValueMatcher:
      description: Contains various matching options for values for a GCP resource field.
      properties:
        matchesPattern:
          description: |-
            To be used for full regex matching. The regular expression is using the
            Google RE2 syntax (https://github.com/google/re2/wiki/Syntax), so to be
            used with RE2::FullMatch
          type: string
      type: object
    GoogleTypeMoney:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          description: The 3-letter currency code defined in ISO 4217.
          type: string
        nanos:
          description: |-
            Number of nano (10^-9) units of the amount.
            The value must be between -999,999,999 and +999,999,999 inclusive.
            If `units` is positive, `nanos` must be positive or zero.
            If `units` is zero, `nanos` can be positive, zero, or negative.
            If `units` is negative, `nanos` must be negative or zero.
            For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
          type: integer
        units:
          description: |-
            The whole units of the amount.
            For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          format: int64
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
      type: oauth2
