openapi: 3.0.0
servers:
  - url: 'https://run.googleapis.com/'
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Deploy and manage user provided container images that scale automatically based on HTTP traffic.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Cloud Run
  version: v1beta1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://run.googleapis.com/$discovery/rest?version=v1beta1'
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: run
externalDocs:
  url: 'https://cloud.google.com/run/'
tags:
  - name: namespaces
  - name: projects
  - name: customresourcedefinitions
paths:
  /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions:
    get:
      description: Rpc to list custom resource definitions.
      operationId: run.customresourcedefinitions.list
      parameters:
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          schema:
            type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          schema:
            type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          schema:
            type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - description: |-
            The project ID or project number from which the storages should
            be listed.
          in: query
          name: parent
          schema:
            type: string
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          schema:
            type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCustomResourceDefinitionsResponse'
          description: Successful response
      tags:
        - customresourcedefinitions
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
  '/apis/apiextensions.k8s.io/v1beta1/{name}':
    get:
      description: Rpc to get information about a CustomResourceDefinition.
      operationId: run.namespaces.customresourcedefinitions.get
      parameters:
        - description: |-
            The name of the CustomResourceDefinition being retrieved. If needed,
            replace {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomResourceDefinition'
          description: Successful response
      tags:
        - namespaces
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
  '/v1beta1/{name}':
    get:
      description: Rpc to get information about a CustomResourceDefinition.
      operationId: run.projects.locations.customresourcedefinitions.get
      parameters:
        - description: |-
            The name of the CustomResourceDefinition being retrieved. If needed,
            replace {namespace_id} with the project ID.
          in: path
          name: name
          required: true
          schema:
            type: string
          x-reservedExpansion: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomResourceDefinition'
          description: Successful response
      tags:
        - projects
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
  '/v1beta1/{parent}/customresourcedefinitions':
    get:
      description: Rpc to list custom resource definitions.
      operationId: run.projects.locations.customresourcedefinitions.list
      parameters:
        - description: |-
            The project ID or project number from which the storages should
            be listed.
          in: path
          name: parent
          required: true
          schema:
            type: string
          x-reservedExpansion: true
        - description: Optional encoded string to continue paging.
          in: query
          name: continue
          schema:
            type: string
        - description: |-
            Allows to filter resources based on a specific value for a field name.
            Send this in a query string format. i.e. 'metadata.name%3Dlorem'.
            Not currently used by Cloud Run.
          in: query
          name: fieldSelector
          schema:
            type: string
        - description: Not currently used by Cloud Run.
          in: query
          name: includeUninitialized
          schema:
            type: boolean
        - description: |-
            Allows to filter resources based on a label. Supported operations are
            =, !=, exists, in, and notIn.
          in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - description: |-
            The baseline resource version from which the list or watch operation should
            start. Not currently used by Cloud Run.
          in: query
          name: resourceVersion
          schema:
            type: string
        - description: |-
            Flag that indicates that the client expects to watch this resource as well.
            Not currently used by Cloud Run.
          in: query
          name: watch
          schema:
            type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCustomResourceDefinitionsResponse'
          description: Successful response
      tags:
        - projects
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    CustomResourceColumnDefinition:
      description: CustomResourceColumnDefinition specifies a column for server side printing.
      properties:
        description:
          description: |-
            description is a human readable description of this column.
            +optional
          type: string
        format:
          description: |-
            format is an optional OpenAPI type definition for this column. The 'name'
            format is applied to the primary identifier column to assist in clients
            identifying column is the resource name. See
            https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
            for more. +optional
          type: string
        jsonPath:
          description: 'JSONPath is a simple JSON path, i.e. with array notation.'
          type: string
        name:
          description: name is a human readable name for the column.
          type: string
        priority:
          description: |-
            priority is an integer defining the relative importance of this column
            compared to others. Lower numbers are considered higher priority. Columns
            that may be omitted in limited space scenarios should be given a higher
            priority. +optional
          format: int32
          type: integer
        type:
          description: |-
            type is an OpenAPI type definition for this column.
            See
            https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
            for more.
          type: string
      type: object
    CustomResourceDefinition:
      description: |-
        CustomResourceDefinition represents a resource that should be exposed on the
        API server.  Its name MUST be in the format
        <.spec.name>.<.spec.group>.
      properties:
        apiVersion:
          description: The API version for this call such as "k8s.apiextensions.io/v1beta1".
          type: string
        kind:
          description: 'The kind of resource, in this case always "CustomResourceDefinition".'
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
          description: Metadata associated with this CustomResourceDefinition.
        spec:
          $ref: '#/components/schemas/CustomResourceDefinitionSpec'
          description: Spec describes how the user wants the resources to appear
      type: object
    CustomResourceDefinitionNames:
      description: |-
        CustomResourceDefinitionNames indicates the names to serve this
        CustomResourceDefinition
      properties:
        categories:
          description: |-
            Categories is a list of grouped resources custom resources belong to (e.g.
            'all') +optional
          items:
            type: string
          type: array
        kind:
          description: |-
            Kind is the serialized kind of the resource.  It is normally CamelCase and
            singular.
          type: string
        listKind:
          description: |-
            ListKind is the serialized kind of the list for this resource.  Defaults to
            <kind>List. +optional
          type: string
        plural:
          description: |-
            Plural is the plural name of the resource to serve.  It must match the name
            of the CustomResourceDefinition-registration too: plural.group and it must
            be all lowercase.
          type: string
        shortNames:
          description: |-
            ShortNames are short names for the resource.  It must be all lowercase.
            +optional
          items:
            type: string
          type: array
        singular:
          description: |-
            Singular is the singular name of the resource.  It must be all lowercase
            Defaults to lowercased <kind> +optional
          type: string
      type: object
    CustomResourceDefinitionSpec:
      description: |-
        CustomResourceDefinitionSpec describes how a user wants their resource to
        appear
      properties:
        additionalPrinterColumns:
          description: |-
            AdditionalPrinterColumns are additional columns shown e.g. in kubectl next
            to the name. Defaults to a created-at column. +optional
          items:
            $ref: '#/components/schemas/CustomResourceColumnDefinition'
          type: array
        group:
          description: Group is the group this resource belongs in
          type: string
        names:
          $ref: '#/components/schemas/CustomResourceDefinitionNames'
          description: Names are the names used to describe this custom resource
        scope:
          description: |-
            Scope indicates whether this resource is cluster or namespace scoped.
            Default is namespaced
          type: string
        subresources:
          $ref: '#/components/schemas/CustomResourceSubresources'
          description: |-
            Subresources describes the subresources for CustomResources
            +optional
        validation:
          $ref: '#/components/schemas/CustomResourceValidation'
          description: |-
            Validation describes the validation methods for CustomResources
            +optional
        version:
          description: |-
            Version is the version this resource belongs in
            Should be always first item in Versions field if provided.
            Optional, but at least one of Version or Versions must be set.
            Deprecated: Please use `Versions`.
            +optional
          type: string
        versions:
          description: |-
            Versions is the list of all supported versions for this resource.
            If Version field is provided, this field is optional.
            Validation: All versions must use the same validation schema for now. i.e.,
            top level Validation field is applied to all of these versions. Order: The
            version name will be used to compute the order. If the version string is
            "kube-like", it will sort above non "kube-like" version strings, which are
            ordered lexicographically. "Kube-like" versions start with a "v", then are
            followed by a number (the major version), then optionally the string
            "alpha" or "beta" and another number (the minor version). These are sorted
            first by GA > beta > alpha (where GA is a version with no suffix such as
            beta or alpha), and then by comparing major version, then minor version. An
            example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1,
            v12alpha1, v11alpha2, foo1, foo10. +optional
          items:
            $ref: '#/components/schemas/CustomResourceDefinitionVersion'
          type: array
      type: object
    CustomResourceDefinitionVersion:
      properties:
        name:
          description: 'Name is the version name, e.g. “v1”, “v2beta1”, etc.'
          type: string
        served:
          description: |-
            Served is a flag enabling/disabling this version from being served via REST
            APIs
          type: boolean
        storage:
          description: |-
            Storage flags the version as storage version. There must be exactly one
            flagged as storage version.
          type: boolean
      type: object
    CustomResourceSubresourceScale:
      description: |-
        CustomResourceSubresourceScale defines how to serve the scale subresource for
        CustomResources.
      properties:
        labelSelectorPath:
          description: |-
            LabelSelectorPath defines the JSON path inside of a CustomResource that
            corresponds to Scale.Status.Selector. Only JSON paths without the array
            notation are allowed. Must be a JSON Path under .status. Must be set to
            work with HPA. If there is no value under the given path in the
            CustomResource, the status label selector value in the /scale subresource
            will default to the empty string. +optional
          type: string
        specReplicasPath:
          description: |-
            SpecReplicasPath defines the JSON path inside of a CustomResource that
            corresponds to Scale.Spec.Replicas. Only JSON paths without the array
            notation are allowed. Must be a JSON Path under .spec. If there is no value
            under the given path in the CustomResource, the /scale subresource will
            return an error on GET.
          type: string
        statusReplicasPath:
          description: |-
            StatusReplicasPath defines the JSON path inside of a CustomResource that
            corresponds to Scale.Status.Replicas. Only JSON paths without the array
            notation are allowed. Must be a JSON Path under .status. If there is no
            value under the given path in the CustomResource, the status replica value
            in the /scale subresource will default to 0.
          type: string
      type: object
    CustomResourceSubresourceStatus:
      description: |-
        CustomResourceSubresourceStatus defines how to serve the status subresource
        for CustomResources. Status is represented by the `.status` JSON path inside
        of a CustomResource. When set,
        * exposes a /status subresource for the custom resource
        * PUT requests to the /status subresource take a custom resource object, and
        ignore changes to anything except the status stanza
        * PUT/POST/PATCH requests to the custom resource ignore changes to the status
        stanza
      properties: {}
      type: object
    CustomResourceSubresources:
      description: |-
        CustomResourceSubresources defines the status and scale subresources for
        CustomResources.
      properties:
        scale:
          $ref: '#/components/schemas/CustomResourceSubresourceScale'
          description: |-
            Scale denotes the scale subresource for CustomResources
            +optional
        status:
          $ref: '#/components/schemas/CustomResourceSubresourceStatus'
          description: |-
            Status denotes the status subresource for CustomResources
            +optional
      type: object
    CustomResourceValidation:
      description: CustomResourceValidation is a list of validation methods for CustomResources.
      properties:
        openAPIV3Schema:
          $ref: '#/components/schemas/JSONSchemaProps'
          description: |-
            OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.
            +optional
      type: object
    ExternalDocumentation:
      description: |-
        ExternalDocumentation allows referencing an external resource for extended
        documentation.
      properties:
        description:
          type: string
        url:
          type: string
      type: object
    JSON:
      description: |-
        JSON represents any valid JSON value.
        These types are supported: bool, int64, float64, string, []interface{},
        map[string]interface{} and nil.
      properties:
        raw:
          format: byte
          type: string
      type: object
    JSONSchemaProps:
      description: |-
        JSONSchemaProps is a JSON-Schema following Specification Draft 4
        (http://json-schema.org/).
      properties:
        additionalItems:
          $ref: '#/components/schemas/JSONSchemaPropsOrBool'
        additionalProperties:
          $ref: '#/components/schemas/JSONSchemaPropsOrBool'
        allOf:
          items:
            $ref: '#/components/schemas/JSONSchemaProps'
          type: array
        anyOf:
          items:
            $ref: '#/components/schemas/JSONSchemaProps'
          type: array
        default:
          $ref: '#/components/schemas/JSON'
        definitions:
          additionalProperties:
            $ref: '#/components/schemas/JSONSchemaProps'
          type: object
        dependencies:
          additionalProperties:
            $ref: '#/components/schemas/JSONSchemaPropsOrStringArray'
          type: object
        description:
          type: string
        enum:
          items:
            type: string
          type: array
        example:
          $ref: '#/components/schemas/JSON'
        exclusiveMaximum:
          type: boolean
        exclusiveMinimum:
          type: boolean
        externalDocs:
          $ref: '#/components/schemas/ExternalDocumentation'
        format:
          type: string
        id:
          type: string
        items:
          $ref: '#/components/schemas/JSONSchemaPropsOrArray'
        maxItems:
          format: int64
          type: string
        maxLength:
          format: int64
          type: string
        maxProperties:
          format: int64
          type: string
        maximum:
          format: double
          type: number
        minItems:
          format: int64
          type: string
        minLength:
          format: int64
          type: string
        minProperties:
          format: int64
          type: string
        minimum:
          format: double
          type: number
        multipleOf:
          format: double
          type: number
        not:
          $ref: '#/components/schemas/JSONSchemaProps'
        oneOf:
          items:
            $ref: '#/components/schemas/JSONSchemaProps'
          type: array
        pattern:
          type: string
        patternProperties:
          additionalProperties:
            $ref: '#/components/schemas/JSONSchemaProps'
          type: object
        properties:
          additionalProperties:
            $ref: '#/components/schemas/JSONSchemaProps'
          type: object
        ref:
          type: string
        required:
          items:
            type: string
          type: array
        schema:
          type: string
        title:
          type: string
        type:
          type: string
        uniqueItems:
          type: boolean
      type: object
    JSONSchemaPropsOrArray:
      description: |-
        JSONSchemaPropsOrArray represents a value that can either be a
        JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization
        purposes.
      properties:
        jsonSchemas:
          items:
            $ref: '#/components/schemas/JSONSchemaProps'
          type: array
        schema:
          $ref: '#/components/schemas/JSONSchemaProps'
      type: object
    JSONSchemaPropsOrBool:
      description: |-
        JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value.
        Defaults to true for the boolean property.
      properties:
        allows:
          type: boolean
        schema:
          $ref: '#/components/schemas/JSONSchemaProps'
      type: object
    JSONSchemaPropsOrStringArray:
      description: JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.
      properties:
        property:
          items:
            type: string
          type: array
        schema:
          $ref: '#/components/schemas/JSONSchemaProps'
      type: object
    ListCustomResourceDefinitionsResponse:
      properties:
        apiVersion:
          description: The API version for this call such as "k8s.apiextensions.io/v1beta1".
          type: string
        items:
          description: List of CustomResourceDefinitions.
          items:
            $ref: '#/components/schemas/CustomResourceDefinition'
          type: array
        kind:
          description: 'The kind of this resource, in this case "CustomResourceDefinitionList".'
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
          description: Metadata associated with this CustomResourceDefinition list.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListMeta:
      description: |-
        ListMeta describes metadata that synthetic resources must have, including
        lists and various status objects. A resource may have only one of
        {ObjectMeta, ListMeta}.
      properties:
        continue:
          description: |-
            continue may be set if the user set a limit on the number of items
            returned, and indicates that the server has more data available. The value
            is opaque and may be used to issue another request to the endpoint that
            served this list to retrieve the next set of available objects. Continuing
            a list may not be possible if the server configuration has changed or more
            than a few minutes have passed. The resourceVersion field returned when
            using this continue value will be identical to the value in the first
            response.
          type: string
        resourceVersion:
          description: |-
            String that identifies the server's internal version of this object that
            can be used by clients to determine when objects have changed. Value must
            be treated as opaque by clients and passed unmodified back to the server.
            Populated by the system.
            Read-only.
            More info:
            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
            +optional
          type: string
        selfLink:
          description: |-
            SelfLink is a URL representing this object.
            Populated by the system.
            Read-only.
            +optional
          type: string
      type: object
    ObjectMeta:
      description: |-
        k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all
        persisted resources must have, which includes all objects users must create.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: |-
            (Optional)

            Annotations is an unstructured key value map stored with a resource that
            may be set by external tools to store and retrieve arbitrary metadata. They
            are not queryable and should be preserved when modifying objects. More
            info: http://kubernetes.io/docs/user-guide/annotations
          type: object
        clusterName:
          description: |-
            (Optional)

            Cloud Run fully managed: not supported

            Cloud Run for Anthos: supported

            The name of the cluster which the object belongs to.
            This is used to distinguish resources with same name and namespace in
            different clusters. This field is not set anywhere right now and apiserver
            is going to ignore it if set in create or update request.
          type: string
        creationTimestamp:
          description: |-
            (Optional)

            CreationTimestamp is a timestamp representing the server time when this
            object was created. It is not guaranteed to be set in happens-before order
            across separate operations. Clients may not set this value. It is
            represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info:
            https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          format: google-datetime
          type: string
        deletionGracePeriodSeconds:
          description: |-
            (Optional)

            Cloud Run fully managed: not supported

            Cloud Run for Anthos: supported

            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also
            set. May only be shortened. Read-only.
          format: int32
          type: integer
        deletionTimestamp:
          description: |-
            (Optional)

            Cloud Run fully managed: not supported

            Cloud Run for Anthos: supported

            DeletionTimestamp is RFC 3339 date and time at which this resource will be
            deleted. This field is set by the server when a graceful deletion is
            requested by the user, and is not directly settable by a client. The
            resource is expected to be deleted (no longer visible from resource lists,
            and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items,
            deletion is blocked. Once the deletionTimestamp is set, this value may not
            be unset or be set further into the future, although it may be shortened or
            the resource may be deleted prior to this time. For example, a user may
            request that a pod is deleted in 30 seconds. The Kubelet will react by
            sending a graceful termination signal to the containers in the pod. After
            that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)
            to the container and after cleanup, remove the pod from the API. In the
            presence of network partitions, this object may still exist after this
            timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info:
            https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          format: google-datetime
          type: string
        finalizers:
          description: |-
            (Optional)

            Cloud Run fully managed: not supported

            Cloud Run for Anthos: supported

            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            +patchStrategy=merge
          items:
            type: string
          type: array
        generateName:
          description: |-
            (Optional)

            Cloud Run fully managed: not supported

            Cloud Run for Anthos: supported

            GenerateName is an optional prefix, used by the server, to generate a
            unique name ONLY IF the Name field has not been provided. If this field is
            used, the name returned to the client will be different than the name
            passed. This value will also be combined with a unique suffix. The provided
            value has the same validation rules as the Name field, and may be truncated
            by the length of the suffix required to make the value unique on the
            server.

            If this field is specified and the generated name exists, the server will
            NOT return a 409 - instead, it will either return 201 Created or 500 with
            Reason ServerTimeout indicating a unique name could not be found in the
            time allotted, and the client should retry (optionally after the time
            indicated in the Retry-After header).

            Applied only if Name is not specified.
            More info:
            https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
             string generateName = 2;
          type: string
        generation:
          description: |-
            (Optional)

            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
          format: int32
          type: integer
        labels:
          additionalProperties:
            type: string
          description: |-
            (Optional)

            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and routes.
            More info: http://kubernetes.io/docs/user-guide/labels
          type: object
        name:
          description: |-
            Name must be unique within a namespace, within a Cloud Run region.
            Is required when creating
            resources, although some resources may allow a client to request the
            generation of an appropriate name automatically. Name is primarily intended
            for creation idempotence and configuration definition. Cannot be updated.
            More info: http://kubernetes.io/docs/user-guide/identifiers#names
            +optional
          type: string
        namespace:
          description: |-
            Namespace defines the space within each name must be unique, within a
            Cloud Run region. In Cloud Run the namespace must be equal to either the
            project ID or project number.
          type: string
        ownerReferences:
          description: |-
            (Optional)

            Cloud Run fully managed: not supported

            Cloud Run for Anthos: supported

            List of objects that own this object. If ALL objects in the list have
            been deleted, this object will be garbage collected.
          items:
            $ref: '#/components/schemas/OwnerReference'
          type: array
        resourceVersion:
          description: |-
            (Optional)

            An opaque value that represents the internal version of this object that
            can be used by clients to determine when objects have changed. May be used
            for optimistic concurrency, change detection, and the watch operation on a
            resource or set of resources. Clients must treat these values as opaque and
            passed unmodified back to the server. They may only be valid for a
            particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info:
            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          type: string
        selfLink:
          description: |-
            (Optional)

            SelfLink is a URL representing this object.
            Populated by the system.
            Read-only.
             string selfLink = 4;
          type: string
        uid:
          description: |-
            (Optional)

            UID is the unique in time and space value for this object. It is typically
            generated by the server on successful creation of a resource and is not
            allowed to change on PUT operations.

            Populated by the system.
            Read-only.
            More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          type: string
      type: object
    OwnerReference:
      description: |-
        OwnerReference contains enough information to let you identify an owning
        object. Currently, an owning object must be in the same namespace, so there
        is no namespace field.
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        blockOwnerDeletion:
          description: |-
            If true, AND if the owner has the "foregroundDeletion" finalizer, then
            the owner cannot be deleted from the key-value store until this
            reference is removed.
            Defaults to false.
            To set this field, a user needs "delete" permission of the owner,
            otherwise 422 (Unprocessable Entity) will be returned.
            +optional
          type: boolean
        controller:
          description: |-
            If true, this reference points to the managing controller.
            +optional
          type: boolean
        kind:
          description: |-
            Kind of the referent.
            More info:
            https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
          type: string
        name:
          description: |-
            Name of the referent.
            More info: http://kubernetes.io/docs/user-guide/identifiers#names
          type: string
        uid:
          description: |-
            UID of the referent.
            More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          type: string
      type: object
