openapi: 3.0.0
servers:
  - url: 'https://sqladmin.googleapis.com/'
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: API for Cloud SQL database instance management
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Cloud SQL Admin
  version: v1beta4
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - backend
  x-logo:
    url: 'https://twitter.com/googlecloud/profile_image?size=original'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.31
      format: google
      url: 'https://www.googleapis.com/discovery/v1/apis/sqladmin/v1beta4/rest'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: sqladmin
externalDocs:
  url: 'https://developers.google.com/cloud-sql/'
tags:
  - name: backupRuns
  - name: tiers
  - name: flags
  - name: users
  - name: operations
  - name: instances
  - name: projects
  - name: databases
  - name: sslCerts
paths:
  /sql/v1beta4/flags:
    get:
      description: List all available database flags for Cloud SQL instances.
      operationId: sql.flags.list
      parameters:
        - description: |-
            Database type and version you want to retrieve flags for. By default, this
            method returns flags for all database types and versions.
          in: query
          name: databaseVersion
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FlagsListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - flags
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
  '/sql/v1beta4/projects/{project}/instances':
    get:
      description: Lists instances under a given project.
      operationId: sql.instances.list
      parameters:
        - description: Project ID of the project for which to list Cloud SQL instances.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: |-
            An expression for filtering the results of the request, such as by name or
            label.
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return per response.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: |-
            A previously-returned page token representing part of the larger set of
            results to view.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstancesListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Creates a new Cloud SQL instance.
      operationId: sql.instances.insert
      parameters:
        - description: |-
            Project ID of the project to which the newly created Cloud SQL instances
            should belong.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL creates this database instance.
            Format: projects/{project}/locations/{location}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}':
    delete:
      description: Deletes a Cloud SQL instance.
      operationId: sql.instances.delete
      parameters:
        - description: Project ID of the project that contains the instance to be deleted.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The name of database instance to delete.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
    get:
      description: Retrieves a resource containing information about a Cloud SQL instance.
      operationId: sql.instances.get
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            Name of the resource database instance.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatabaseInstance'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    patch:
      description: |-
        Updates settings of a Cloud SQL instance.
        This method supports patch semantics.
      operationId: sql.instances.patch
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The name of the database instance for Cloud SQL to update.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: resourceName
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
    put:
      description: |-
        Updates settings of a Cloud SQL instance. <aside
        class="caution"><strong>Caution:</strong> This is not a partial update, so
        you must include values for all the settings that you want to retain. For
        partial updates, use <a
        href="/sql/docs/db_path/admin-api/rest/v1beta4/instances/patch">patch</a>.</aside>
      operationId: sql.instances.update
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The name of the database instance for Cloud SQL to update.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: resourceName
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseInstance'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/addServerCa':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Add a new trusted Certificate Authority (CA) version for the specified
        instance. Required to prepare for a certificate rotation. If a CA version
        was previously added but never used in a certificate rotation, this
        operation replaces that version. There cannot be more than one CA version
        waiting to be rotated in.
      operationId: sql.instances.addServerCa
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL should add this server CA.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/backupRuns':
    get:
      description: |-
        Lists all backup runs associated with a given instance and configuration in
        the reverse chronological order of the backup initiation time.
      operationId: sql.backupRuns.list
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Maximum number of backup runs per response.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: |-
            A previously-returned page token representing part of the larger set of
            results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The parent, which owns this collection of backupRuns.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BackupRunsListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - backupRuns
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Creates a new backup run on demand. This method is applicable only to
        Second Generation instances.
      operationId: sql.backupRuns.insert
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL should create this backupRun.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRun'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - backupRuns
  '/sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}':
    delete:
      description: Deletes the backup taken by a backup run.
      operationId: sql.backupRuns.delete
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The ID of the Backup Run to delete. To find a Backup Run ID, use the <a
            href="/sql/docs/db_path/admin-api/rest/v1beta4/backupRuns/list">list</a>
            method.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: |-
            The name of the backupRun to delete.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/backupRuns/{backupRun}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - backupRuns
    get:
      description: Retrieves a resource containing information about a backup run.
      operationId: sql.backupRuns.get
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: The ID of this Backup Run.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: |-
            Name of the resource backupRun.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/backupRuns/{backupRun}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BackupRun'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - backupRuns
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
  '/sql/v1beta4/projects/{project}/instances/{instance}/clone':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Creates a Cloud SQL instance as a clone of the source instance.
      operationId: sql.instances.clone
      parameters:
        - description: Project ID of the source as well as the clone Cloud SQL instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: |-
            The ID of the Cloud SQL instance to be cloned (source). This does not
            include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL should clone this instance.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesCloneRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Generates a short-lived X509 certificate containing the provided public key
        and signed by a private key specific to the target instance. Users may use
        the certificate to authenticate as themselves when connecting to the
        database.
      operationId: sql.sslCerts.createEphemeral
      parameters:
        - description: Project ID of the Cloud SQL project.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL creates this ephemeral certificate.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsCreateEphemeralRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SslCert'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - sslCerts
  '/sql/v1beta4/projects/{project}/instances/{instance}/databases':
    get:
      description: Lists databases in the specified Cloud SQL instance.
      operationId: sql.databases.list
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent, which owns this collection of databases.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatabasesListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - databases
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Inserts a resource containing information about a database inside a Cloud
        SQL instance.
      operationId: sql.databases.insert
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL should add this database.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - databases
  '/sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}':
    delete:
      description: Deletes a database from a Cloud SQL instance.
      operationId: sql.databases.delete
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Name of the database to be deleted in the instance.
          in: path
          name: database
          required: true
          schema:
            type: string
        - description: |-
            The name of the database to delete.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/databases/{database}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - databases
    get:
      description: |-
        Retrieves a resource containing information about a database inside a Cloud
        SQL instance.
      operationId: sql.databases.get
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Name of the database in the instance.
          in: path
          name: database
          required: true
          schema:
            type: string
        - description: |-
            Name of the resource database.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/databases/{database}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Database'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - databases
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    patch:
      description: |-
        Partially updates a resource containing information about a database inside
        a Cloud SQL instance. This method supports patch semantics.
      operationId: sql.databases.patch
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Name of the database to be updated in the instance.
          in: path
          name: database
          required: true
          schema:
            type: string
        - description: |-
            The name of the database for Cloud SQL to update.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/databases/{database}
          in: query
          name: resourceName
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - databases
    put:
      description: |-
        Updates a resource containing information about a database inside a Cloud
        SQL instance.
      operationId: sql.databases.update
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Name of the database to be updated in the instance.
          in: path
          name: database
          required: true
          schema:
            type: string
        - description: |-
            The name of the database for Cloud SQL to update.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/databases/{database}
          in: query
          name: resourceName
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - databases
  '/sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Demotes the stand-alone instance to be a Cloud SQL read replica for an
        external database server.
      operationId: sql.instances.demoteMaster
      parameters:
        - description: ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance name.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL demotes this master database instance.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesDemoteMasterRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/export':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL
        dump or CSV file.
      operationId: sql.instances.export
      parameters:
        - description: Project ID of the project that contains the instance to be exported.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL exports this database instance.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesExportRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/failover':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Failover the instance to its failover replica instance.
      operationId: sql.instances.failover
      parameters:
        - description: ID of the project that contains the read replica.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL sends this database instance during a
            failover. Format:
            projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesFailoverRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/import':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Imports data into a Cloud SQL instance from a SQL dump  or CSV file in
        Cloud Storage.
      operationId: sql.instances.import
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL imports this database instance.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesImportRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/listServerCas':
    get:
      description: |-
        Lists all of the trusted Certificate Authorities (CAs) for the specified
        instance. There can be up to three CAs listed: the CA that was used to sign
        the certificate that is currently in use, a CA that has been added but not
        yet used to sign a certificate, and a CA used to sign a certificate that
        has previously rotated out.
      operationId: sql.instances.listServerCas
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent, which owns this collection of server CAs.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstancesListServerCasResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
  '/sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Promotes the read replica instance to be a stand-alone Cloud SQL instance.
      operationId: sql.instances.promoteReplica
      parameters:
        - description: ID of the project that contains the read replica.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL read replica instance name.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL promotes this replica database
            instance. Format: projects/{project}/locations/{location}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Reschedules the maintenance on the given instance.
      operationId: sql.projects.instances.rescheduleMaintenance
      parameters:
        - description: ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL reshedule this database instance's
            maintenance. Format:
            projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesRescheduleMaintenanceRequestBody'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - projects
  '/sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Deletes all client certificates and generates a new server SSL certificate
        for the instance.
      operationId: sql.instances.resetSslConfig
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL resets this SSL config.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/restart':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Restarts a Cloud SQL instance.
      operationId: sql.instances.restart
      parameters:
        - description: Project ID of the project that contains the instance to be restarted.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL restarts this database instance.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Restores a backup of a Cloud SQL instance.
      operationId: sql.instances.restoreBackup
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL restores this database instance from
            backup. Format:
            projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRestoreBackupRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Rotates the server certificate to one signed by the Certificate Authority
        (CA) version previously added with the addServerCA method.
      operationId: sql.instances.rotateServerCa
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL rotates these server CAs.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesRotateServerCaRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/sslCerts':
    get:
      description: Lists all of the current SSL certificates for the instance.
      operationId: sql.sslCerts.list
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent, which owns this collection of SSL certificates.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SslCertsListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - sslCerts
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: |-
        Creates an SSL certificate and returns it along with the private key and
        server certificate authority.  The new certificate will not be usable until
        the instance is restarted.
      operationId: sql.sslCerts.insert
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL creates this SSL certificate.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SslCertsInsertRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SslCertsInsertResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - sslCerts
  '/sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}':
    delete:
      description: |-
        Deletes the SSL certificate. For First Generation instances, the
        certificate remains valid until the instance is restarted.
      operationId: sql.sslCerts.delete
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Sha1 FingerPrint.
          in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
        - description: |-
            The name of SSL certificate to delete.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/sslCerts/{sslCert}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - sslCerts
    get:
      description: |-
        Retrieves a particular SSL certificate.  Does not include the private key
        (required for usage).  The private key must be saved from the response to
        initial creation.
      operationId: sql.sslCerts.get
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Sha1 FingerPrint.
          in: path
          name: sha1Fingerprint
          required: true
          schema:
            type: string
        - description: |-
            Name of the resource ssl certificate.
            Format:
            projects/{project}/locations/{location}/instances/{instance}/sslCerts/{sslCert}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SslCert'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - sslCerts
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
  '/sql/v1beta4/projects/{project}/instances/{instance}/startReplica':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Starts the replication in the read replica instance.
      operationId: sql.instances.startReplica
      parameters:
        - description: ID of the project that contains the read replica.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL read replica instance name.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL starts this database instance
            replication. Format:
            projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/stopReplica':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Stops the replication in the read replica instance.
      operationId: sql.instances.stopReplica
      parameters:
        - description: ID of the project that contains the read replica.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL read replica instance name.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL stops this database instance
            replication. Format:
            projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/truncateLog':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Truncate MySQL general and slow query log tables
      operationId: sql.instances.truncateLog
      parameters:
        - description: Project ID of the Cloud SQL project.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL truncates this log.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesTruncateLogRequest'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - instances
  '/sql/v1beta4/projects/{project}/instances/{instance}/users':
    delete:
      description: Deletes a user from a Cloud SQL instance.
      operationId: sql.users.delete
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Host of the user in the instance.
          in: query
          name: host
          schema:
            type: string
        - description: Name of the user in the instance.
          in: query
          name: name
          schema:
            type: string
        - description: |-
            The name of the user to delete.
            Format: projects/{project}/locations/{location}/instances/{instance}/users
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - users
    get:
      description: Lists users in the specified Cloud SQL instance.
      operationId: sql.users.list
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent, which owns this collection of users.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Creates a new user in a Cloud SQL instance.
      operationId: sql.users.insert
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: |-
            The parent resource where Cloud SQL creates this user.
            Format: projects/{project}/locations/{location}/instances/{instance}
          in: query
          name: parent
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - users
    put:
      description: Updates an existing user in a Cloud SQL instance.
      operationId: sql.users.update
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Database instance ID. This does not include the project ID.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Optional. Host of the user in the instance.
          in: query
          name: host
          schema:
            type: string
        - description: Name of the user in the instance.
          in: query
          name: name
          schema:
            type: string
        - description: |-
            The name of the user for Cloud SQL to update.
            Format: projects/{project}/locations/{location}/instances/{instance}/users
          in: query
          name: resourceName
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - users
  '/sql/v1beta4/projects/{project}/operations':
    get:
      description: |-
        Lists all instance operations that have been performed on the given Cloud
        SQL instance in the reverse chronological order of the start time.
      operationId: sql.operations.list
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: query
          name: instance
          schema:
            type: string
        - description: Maximum number of operations per response.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: |-
            A previously-returned page token representing part of the larger set of
            results to view.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Indirect parent. The direct parent should combine with the instance name,
            which owns this collection of operations.
            Format:
            projects/{project}/locations/{location}
          in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OperationsListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - operations
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
  '/sql/v1beta4/projects/{project}/operations/{operation}':
    get:
      description: Retrieves an instance operation that has been performed on an instance.
      operationId: sql.operations.get
      parameters:
        - description: Project ID of the project that contains the instance.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Instance operation ID.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: |-
            The name of the operation for Cloud SQL to get.
            Format: projects/{project}/locations/{location}/operations/{operation}
          in: query
          name: resourceName
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - operations
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
  '/sql/v1beta4/projects/{project}/tiers':
    get:
      description: |-
        Lists all available machine types (tiers) for Cloud SQL, for example,
        db-n1-standard-1. For related information, see <a
        href="/sql/pricing">Pricing</a>.
      operationId: sql.tiers.list
      parameters:
        - description: Project ID of the project for which to list tiers.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TiersListResponse'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - tiers
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
  '/sql/v1beta4/{parent}/rescheduleMaintenance':
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
    post:
      description: Reschedules the maintenance on the given instance.
      operationId: sql.projects.locations.instances.rescheduleMaintenance
      parameters:
        - description: |-
            The parent resource where Cloud SQL reshedule this database instance's
            maintenance. Format:
            projects/{project}/locations/{location}/instances/{instance}
          in: path
          name: parent
          required: true
          schema:
            type: string
          x-reservedExpansion: true
        - description: Cloud SQL instance ID. This does not include the project ID.
          in: query
          name: instance
          schema:
            type: string
        - description: ID of the project that contains the instance.
          in: query
          name: project
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlInstancesRescheduleMaintenanceRequestBody'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
          Oauth2c:
            - 'https://www.googleapis.com/auth/sqlservice.admin'
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        default: json
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        default: true
        type: boolean
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  requestBodies:
    Database:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Database'
    DatabaseInstance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DatabaseInstance'
    SqlInstancesRescheduleMaintenanceRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SqlInstancesRescheduleMaintenanceRequestBody'
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
  schemas:
    AclEntry:
      description: An entry for an Access Control list.
      properties:
        expirationTime:
          description: |-
            The time when this access control entry expires in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        kind:
          description: 'This is always <code>sql#aclEntry</code>.'
          type: string
        name:
          description: Optional. A label to identify this entry.
          type: string
        value:
          description: The whitelisted value for the access control list.
          type: string
      type: object
    ApiWarning:
      description: An Admin API warning message.
      properties:
        code:
          description: Code to uniquely identify the warning type.
          enum:
            - SQL_API_WARNING_CODE_UNSPECIFIED
            - REGION_UNREACHABLE
          type: string
        message:
          description: The warning message.
          type: string
      type: object
    BackupConfiguration:
      description: Database instance backup configuration.
      properties:
        binaryLogEnabled:
          description: |-
            Whether binary log is enabled. If backup configuration is disabled, binary
            log must be disabled as well.
          type: boolean
        enabled:
          description: Whether this configuration is enabled.
          type: boolean
        kind:
          description: 'This is always <code>sql#backupConfiguration</code>.'
          type: string
        location:
          description: Location of the backup
          type: string
        replicationLogArchivingEnabled:
          description: Reserved for future use.
          type: boolean
        startTime:
          description: |-
            Start time for the daily backup configuration in UTC timezone in the 24
            hour format - <code>HH:MM</code>.
          type: string
      type: object
    BackupRun:
      description: A BackupRun resource.
      properties:
        description:
          description: 'The description of this run, only applicable to on-demand backups.'
          type: string
        diskEncryptionConfiguration:
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
          description: |-
            Encryption configuration specific to a backup.
            Applies only to Second Generation instances.
        diskEncryptionStatus:
          $ref: '#/components/schemas/DiskEncryptionStatus'
          description: |-
            Encryption status specific to a backup.
            Applies only to Second Generation instances.
        endTime:
          description: |-
            The time the backup operation completed in UTC timezone in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        enqueuedTime:
          description: |-
            The time the run was enqueued in UTC timezone in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        error:
          $ref: '#/components/schemas/OperationError'
          description: |-
            Information about why the backup operation failed. This is only present if
            the run has the FAILED status.
        id:
          description: |-
            The identifier for this backup run. Unique only for a specific Cloud SQL
            instance.
          format: int64
          type: string
        instance:
          description: Name of the database instance.
          type: string
        kind:
          description: 'This is always <code>sql#backupRun</code>.'
          type: string
        location:
          description: Location of the backups.
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        startTime:
          description: |-
            The time the backup operation actually started in UTC timezone in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        status:
          description: The status of this run.
          enum:
            - SQL_BACKUP_RUN_STATUS_UNSPECIFIED
            - ENQUEUED
            - OVERDUE
            - RUNNING
            - FAILED
            - SUCCESSFUL
            - SKIPPED
            - DELETION_PENDING
            - DELETION_FAILED
            - DELETED
          type: string
        type:
          description: The type of this run; can be either "AUTOMATED" or "ON_DEMAND".
          enum:
            - SQL_BACKUP_RUN_TYPE_UNSPECIFIED
            - AUTOMATED
            - ON_DEMAND
          type: string
        windowStartTime:
          description: |-
            The start time of the backup window during which this the backup was
            attempted in <a href="https://tools.ietf.org/html/rfc3339">RFC 3339</a>
            format, for example <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
      type: object
    BackupRunsListResponse:
      description: Backup run list results.
      properties:
        items:
          description: A list of backup runs in reverse chronological order of the enqueued time.
          items:
            $ref: '#/components/schemas/BackupRun'
          type: array
        kind:
          description: 'This is always <code>sql#backupRunsList</code>.'
          type: string
        nextPageToken:
          description: |-
            The continuation token, used to page through large result sets. Provide
            this value in a subsequent request to return the next page of results.
          type: string
      type: object
    BinLogCoordinates:
      description: Binary log coordinates.
      properties:
        binLogFileName:
          description: Name of the binary log file for a Cloud SQL instance.
          type: string
        binLogPosition:
          description: Position (offset) within the binary log file.
          format: int64
          type: string
        kind:
          description: 'This is always <code>sql#binLogCoordinates</code>.'
          type: string
      type: object
    CloneContext:
      description: Database instance clone context.
      properties:
        binLogCoordinates:
          $ref: '#/components/schemas/BinLogCoordinates'
          description: |-
            Binary log coordinates, if specified, identify the position up to which the
            source instance should be cloned. If not specified, the source instance is
            cloned up to the most recent binary log coordinates.
        destinationInstanceName:
          description: Name of the Cloud SQL instance to be created as a clone.
          type: string
        kind:
          description: 'This is always <code>sql#cloneContext</code>.'
          type: string
        pitrTimestampMs:
          description: Reserved for future use.
          format: int64
          type: string
      type: object
    Database:
      description: Represents a SQL database on the Cloud SQL instance.
      properties:
        charset:
          description: The MySQL charset value.
          type: string
        collation:
          description: The MySQL collation value.
          type: string
        etag:
          description: |-
            This field is deprecated and will be removed from a future version of the
            API.
          type: string
        instance:
          description: The name of the Cloud SQL instance. This does not include the project ID.
          type: string
        kind:
          description: 'This is always <code>sql#database</code>.'
          type: string
        name:
          description: |-
            The name of the database in the Cloud SQL instance. This does not include
            the project ID or instance name.
          type: string
        project:
          description: |-
            The project ID of the project containing the Cloud SQL database. The Google
            apps domain is prefixed if applicable.
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        sqlserverDatabaseDetails:
          $ref: '#/components/schemas/SqlServerDatabaseDetails'
      type: object
    DatabaseFlags:
      description: Database flags for Cloud SQL instances.
      properties:
        name:
          description: |-
            The name of the flag. These flags are passed at instance startup, so
            include both server options and system variables for MySQL. Flags should be
            specified with underscores, not hyphens. For more information, see <a
            href="/sql/docs/mysql/flags">Configuring Database Flags</a> in the Cloud
            SQL documentation.
          type: string
        value:
          description: |-
            The value of the flag. Booleans should be set to <code>on</code> for true
            and <code>off</code> for false. This field must be omitted if the flag
            doesn't take a value.
          type: string
      type: object
    DatabaseInstance:
      description: A Cloud SQL instance resource.
      properties:
        backendType:
          description: |-
            <code>FIRST_GEN</code>: First Generation instance. MySQL only. <br
            /><code>SECOND_GEN</code>: Second Generation instance or PostgreSQL
            instance. <br /><code>EXTERNAL</code>: A database server that is not
            managed by Google. <br>This property is read-only; use the
            <code>tier</code> property in the <code>settings</code> object to determine
            the database type and Second or First Generation.
          enum:
            - SQL_BACKEND_TYPE_UNSPECIFIED
            - FIRST_GEN
            - SECOND_GEN
            - EXTERNAL
          type: string
        connectionName:
          description: Connection name of the Cloud SQL instance used in connection strings.
          type: string
        currentDiskSize:
          description: |-
            The current disk usage of the instance in bytes. This property has been
            deprecated. Users should use the
            "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud
            Monitoring API instead. Please see <a
            href="https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ">this
            announcement</a> for details.
          format: int64
          type: string
        databaseVersion:
          description: |-
            The database engine type and version. The <code>databaseVersion</code>
            field can not be changed after instance creation.  MySQL Second Generation
            instances: <code>MYSQL_5_7</code> (default) or <code>MYSQL_5_6</code>.
            PostgreSQL instances: <code>POSTGRES_9_6</code> (default) or
            <code>POSTGRES_11 Beta</code> MySQL First Generation
            instances: <code>MYSQL_5_6</code> (default) or <code>MYSQL_5_5</code>
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - OBSOLETE_MYSQL_5_0
            - MYSQL_5_1
            - MYSQL_5_5
            - MARIADB_10_0
            - MYSQL_5_6
            - MYSQL_5_7
            - OBSOLETE_POSTGRES_9_5
            - SQLSERVER_ENTERPRISE_2016
            - POSTGRES_9_6
            - POSTGRES_11
            - SQLSERVER_2017_STANDARD
            - SQLSERVER_2017_ENTERPRISE
            - SQLSERVER_2017_EXPRESS
            - SQLSERVER_2017_WEB
            - POSTGRES_10
          type: string
        diskEncryptionConfiguration:
          $ref: '#/components/schemas/DiskEncryptionConfiguration'
          description: |-
            Disk encryption configuration specific to an instance.
            Applies only to Second Generation instances.
        diskEncryptionStatus:
          $ref: '#/components/schemas/DiskEncryptionStatus'
          description: |-
            Disk encryption status specific to an instance.
            Applies only to Second Generation instances.
        etag:
          description: |-
            This field is deprecated and will be removed from a future version of the
            API. Use the <code>settings.settingsVersion</code> field instead.
          type: string
        failoverReplica:
          description: |-
            The name and status of the failover replica. This property is applicable
            only to Second Generation instances.
          properties:
            available:
              description: |-
                The availability status of the failover replica. A false status indicates
                that the failover replica is out of sync. The master can only failover to
                the failover replica when the status is true.
              type: boolean
            name:
              description: |-
                The name of the failover replica. If specified at instance creation, a
                failover replica is created for the instance. The name
                doesn't include the project ID. This property is applicable only to
                Second Generation instances.
              type: string
          type: object
        gceZone:
          description: |-
            The Compute Engine zone that the instance is currently serving from. This
            value could be different from the zone that was specified when the instance
            was created if the instance has failed over to its secondary zone.
          type: string
        instanceType:
          description: |-
            The instance type. This can be one of the following.
            <br><code>CLOUD_SQL_INSTANCE</code>: A Cloud SQL instance that is not
            replicating from a master. <br><code>ON_PREMISES_INSTANCE</code>: An
            instance running on the
            customer's premises. <br><code>READ_REPLICA_INSTANCE</code>: A Cloud SQL
            instance configured as a read-replica.
          enum:
            - SQL_INSTANCE_TYPE_UNSPECIFIED
            - CLOUD_SQL_INSTANCE
            - ON_PREMISES_INSTANCE
            - READ_REPLICA_INSTANCE
          type: string
        ipAddresses:
          description: The assigned IP addresses for the instance.
          items:
            $ref: '#/components/schemas/IpMapping'
          type: array
        ipv6Address:
          description: |-
            The IPv6 address assigned to the instance. This property is applicable only
            to First Generation instances.
          type: string
        kind:
          description: 'This is always <code>sql#instance</code>.'
          type: string
        masterInstanceName:
          description: The name of the instance which will act as master in the replication setup.
          type: string
        maxDiskSize:
          description: The maximum disk size of the instance in bytes.
          format: int64
          type: string
        name:
          description: Name of the Cloud SQL instance. This does not include the project ID.
          type: string
        onPremisesConfiguration:
          $ref: '#/components/schemas/OnPremisesConfiguration'
          description: Configuration specific to on-premises instances.
        project:
          description: |-
            The project ID of the project containing the Cloud SQL instance. The Google
            apps domain is prefixed if applicable.
          type: string
        region:
          description: |-
            The geographical region. Can be <code>us-central</code>
            (<code>FIRST_GEN</code> instances only), <code>us-central1</code>
            (<code>SECOND_GEN</code> instances only), <code>asia-east1</code> or
            <code>europe-west1</code>. Defaults to <code>us-central</code> or
            <code>us-central1</code> depending on the instance type (First Generation
            or Second Generation). The region can not be changed after instance
            creation.
          type: string
        replicaConfiguration:
          $ref: '#/components/schemas/ReplicaConfiguration'
          description: Configuration specific to failover replicas and read replicas.
        replicaNames:
          description: The replicas of the instance.
          items:
            type: string
          type: array
        rootPassword:
          description: Initial root password. Use only on creation.
          type: string
        scheduledMaintenance:
          $ref: '#/components/schemas/SqlScheduledMaintenance'
          description: The start time of any upcoming scheduled maintenance for this instance.
        selfLink:
          description: The URI of this resource.
          type: string
        serverCaCert:
          $ref: '#/components/schemas/SslCert'
          description: SSL configuration.
        serviceAccountEmailAddress:
          description: |-
            The service account email address assigned to the instance. This property
            is applicable only to Second Generation instances.
          type: string
        settings:
          $ref: '#/components/schemas/Settings'
          description: The user settings.
        state:
          description: |-
            The current serving state of the Cloud SQL instance. This can be one of the
            following. <br><code>RUNNABLE</code>: The instance is running, or is ready
            to run when accessed. <br><code>SUSPENDED</code>: The instance is not
            available, for example due to problems with billing.
            <br><code>PENDING_CREATE</code>: The instance is being created.
            <br><code>MAINTENANCE</code>: The instance is down for maintenance.
            <br><code>FAILED</code>: The instance creation failed.
            <br><code>UNKNOWN_STATE</code>: The state of the instance is unknown.
          enum:
            - SQL_INSTANCE_STATE_UNSPECIFIED
            - RUNNABLE
            - SUSPENDED
            - PENDING_DELETE
            - PENDING_CREATE
            - MAINTENANCE
            - FAILED
          type: string
        suspensionReason:
          description: 'If the instance state is SUSPENDED, the reason for the suspension.'
          items:
            enum:
              - SQL_SUSPENSION_REASON_UNSPECIFIED
              - BILLING_ISSUE
              - LEGAL_ISSUE
              - OPERATIONAL_ISSUE
              - KMS_KEY_ISSUE
            type: string
          type: array
      type: object
    DatabasesListResponse:
      description: Database list response.
      properties:
        items:
          description: List of database resources in the instance.
          items:
            $ref: '#/components/schemas/Database'
          type: array
        kind:
          description: 'This is always <code>sql#databasesList</code>.'
          type: string
      type: object
    DemoteMasterConfiguration:
      description: Read-replica configuration for connecting to the on-premises master.
      properties:
        kind:
          description: 'This is always <code>sql#demoteMasterConfiguration</code>.'
          type: string
        mysqlReplicaConfiguration:
          $ref: '#/components/schemas/DemoteMasterMySqlReplicaConfiguration'
          description: |-
            MySQL specific configuration when replicating from a MySQL on-premises
            master. Replication configuration information such as the username,
            password, certificates, and keys are not stored in the instance metadata.
            The configuration information is used only to set up the replication
            connection and is stored by MySQL in a file named <code>master.info</code>
            in the data directory.
      type: object
    DemoteMasterContext:
      description: Database instance demote master context.
      properties:
        kind:
          description: 'This is always <code>sql#demoteMasterContext</code>.'
          type: string
        masterInstanceName:
          description: |-
            The name of the instance which will act as on-premises master in the
            replication setup.
          type: string
        replicaConfiguration:
          $ref: '#/components/schemas/DemoteMasterConfiguration'
          description: |-
            Configuration specific to read-replicas replicating from the on-premises
            master.
        verifyGtidConsistency:
          description: |-
            Verify GTID consistency for demote operation. Default value:
            <code>True</code>. Second Generation instances only.  Setting this flag to
            false enables you to bypass GTID consistency check between on-premises
            master and Cloud SQL instance during the demotion operation but also
            exposes you to the risk of future replication failures. Change the value
            only if you know the reason for the GTID divergence and are confident that
            doing so will not cause any replication issues.
          type: boolean
      type: object
    DemoteMasterMySqlReplicaConfiguration:
      description: Read-replica configuration specific to MySQL databases.
      properties:
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        clientCertificate:
          description: PEM representation of the slave's x509 certificate.
          type: string
        clientKey:
          description: |-
            PEM representation of the slave's private key. The corresponsing public key
            is encoded in the client's certificate. The format of the slave's private
            key can be either PKCS #1 or PKCS #8.
          type: string
        kind:
          description: 'This is always <code>sql#demoteMasterMysqlReplicaConfiguration</code>.'
          type: string
        password:
          description: The password for the replication connection.
          type: string
        username:
          description: The username for the replication connection.
          type: string
      type: object
    DiskEncryptionConfiguration:
      description: Disk encryption configuration for an instance.
      properties:
        kind:
          description: 'This is always <code>sql#diskEncryptionConfiguration</code>.'
          type: string
        kmsKeyName:
          description: Resource name of KMS key for disk encryption
          type: string
      type: object
    DiskEncryptionStatus:
      description: Disk encryption status for an instance.
      properties:
        kind:
          description: 'This is always <code>sql#diskEncryptionStatus</code>.'
          type: string
        kmsKeyVersionName:
          description: KMS key version used to encrypt the Cloud SQL instance resource
          type: string
      type: object
    ExportContext:
      description: Database instance export context.
      properties:
        csvExportOptions:
          description: Options for exporting data as CSV.
          properties:
            selectQuery:
              description: The select query used to extract the data.
              type: string
          type: object
        databases:
          description: |-
            Databases to be exported. <br /> <b>MySQL instances:</b> If
            <code>fileType</code> is <code>SQL</code> and no database is specified, all
            databases are exported, except for the <code>mysql</code> system database.
            If <code>fileType</code> is <code>CSV</code>, you can specify one database,
            either by using this property or by using the
            <code>csvExportOptions.selectQuery</code> property, which takes precedence
            over this property. <br /> <b>PostgreSQL instances:</b> You must specify
            one database to be exported. If <code>fileType</code> is <code>CSV</code>,
            this database must match the one specified in the
            <code>csvExportOptions.selectQuery</code> property.
          items:
            type: string
          type: array
        fileType:
          description: |-
            The file type for the specified uri. <br><code>SQL</code>: The file
            contains SQL statements. <br><code>CSV</code>: The file contains CSV data.
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
          type: string
        kind:
          description: 'This is always <code>sql#exportContext</code>.'
          type: string
        sqlExportOptions:
          description: Options for exporting data as SQL statements.
          properties:
            mysqlExportOptions:
              description: Options for exporting from MySQL.
              properties:
                masterData:
                  description: |-
                    Option to include SQL statement required to set up replication.
                    If set to <code>1</code>, the dump file includes
                     a CHANGE MASTER TO statement with the binary log coordinates.
                    If set to <code>2</code>, the CHANGE MASTER TO statement is written as
                     a SQL comment, and has no effect.
                    All other values are ignored.
                  format: int32
                  type: integer
              type: object
            schemaOnly:
              description: Export only schemas.
              type: boolean
            tables:
              description: |-
                Tables to export, or that were exported, from the specified database. If
                you specify tables, specify one and only one database. For PostgreSQL
                instances, you can specify only one table.
              items:
                type: string
              type: array
          type: object
        uri:
          description: |-
            The path to the file in Google Cloud Storage where the export will be
            stored. The URI is in the form <code>gs:
            //bucketName/fileName</code>. If the file already exists, the requests
            // succeeds, but the operation fails. If <code>fileType</code> is
            // <code>SQL</code> and the filename ends with .gz, the contents are
            // compressed.
          type: string
      type: object
    FailoverContext:
      description: Database instance failover context.
      properties:
        kind:
          description: 'This is always <code>sql#failoverContext</code>.'
          type: string
        settingsVersion:
          description: |-
            The current settings version of this instance. Request will be rejected if
            this version doesn't match the current settings version.
          format: int64
          type: string
      type: object
    Flag:
      description: A flag resource.
      properties:
        allowedStringValues:
          description: |-
            For <code>STRING</code> flags, a list of strings that the value can be set
            to.
          items:
            type: string
          type: array
        appliesTo:
          description: |-
            The database version this flag applies to. Can be <code>MYSQL_5_5</code>,
            <code>MYSQL_5_6</code>, or <code>MYSQL_5_7</code>. <code>MYSQL_5_7</code>
            is applicable only to Second Generation instances.
          items:
            enum:
              - SQL_DATABASE_VERSION_UNSPECIFIED
              - OBSOLETE_MYSQL_5_0
              - MYSQL_5_1
              - MYSQL_5_5
              - MARIADB_10_0
              - MYSQL_5_6
              - MYSQL_5_7
              - OBSOLETE_POSTGRES_9_5
              - SQLSERVER_ENTERPRISE_2016
              - POSTGRES_9_6
              - POSTGRES_11
              - SQLSERVER_2017_STANDARD
              - SQLSERVER_2017_ENTERPRISE
              - SQLSERVER_2017_EXPRESS
              - SQLSERVER_2017_WEB
              - POSTGRES_10
            type: string
          type: array
        inBeta:
          description: Whether or not the flag is considered in beta.
          type: boolean
        kind:
          description: 'This is always <code>sql#flag</code>.'
          type: string
        maxValue:
          description: 'For <code>INTEGER</code> flags, the maximum allowed value.'
          format: int64
          type: string
        minValue:
          description: 'For <code>INTEGER</code> flags, the minimum allowed value.'
          format: int64
          type: string
        name:
          description: |-
            This is the name of the flag. Flag names always use underscores, not
            hyphens, e.g. <code>max_allowed_packet</code>
          type: string
        requiresRestart:
          description: |-
            Indicates whether changing this flag will trigger a database restart. Only
            applicable to Second Generation instances.
          type: boolean
        type:
          description: |-
            The type of the flag. Flags are typed to being <code>BOOLEAN</code>,
            <code>STRING</code>, <code>INTEGER</code> or <code>NONE</code>.
            <code>NONE</code> is used for flags which do not take a value, such as
            <code>skip_grant_tables</code>.
          enum:
            - SQL_FLAG_TYPE_UNSPECIFIED
            - BOOLEAN
            - STRING
            - INTEGER
            - NONE
            - MYSQL_TIMEZONE_OFFSET
            - FLOAT
            - REPEATED_STRING
          type: string
      type: object
    FlagsListResponse:
      description: Flags list response.
      properties:
        items:
          description: List of flags.
          items:
            $ref: '#/components/schemas/Flag'
          type: array
        kind:
          description: 'This is always <code>sql#flagsList</code>.'
          type: string
      type: object
    ImportContext:
      description: Database instance import context.
      properties:
        bakImportOptions:
          description: Import parameters specific to SQL Server .BAK files
          properties:
            encryptionOptions:
              properties:
                certPath:
                  description: |-
                    Path to the Certificate (.cer) in Cloud Storage, in the form
                    <code>gs://bucketName/fileName</code>. The instance must have
                    write permissions to the bucket and read access to the file.
                  type: string
                pvkPassword:
                  description: Password that encrypts the private key
                  type: string
                pvkPath:
                  description: |-
                    Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
                    form <code>gs://bucketName/fileName</code>. The instance must have
                    write permissions to the bucket and read access to the file.
                  type: string
              type: object
          type: object
        csvImportOptions:
          description: Options for importing data as CSV.
          properties:
            columns:
              description: |-
                The columns to which CSV data is imported. If not specified, all columns
                of the database table are loaded with CSV data.
              items:
                type: string
              type: array
            table:
              description: The table to which CSV data is imported.
              type: string
          type: object
        database:
          description: |-
            The target database for the import. If <code>fileType</code> is
            <code>SQL</code>, this field is required only if the import file does not
            specify a database, and is overridden by any database specification in the
            import file. If <code>fileType</code> is <code>CSV</code>, one database
            must be specified.
          type: string
        fileType:
          description: |-
            The file type for the specified uri. <br><code>SQL</code>: The file
            contains SQL statements. <br><code>CSV</code>: The file contains CSV data.
          enum:
            - SQL_FILE_TYPE_UNSPECIFIED
            - SQL
            - CSV
            - BAK
          type: string
        importUser:
          description: The PostgreSQL user for this import operation. PostgreSQL instances only.
          type: string
        kind:
          description: 'This is always <code>sql#importContext</code>.'
          type: string
        uri:
          description: |-
            Path to the import file in Cloud Storage, in the form
            <code>gs:
            //bucketName/fileName</code>. Compressed gzip files (.gz) are supported
            // when <code>fileType</code> is <code>SQL</code>. The instance must have
            // write permissions to the bucket and read access to the file.
          type: string
      type: object
    InstancesCloneRequest:
      description: Database instance clone request.
      properties:
        cloneContext:
          $ref: '#/components/schemas/CloneContext'
          description: Contains details about the clone operation.
      type: object
    InstancesDemoteMasterRequest:
      description: Database demote master request.
      properties:
        demoteMasterContext:
          $ref: '#/components/schemas/DemoteMasterContext'
          description: Contains details about the demoteMaster operation.
      type: object
    InstancesExportRequest:
      description: Database instance export request.
      properties:
        exportContext:
          $ref: '#/components/schemas/ExportContext'
          description: Contains details about the export operation.
      type: object
    InstancesFailoverRequest:
      description: Instance failover request.
      properties:
        failoverContext:
          $ref: '#/components/schemas/FailoverContext'
          description: Failover Context.
      type: object
    InstancesImportRequest:
      description: Database instance import request.
      properties:
        importContext:
          $ref: '#/components/schemas/ImportContext'
          description: Contains details about the import operation.
      type: object
    InstancesListResponse:
      description: Database instances list response.
      properties:
        items:
          description: List of database instance resources.
          items:
            $ref: '#/components/schemas/DatabaseInstance'
          type: array
        kind:
          description: 'This is always <code>sql#instancesList</code>.'
          type: string
        nextPageToken:
          description: |-
            The continuation token, used to page through large result sets. Provide
            this value in a subsequent request to return the next page of results.
          type: string
        warnings:
          description: List of warnings that ocurred while handling the request.
          items:
            $ref: '#/components/schemas/ApiWarning'
          type: array
      type: object
    InstancesListServerCasResponse:
      description: Instances ListServerCas response.
      properties:
        activeVersion:
          type: string
        certs:
          description: List of server CA certificates for the instance.
          items:
            $ref: '#/components/schemas/SslCert'
          type: array
        kind:
          description: 'This is always <code>sql#instancesListServerCas</code>.'
          type: string
      type: object
    InstancesRestoreBackupRequest:
      description: Database instance restore backup request.
      properties:
        restoreBackupContext:
          $ref: '#/components/schemas/RestoreBackupContext'
          description: Parameters required to perform the restore backup operation.
      type: object
    InstancesRotateServerCaRequest:
      description: Rotate Server CA request.
      properties:
        rotateServerCaContext:
          $ref: '#/components/schemas/RotateServerCaContext'
          description: Contains details about the rotate server CA operation.
      type: object
    InstancesTruncateLogRequest:
      description: Instance truncate log request.
      properties:
        truncateLogContext:
          $ref: '#/components/schemas/TruncateLogContext'
          description: Contains details about the truncate log operation.
      type: object
    IpConfiguration:
      description: IP Management configuration.
      properties:
        authorizedNetworks:
          description: |-
            The list of external networks that are allowed to connect to the instance
            using the IP. In <a
            href="http://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation">CIDR
            notation</a>, also known as 'slash' notation (e.g.
            <code>192.168.100.0/24</code>).
          items:
            $ref: '#/components/schemas/AclEntry'
          type: array
        ipv4Enabled:
          description: Whether the instance should be assigned an IP address or not.
          type: boolean
        privateNetwork:
          description: |-
            The resource link for the VPC network from which the Cloud SQL instance is
            accessible for private IP. For example,
            <code>/projects/myProject/global/networks/default</code>. This setting can
            be updated, but it cannot be removed after it is set.
          type: string
        requireSsl:
          description: Whether SSL connections over IP should be enforced or not.
          type: boolean
      type: object
    IpMapping:
      description: Database instance IP Mapping.
      properties:
        ipAddress:
          description: The IP address assigned.
          type: string
        timeToRetire:
          description: |-
            The due time for this IP to be retired in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>. This field is only available when
            the IP is scheduled to be retired.
          format: google-datetime
          type: string
        type:
          description: |-
            The type of this IP address. A <code>PRIMARY</code> address is a public
            address that can accept incoming connections. A <code>PRIVATE</code>
            address is a private address that can accept incoming connections. An
            <code>OUTGOING</code> address is the source address of connections
            originating from the instance, if supported.
          enum:
            - SQL_IP_ADDRESS_TYPE_UNSPECIFIED
            - PRIMARY
            - OUTGOING
            - PRIVATE
            - MIGRATED_1ST_GEN
          type: string
      type: object
    LocationPreference:
      description: |-
        Preferred location. This specifies where a Cloud SQL instance should
        preferably be located, either in a specific Compute Engine zone, or
        co-located with an App Engine application. Note that if the preferred
        location is not available, the instance will be located as close as possible
        within the region. Only one location may be specified.
      properties:
        followGaeApplication:
          description: |-
            The AppEngine application to follow, it must be in the same region as the
            Cloud SQL instance.
          type: string
        kind:
          description: 'This is always <code>sql#locationPreference</code>.'
          type: string
        zone:
          description: |-
            The preferred Compute Engine zone (e.g. us-central1-a, us-central1-b,
            etc.).
          type: string
      type: object
    MaintenanceWindow:
      description: |-
        Maintenance window. This specifies when a v2 Cloud SQL instance should
        preferably be restarted for system maintenance purposes.
      properties:
        day:
          description: 'day of week (1-7), starting on Monday.'
          format: int32
          type: integer
        hour:
          description: hour of day - 0 to 23.
          format: int32
          type: integer
        kind:
          description: 'This is always <code>sql#maintenanceWindow</code>.'
          type: string
        updateTrack:
          description: |-
            Maintenance timing setting: <code>canary</code> (Earlier) or
            <code>stable</code> (Later). <br /><a
            href="/sql/docs/db_path/instance-settings#maintenance-timing-2ndgen">
            Learn more</a>.
          enum:
            - SQL_UPDATE_TRACK_UNSPECIFIED
            - canary
            - stable
          type: string
      type: object
    MySqlReplicaConfiguration:
      description: Read-replica configuration specific to MySQL databases.
      properties:
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        clientCertificate:
          description: PEM representation of the slave's x509 certificate.
          type: string
        clientKey:
          description: |-
            PEM representation of the slave's private key. The corresponsing public key
            is encoded in the client's certificate.
          type: string
        connectRetryInterval:
          description: Seconds to wait between connect retries. MySQL's default is 60 seconds.
          format: int32
          type: integer
        dumpFilePath:
          description: |-
            Path to a SQL dump file in Google Cloud Storage from which the slave
            instance is to be created. The URI is in the form gs:
            //bucketName/fileName. Compressed gzip files (.gz) are also supported.
            // Dumps should have the binlog co-ordinates from which replication should
            // begin. This can be accomplished by setting --master-data to 1 when using
            // mysqldump.
          type: string
        kind:
          description: 'This is always <code>sql#mysqlReplicaConfiguration</code>.'
          type: string
        masterHeartbeatPeriod:
          description: Interval in milliseconds between replication heartbeats.
          format: int64
          type: string
        password:
          description: The password for the replication connection.
          type: string
        sslCipher:
          description: A list of permissible ciphers to use for SSL encryption.
          type: string
        username:
          description: The username for the replication connection.
          type: string
        verifyServerCertificate:
          description: |-
            Whether or not to check the master's Common Name value in the certificate
            that it sends during the SSL handshake.
          type: boolean
      type: object
    OnPremisesConfiguration:
      description: On-premises instance configuration.
      properties:
        caCertificate:
          description: PEM representation of the trusted CA's x509 certificate.
          type: string
        clientCertificate:
          description: PEM representation of the slave's x509 certificate.
          type: string
        clientKey:
          description: |-
            PEM representation of the slave's private key. The corresponsing public key
            is encoded in the client's certificate.
          type: string
        hostPort:
          description: 'The host and port of the on-premises instance in host:port format'
          type: string
        kind:
          description: 'This is always <code>sql#onPremisesConfiguration</code>.'
          type: string
      type: object
    Operation:
      description: |-
        An Operation resource.&nbsp;For successful operations that return an
        Operation resource, only the fields relevant to the operation are populated
        in the resource.
      properties:
        endTime:
          description: |-
            The time this operation finished in UTC timezone in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        error:
          $ref: '#/components/schemas/OperationErrors'
          description: |-
            If errors occurred during processing of this operation, this field will be
            populated.
        exportContext:
          $ref: '#/components/schemas/ExportContext'
          description: 'The context for export operation, if applicable.'
        importContext:
          $ref: '#/components/schemas/ImportContext'
          description: 'The context for import operation, if applicable.'
        insertTime:
          description: |-
            The time this operation was enqueued in UTC timezone in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        kind:
          description: 'This is always <code>sql#operation</code>.'
          type: string
        name:
          description: |-
            An identifier that uniquely identifies the operation. You can use this
            identifier to retrieve the Operations resource that has information about
            the operation.
          type: string
        operationType:
          description: |-
            The type of the operation. Valid values are <code>CREATE</code>,
            <code>DELETE</code>, <code>UPDATE</code>, <code>RESTART</code>,
            <code>IMPORT</code>, <code>EXPORT</code>, <code>BACKUP_VOLUME</code>,
            <code>RESTORE_VOLUME</code>, <code>CREATE_USER</code>,
            <code>DELETE_USER</code>, <code>CREATE_DATABASE</code>,
            <code>DELETE_DATABASE</code> .
          enum:
            - SQL_OPERATION_TYPE_UNSPECIFIED
            - IMPORT
            - EXPORT
            - CREATE
            - UPDATE
            - DELETE
            - RESTART
            - BACKUP
            - SNAPSHOT
            - BACKUP_VOLUME
            - DELETE_VOLUME
            - RESTORE_VOLUME
            - INJECT_USER
            - CLONE
            - STOP_REPLICA
            - START_REPLICA
            - PROMOTE_REPLICA
            - CREATE_REPLICA
            - CREATE_USER
            - DELETE_USER
            - UPDATE_USER
            - CREATE_DATABASE
            - DELETE_DATABASE
            - UPDATE_DATABASE
            - FAILOVER
            - DELETE_BACKUP
            - RECREATE_REPLICA
            - TRUNCATE_LOG
            - DEMOTE_MASTER
            - MAINTENANCE
            - ENABLE_PRIVATE_IP
            - DEFER_MAINTENANCE
            - CREATE_CLONE
            - RESCHEDULE_MAINTENANCE
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        startTime:
          description: |-
            The time this operation actually started in UTC timezone in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        status:
          description: |-
            The status of an operation. Valid values are <code>PENDING</code>,
            <code>RUNNING</code>, <code>DONE</code>,
            <code>SQL_OPERATION_STATUS_UNSPECIFIED</code>.
          enum:
            - SQL_OPERATION_STATUS_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          type: string
        targetId:
          description: Name of the database instance related to this operation.
          type: string
        targetLink:
          type: string
        targetProject:
          description: The project ID of the target instance related to this operation.
          type: string
        user:
          description: The email address of the user who initiated this operation.
          type: string
      type: object
    OperationError:
      description: Database instance operation error.
      properties:
        code:
          description: Identifies the specific error that occurred.
          type: string
        kind:
          description: 'This is always <code>sql#operationError</code>.'
          type: string
        message:
          description: Additional information about the error encountered.
          type: string
      type: object
    OperationErrors:
      description: Database instance operation errors list wrapper.
      properties:
        errors:
          description: The list of errors encountered while processing this operation.
          items:
            $ref: '#/components/schemas/OperationError'
          type: array
        kind:
          description: 'This is always <code>sql#operationErrors</code>.'
          type: string
      type: object
    OperationsListResponse:
      description: Database instance list operations response.
      properties:
        items:
          description: List of operation resources.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        kind:
          description: 'This is always <code>sql#operationsList</code>.'
          type: string
        nextPageToken:
          description: |-
            The continuation token, used to page through large result sets. Provide
            this value in a subsequent request to return the next page of results.
          type: string
      type: object
    ReplicaConfiguration:
      description: Read-replica configuration for connecting to the master.
      properties:
        failoverTarget:
          description: |-
            Specifies if the replica is the failover target. If the field is set to
            <code>true</code> the replica will be designated as a failover replica. In
            case the master instance fails, the replica instance will be promoted as
            the new master instance.  <p>Only one replica can be specified as failover
            target, and the replica has to be in different zone with the master
            instance.
          type: boolean
        kind:
          description: 'This is always <code>sql#replicaConfiguration</code>.'
          type: string
        mysqlReplicaConfiguration:
          $ref: '#/components/schemas/MySqlReplicaConfiguration'
          description: |-
            MySQL specific configuration when replicating from a MySQL on-premises
            master. Replication configuration information such as the username,
            password, certificates, and keys are not stored in the instance metadata.
            The configuration information is used only to set up the replication
            connection and is stored by MySQL in a file named <code>master.info</code>
            in the data directory.
      type: object
    Reschedule:
      properties:
        rescheduleType:
          description: Required. The type of the reschedule.
          enum:
            - RESCHEDULE_TYPE_UNSPECIFIED
            - IMMEDIATE
            - NEXT_AVAILABLE_WINDOW
            - SPECIFIC_TIME
          type: string
        scheduleTime:
          description: |-
            Optional. Timestamp when the maintenance shall be rescheduled to if
            reschedule_type=SPECIFIC_TIME.
          format: google-datetime
          type: string
      type: object
    RestoreBackupContext:
      description: |-
        Database instance restore from backup context.
        Backup context contains source instance id and project id.
      properties:
        backupRunId:
          description: The ID of the backup run to restore from.
          format: int64
          type: string
        instanceId:
          description: The ID of the instance that the backup was taken from.
          type: string
        kind:
          description: 'This is always <code>sql#restoreBackupContext</code>.'
          type: string
        project:
          description: The full project ID of the source instance.
          type: string
      type: object
    RotateServerCaContext:
      description: Instance rotate server CA context.
      properties:
        kind:
          description: 'This is always <code>sql#rotateServerCaContext</code>.'
          type: string
        nextVersion:
          description: |-
            The fingerprint of the next version to be rotated to. If left unspecified,
            will be rotated to the most recently added server CA version.
          type: string
      type: object
    Settings:
      description: Database instance settings.
      properties:
        activationPolicy:
          description: |-
            The activation policy specifies when the instance is activated; it is
            applicable only when the instance state is <code>RUNNABLE</code>. Valid
            values: <br><code>ALWAYS</code>: The instance is on, and remains so even in
            the absence of connection requests. <br><code>NEVER</code>: The instance is
            off; it is not activated, even if a connection request arrives.
            <br><code>ON_DEMAND</code>: First Generation instances only. The instance
            responds to incoming requests, and turns itself off when not in use.
            Instances with <code>PER_USE</code> pricing turn off after 15 minutes of
            inactivity. Instances with <code>PER_PACKAGE</code> pricing turn off after
            12 hours of inactivity.
          enum:
            - SQL_ACTIVATION_POLICY_UNSPECIFIED
            - ALWAYS
            - NEVER
            - ON_DEMAND
          type: string
        authorizedGaeApplications:
          description: |-
            The App Engine app IDs that can access this instance. First Generation
            instances only.
          items:
            type: string
          type: array
        availabilityType:
          description: |-
            Availability type (PostgreSQL instances only). Potential values:
            <br><code>ZONAL</code>: The instance serves data from only one zone.
            Outages in that zone affect data accessibility. <br><code>REGIONAL</code>:
            The instance can serve data from more than one zone in a region (it is
            highly available). <br>For more information, see <a
            href="https://cloud.google.com/sql/docs/postgres/high-availability">Overview
            of the High Availability Configuration</a>.
          enum:
            - SQL_AVAILABILITY_TYPE_UNSPECIFIED
            - ZONAL
            - REGIONAL
          type: string
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
          description: The daily backup configuration for the instance.
        crashSafeReplicationEnabled:
          description: |-
            Configuration specific to read replica instances. Indicates whether
            database flags for crash-safe replication are enabled. This property is
            only applicable to First Generation instances.
          type: boolean
        dataDiskSizeGb:
          description: |-
            The size of data disk, in GB. The data disk size minimum is 10GB. Not used
            for First Generation instances.
          format: int64
          type: string
        dataDiskType:
          description: |-
            The type of data disk: <code>PD_SSD</code> (default) or
            <code>PD_HDD</code>. Not used for First Generation instances.
          enum:
            - SQL_DATA_DISK_TYPE_UNSPECIFIED
            - PD_SSD
            - PD_HDD
            - OBSOLETE_LOCAL_SSD
          type: string
        databaseFlags:
          description: The database flags passed to the instance at startup.
          items:
            $ref: '#/components/schemas/DatabaseFlags'
          type: array
        databaseReplicationEnabled:
          description: |-
            Configuration specific to read replica instances. Indicates whether
            replication is enabled or not.
          type: boolean
        ipConfiguration:
          $ref: '#/components/schemas/IpConfiguration'
          description: |-
            The settings for IP Management. This allows to enable or disable the
            instance IP and manage which external networks can connect to the instance.
            The IPv4 address cannot be disabled for Second Generation instances.
        kind:
          description: 'This is always <code>sql#settings</code>.'
          type: string
        locationPreference:
          $ref: '#/components/schemas/LocationPreference'
          description: |-
            The location preference settings. This allows the instance to be located as
            near as possible to either an App Engine app or Compute Engine zone for
            better performance. App Engine co-location is only applicable to First
            Generation instances.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: |-
            The maintenance window for this instance. This specifies when the instance
            can be restarted for maintenance purposes. Not used for First Generation
            instances.
        pricingPlan:
          description: |-
            The pricing plan for this instance. This can be either <code>PER_USE</code>
            or <code>PACKAGE</code>. Only <code>PER_USE</code> is supported for Second
            Generation instances.
          enum:
            - SQL_PRICING_PLAN_UNSPECIFIED
            - PACKAGE
            - PER_USE
          type: string
        replicationType:
          description: |-
            The type of replication this instance uses. This can be either
            <code>ASYNCHRONOUS</code> or <code>SYNCHRONOUS</code>. This property is
            only applicable to First Generation instances.
          enum:
            - SQL_REPLICATION_TYPE_UNSPECIFIED
            - SYNCHRONOUS
            - ASYNCHRONOUS
          type: string
        settingsVersion:
          description: |-
            The version of instance settings. This is a required field for update
            method to make sure concurrent updates are handled properly. During update,
            use the most recent settingsVersion value for this instance and do not try
            to update this value.
          format: int64
          type: string
        storageAutoResize:
          description: |-
            Configuration to increase storage size automatically. The default value is
            true. Not used for First Generation instances.
          type: boolean
        storageAutoResizeLimit:
          description: |-
            The maximum size to which storage capacity can be automatically increased.
            The default value is 0, which specifies that there is no limit. Not used
            for First Generation instances.
          format: int64
          type: string
        tier:
          description: |-
            The tier (or machine type) for this instance, for example
            <code>db-n1-standard-1</code> (MySQL instances) or
            <code>db-custom-1-3840</code> (PostgreSQL instances). For MySQL instances,
            this property determines whether the instance is First or Second
            Generation. For more information, see <a
            href="/sql/docs/db_path/instance-settings">Instance Settings</a>.
          type: string
        userLabels:
          additionalProperties:
            type: string
          description: |-
            User-provided labels, represented as a dictionary where each label is a
            single key value pair.
          type: object
      type: object
    SqlInstancesRescheduleMaintenanceRequestBody:
      description: Reschedule options for maintenance windows.
      properties:
        reschedule:
          $ref: '#/components/schemas/Reschedule'
          description: Required. The type of the reschedule the user wants.
      type: object
    SqlScheduledMaintenance:
      description: Any scheduled maintenancce for this instance.
      properties:
        canDefer:
          type: boolean
        canReschedule:
          description: If the scheduled maintenance can be rescheduled.
          type: boolean
        startTime:
          description: The start time of any upcoming scheduled maintenance for this instance.
          format: google-datetime
          type: string
      type: object
    SqlServerDatabaseDetails:
      description: Represents a Sql Server database on the Cloud SQL instance.
      properties:
        compatibilityLevel:
          description: The version of SQL Server with which the database is to be made compatible
          format: int32
          type: integer
        recoveryModel:
          description: The recovery model of a SQL Server database
          type: string
      type: object
    SslCert:
      description: SslCerts Resource
      properties:
        cert:
          description: PEM representation.
          type: string
        certSerialNumber:
          description: 'Serial number, as extracted from the certificate.'
          type: string
        commonName:
          description: 'User supplied name.  Constrained to [a-zA-Z.-_ ]+.'
          type: string
        createTime:
          description: |-
            The time when the certificate was created in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>
          format: google-datetime
          type: string
        expirationTime:
          description: |-
            The time when the certificate expires in <a
            href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, for example
            <code>2012-11-15T16:19:00.094Z</code>.
          format: google-datetime
          type: string
        instance:
          description: Name of the database instance.
          type: string
        kind:
          description: 'This is always <code>sql#sslCert</code>.'
          type: string
        selfLink:
          description: The URI of this resource.
          type: string
        sha1Fingerprint:
          description: Sha1 Fingerprint.
          type: string
      type: object
    SslCertDetail:
      description: SslCertDetail.
      properties:
        certInfo:
          $ref: '#/components/schemas/SslCert'
          description: The public information about the cert.
        certPrivateKey:
          description: |-
            The private key for the client cert, in pem format.  Keep private in order
            to protect your security.
          type: string
      type: object
    SslCertsCreateEphemeralRequest:
      description: SslCerts create ephemeral certificate request.
      properties:
        public_key:
          description: PEM encoded public key to include in the signed certificate.
          type: string
      type: object
    SslCertsInsertRequest:
      description: SslCerts insert request.
      properties:
        commonName:
          description: |-
            User supplied name.  Must be a distinct name from the other certificates
            for this instance.
          type: string
      type: object
    SslCertsInsertResponse:
      description: SslCert insert response.
      properties:
        clientCert:
          $ref: '#/components/schemas/SslCertDetail'
          description: |-
            The new client certificate and private key.  For First Generation
            instances, the new certificate does not take effect until the instance is
            restarted.
        kind:
          description: 'This is always <code>sql#sslCertsInsert</code>.'
          type: string
        operation:
          $ref: '#/components/schemas/Operation'
          description: The operation to track the ssl certs insert request.
        serverCaCert:
          $ref: '#/components/schemas/SslCert'
          description: |-
            The server Certificate Authority's certificate.  If this is missing you can
            force a new one to be generated by calling resetSslConfig method on
            instances resource.
      type: object
    SslCertsListResponse:
      description: SslCerts list response.
      properties:
        items:
          description: List of client certificates for the instance.
          items:
            $ref: '#/components/schemas/SslCert'
          type: array
        kind:
          description: 'This is always <code>sql#sslCertsList</code>.'
          type: string
      type: object
    Tier:
      description: A Google Cloud SQL service tier resource.
      properties:
        DiskQuota:
          description: The maximum disk size of this tier in bytes.
          format: int64
          type: string
        RAM:
          description: The maximum RAM usage of this tier in bytes.
          format: int64
          type: string
        kind:
          description: 'This is always <code>sql#tier</code>.'
          type: string
        region:
          description: The applicable regions for this tier.
          items:
            type: string
          type: array
        tier:
          description: |-
            An identifier for the machine type, for example, db-n1-standard-1. For
            related information, see <a href="/sql/pricing">Pricing</a>.
          type: string
      type: object
    TiersListResponse:
      description: Tiers list response.
      properties:
        items:
          description: List of tiers.
          items:
            $ref: '#/components/schemas/Tier'
          type: array
        kind:
          description: 'This is always <code>sql#tiersList</code>.'
          type: string
      type: object
    TruncateLogContext:
      description: Database Instance truncate log context.
      properties:
        kind:
          description: 'This is always <code>sql#truncateLogContext</code>.'
          type: string
        logType:
          description: |-
            The type of log to truncate. Valid values are
            <code>MYSQL_GENERAL_TABLE</code> and <code>MYSQL_SLOW_TABLE</code>.
          type: string
      type: object
    User:
      description: A Cloud SQL user resource.
      properties:
        etag:
          description: |-
            This field is deprecated and will be removed from a future version of the
            API.
          type: string
        host:
          description: |-
            The host name from which the user can connect. For <code>insert</code>
            operations, host defaults to an empty string. For <code>update</code>
            operations, host is specified as part of the request URL. The host name
            cannot be updated after insertion.
          type: string
        instance:
          description: |-
            The name of the Cloud SQL instance. This does not include the project ID.
            Can be omitted for <code>update</code> since it is already specified on the
            URL.
          type: string
        kind:
          description: 'This is always <code>sql#user</code>.'
          type: string
        name:
          description: |-
            The name of the user in the Cloud SQL instance. Can be omitted for
            <code>update</code> since it is already specified in the URL.
          type: string
        password:
          description: The password for the user.
          type: string
        project:
          description: |-
            The project ID of the project containing the Cloud SQL database. The Google
            apps domain is prefixed if applicable. Can be omitted for
            <code>update</code> since it is already specified on the URL.
          type: string
      type: object
    UsersListResponse:
      description: User list response.
      properties:
        items:
          description: List of user resources in the instance.
          items:
            $ref: '#/components/schemas/User'
          type: array
        kind:
          description: 'This is always <code>sql#usersList</code>.'
          type: string
        nextPageToken:
          description: |-
            An identifier that uniquely identifies the operation. You can use this
            identifier to retrieve the Operations resource that has information about
            the operation.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/sqlservice.admin': Manage your Google SQL Service instances
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
            'https://www.googleapis.com/auth/sqlservice.admin': Manage your Google SQL Service instances
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
      type: oauth2
