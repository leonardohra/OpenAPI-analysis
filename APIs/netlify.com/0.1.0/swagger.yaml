swagger: '2.0'
schemes:
  - https
host: api.netlify.com
basePath: /api/v1
info:
  contact:
    x-twitter: Netlify
  title: Netlify's API definition
  version: 0.1.0
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://twitter.com/Netlify/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/netlify/open-api/master/ui/swagger.json'
      version: '2.0'
  x-providerName: netlify.com
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  netlifyAuth:
    authorizationUrl: 'https://app.netlify.com/authorize'
    flow: implicit
    type: oauth2
security:
  - netlifyAuth: []
responses:
  error:
    description: error
    schema:
      $ref: '#/definitions/error'
paths:
  /accounts:
    get:
      operationId: listAccountsForUser
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/accountMembership'
            type: array
        default:
          $ref: '#/responses/error'
    post:
      operationId: createAccount
      parameters:
        - in: body
          name: accountSetup
          required: true
          schema:
            $ref: '#/definitions/accountSetup'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/accountMembership'
        default:
          $ref: '#/responses/error'
  /accounts/types:
    get:
      operationId: listAccountTypesForUser
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/accountType'
            type: array
        default:
          $ref: '#/responses/error'
  '/accounts/{account_id}':
    delete:
      operationId: cancelAccount
      responses:
        '204':
          description: Not Content
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: account_id
        required: true
        type: string
    put:
      operationId: updateAccount
      parameters:
        - in: body
          name: accountUpdateSetup
          schema:
            $ref: '#/definitions/accountUpdateSetup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/accountMembership'
        default:
          $ref: '#/responses/error'
  '/accounts/{account_id}/audit':
    get:
      operationId: listAccountAuditEvents
      parameters:
        - in: query
          name: query
          type: string
        - in: query
          name: log_type
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/auditLog'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: account_id
        required: true
        type: string
  /billing/payment_methods:
    get:
      operationId: listPaymentMethodsForUser
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/paymentMethod'
            type: array
        default:
          $ref: '#/responses/error'
  '/builds/{build_id}':
    get:
      operationId: getSiteBuild
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/build'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: build_id
        required: true
        type: string
  '/builds/{build_id}/log':
    parameters:
      - in: path
        name: build_id
        required: true
        type: string
      - in: body
        name: msg
        required: true
        schema:
          $ref: '#/definitions/buildLogMsg'
    post:
      operationId: updateSiteBuildLog
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/error'
  '/builds/{build_id}/start':
    parameters:
      - in: path
        name: build_id
        required: true
        type: string
    post:
      operationId: notifyBuildStart
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/error'
  /deploy_keys:
    get:
      operationId: listDeployKeys
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/deployKey'
            type: array
        default:
          $ref: '#/responses/error'
    post:
      operationId: createDeployKey
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/deployKey'
        default:
          $ref: '#/responses/error'
  '/deploy_keys/{key_id}':
    delete:
      operationId: deleteDeployKey
      responses:
        '204':
          description: Not Content
        default:
          $ref: '#/responses/error'
    get:
      operationId: getDeployKey
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/deployKey'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: key_id
        required: true
        type: string
  '/deploys/{deploy_id}':
    get:
      operationId: getDeploy
      parameters:
        - in: path
          name: deploy_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/deploy'
        default:
          $ref: '#/responses/error'
  '/deploys/{deploy_id}/files/{path}':
    put:
      consumes:
        - application/octet-stream
      operationId: uploadDeployFile
      parameters:
        - in: path
          name: deploy_id
          required: true
          type: string
        - in: path
          name: path
          required: true
          type: string
        - in: body
          name: file_body
          required: true
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/file'
        default:
          $ref: '#/responses/error'
  '/deploys/{deploy_id}/functions/{name}':
    put:
      consumes:
        - application/octet-stream
      operationId: uploadDeployFunction
      parameters:
        - in: path
          name: deploy_id
          required: true
          type: string
        - in: path
          name: name
          required: true
          type: string
        - in: query
          name: runtime
          type: string
        - in: body
          name: file_body
          required: true
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/function'
        default:
          $ref: '#/responses/error'
  '/deploys/{deploy_id}/lock':
    post:
      operationId: lockDeploy
      parameters:
        - in: path
          name: deploy_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/deploy'
        default:
          $ref: '#/responses/error'
  '/deploys/{deploy_id}/unlock':
    post:
      operationId: unlockDeploy
      parameters:
        - in: path
          name: deploy_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/deploy'
        default:
          $ref: '#/responses/error'
  /forms:
    get:
      operationId: listForms
      parameters:
        - in: query
          name: site_id
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/form'
            type: array
        default:
          $ref: '#/responses/error'
  '/forms/{form_id}/submissions':
    get:
      operationId: listFormSubmissions
      parameters:
        - in: path
          name: form_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/submission'
            type: array
        default:
          $ref: '#/responses/error'
  /hooks:
    get:
      operationId: listHooksBySiteId
      parameters:
        - in: query
          name: site_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/hook'
            type: array
        default:
          $ref: '#/responses/error'
    post:
      operationId: createHookBySiteId
      parameters:
        - in: query
          name: site_id
          required: true
          type: string
        - in: body
          name: hook
          required: true
          schema:
            $ref: '#/definitions/hook'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/hook'
        default:
          $ref: '#/responses/error'
  /hooks/types:
    get:
      operationId: listHookTypes
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/hookType'
            type: array
        default:
          $ref: '#/responses/error'
  '/hooks/{hook_id}':
    delete:
      operationId: deleteHookBySiteId
      responses:
        '204':
          description: No content
    get:
      operationId: getHook
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/hook'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: hook_id
        required: true
        type: string
    put:
      operationId: updateHook
      parameters:
        - in: body
          name: hook
          required: true
          schema:
            $ref: '#/definitions/hook'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/hook'
        default:
          $ref: '#/responses/error'
  '/hooks/{hook_id}/enable':
    parameters:
      - in: path
        name: hook_id
        required: true
        type: string
    post:
      operationId: enableHook
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/hook'
        default:
          $ref: '#/responses/error'
  /oauth/tickets:
    post:
      operationId: createTicket
      parameters:
        - in: query
          name: client_id
          required: true
          type: string
      responses:
        '201':
          description: ok
          schema:
            $ref: '#/definitions/ticket'
        default:
          $ref: '#/responses/error'
  '/oauth/tickets/{ticket_id}':
    get:
      operationId: showTicket
      parameters:
        - in: path
          name: ticket_id
          required: true
          type: string
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/ticket'
        default:
          $ref: '#/responses/error'
  '/oauth/tickets/{ticket_id}/exchange':
    post:
      operationId: exchangeTicket
      parameters:
        - in: path
          name: ticket_id
          required: true
          type: string
      responses:
        '201':
          description: ok
          schema:
            $ref: '#/definitions/accessToken'
        default:
          $ref: '#/responses/error'
  /sites:
    get:
      operationId: listSites
      parameters:
        - in: query
          name: name
          type: string
        - enum:
            - all
            - owner
            - guest
          in: query
          name: filter
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/site'
            type: array
        default:
          $ref: '#/responses/error'
    post:
      operationId: createSite
      parameters:
        - in: body
          name: site
          required: true
          schema:
            $ref: '#/definitions/siteSetup'
        - in: query
          name: configure_dns
          type: boolean
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/site'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}':
    delete:
      operationId: deleteSite
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/responses/error'
    get:
      operationId: getSite
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/site'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
    patch:
      operationId: updateSite
      parameters:
        - in: body
          name: site
          required: true
          schema:
            $ref: '#/definitions/siteSetup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/site'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/assets':
    get:
      operationId: listSiteAssets
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/asset'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
    post:
      operationId: createSiteAsset
      parameters:
        - in: query
          name: name
          required: true
          type: string
        - format: int64
          in: query
          name: size
          required: true
          type: integer
        - in: query
          name: content_type
          required: true
          type: string
        - in: query
          name: visibility
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/assetSignature'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/assets/{asset_id}':
    delete:
      operationId: deleteSiteAsset
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/responses/error'
    get:
      operationId: getSiteAssetInfo
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/asset'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
      - in: path
        name: asset_id
        required: true
        type: string
    put:
      operationId: updateSiteAsset
      parameters:
        - in: query
          name: state
          required: true
          type: string
      responses:
        '200':
          description: Updated
          schema:
            $ref: '#/definitions/asset'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/assets/{asset_id}/public_signature':
    get:
      operationId: getSiteAssetPublicSignature
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/assetPublicSignature'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
      - in: path
        name: asset_id
        required: true
        type: string
  '/sites/{site_id}/build_hooks':
    get:
      operationId: listSiteBuildHooks
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/buildHook'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
    post:
      operationId: createSiteBuildHook
      parameters:
        - in: body
          name: buildHook
          required: true
          schema:
            $ref: '#/definitions/buildHook'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/buildHook'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/build_hooks/{id}':
    delete:
      operationId: deleteSiteBuildHook
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/error'
    get:
      operationId: getSiteBuildHook
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/buildHook'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    put:
      operationId: updateSiteBuildHook
      parameters:
        - in: body
          name: buildHook
          required: true
          schema:
            $ref: '#/definitions/buildHook'
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/builds':
    get:
      operationId: listSiteBuilds
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/build'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
  '/sites/{site_id}/deployed-branches':
    get:
      operationId: listSiteDeployedBranches
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/deployedBranch'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
  '/sites/{site_id}/deploys':
    get:
      operationId: listSiteDeploys
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/deploy'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
    post:
      operationId: createSiteDeploy
      parameters:
        - in: query
          name: title
          type: string
        - in: body
          name: deploy
          required: true
          schema:
            $ref: '#/definitions/deployFiles'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/deploy'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/deploys/{deploy_id}':
    get:
      operationId: getSiteDeploy
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: deploy_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/deploy'
        default:
          $ref: '#/responses/error'
    put:
      operationId: updateSiteDeploy
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: deploy_id
          required: true
          type: string
        - in: body
          name: deploy
          required: true
          schema:
            $ref: '#/definitions/deployFiles'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/deploy'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/deploys/{deploy_id}/restore':
    post:
      operationId: restoreSiteDeploy
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: deploy_id
          required: true
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/deploy'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/dns':
    get:
      operationId: getDNSForSite
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/dnsZone'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
    put:
      operationId: configureDNSForSite
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/dnsZone'
            type: array
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/files':
    get:
      operationId: listSiteFiles
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/file'
            type: array
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/files/{file_path}':
    get:
      operationId: getSiteFileByPathName
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: file_path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/file'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/forms':
    get:
      operationId: listSiteForms
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/form'
            type: array
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/metadata':
    get:
      operationId: getSiteMetadata
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/metadata'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
    put:
      operationId: updateSiteMetadata
      parameters:
        - in: body
          name: metadata
          required: true
          schema:
            $ref: '#/definitions/metadata'
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/snippets':
    get:
      operationId: listSiteSnippets
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/snippet'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
    post:
      operationId: createSiteSnippet
      parameters:
        - in: body
          name: snippet
          required: true
          schema:
            $ref: '#/definitions/snippet'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/snippet'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/snippets/{snippet_id}':
    delete:
      operationId: deleteSiteSnippet
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/error'
    get:
      operationId: getSiteSnippet
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snippet'
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: site_id
        required: true
        type: string
      - in: path
        name: snippet_id
        required: true
        type: string
    put:
      operationId: updateSiteSnippet
      parameters:
        - in: body
          name: snippet
          required: true
          schema:
            $ref: '#/definitions/snippet'
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/ssl':
    get:
      operationId: showSiteTLSCertificate
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sniCertificate'
        default:
          $ref: '#/responses/error'
    post:
      operationId: provisionSiteTLSCertificate
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
        - in: query
          name: certificate
          type: string
        - in: query
          name: key
          type: string
        - in: query
          name: ca_certificates
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sniCertificate'
        default:
          $ref: '#/responses/error'
  '/sites/{site_id}/submissions':
    get:
      operationId: listSiteSubmissions
      parameters:
        - in: path
          name: site_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/submission'
            type: array
        default:
          $ref: '#/responses/error'
  '/submissions/{submission_id}':
    delete:
      operationId: deleteSubmission
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/responses/error'
    get:
      operationId: listFormSubmission
      parameters:
        - in: query
          name: query
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/submission'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: submission_id
        required: true
        type: string
  '/{account_slug}/members':
    get:
      operationId: listMembersForAccount
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/member'
            type: array
        default:
          $ref: '#/responses/error'
    parameters:
      - in: path
        name: account_slug
        required: true
        type: string
    post:
      operationId: addMemberToAccount
      parameters:
        - enum:
            - Owner
            - Collaborator
            - Controller
          in: query
          name: role
          type: string
        - in: query
          name: email
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/member'
            type: array
        default:
          $ref: '#/responses/error'
  '/{account_slug}/sites':
    get:
      operationId: listSitesForAccount
      parameters:
        - in: query
          name: name
          type: string
        - in: path
          name: account_slug
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/site'
            type: array
        default:
          $ref: '#/responses/error'
    post:
      operationId: createSiteInTeam
      parameters:
        - in: body
          name: site
          schema:
            $ref: '#/definitions/siteSetup'
        - in: query
          name: configure_dns
          type: boolean
        - in: path
          name: account_slug
          required: true
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/site'
        default:
          $ref: '#/responses/error'
definitions:
  accessToken:
    properties:
      access_token:
        type: string
      created_at:
        format: dateTime
        type: string
      id:
        type: string
      user_email:
        type: string
      user_id:
        type: string
    type: object
  accountMembership:
    properties:
      billing_details:
        type: string
      billing_email:
        type: string
      billing_name:
        type: string
      billing_period:
        type: string
      capabilities:
        properties:
          collaborators:
            $ref: '#/definitions/accountUsageCapability'
          sites:
            $ref: '#/definitions/accountUsageCapability'
        type: object
      created_at:
        format: dateTime
        type: string
      id:
        type: string
      name:
        type: string
      owner_ids:
        items:
          type: string
        type: array
      payment_method_id:
        type: string
      roles_allowed:
        items:
          type: string
        type: array
      slug:
        type: string
      type:
        type: string
      type_id:
        type: string
      type_name:
        type: string
      updated_at:
        format: dateTime
        type: string
    type: object
  accountSetup:
    properties:
      extra_seats_block:
        type: integer
      name:
        type: string
      payment_method_id:
        type: string
      period:
        enum:
          - monthly
          - yearly
        type: string
      type_id:
        type: string
    required:
      - name
      - type_id
    type: object
  accountType:
    properties:
      capabilities:
        type: object
      description:
        type: string
      id:
        type: string
      monthly_dollar_price:
        type: integer
      monthly_seats_addon_dollar_price:
        type: integer
      name:
        type: string
      yearly_dollar_price:
        type: integer
      yearly_seats_addon_dollar_price:
        type: integer
    type: object
  accountUpdateSetup:
    properties:
      billing_details:
        type: string
      billing_email:
        type: string
      billing_name:
        type: string
      extra_seats_block:
        type: integer
      name:
        type: string
      payment_method_id:
        type: string
      slug:
        type: string
      type_id:
        type: string
    type: object
  accountUsageCapability:
    properties:
      included:
        type: integer
      used:
        type: integer
    type: object
  asset:
    properties:
      content_type:
        type: string
      created_at:
        format: dateTime
        type: string
      creator_id:
        type: string
      id:
        type: string
      key:
        type: string
      name:
        type: string
      site_id:
        type: string
      size:
        format: int64
        type: integer
      state:
        type: string
      updated_at:
        format: dateTime
        type: string
      url:
        type: string
      visibility:
        type: string
    type: object
  assetForm:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      url:
        type: string
    type: object
  assetPublicSignature:
    properties:
      url:
        type: string
    type: object
  assetSignature:
    properties:
      asset:
        $ref: '#/definitions/asset'
        type: object
      form:
        $ref: '#/definitions/assetForm'
        type: object
    type: object
  auditLog:
    properties:
      account_id:
        type: string
      id:
        type: string
      payload:
        additionalProperties:
          type: object
        properties:
          action:
            type: string
          actor_email:
            type: string
          actor_id:
            type: string
          actor_name:
            type: string
          log_type:
            type: string
          timestamp:
            format: dateTime
            type: string
        type: object
    type: object
  build:
    properties:
      created_at:
        format: dateTime
        type: string
      deploy_id:
        type: string
      done:
        type: boolean
      error:
        type: string
      id:
        type: string
      sha:
        type: string
    type: object
  buildHook:
    properties:
      branch:
        type: string
      created_at:
        format: dateTime
        type: string
      id:
        type: string
      site_id:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  buildLogMsg:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
  deploy:
    properties:
      admin_url:
        type: string
      branch:
        type: string
      build_id:
        type: string
      commit_ref:
        type: string
      commit_url:
        type: string
      context:
        type: string
      created_at:
        format: dateTime
        type: string
      deploy_ssl_url:
        type: string
      deploy_url:
        type: string
      draft:
        type: boolean
      error_message:
        type: string
      id:
        type: string
      locked:
        type: boolean
      name:
        type: string
      published_at:
        format: dateTime
        type: string
      required:
        items:
          type: string
        type: array
      required_functions:
        items:
          type: string
        type: array
      review_id:
        type: number
      review_url:
        type: string
      screenshot_url:
        type: string
      site_id:
        type: string
      skipped:
        type: boolean
      ssl_url:
        type: string
      state:
        type: string
      title:
        type: string
      updated_at:
        format: dateTime
        type: string
      url:
        type: string
      user_id:
        type: string
    type: object
  deployFiles:
    properties:
      async:
        type: boolean
      draft:
        type: boolean
      files:
        type: object
      functions:
        type: object
    type: object
  deployKey:
    properties:
      created_at:
        format: dateTime
        type: string
      id:
        type: string
      public_key:
        type: string
    type: object
  deployedBranch:
    properties:
      deploy_id:
        type: string
      id:
        type: string
      name:
        type: string
      slug:
        type: string
      ssl_url:
        type: string
      url:
        type: string
    type: object
  dnsRecord:
    properties:
      hostname:
        type: string
      id:
        type: string
      priority:
        format: int64
        type: integer
      ttl:
        format: int64
        type: integer
      type:
        type: string
      value:
        type: string
    type: object
  dnsZone:
    properties:
      id:
        type: string
      name:
        type: string
      records:
        items:
          $ref: '#/definitions/dnsRecord'
        type: array
    type: object
  error:
    properties:
      code:
        format: int64
        type: integer
      message:
        type: string
        x-nullable: false
    required:
      - message
    type: object
  file:
    properties:
      id:
        type: string
      mime_type:
        type: string
      path:
        type: string
      sha:
        type: string
      size:
        format: int64
        type: integer
    type: object
  form:
    properties:
      created_at:
        format: dateTime
        type: string
      fields:
        items:
          type: object
        type: array
      id:
        type: string
      name:
        type: string
      paths:
        items:
          type: string
        type: array
      site_id:
        type: string
      submission_count:
        format: int32
        type: integer
    type: object
  function:
    properties:
      id:
        type: string
      name:
        type: string
      sha:
        type: string
    type: object
  hook:
    properties:
      created_at:
        format: dateTime
        type: string
      data:
        type: object
      disabled:
        type: boolean
      event:
        type: string
      id:
        type: string
      site_id:
        type: string
      type:
        type: string
      updated_at:
        format: dateTime
        type: string
    type: object
  hookType:
    properties:
      events:
        items:
          type: string
        type: array
      fields:
        items:
          type: object
        type: array
      name:
        type: string
    type: object
  member:
    properties:
      avatar:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
  metadata:
    type: object
  minifyOptions:
    properties:
      bundle:
        type: boolean
      minify:
        type: boolean
    type: object
  paymentMethod:
    properties:
      created_at:
        format: dateTime
        type: string
      data:
        properties:
          card_type:
            type: string
          email:
            type: string
          last4:
            type: string
        type: object
      id:
        type: string
      method_name:
        type: string
      state:
        type: string
      type:
        type: string
      updated_at:
        format: dateTime
        type: string
    type: object
  repoInfo:
    properties:
      allowed_branches:
        items:
          type: string
        type: array
      cmd:
        type: string
      deploy_key_id:
        type: string
      dir:
        type: string
      env:
        additionalProperties:
          type: string
        type: object
      id:
        type: integer
      private_logs:
        type: boolean
      provider:
        type: string
      public_repo:
        type: boolean
      repo_branch:
        type: string
      repo_path:
        type: string
      repo_url:
        type: string
    type: object
  site:
    properties:
      account_name:
        type: string
      account_slug:
        type: string
      admin_url:
        type: string
      build_settings:
        $ref: '#/definitions/repoInfo'
      capabilities:
        additionalProperties:
          type: object
        type: object
      created_at:
        format: dateTime
        type: string
      custom_domain:
        type: string
      deploy_hook:
        type: string
      deploy_url:
        type: string
      domain_aliases:
        items:
          type: string
        type: array
      force_ssl:
        type: boolean
      git_provider:
        type: string
      id:
        type: string
      managed_dns:
        type: boolean
      name:
        type: string
      notification_email:
        type: string
      password:
        type: string
      plan:
        type: string
      processing_settings:
        properties:
          css:
            $ref: '#/definitions/minifyOptions'
          html:
            properties:
              pretty_urls:
                type: boolean
            type: object
          images:
            properties:
              optimize:
                type: boolean
            type: object
          js:
            $ref: '#/definitions/minifyOptions'
          skip:
            type: boolean
        type: object
      published_deploy:
        $ref: '#/definitions/deploy'
      screenshot_url:
        type: string
      session_id:
        type: string
      ssl:
        type: boolean
      ssl_url:
        type: string
      state:
        type: string
      updated_at:
        format: dateTime
        type: string
      url:
        type: string
      user_id:
        type: string
    type: object
  siteSetup:
    allOf:
      - $ref: '#/definitions/site'
      - properties:
          repo:
            $ref: '#/definitions/repoInfo'
  sniCertificate:
    properties:
      created_at:
        format: dateTime
        type: string
      domains:
        items:
          type: string
        type: array
      expires_at:
        format: dateTime
        type: string
      state:
        type: string
      updated_at:
        format: dateTime
        type: string
    type: object
  snippet:
    properties:
      general:
        type: string
      general_position:
        type: string
      goal:
        type: string
      goal_position:
        type: string
      id:
        format: int32
        type: integer
      site_id:
        type: string
      title:
        type: string
    type: object
  submission:
    properties:
      body:
        type: string
      company:
        type: string
      created_at:
        format: dateTime
        type: string
      data:
        type: object
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      number:
        format: int32
        type: integer
      site_url:
        type: string
      summary:
        type: string
    type: object
  ticket:
    properties:
      authorized:
        type: boolean
      client_id:
        type: string
      created_at:
        format: dateTime
        type: string
      id:
        type: string
    type: object
