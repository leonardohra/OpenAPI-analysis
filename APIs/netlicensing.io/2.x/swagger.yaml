swagger: '2.0'
schemes:
  - https
host: go.netlicensing.io
basePath: /core/v2/rest
info:
  description: 'The Labs64 <a href=''https://netlicensing.io/wiki/restful-api'' target=''_blank''>NetLicensing RESTful API</a> gives you access to NetLicensingâ€™s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href=''https://netlicensing.io'' target=''_blank''>netlicensing.io</a>'
  termsOfService: 'https://www.labs64.com/legal/terms-of-service/netlicensing'
  title: Labs64 NetLicensing RESTful API Test Center
  version: 2.x
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: 'https://www.labs64.com/content/uploads/2015/06/labs64-logo.png'
  x-origin:
    - format: swagger
      url: 'http://io.labs64.com/NetLicensing-API/v2.x/netlicensing.json'
      version: '2.0'
  x-providerName: netlicensing.io
produces:
  - application/xml
  - application/json
securityDefinitions:
  api_key:
    in: header
    name: api_key
    type: apiKey
  basicAuth:
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
    type: basic
tags:
  - description: Product operations
    externalDocs:
      description: Product Services
      url: 'https://netlicensing.io/wiki/product-services'
    name: Product
  - description: Product Module operations
    externalDocs:
      description: Product Module Services
      url: 'https://netlicensing.io/wiki/product-module-services'
    name: Product Module
  - description: License Template operations
    externalDocs:
      description: License Template Services
      url: 'https://netlicensing.io/wiki/license-template-services'
    name: License Template
  - description: Licensee operations
    externalDocs:
      description: Licensee Services
      url: 'https://netlicensing.io/wiki/licensee-services'
    name: Licensee
  - description: License operations
    externalDocs:
      description: License Services
      url: 'https://netlicensing.io/wiki/license-services'
    name: License
  - description: Transaction operations
    externalDocs:
      description: Transaction Services
      url: 'https://netlicensing.io/wiki/transaction-services'
    name: Transaction
  - description: Token operations
    externalDocs:
      description: Token Services
      url: 'https://netlicensing.io/wiki/token-services'
    name: Token
  - description: Payment Method operations
    externalDocs:
      description: Payment Method Services
      url: 'https://netlicensing.io/wiki/payment-method-services'
    name: Payment Method
  - description: Utility operations
    externalDocs:
      description: Utility Services
      url: 'https://netlicensing.io/wiki/utility-services'
    name: Utility
paths:
  /license:
    get:
      description: Return a list of all Licenses for the current Vendor
      operationId: listLicenses
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Licenses
      tags:
        - License
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Creates a new License
      operationId: createLicense
      parameters:
        - in: formData
          name: licenseeNumber
          required: true
          type: string
        - in: formData
          name: licenseTemplateNumber
          required: true
          type: string
        - in: formData
          name: active
          required: true
          type: boolean
        - in: formData
          name: number
          required: false
          type: string
        - description: 'Name for the Licensed item. Set from License Template on creation, if not specified explicitly.'
          in: formData
          name: name
          required: false
          type: string
        - description: Mandatory for 'TIMEVOLUME' License Type and 'RENTAL' licensing model
          in: formData
          name: parentfeature
          required: false
          type: string
        - description: Mandatory for 'TIMEVOLUME' License Type.
          in: formData
          name: timeVolume
          required: false
          type: string
        - description: For 'TIMEVOLUME' License Type.
          in: formData
          items:
            default: DAY
            enum:
              - DAY
              - WEEK
              - MONTH
              - YEAR
            type: string
          name: timeVolumePeriod
          required: false
          type: string
        - description: Mandatory for 'TIMEVOLUME' License Type.
          format: date-time
          in: formData
          name: startDate
          required: false
          type: string
        - description: 'Price for the License. If >0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation'
          format: double
          in: formData
          name: price
          required: false
          type: number
        - description: 'Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation'
          in: formData
          name: currency
          required: false
          type: string
        - description: 'If set to ''true'', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly'
          in: formData
          name: hidden
          required: false
          type: boolean
        - description: Mandatory for 'Pay-per-Use' License Model.
          in: formData
          name: quantity
          required: false
          type: string
        - description: Mandatory for 'Pay-per-Use' License Model.
          in: formData
          name: usedQuantity
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Create License
      tags:
        - License
  '/license/{licenseNumber}':
    delete:
      description: Delete License by a 'licenseNumber'
      operationId: deleteLicense
      parameters:
        - description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
          in: path
          name: licenseNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Delete License
      tags:
        - License
    get:
      description: Get License by a 'licenseNumber'
      operationId: getLicense
      parameters:
        - description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
          in: path
          name: licenseNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Get License
      tags:
        - License
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Update License by a 'licenseNumber'
      operationId: updateLicense
      parameters:
        - description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
          in: path
          name: licenseNumber
          required: true
          type: string
        - description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
          in: formData
          name: number
          required: false
          type: string
        - in: formData
          name: active
          required: false
          type: boolean
        - description: 'Name for the Licensed item. Set from License Template on creation, if not specified explicitly.'
          in: formData
          name: name
          required: false
          type: string
        - description: For 'TIMEVOLUME' License type
          format: date-time
          in: formData
          name: startDate
          required: false
          type: string
        - in: formData
          name: parentfeature
          required: false
          type: string
        - description: Mandatory for 'TIMEVOLUME' License Type.
          in: formData
          name: timeVolume
          required: false
          type: string
        - description: For 'TIMEVOLUME' License Type.
          in: formData
          items:
            default: DAY
            enum:
              - DAY
              - WEEK
              - MONTH
              - YEAR
            type: string
          name: timeVolumePeriod
          required: false
          type: string
        - description: 'Price for the License. If > 0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation'
          format: double
          in: formData
          name: price
          required: false
          type: number
        - description: 'Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation'
          in: formData
          name: currency
          required: false
          type: string
        - description: 'If set to ''true'', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly'
          in: formData
          name: hidden
          required: false
          type: boolean
        - description: Mandatory for 'Pay-per-Use' License Model.
          in: formData
          name: quantity
          required: false
          type: string
        - description: Mandatory for 'Pay-per-Use' License Model.
          in: formData
          name: usedQuantity
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Update License
      tags:
        - License
  /licensee:
    get:
      description: Return a list of all Licensees for the current Vendor
      operationId: listLicensees
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Licensees
      tags:
        - Licensee
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Creates a new Licensee
      operationId: createLicensee
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee
          in: formData
          name: number
          required: false
          type: string
        - description: '''productNumber'' to assign new Licensee object'
          in: formData
          name: productNumber
          required: true
          type: string
        - in: formData
          name: name
          required: false
          type: string
        - description: 'If set to ''false'', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled'
          in: formData
          name: active
          required: true
          type: boolean
        - description: (Deprecated. Use 'Node-Locked' licensing model instead) Licensee Secret for Licensee.
          in: formData
          name: licenseeSecret
          required: false
          type: string
        - description: Mark Licensee for transfer.
          in: formData
          name: markedForTransfer
          required: false
          type: boolean
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '402':
          description: Quota exceeded
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Create Licensee
      tags:
        - Licensee
  '/licensee/{licenseeNumber}':
    delete:
      description: Delete a Licensee by 'number'
      operationId: deleteLicensee
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Licensee.
          in: path
          name: licenseeNumber
          required: true
          type: string
        - description: Force object deletion and all descendants.
          in: query
          name: forceCascade
          required: false
          type: boolean
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Delete Licensee
      tags:
        - Licensee
    get:
      description: Return a Licensee by 'licenseeNumber'
      operationId: getLicensee
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee.
          in: path
          name: licenseeNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Get Licensee
      tags:
        - Licensee
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Sets the provided properties to a Licensee. Return an updated Licensee
      operationId: updateLicensee
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee.
          in: path
          name: licenseeNumber
          required: true
          type: string
        - description: New Licensee number (update).
          in: formData
          name: number
          required: false
          type: string
        - description: 'If set to ''false'', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled'
          in: formData
          name: active
          required: false
          type: boolean
        - in: formData
          name: name
          required: false
          type: string
        - description: (Deprecated. Use 'Node-Locked' licensing model instead) Licensee Secret for Licensee.
          in: formData
          name: licenseeSecret
          required: false
          type: string
        - description: Mark Licensee for transfer.
          in: formData
          name: markedForTransfer
          required: false
          type: boolean
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '402':
          description: Quota exceeded
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Update Licensee
      tags:
        - Licensee
  '/licensee/{licenseeNumber}/transfer':
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Licenses transfer between Licensees
      operationId: transferLicenses
      parameters:
        - description: Licensee number with a maximum length of 1000 characters
          in: path
          name: licenseeNumber
          required: true
          type: string
        - description: Licensee number which Licenses to be transferred
          in: formData
          name: sourceLicenseeNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Transfer Licenses
      tags:
        - Licensee
  '/licensee/{licenseeNumber}/validate':
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Validates active Licenses of the Licensee
      operationId: validateLicensee
      parameters:
        - description: Licensee number with a maximum length of 1000 characters
          in: path
          name: licenseeNumber
          required: true
          type: string
        - description: 'Product number, must be provided when ''Licensee auto-create'' is enabled (see also Product JavaDoc). Identifies the Product to which new Licensee should be added'
          in: formData
          name: productNumber
          required: false
          type: string
        - description: Human-readable name for the auto-created Licensee (will be set as custom Licensee property)
          in: formData
          name: licenseeName
          required: false
          type: string
        - description: '''Node-Locked'' licensing model: product module number'
          in: formData
          name: productModuleNumber
          required: false
          type: string
        - description: '''Node-Locked'' licensing model: specifies unique secret'
          in: formData
          name: nodeSecret
          required: false
          type: string
        - description: (Deprecated. Use 'Node-Locked' licensing model instead) Licensee Secret key for Licensee
          in: formData
          name: licenseeSecret
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Validate Licensee
      tags:
        - Licensee
  /licensetemplate:
    get:
      description: Return a list of all License Templates for the current Vendor
      operationId: listLicenseTemplates
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List License Templates
      tags:
        - License Template
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Creates a new License Template
      operationId: createLicenseTemplate
      parameters:
        - description: Number of Product Module to create License Template object
          in: formData
          name: productModuleNumber
          required: true
          type: string
        - description: Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.
          in: formData
          name: number
          required: false
          type: string
        - description: License Template name to create License Template object
          in: formData
          name: name
          required: true
          type: string
        - description: 'If set to ''false'', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.'
          in: formData
          name: active
          required: true
          type: boolean
        - description: 'Type of Licenses created from this License Template. Supported types: FEATURE, TIMEVOLUME, FLOATING, QUANTITY'
          in: formData
          items:
            default: FEATURE
            enum:
              - FEATURE
              - TIMEVOLUME
              - FLOATING
              - QUANTITY
            type: string
          name: licenseType
          required: true
          type: string
        - description: Mandatory for 'TIMEVOLUME' License Type.
          in: formData
          name: timeVolume
          required: false
          type: string
        - description: For 'TIMEVOLUME' License Type.
          in: formData
          items:
            default: DAY
            enum:
              - DAY
              - WEEK
              - MONTH
              - YEAR
            type: string
          name: timeVolumePeriod
          required: false
          type: string
        - description: Mandatory for 'FLOATING' License Type.
          in: formData
          name: maxSessions
          required: false
          type: string
        - description: 'Price for the License. If >0, it must always be accompanied by the currency specification.'
          format: double
          in: formData
          name: price
          required: false
          type: number
        - description: Specifies currency for the License price. Check data types to discover which currencies are supported.
          in: formData
          name: currency
          required: false
          type: string
        - description: 'If set to ''true'', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.'
          in: formData
          name: automatic
          required: false
          type: boolean
        - description: 'If set to ''true'', this License Template is not shown in NetLicensing Shop as offered for purchase.'
          in: formData
          name: hidden
          required: false
          type: boolean
        - description: 'If set to ''true'', Licenses from this License Template are not visible to the end customer, but participate in validation.'
          in: formData
          name: hideLicenses
          required: false
          type: boolean
        - description: Mandatory for 'Pay-per-Use' and 'Node-Locked' License Model.
          in: formData
          name: quantity
          required: false
          type: string
        - description: Mandatory for 'Quota' License Model.
          in: formData
          name: quota
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Create License Template
      tags:
        - License Template
  '/licensetemplate/{licenseTemplateNumber}':
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete a License Template by 'number'.
      operationId: deleteLicenseTemplate
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the License Template.
          in: path
          name: licenseTemplateNumber
          required: true
          type: string
        - description: Force object deletion and all descendants.
          in: query
          name: forceCascade
          required: false
          type: boolean
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Delete License Template
      tags:
        - License Template
    get:
      description: Return a License Template by 'licenseTemplateNumber'
      operationId: getLicenseTemplate
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.
          in: path
          name: licenseTemplateNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Get License Template
      tags:
        - License Template
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Sets the provided properties to a License Template. Return an updated License Template
      operationId: updateLicenseTemplate
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.
          in: path
          name: licenseTemplateNumber
          required: true
          type: string
        - description: New License Template number (update).
          in: formData
          name: number
          required: false
          type: string
        - description: Name for the Licensed item
          in: formData
          name: name
          required: false
          type: string
        - description: 'If set to ''false'', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.'
          in: formData
          name: active
          required: false
          type: boolean
        - description: 'Type of Licenses created from this License Template. Supported types: FEATURE, TIMEVOLUME, FLOATING, QUANTITY'
          in: formData
          items:
            default: FEATURE
            enum:
              - FEATURE
              - TIMEVOLUME
              - FLOATING
              - QUANTITY
            type: string
          name: licenseType
          required: false
          type: string
        - description: Mandatory for 'TIMEVOLUME' License Type.
          in: formData
          name: timeVolume
          required: false
          type: string
        - description: For 'TIMEVOLUME' License Type.
          in: formData
          items:
            default: DAY
            enum:
              - DAY
              - WEEK
              - MONTH
              - YEAR
            type: string
          name: timeVolumePeriod
          required: false
          type: string
        - description: Mandatory for 'FLOATING' License Type.
          in: formData
          name: maxSessions
          required: false
          type: string
        - description: 'Price for the License. If >0, it must always be accompanied by the currency specification.'
          format: double
          in: formData
          name: price
          required: false
          type: number
        - description: Specifies currency for the License price. Check data types to discover which currencies are supported.
          in: formData
          name: currency
          required: false
          type: string
        - description: 'If set to ''true'', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.'
          in: formData
          name: automatic
          required: false
          type: boolean
        - description: 'If set to ''true'', this License Template is not shown in NetLicensing Shop as offered for purchase.'
          in: formData
          name: hidden
          required: false
          type: boolean
        - description: 'If set to ''true'', Licenses from this License Template are not visible to the end customer, but participate in validation.'
          in: formData
          name: hideLicenses
          required: false
          type: boolean
        - description: Mandatory for 'Pay-per-Use' and 'Node-Locked' License Model.
          in: formData
          name: quantity
          required: false
          type: string
        - description: Mandatory for 'Quota' License Model.
          in: formData
          name: quota
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Update License Template
      tags:
        - License Template
  /paymentmethod:
    get:
      description: Return a list of all Payment Methods for the current Vendor
      operationId: listPaymentMethods
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Payment Methods
      tags:
        - Payment Method
  '/paymentmethod/{paymentMethodNumber}':
    get:
      description: Return a Payment Method info by 'paymentMethodNumber'
      operationId: getPaymentMethod
      parameters:
        - description: Payment method number
          in: path
          name: paymentMethodNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Get Payment Method
      tags:
        - Payment Method
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Sets the provided properties to a Payment Method. Return an updated Payment Method
      operationId: updatePaymentMethod
      parameters:
        - description: Payment method number
          in: path
          name: paymentMethodNumber
          required: true
          type: string
        - description: 'If set to ''false'', the Payment Method is disabled.'
          in: formData
          name: active
          required: false
          type: boolean
        - description: The e-mail address of the PayPal account for which you are making the API calls.
          in: formData
          name: paypal.subject
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Update Payment Method
      tags:
        - Payment Method
  /product:
    get:
      description: Return a list of all configured Products for the current Vendor
      operationId: listProducts
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Products
      tags:
        - Product
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Creates a new Product
      operationId: createProduct
      parameters:
        - description: Unique number that identifies the Product. Vendor can assign this number when creating a Product or let NetLicensing generate one.
          in: formData
          name: number
          required: false
          type: string
        - description: 'If set to ''false'', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses.'
          in: formData
          name: active
          required: true
          type: boolean
        - description: Product name. Together with the version identifies the Product for the end customer.
          in: formData
          name: name
          required: true
          type: string
        - description: 'Product version. Convenience parameter, additional to the Product name.'
          in: formData
          name: version
          required: true
          type: string
        - description: 'If set to ''true'', non-existing Licensees will be created at first validation attempt.'
          in: formData
          name: licenseeAutoCreate
          required: false
          type: boolean
        - description: Product description.
          in: formData
          name: description
          required: false
          type: string
        - description: Licensing information.
          in: formData
          name: licensingInfo
          required: false
          type: string
        - description: '(Deprecated. Use ''Node-Locked'' licensing model instead) Licensee secret mode for Product. Supported types: DISABLED, PREDEFINED, CLIENT'
          enum:
            - DISABLED
            - PREDEFINED
            - CLIENT
          in: formData
          name: licenseeSecretMode
          required: false
          type: string
        - description: 'Vat mode for Product. Supported types: GROSS, NET'
          enum:
            - GROSS
            - NET
          in: formData
          name: vatMode
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '402':
          description: Quota exceeded
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Create Product
      tags:
        - Product
  '/product/{productNumber}':
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete a Product by 'number'
      operationId: deleteProduct
      parameters:
        - description: Unique number that identifies the Product.
          in: path
          name: productNumber
          required: true
          type: string
        - description: Force object deletion and all descendants.
          in: query
          name: forceCascade
          required: false
          type: boolean
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Delete Product
      tags:
        - Product
    get:
      description: Return a Product by 'productNumber'
      operationId: productNumber
      parameters:
        - description: Unique number that identifies the Product.
          in: path
          name: productNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Get Product
      tags:
        - Product
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Sets the provided properties to a Product. Return an updated Product
      operationId: updateProduct
      parameters:
        - description: Unique number that identifies the Product.
          in: path
          name: productNumber
          required: true
          type: string
        - description: New Product number (update)
          in: formData
          name: number
          required: false
          type: string
        - description: 'If set to ''false'', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses.'
          in: formData
          name: active
          required: false
          type: boolean
        - description: Product name. Together with the version identifies the Product for the end customer.
          in: formData
          name: name
          required: false
          type: string
        - description: 'Product version. Convenience parameter, additional to the Product name.'
          in: formData
          name: version
          required: false
          type: string
        - description: 'If set to ''true'', non-existing Licensees will be created at first validation attempt.'
          in: formData
          name: licenseeAutoCreate
          required: false
          type: boolean
        - description: Product description.
          in: formData
          name: description
          required: false
          type: string
        - description: Licensing information.
          in: formData
          name: licensingInfo
          required: false
          type: string
        - description: '(Deprecated. Use ''Node-Locked'' licensing model instead) Licensee secret mode for Product. Supported types: DISABLED, PREDEFINED, CLIENT'
          enum:
            - DISABLED
            - PREDEFINED
            - CLIENT
          in: formData
          name: licenseeSecretMode
          required: false
          type: string
        - description: 'Vat mode for Product. Supported types: GROSS, NET'
          enum:
            - GROSS
            - NET
          in: formData
          name: vatMode
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '402':
          description: Quota exceeded
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Update Product
      tags:
        - Product
  /productmodule:
    get:
      description: Return a list of all Product Modules for the current Vendor
      operationId: listProductModules
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Product Modules
      tags:
        - Product Module
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Creates a new Product Module
      operationId: createProductModule
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.
          in: formData
          name: productNumber
          required: true
          type: string
        - description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.
          in: formData
          name: number
          required: false
          type: string
        - description: 'If set to ''false'', the Product Module is disabled. Licensees can not obtain any new Licenses for this Product Module.'
          in: formData
          name: active
          required: true
          type: boolean
        - description: Product Module name that is visible to the end customers in NetLicensing Shop.
          in: formData
          name: name
          required: true
          type: string
        - description: Licensing model applied to this Product Module. Defines what License Templates can be configured for the Product Module and how Licenses for this Product Module are processed during validation.
          in: formData
          items:
            default: Subscription
            enum:
              - Subscription
              - TryAndBuy
              - Rental
              - Floating
              - MultiFeature
              - PayPerUse
              - Quota
              - NodeLocked
            type: string
          name: licensingModel
          required: true
          type: string
        - description: Maximum checkout validity (days). Mandatory for 'Floating' licensing model.
          format: int32
          in: formData
          name: maxCheckoutValidity
          required: false
          type: integer
        - description: Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.
          format: int32
          in: formData
          name: yellowThreshold
          required: false
          type: integer
        - description: Remaining time volume for red level. Mandatory for 'Rental' licensing model.
          format: int32
          in: formData
          name: redThreshold
          required: false
          type: integer
        - description: Secret Mode. Mandatory for 'Node-Locked' licensing model.
          in: formData
          items:
            default: PREDEFINED
            enum:
              - PREDEFINED
              - CLIENT
            type: string
          name: nodeSecretMode
          required: false
          type: array
        - description: License Template. Mandatory for 'Try &amp; Buy' licensing model.
          in: formData
          items:
            default: TIMEVOLUME
            enum:
              - TIMEVOLUME
              - FEATURE
            type: string
          name: licenseTemplate
          required: false
          type: array
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '402':
          description: Quota exceeded
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Create Product Module
      tags:
        - Product Module
  '/productmodule/{productModuleNumber}':
    delete:
      description: Delete a Product Module by 'number'
      operationId: deleteProductModule
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Product Module.
          in: path
          name: productModuleNumber
          required: true
          type: string
        - description: Force object deletion and all descendants.
          in: query
          name: forceCascade
          required: false
          type: boolean
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Delete Product Module
      tags:
        - Product Module
    get:
      description: Return a Product Module by 'productModuleNumber'
      operationId: getProductModule
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.
          in: path
          name: productModuleNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Get Product Module
      tags:
        - Product Module
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Sets the provided properties to a Product Module. Return an updated Product Module
      operationId: updateProductModule
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.
          in: path
          name: productModuleNumber
          required: true
          type: string
        - description: New Product Module number (update).
          in: formData
          name: number
          required: false
          type: string
        - description: 'If set to ''false'', the Product Module is disabled. Licensees can not obtain any new Licenses for this Product Module.'
          in: formData
          name: active
          required: false
          type: boolean
        - description: Product Module name that is visible to the end customers in NetLicensing Shop.
          in: formData
          name: name
          required: false
          type: string
        - description: Licensing model applied to this Product Module. Defines what License Templates can be configured for the Product Module and how Licenses for this Product Module are processed during validation.
          in: formData
          items:
            default: Subscription
            enum:
              - Subscription
              - TryAndBuy
              - Rental
              - Floating
            type: string
          name: licensingModel
          required: false
          type: string
        - description: Maximum checkout validity (days). Mandatory for 'Floating' licensing model.
          format: int32
          in: formData
          name: maxCheckoutValidity
          required: false
          type: integer
        - description: Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.
          format: int32
          in: formData
          name: yellowThreshold
          required: false
          type: integer
        - description: Remaining time volume for red level. Mandatory for 'Rental' licensing model.
          format: int32
          in: formData
          name: redThreshold
          required: false
          type: integer
        - description: License Template. Mandatory for 'Try &amp; Buy' licensing model.
          in: formData
          items:
            default: TIMEVOLUME
            enum:
              - TIMEVOLUME
              - FEATURE
            type: string
          name: licenseTemplate
          required: false
          type: array
        - description: Secret Mode. Mandatory for 'Node-Locked' licensing model.
          in: formData
          items:
            default: PREDEFINED
            enum:
              - PREDEFINED
              - CLIENT
            type: string
          name: nodeSecretMode
          required: false
          type: array
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '402':
          description: Quota exceeded
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Update Product Module
      tags:
        - Product Module
  /token:
    get:
      description: Return a list of all tokens for the current Vendor
      operationId: listTokens
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Tokens
      tags:
        - Token
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Create token by 'tokenType' and additional token parameters
      operationId: createToken
      parameters:
        - description: Token type to be generated
          enum:
            - DEFAULT
            - SHOP
            - APIKEY
          in: formData
          name: tokenType
          required: true
          type: string
        - description: For <i>tokenType=SHOP</i> only (mandatory); identifies Licensee that will be assigned to the shop token
          in: formData
          name: licenseeNumber
          required: false
          type: string
        - description: For <i>tokenType=SHOP</i> only; take customers to this URL when they finish checkout
          in: formData
          name: successURL
          required: false
          type: string
        - description: For <i>tokenType=SHOP</i> only; shop link title for successful checkout process
          in: formData
          name: successURLTitle
          required: false
          type: string
        - description: For <i>tokenType=SHOP</i> only; take customers to this URL when they cancel their checkout
          in: formData
          name: cancelURL
          required: false
          type: string
        - description: For <i>tokenType=SHOP</i> only; shop link title for cancel checkout process
          in: formData
          name: cancelURLTitle
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - api_key: []
          basicAuth: []
      summary: Create token
      tags:
        - Token
  '/token/{tokenNumber}':
    delete:
      description: Delete a token by 'number'
      operationId: deleteToken
      parameters:
        - description: Token number
          in: path
          name: tokenNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Delete token
      tags:
        - Token
    get:
      description: Return a token by 'tokenNumber'
      operationId: getToken
      parameters:
        - description: Token number
          in: path
          name: tokenNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Get token
      tags:
        - Token
  /transaction:
    get:
      description: Return a list of all Transactions for the current Vendor
      operationId: listTransactions
      responses:
        '200':
          description: Successful request
          schema:
            items:
              $ref: '#/definitions/netlicensing'
            type: array
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Transactions
      tags:
        - Transaction
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Creates a new Transaction
      operationId: createTransaction
      parameters:
        - in: formData
          name: licenseeNumber
          required: false
          type: string
        - description: Unique number (across all Products of a Vendor) that identifies the Transaction
          in: formData
          name: number
          required: false
          type: string
        - description: Always 'true' for Transactions
          in: formData
          name: active
          required: true
          type: boolean
        - enum:
            - CANCELLED
            - CLOSED
            - PENDING
          in: formData
          name: status
          required: true
          type: string
        - description: AUTO Transaction for internal use only
          enum:
            - SHOP
          in: formData
          name: source
          required: true
          type: string
        - format: date-time
          in: formData
          name: dateCreated
          required: false
          type: string
        - format: date-time
          in: formData
          name: dateClosed
          required: false
          type: string
        - in: formData
          name: paymentMethod
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Create Transaction
      tags:
        - Transaction
  '/transaction/{transactionNumber}':
    get:
      description: Return a Transaction by 'transactionNumber'
      operationId: getTransaction
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Transaction
          in: path
          name: transactionNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: 'Get Transaction '
      tags:
        - Transaction
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Sets the provided properties to a Transaction. Return an updated Transaction
      operationId: updateTransaction
      parameters:
        - description: Unique number (across all Products of a Vendor) that identifies the Transaction
          in: path
          name: transactionNumber
          required: true
          type: string
        - description: Unique number (across all Products of a Vendor) that identifies the Transaction
          in: formData
          name: number
          required: false
          type: string
        - description: Always 'true' for Transactions
          in: formData
          name: active
          required: false
          type: boolean
        - enum:
            - CANCELLED
            - CLOSED
            - PENDING
          in: formData
          name: status
          required: false
          type: string
        - description: AUTO Transaction for internal use only
          enum:
            - SHOP
          in: formData
          name: source
          required: false
          type: string
        - format: date-time
          in: formData
          name: dateCreated
          required: false
          type: string
        - format: date-time
          in: formData
          name: dateClosed
          required: false
          type: string
        - in: formData
          name: paymentMethod
          required: false
          type: string
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: Update Transaction
      tags:
        - Transaction
  /utility/licenseTypes:
    get:
      description: Return a list of all License Types supported by the service
      operationId: licenseTypes
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List License Types
      tags:
        - Utility
  /utility/licensingModels:
    get:
      description: Return a list of all licensing models supported by the service
      operationId: licensingModels
      responses:
        '200':
          description: Successful request
          schema:
            $ref: '#/definitions/netlicensing'
        '400':
          description: Malformed or illegal request
        '403':
          description: Access is denied
        '404':
          description: Resource not found
        '500':
          description: Internal service error
      security:
        - basicAuth: []
      summary: List Licensing Models
      tags:
        - Utility
definitions:
  License:
    properties:
      active:
        description: 'If set to ''false'', the License is disabled. License can be re-enabled, but as long as it is disabled, the License is excluded from the validation process.'
        type: boolean
      currency:
        description: 'Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation.'
        type: string
      hidden:
        description: 'If set to ''true'', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly.'
        type: boolean
      name:
        description: 'Name for the Licensed item. Set from License Template on creation, if not specified explicitly.'
        type: string
      number:
        description: Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
        type: string
      price:
        description: '''price'' for the License. If >0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation.'
        format: double
        type: number
    type: object
    xml:
      name: license
  LicenseTemplate:
    properties:
      active:
        description: 'If set to ''false'', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.'
        type: boolean
      automatic:
        description: 'If set to ''true'', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.'
        type: boolean
      currency:
        description: Specifies currency for the License price. Check data types to discover which currencies are supported.
        type: string
      hidden:
        description: 'If set to ''true'', this License Template is not shown in NetLicensing Shop as offered for purchase.'
        type: boolean
      hiddenLicenses:
        description: 'If set to ''true'', Licenses from this License Template are not visible to the end customer, but participate in validation.'
        type: boolean
      licenseType:
        description: Type of Licenses created from this License Template
        enum:
          - FEATURE
          - TIMEVOLUME
        type: string
      name:
        description: Name for the Licensed item.
        type: string
      number:
        description: Unique number (across all Product of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.
        type: string
      price:
        description: '''price'' for the License. If >0, it must always be accompanied by the currency specification.'
        format: double
        type: number
    type: object
    xml:
      name: licensetemplate
  Licensee:
    properties:
      active:
        description: 'If set to ''false'', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled.'
        type: boolean
      number:
        description: Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee.
        type: string
    type: object
    xml:
      name: licensee
  PaymentMethod:
    properties:
      active:
        type: boolean
      number:
        type: string
    type: object
    xml:
      name: paymentmethod
  Product:
    properties:
      active:
        description: 'If set to ''false'', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses'
        type: boolean
      licenseeAutoCreate:
        description: 'If set to ''true'', non-existing Licensees will be created at first validation attempt.'
        type: boolean
      name:
        description: Product name. Together with the version identifies the Product for the end customer
        type: string
      number:
        description: Unique number that identifies the Product. Vendor can assign this number when creating a Product or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.
        type: string
      version:
        description: 'Product version. Convenience parameter, additional to the Product name.'
        type: string
    type: object
    xml:
      name: product
  ProductModule:
    properties:
      active:
        description: 'If set to ''false'', the Product Module is disabled. Licensees can not obtain any new Licenses for this Product Module.'
        type: boolean
      licensingInfo:
        description: Licensing model applied to this Product Module. Defines what License Templates can be configured for the Product Module and how Licenses for this Product Module are processed during validation.
        type: string
      name:
        description: Product Module name that is visible to the end customers in NetLicensing Shop.
        type: string
      number:
        description: Unique number (across all Product of a Vendor) that identifies the Product Module. Vendor can assign this number when creating a Product Module or let NetLicensing generate one. Read-only after creation of the first Licensee for the Product.
        type: string
    type: object
    xml:
      name: productmodule
  Token:
    properties:
      active:
        type: boolean
      expirationTime:
        format: date-time
        type: string
      licenseNumber:
        type: string
      number:
        type: string
      shopURL:
        type: string
      tokenType:
        type: string
      vendorNumber:
        type: string
    type: object
    xml:
      name: token
  Transaction:
    properties:
      active:
        description: Always true for the Transactions
        type: string
      number:
        description: Unique number (across all Products of a Vendor) that identifies the Transaction. This number is always generated by NetLicensing.
        type: string
      source:
        enum:
          - SHOP
        type: string
      status:
        enum:
          - CANCELLED
          - CLOSED
          - PENDING
        type: string
    type: object
    xml:
      name: transaction
  discount:
    properties:
      amountPercent:
        type: string
      currency:
        type: string
      totalPrice:
        format: double
        type: number
    type: object
    xml:
      name: discount
  infos:
    properties: {}
    xml:
      name: infos
  items:
    properties: {}
    xml:
      name: items
  licensingModel:
    properties:
      name:
        type: string
    type: object
    xml:
      name: licensingModel
  netlicensing:
    properties:
      infos:
        $ref: '#/definitions/infos'
      items:
        $ref: '#/definitions/items'
    xml:
      name: netlicensing
